2023-01-25 09:54:14,150 INFO     Arguments:
2023-01-25 09:54:14,150 INFO     timeout	10
2023-01-25 09:54:14,151 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-25 09:54:14,151 INFO     samples	0
2023-01-25 09:54:14,151 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-25 09:54:14,151 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-25 09:54:14,151 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-25 09:54:14,151 INFO     dry	False
2023-01-25 09:54:14,151 INFO     log	/root/Documents/workspace/brbo2-impl/logs/timeout/20230125_10-26-22/timeout10_00.txt
2023-01-25 09:54:14,151 INFO     mode	qfuzz
2023-01-25 09:54:14,151 INFO     version	master
2023-01-25 09:54:14,151 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-25 09:54:14,156 INFO     Done. Execution time: 0.004458904266357422 seconds
2023-01-25 09:54:14,156 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "8cfd11b672667ff41ee294b33de4773d4de90cc5"`
2023-01-25 09:54:14,161 INFO     Done. Execution time: 0.004462480545043945 seconds
2023-01-25 09:54:14,161 INFO     Build a new version: "8cfd11b672667ff41ee294b33de4773d4de90cc5"
2023-01-25 09:54:14,161 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-25 09:54:23,035 INFO     Done. Execution time: 8.873975992202759 seconds
2023-01-25 09:54:23,035 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[success] Total time: 2 s, completed Jan 25, 2023 9:54:22 AM

2023-01-25 09:54:23,039 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 09:54:23,039 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 09:54:39,018 INFO     Done. Execution time: 15.978832244873047 seconds
2023-01-25 09:54:39,018 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz1922676640447754664/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1922676640447754664/bin -o /tmp/qfuzz1922676640447754664/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1922676640447754664/bin
Found file /tmp/qfuzz1922676640447754664/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz1922676640447754664/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1922676640447754664/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1922676640447754664/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1922676640447754664/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1922676640447754664/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 120800 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 3.00; [2539.00,2542.00]
2; /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta; 2; 3223.00; [19.00,3242.00]
3; /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta; 3; 737.00; [19.00,1902.00,2639.00]
4; /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 3; 440.00; [1282.00,1959.00,2399.00]
6; /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 3; 1217.00; [199.00,2002.00,3219.00]
9; /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta; 3; 1463.00; [119.00,1582.00,3339.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(78, 52, 166, 126, 5, 69, 126, 106, 126, 126, 78, 122, 52, 126, 103, 15, 15, 40, 23, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 126, 9, 126, 126, 126, 126, 126, 126, 126, 140, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(99, 5, 9, 15, 160, 119, 181, 12, 126, 45, 15, 115, 16, 78, 62, 126, 143, 126, 124, 78, 136, 47)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(63, 172, 119, 39, 97, 70, 176, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(94, 94, 131, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1922676640447754664/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [78,52,166,126,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [99,5,9,15,160]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [63,172,119,39,97]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [94,94,131,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m15.967s
user	0m9.006s
sys	0m0.617s

2023-01-25 09:54:39,019 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-25 09:54:39,019 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-25 09:54:39,022 INFO     Done. Execution time: 0.0032706260681152344 seconds
2023-01-25 09:54:39,022 INFO     Output: 
2023-01-25 09:54:39,022 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 09:54:46,028 INFO     Done. Execution time: 7.005711078643799 seconds
2023-01-25 09:54:46,028 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([78,52,166,126,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([99,5,9,15,160])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([63,172,119,39,97])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([94,94,131,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                               
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |        text         |
---------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [78,52,166,126,5]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [78,52,166,126,5]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [78,52,166,126,5]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [78,52,166,126,5]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [78,52,166,126,5]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [78,52,166,126,5]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [78,52,166,126,5]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |     78  |  0  |    0  |  [78,52,166,126,5]  |
    24  |                     R = R + chunk;  |     78  |   78  |     78  |  0  |    0  |  [78,52,166,126,5]  |
    28  |                         i = i + 1;  |         |   78  |     78  |  1  |    0  |  [78,52,166,126,5]  |
    36  |          tag = arrayRead(text, i);  |         |   78  |     78  |  1  |   52  |  [78,52,166,126,5]  |
    40  |                         i = i + 1;  |         |   78  |     78  |  2  |   52  |  [78,52,166,126,5]  |
    43  |        chunk = arrayRead(text, i);  |         |   78  |    166  |  2  |   52  |  [78,52,166,126,5]  |
    46  |                     R = R + chunk;  |    166  |  244  |    166  |  2  |   52  |  [78,52,166,126,5]  |
    50  |                         i = i + 1;  |         |  244  |    166  |  3  |   52  |  [78,52,166,126,5]  |
    51  |              resetPlaceHolder_1();  |         |  244  |    166  |  3  |   52  |  [78,52,166,126,5]  |
    59  |          tag = arrayRead(text, i);  |         |  244  |    166  |  3  |  126  |  [78,52,166,126,5]  |
    63  |                         i = i + 1;  |         |  244  |    166  |  4  |  126  |  [78,52,166,126,5]  |
    66  |        chunk = arrayRead(text, i);  |         |  244  |      5  |  4  |  126  |  [78,52,166,126,5]  |
    69  |                     R = R + chunk;  |      5  |  249  |      5  |  4  |  126  |  [78,52,166,126,5]  |
    73  |                         i = i + 1;  |         |  249  |      5  |  5  |  126  |  [78,52,166,126,5]  |
    74  |              resetPlaceHolder_1();  |         |  249  |      5  |  5  |  126  |  [78,52,166,126,5]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 46, 69]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,46,69}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |     78  |                         0  |
    46  |         R = R + chunk;  |    166  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
    69  |         R = R + chunk;  |      5  |                         0  |
    74  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m6.997s
user	0m12.726s
sys	0m2.239s

2023-01-25 09:54:46,029 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 09:54:54,311 INFO     Done. Execution time: 8.281871318817139 seconds
2023-01-25 09:54:54,311 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0954-transparentAmortize-60s-mostPrecise/stac-raw-0125-0954-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.274s
user	0m17.918s
sys	0m2.657s

2023-01-25 09:54:54,311 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 09:54:54,311 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 09:55:10,277 INFO     Done. Execution time: 15.965606927871704 seconds
2023-01-25 09:55:10,277 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz7481998277253879895/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7481998277253879895/bin -o /tmp/qfuzz7481998277253879895/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7481998277253879895/bin
Found file /tmp/qfuzz7481998277253879895/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz7481998277253879895/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7481998277253879895/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7481998277253879895/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7481998277253879895/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7481998277253879895/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 56, exec speed = 133363 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m56 to 56 bits (average: 56.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 6.00; [2533.00,2539.00,2545.00]
2; /tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta; 5; 6.00; [93.00,99.00,105.00,1873.00,2439.00]
3; /tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 5; 12.00; [759.00,2539.00,2773.00,2785.00,3713.00]
7; /tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 3; 12.00; [119.00,2533.00,2545.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 5, 5, 5, 52, 126, 126, 126, 126, 126, 70, 126, 126, 126, 128, 126, 126, 126, 126, 126, 122, 161, 126, 98, 126, 126, 106, 126, 126, 126, 126, 126, 80, 52, 24, 126, 126, 126, 30)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(138, 130, 126, 126, 37, 11, 185, 111, 110, 69, 60, 169, 138, 20, 127, 79, 80, 131, 126, 66, 43, 66, 146, 109, 5, 197, 88, 97, 66, 66, 5, 50, 195, 11, 185, 169, 110, 83, 5, 112, 126, 188, 136, 126, 195, 11, 185, 111, 110, 69, 60, 169, 126, 188, 136, 59, 126, 104, 177, 126, 126, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 121, 126, 93, 52, 126, 78, 129, 126, 126, 126, 126, 126, 126, 11, 126, 126, 137, 25, 126, 126, 155, 149, 126, 124, 126, 126, 126, 122, 126, 127, 126, 78, 12, 15, 38, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7481998277253879895/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,5,5,5], 2, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [138,130,126,126,37], 2, 185
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,121], 2, 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 2, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m15.956s
user	0m9.572s
sys	0m0.668s

2023-01-25 09:55:10,278 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-25 09:55:10,278 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-25 09:55:10,281 INFO     Done. Execution time: 0.003196239471435547 seconds
2023-01-25 09:55:10,281 INFO     Output: 
2023-01-25 09:55:10,281 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 09:55:17,671 INFO     Done. Execution time: 7.389562606811523 seconds
2023-01-25 09:55:17,671 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,5,5,5], 2, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([138,130,126,126,37], 2, 185)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,121], 2, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 2, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |       text        |
------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |        126  |       |           2  |  [126,126,5,5,5]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |        126  |       |           2  |  [126,126,5,5,5]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |        126  |       |           2  |  [126,126,5,5,5]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |        126  |       |           2  |  [126,126,5,5,5]  |
    30  |                         int i = 0;  |         |    0  |         |  0  |     |        126  |       |           2  |  [126,126,5,5,5]  |
    32  |                         int j = 0;  |         |    0  |         |  0  |  0  |        126  |       |           2  |  [126,126,5,5,5]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |        126  |       |           2  |  [126,126,5,5,5]  |
    36  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |        126  |    0  |           2  |  [126,126,5,5,5]  |
    41  |                             j = 0;  |         |    0  |      0  |  0  |  0  |        126  |    0  |           2  |  [126,126,5,5,5]  |
    44  |        chunk = arrayRead(text, j);  |         |    0  |    126  |  0  |  0  |        126  |    0  |           2  |  [126,126,5,5,5]  |
    47  |                     R = R + chunk;  |    126  |  126  |    126  |  0  |  0  |        126  |    0  |           2  |  [126,126,5,5,5]  |
    51  |                         j = j + 1;  |         |  126  |    126  |  0  |  1  |        126  |    0  |           2  |  [126,126,5,5,5]  |
    59  |          tag = arrayRead(text, j);  |         |  126  |    126  |  0  |  1  |        126  |  126  |           2  |  [126,126,5,5,5]  |
    63  |                         j = j + 1;  |         |  126  |    126  |  0  |  2  |        126  |  126  |           2  |  [126,126,5,5,5]  |
    66  |        chunk = arrayRead(text, j);  |         |  126  |      5  |  0  |  2  |        126  |  126  |           2  |  [126,126,5,5,5]  |
    69  |                     R = R + chunk;  |      5  |  131  |      5  |  0  |  2  |        126  |  126  |           2  |  [126,126,5,5,5]  |
    73  |                         j = j + 1;  |         |  131  |      5  |  0  |  3  |        126  |  126  |           2  |  [126,126,5,5,5]  |
    74  |              resetPlaceHolder_2();  |         |  131  |      5  |  0  |  3  |        126  |  126  |           2  |  [126,126,5,5,5]  |
    82  |          tag = arrayRead(text, j);  |         |  131  |      5  |  0  |  3  |        126  |    5  |           2  |  [126,126,5,5,5]  |
    86  |                         j = j + 1;  |         |  131  |      5  |  0  |  4  |        126  |    5  |           2  |  [126,126,5,5,5]  |
    89  |        chunk = arrayRead(text, j);  |         |  131  |      5  |  0  |  4  |        126  |    5  |           2  |  [126,126,5,5,5]  |
    92  |                     R = R + chunk;  |      5  |  136  |      5  |  0  |  4  |        126  |    5  |           2  |  [126,126,5,5,5]  |
    96  |                         j = j + 1;  |         |  136  |      5  |  0  |  5  |        126  |    5  |           2  |  [126,126,5,5,5]  |
    97  |              resetPlaceHolder_2();  |         |  136  |      5  |  0  |  5  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   106  |                         i = i + 1;  |         |  136  |      5  |  1  |  5  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   109  |                 R = R + separator;  |    126  |  262  |      5  |  1  |  5  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   110  |              resetPlaceHolder_1();  |         |  262  |      5  |  1  |  5  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   115  |                             j = 0;  |         |  262  |      5  |  1  |  0  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   118  |        chunk = arrayRead(text, j);  |         |  262  |    126  |  1  |  0  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   121  |                     R = R + chunk;  |    126  |  388  |    126  |  1  |  0  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   125  |                         j = j + 1;  |         |  388  |    126  |  1  |  1  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   133  |          tag = arrayRead(text, j);  |         |  388  |    126  |  1  |  1  |        126  |  126  |           2  |  [126,126,5,5,5]  |
   137  |                         j = j + 1;  |         |  388  |    126  |  1  |  2  |        126  |  126  |           2  |  [126,126,5,5,5]  |
   140  |        chunk = arrayRead(text, j);  |         |  388  |      5  |  1  |  2  |        126  |  126  |           2  |  [126,126,5,5,5]  |
   143  |                     R = R + chunk;  |      5  |  393  |      5  |  1  |  2  |        126  |  126  |           2  |  [126,126,5,5,5]  |
   147  |                         j = j + 1;  |         |  393  |      5  |  1  |  3  |        126  |  126  |           2  |  [126,126,5,5,5]  |
   148  |              resetPlaceHolder_2();  |         |  393  |      5  |  1  |  3  |        126  |  126  |           2  |  [126,126,5,5,5]  |
   156  |          tag = arrayRead(text, j);  |         |  393  |      5  |  1  |  3  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   160  |                         j = j + 1;  |         |  393  |      5  |  1  |  4  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   163  |        chunk = arrayRead(text, j);  |         |  393  |      5  |  1  |  4  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   166  |                     R = R + chunk;  |      5  |  398  |      5  |  1  |  4  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   170  |                         j = j + 1;  |         |  398  |      5  |  1  |  5  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   171  |              resetPlaceHolder_2();  |         |  398  |      5  |  1  |  5  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   180  |                         i = i + 1;  |         |  398  |      5  |  2  |  5  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   183  |                 R = R + separator;  |    126  |  524  |      5  |  2  |  5  |        126  |    5  |           2  |  [126,126,5,5,5]  |
   184  |              resetPlaceHolder_1();  |         |  524  |      5  |  2  |  5  |        126  |    5  |           2  |  [126,126,5,5,5]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {121}; {183}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {121}; {183}; {47} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    126  |                         0  |
    69  |         R = R + chunk;  |      5  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |      5  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    126  |                         1  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    126  |                         2  |
   143  |         R = R + chunk;  |      5  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |      5  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    126  |                         3  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {166}; {69}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(4), Set(2), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {143}; {166}; {69}; {92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    126  |                            |
    69  |         R = R + chunk;  |      5  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |      5  |                         1  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    126  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    126  |                            |
   143  |         R = R + chunk;  |      5  |                         2  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |      5  |                         3  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    126  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {121}; {183}; {47}
GroupID(1): {143}; {166}; {69}; {92}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |    126  |                         0  |                            |
    69  |         R = R + chunk;  |      5  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |      5  |                            |                         1  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |    126  |                         1  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                         2  |                            |
   143  |         R = R + chunk;  |      5  |                            |                         2  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |      5  |                            |                         3  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |    126  |                         3  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [48, 108])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |    126  |                         0  |                            |
    69  |         R = R + chunk;  |      5  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |      5  |                            |                         1  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |    126  |                         1  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                         2  |                            |
   143  |         R = R + chunk;  |      5  |                            |                         2  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |      5  |                            |                         3  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |    126  |                         3  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [122, 182])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |    126  |                         0  |                            |
    69  |         R = R + chunk;  |      5  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |      5  |                            |                         1  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |    126  |                         1  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                         2  |                            |
   143  |         R = R + chunk;  |      5  |                            |                         2  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |      5  |                            |                         3  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |    126  |                         3  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(74, 97, 148)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_2(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m7.382s
user	0m16.591s
sys	0m2.780s

2023-01-25 09:55:17,671 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 09:56:33,197 INFO     Done. Execution time: 75.52579045295715 seconds
2023-01-25 09:56:33,198 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator) (* 1 1 text)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator) (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 text templateds)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (<= D0p (+ 0 (* 1 1 separator) (* 1 1 text))))
      (a!4 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       a!3
       (or a!3 (= D0p 0))
       (<= D1p (+ 0 (* 1 1 text)))
       a!4)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 separator) (* 1 1 text))) (= D0 0)))
      (a!2 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0))))
  (and a!1 a!2)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C0 (+ 0 (* 1 1 templateds)))
     (<= C1 (+ 0 (* 1 1 text templateds)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    5)  (define-fun D0 () Int    5)  (define-fun C1 () Int    7)  (define-fun templateds () Int    3)  (define-fun text () Int    9)  (define-fun separator () Int    2)  (define-fun D1p () Int    7)  (define-fun D0p () Int    2)  (define-fun C0 () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `73.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0955-transparentAmortize-60s-mostPrecise/stac-raw-0125-0955-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m15.518s
user	3m26.998s
sys	0m15.768s

2023-01-25 09:56:33,198 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 09:56:33,198 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 09:56:49,309 INFO     Done. Execution time: 16.110525369644165 seconds
2023-01-25 09:56:49,309 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz7913545483993629399/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7913545483993629399/bin -o /tmp/qfuzz7913545483993629399/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7913545483993629399/bin
Found file /tmp/qfuzz7913545483993629399/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz7913545483993629399/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7913545483993629399/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7913545483993629399/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7913545483993629399/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7913545483993629399/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 63, exec speed = 137586 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m63 to 63 bits (average: 63.00 bits)
[1;90m        Exec timing : [0m137k to 137k us (average: 137k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 5.00; [2528.00,2533.00,2539.00,2545.00]
2; /tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta; 6; 6.00; [93.00,99.00,105.00,713.00,2528.00,2539.00]
3; /tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta; 6; 12.00; [99.00,848.00,1573.00,2533.00,2545.00,2859.00]
5; /tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 5; 5.00; [1188.00,1193.00,2533.00,2539.00,2545.00]
8; /tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 4; 6.00; [1788.00,2533.00,2539.00,2545.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 89, 126, 126, 126, 167, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 59, 59, 59, 59, 59, 59, 59, 59, 59, 126, 126, 126, 123, 126, 78, 11, 139, 8, 126, 78, 11, 190, 126, 47, 78, 170)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 94, 4, 18, 142, 164, 78, 42)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 56, 4, 113, 126, 110, 35, 126, 5, 69, 15, 126, 126, 7, 126, 126, 126, 126, 126, 97, 126, 78, 63, 147, 126, 8, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7913545483993629399/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 2, 126, 89
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 2, 59, 59
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,94,4,18,142], 2, 78, 42
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,56,4,113,126], 2, 35, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 2, 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.101s
user	0m10.106s
sys	0m0.560s

2023-01-25 09:56:49,309 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-25 09:56:49,310 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-25 09:56:49,315 INFO     Done. Execution time: 0.0048618316650390625 seconds
2023-01-25 09:56:49,315 INFO     Output: 
2023-01-25 09:56:49,315 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 09:56:56,303 INFO     Done. Execution time: 6.987821817398071 seconds
2023-01-25 09:56:56,303 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 2, 126, 89)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 2, 59, 59)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,94,4,18,142], 2, 78, 42)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,56,4,113,126], 2, 35, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 2, 126, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                                 
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |          text           |  ts  |
-------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |   89  |  126  |       |  [126,126,126,126,126]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |   89  |  126  |       |  [126,126,126,126,126]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |   89  |  126  |       |  [126,126,126,126,126]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |   89  |  126  |       |  [126,126,126,126,126]  |   2  |
    38  |                         int i = 0;  |         |     0  |         |  0  |     |   89  |  126  |       |  [126,126,126,126,126]  |   2  |
    40  |                         int j = 0;  |         |     0  |         |  0  |  0  |   89  |  126  |       |  [126,126,126,126,126]  |   2  |
    42  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |   89  |  126  |       |  [126,126,126,126,126]  |   2  |
    44  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |   89  |  126  |    0  |  [126,126,126,126,126]  |   2  |
    49  |                             j = 0;  |         |     0  |      0  |  0  |  0  |   89  |  126  |    0  |  [126,126,126,126,126]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |     0  |    126  |  0  |  0  |   89  |  126  |    0  |  [126,126,126,126,126]  |   2  |
    55  |                     R = R + chunk;  |    126  |   126  |    126  |  0  |  0  |   89  |  126  |    0  |  [126,126,126,126,126]  |   2  |
    59  |                         j = j + 1;  |         |   126  |    126  |  0  |  1  |   89  |  126  |    0  |  [126,126,126,126,126]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |   126  |    126  |  0  |  1  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    71  |                         j = j + 1;  |         |   126  |    126  |  0  |  2  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |   126  |    126  |  0  |  2  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    77  |                     R = R + chunk;  |    126  |   252  |    126  |  0  |  2  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    80  |                       R = R + rep;  |     89  |   341  |    126  |  0  |  2  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    84  |                         j = j + 1;  |         |   341  |    126  |  0  |  3  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    85  |              resetPlaceHolder_2();  |         |   341  |    126  |  0  |  3  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |   341  |    126  |  0  |  3  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
    97  |                         j = j + 1;  |         |   341  |    126  |  0  |  4  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |   341  |    126  |  0  |  4  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   103  |                     R = R + chunk;  |    126  |   467  |    126  |  0  |  4  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   106  |                       R = R + rep;  |     89  |   556  |    126  |  0  |  4  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   110  |                         j = j + 1;  |         |   556  |    126  |  0  |  5  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   111  |              resetPlaceHolder_2();  |         |   556  |    126  |  0  |  5  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   120  |                         i = i + 1;  |         |   556  |    126  |  1  |  5  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   123  |                       R = R + sep;  |    126  |   682  |    126  |  1  |  5  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   124  |              resetPlaceHolder_1();  |         |   682  |    126  |  1  |  5  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   129  |                             j = 0;  |         |   682  |    126  |  1  |  0  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |   682  |    126  |  1  |  0  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   135  |                     R = R + chunk;  |    126  |   808  |    126  |  1  |  0  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   139  |                         j = j + 1;  |         |   808  |    126  |  1  |  1  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |   808  |    126  |  1  |  1  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   151  |                         j = j + 1;  |         |   808  |    126  |  1  |  2  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |   808  |    126  |  1  |  2  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   157  |                     R = R + chunk;  |    126  |   934  |    126  |  1  |  2  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   160  |                       R = R + rep;  |     89  |  1023  |    126  |  1  |  2  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   164  |                         j = j + 1;  |         |  1023  |    126  |  1  |  3  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   165  |              resetPlaceHolder_2();  |         |  1023  |    126  |  1  |  3  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |  1023  |    126  |  1  |  3  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   177  |                         j = j + 1;  |         |  1023  |    126  |  1  |  4  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |  1023  |    126  |  1  |  4  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   183  |                     R = R + chunk;  |    126  |  1149  |    126  |  1  |  4  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   186  |                       R = R + rep;  |     89  |  1238  |    126  |  1  |  4  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   190  |                         j = j + 1;  |         |  1238  |    126  |  1  |  5  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   191  |              resetPlaceHolder_2();  |         |  1238  |    126  |  1  |  5  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   200  |                         i = i + 1;  |         |  1238  |    126  |  2  |  5  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   203  |                       R = R + sep;  |    126  |  1364  |    126  |  2  |  5  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  1364  |    126  |  2  |  5  |   89  |  126  |  126  |  [126,126,126,126,126]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {203}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {55}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {123}; {135}; {157}; {183}; {203}; {55}; {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {103}; {123}; {135}; {157}; {183}; {203}; {55}; {77} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |
    77  |         R = R + chunk;  |    126  |                         1  |
    80  |           R = R + rep;  |     89  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                         2  |
   106  |           R = R + rep;  |     89  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                         3  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                         4  |
   157  |         R = R + chunk;  |    126  |                         5  |
   160  |           R = R + rep;  |     89  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                         6  |
   186  |           R = R + rep;  |     89  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                         7  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {160}; {186}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {160}; {186}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                            |
    77  |         R = R + chunk;  |    126  |                            |
    80  |           R = R + rep;  |     89  |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    126  |                            |
   106  |           R = R + rep;  |     89  |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    126  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    126  |                            |
   157  |         R = R + chunk;  |    126  |                            |
   160  |           R = R + rep;  |     89  |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    126  |                            |
   186  |           R = R + rep;  |     89  |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    126  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {103}; {123}; {135}; {157}; {183}; {203}; {55}; {77}
GroupID(1): {106}; {160}; {186}; {80}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |                            |
    77  |         R = R + chunk;  |    126  |                         1  |                            |
    80  |           R = R + rep;  |     89  |                            |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |    126  |                         2  |                            |
   106  |           R = R + rep;  |     89  |                            |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    126  |                         3  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    126  |                         4  |                            |
   157  |         R = R + chunk;  |    126  |                         5  |                            |
   160  |           R = R + rep;  |     89  |                            |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |    126  |                         6  |                            |
   186  |           R = R + rep;  |     89  |                            |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    126  |                         7  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [56, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |                            |
    77  |         R = R + chunk;  |    126  |                         1  |                            |
    80  |           R = R + rep;  |     89  |                            |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |    126  |                         2  |                            |
   106  |           R = R + rep;  |     89  |                            |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    126  |                         3  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    126  |                         4  |                            |
   157  |         R = R + chunk;  |    126  |                         5  |                            |
   160  |           R = R + rep;  |     89  |                            |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |    126  |                         6  |                            |
   186  |           R = R + rep;  |     89  |                            |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    126  |                         7  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [78, 102])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |                            |
    77  |         R = R + chunk;  |    126  |                         1  |                            |
    80  |           R = R + rep;  |     89  |                            |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |    126  |                         2  |                            |
   106  |           R = R + rep;  |     89  |                            |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    126  |                         3  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    126  |                         4  |                            |
   157  |         R = R + chunk;  |    126  |                         5  |                            |
   160  |           R = R + rep;  |     89  |                            |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |    126  |                         6  |                            |
   186  |           R = R + rep;  |     89  |                            |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    126  |                         7  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [104, 122])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |                            |
    77  |         R = R + chunk;  |    126  |                         1  |                            |
    80  |           R = R + rep;  |     89  |                            |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |    126  |                         2  |                            |
   106  |           R = R + rep;  |     89  |                            |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    126  |                         3  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    126  |                         4  |                            |
   157  |         R = R + chunk;  |    126  |                         5  |                            |
   160  |           R = R + rep;  |     89  |                            |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |    126  |                         6  |                            |
   186  |           R = R + rep;  |     89  |                            |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    126  |                         7  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [136, 156])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |                            |
    77  |         R = R + chunk;  |    126  |                         1  |                            |
    80  |           R = R + rep;  |     89  |                            |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |    126  |                         2  |                            |
   106  |           R = R + rep;  |     89  |                            |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    126  |                         3  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    126  |                         4  |                            |
   157  |         R = R + chunk;  |    126  |                         5  |                            |
   160  |           R = R + rep;  |     89  |                            |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |    126  |                         6  |                            |
   186  |           R = R + rep;  |     89  |                            |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    126  |                         7  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [158, 182])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |                            |
    77  |         R = R + chunk;  |    126  |                         1  |                            |
    80  |           R = R + rep;  |     89  |                            |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |    126  |                         2  |                            |
   106  |           R = R + rep;  |     89  |                            |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    126  |                         3  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    126  |                         4  |                            |
   157  |         R = R + chunk;  |    126  |                         5  |                            |
   160  |           R = R + rep;  |     89  |                            |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |    126  |                         6  |                            |
   186  |           R = R + rep;  |     89  |                            |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    126  |                         7  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [184, 202])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    126  |                         0  |                            |
    77  |         R = R + chunk;  |    126  |                         1  |                            |
    80  |           R = R + rep;  |     89  |                            |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |                            |
   103  |         R = R + chunk;  |    126  |                         2  |                            |
   106  |           R = R + rep;  |     89  |                            |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |                            |
   123  |           R = R + sep;  |    126  |                         3  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |
   135  |         R = R + chunk;  |    126  |                         4  |                            |
   157  |         R = R + chunk;  |    126  |                         5  |                            |
   160  |           R = R + rep;  |     89  |                            |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |         R = R + chunk;  |    126  |                         6  |                            |
   186  |           R = R + rep;  |     89  |                            |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |                            |
   203  |           R = R + sep;  |    126  |                         7  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(124)
GroupID(1): Set(85, 111, 165)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R0 = R0 + chunk;
use R rep -> R1 = R1 + rep;
use R sep -> R0 = R0 + sep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m6.978s
user	0m16.784s
sys	0m2.813s

2023-01-25 09:56:56,304 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:00:31,546 INFO     Done. Execution time: 215.2423026561737 seconds
2023-01-25 10:00:31,546 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        D1 = D1 + rep;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + sep;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (ts * ((text + (text * rep)) + sep))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D0 = D0 + chunk;
        D1 = D1 + rep;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + sep;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 rep)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 rep)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 sep) (* 1 1 text)))` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-2138740858778558947.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1942336086245590475.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 sep) (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts text)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `212.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0956-transparentAmortize-60s-mostPrecise/stac-raw-0125-0956-transparentAmortize-60s-mostPrecise-000-099.csv`

real	3m35.234s
user	10m7.731s
sys	0m27.897s

2023-01-25 10:00:31,547 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 10:00:31,547 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:00:48,301 INFO     Done. Execution time: 16.753698110580444 seconds
2023-01-25 10:00:48,301 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz1594238784064067187/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1594238784064067187/bin -o /tmp/qfuzz1594238784064067187/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1594238784064067187/bin
Found file /tmp/qfuzz1594238784064067187/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz1594238784064067187/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1594238784064067187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1594238784064067187/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1594238784064067187/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1594238784064067187/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 41, exec speed = 135044 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 7.00; [2535.00,2542.00]
2; /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta; 5; 40.00; [1642.00,2055.00,2615.00,2655.00,3235.00]
4; /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 4; 7.00; [2395.00,2535.00,2542.00,3655.00]
6; /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 4; 7.00; [315.00,2535.00,2542.00,2695.00]
7; /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta; 5; 60.00; [2655.00,2962.00,3215.00,3775.00,3835.00]
8; /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta; 5; 360.00; [115.00,1375.00,1735.00,2395.00,3042.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 119, 68, 86, 5, 133, 4, 38, 126, 91, 126, 88, 126, 82, 47, 47, 47, 47, 91, 126, 126, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(147, 188, 132, 160, 191, 5, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 134, 15, 126, 126, 126, 78, 11, 126, 126, 126, 126, 126, 126, 126, 126, 108, 126, 126, 142, 126, 126, 126, 126, 126, 91, 126, 126, 126, 126, 115, 126, 126, 126, 126, 154, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 182, 119, 126, 126, 126, 9, 92, 126, 126, 109, 52, 126, 126, 126, 78, 52, 126, 85, 90, 126, 126, 4, 4, 126, 126, 51, 126, 126, 143, 126, 126, 126, 126, 126, 86, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(81, 132, 130, 102)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1594238784064067187/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [151,119,68,86,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [147,188,132,160,191]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,134,15,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,182,119]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [81,132,130,102]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.742s
user	0m11.061s
sys	0m0.738s

2023-01-25 10:00:48,301 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-25 10:00:48,301 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-25 10:00:48,305 INFO     Done. Execution time: 0.0036933422088623047 seconds
2023-01-25 10:00:48,306 INFO     Output: 
2023-01-25 10:00:48,306 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 10:00:56,950 INFO     Done. Execution time: 8.644217729568481 seconds
2023-01-25 10:00:56,950 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([151,119,68,86,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([147,188,132,160,191])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,134,15,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,182,119])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([81,132,130,102])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 88):
                                                                                                               
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |        text         |
---------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [151,119,68,86,5]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [151,119,68,86,5]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [151,119,68,86,5]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [151,119,68,86,5]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [151,119,68,86,5]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [151,119,68,86,5]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [151,119,68,86,5]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    151  |  0  |    0  |  [151,119,68,86,5]  |
    24  |                     R = R + chunk;  |    151  |  151  |    151  |  0  |    0  |  [151,119,68,86,5]  |
    28  |                         i = i + 1;  |         |  151  |    151  |  1  |    0  |  [151,119,68,86,5]  |
    34  |        chunk = arrayRead(text, i);  |         |  151  |    119  |  1  |    0  |  [151,119,68,86,5]  |
    37  |                     R = R + chunk;  |    119  |  270  |    119  |  1  |    0  |  [151,119,68,86,5]  |
    41  |                         i = i + 1;  |         |  270  |    119  |  2  |    0  |  [151,119,68,86,5]  |
    42  |              resetPlaceHolder_1();  |         |  270  |    119  |  2  |    0  |  [151,119,68,86,5]  |
    48  |        chunk = arrayRead(text, i);  |         |  270  |     68  |  2  |    0  |  [151,119,68,86,5]  |
    51  |                     R = R + chunk;  |     68  |  338  |     68  |  2  |    0  |  [151,119,68,86,5]  |
    55  |                         i = i + 1;  |         |  338  |     68  |  3  |    0  |  [151,119,68,86,5]  |
    56  |              resetPlaceHolder_1();  |         |  338  |     68  |  3  |    0  |  [151,119,68,86,5]  |
    62  |        chunk = arrayRead(text, i);  |         |  338  |     86  |  3  |    0  |  [151,119,68,86,5]  |
    65  |                     R = R + chunk;  |     86  |  424  |     86  |  3  |    0  |  [151,119,68,86,5]  |
    69  |                         i = i + 1;  |         |  424  |     86  |  4  |    0  |  [151,119,68,86,5]  |
    70  |              resetPlaceHolder_1();  |         |  424  |     86  |  4  |    0  |  [151,119,68,86,5]  |
    76  |        chunk = arrayRead(text, i);  |         |  424  |      5  |  4  |    0  |  [151,119,68,86,5]  |
    79  |                     R = R + chunk;  |      5  |  429  |      5  |  4  |    0  |  [151,119,68,86,5]  |
    83  |                         i = i + 1;  |         |  429  |      5  |  5  |    0  |  [151,119,68,86,5]  |
    84  |              resetPlaceHolder_1();  |         |  429  |      5  |  5  |    0  |  [151,119,68,86,5]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,37,51,65,79}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    151  |                         0  |
    37  |         R = R + chunk;  |    119  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     68  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |     86  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |      5  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m8.636s
user	0m14.444s
sys	0m2.974s

2023-01-25 10:00:56,950 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:01:05,938 INFO     Done. Execution time: 8.98707365989685 seconds
2023-01-25 10:01:05,938 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `6.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1000-transparentAmortize-60s-mostPrecise/stac-raw-0125-1000-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.979s
user	0m19.756s
sys	0m2.529s

2023-01-25 10:01:05,938 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 10:01:05,938 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:01:22,260 INFO     Done. Execution time: 16.32121706008911 seconds
2023-01-25 10:01:22,260 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz6208881104181902341/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6208881104181902341/bin -o /tmp/qfuzz6208881104181902341/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6208881104181902341/bin
Found file /tmp/qfuzz6208881104181902341/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz6208881104181902341/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6208881104181902341/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6208881104181902341/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6208881104181902341/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6208881104181902341/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 38, exec speed = 137642 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m38 to 38 bits (average: 38.00 bits)
[1;90m        Exec timing : [0m137k to 137k us (average: 137k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 5.00; [29.00,34.00,2531.00]
2; /tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov; 3; 5.00; [29.00,34.00,91.00]
3; /tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,2471.00]
4; /tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,2531.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 61, 99, 62, 5, 136, 111, 22, 126, 126, 136, 92, 139, 126, 126, 126, 126, 126, 126, 126, 126, 126, 11, 101, 126, 126, 126, 126, 126, 78, 46, 189, 126, 126, 126, 126, 117, 126, 126, 91, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(123, 28, 111, 126, 63, 63, 8, 126, 108, 54, 168, 58, 28, 128, 8, 160, 58, 126, 126, 126, 126, 40, 31, 156, 118, 28, 100, 124)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 126, 78, 167, 126, 126, 126, 126, 126, 126, 133, 48, 126, 126, 126, 126, 126, 126, 126, 126, 126, 43, 126, 128, 159, 99, 126, 52)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6208881104181902341/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 123, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.312s
user	0m9.735s
sys	0m0.620s

2023-01-25 10:01:22,260 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-25 10:01:22,260 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-25 10:01:22,265 INFO     Done. Execution time: 0.004459381103515625 seconds
2023-01-25 10:01:22,265 INFO     Output: 
2023-01-25 10:01:22,265 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 10:01:28,108 INFO     Done. Execution time: 5.842475175857544 seconds
2023-01-25 10:01:28,108 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(123, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  builder  |  i  |  sep  |  types  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |           |     |  126  |      2  |
    19  |                   int builder = 0;  |         |    0  |        0  |     |  126  |      2  |
    20  |                      // int R = 0;  |         |    0  |        0  |     |  126  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |    0  |        0  |     |  126  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |    0  |        0  |     |  126  |      2  |
    26  |             builder = builder + 1;  |         |    0  |        1  |     |  126  |      2  |
    29  |                         R = R + 1;  |      1  |    1  |        1  |     |  126  |      2  |
    31  |                         int i = 1;  |         |    1  |        1  |  1  |  126  |      2  |
    38  |           builder = builder + sep;  |         |    1  |      127  |  1  |  126  |      2  |
    41  |                       R = R + sep;  |    126  |  127  |      127  |  1  |  126  |      2  |
    45  |             builder = builder + 1;  |         |  127  |      128  |  1  |  126  |      2  |
    48  |                         R = R + 1;  |      1  |  128  |      128  |  1  |  126  |      2  |
    52  |                         i = i + 1;  |         |  128  |      128  |  2  |  126  |      2  |
    53  |              resetPlaceHolder_1();  |         |  128  |      128  |  2  |  126  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |    126  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    126  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    126  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m5.831s
user	0m11.439s
sys	0m1.657s

2023-01-25 10:01:28,108 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:01:44,940 INFO     Done. Execution time: 16.83142852783203 seconds
2023-01-25 10:01:44,940 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `14.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1001-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1001-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m16.823s
user	0m43.682s
sys	0m7.350s

2023-01-25 10:01:44,941 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 10:01:44,941 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:02:01,445 INFO     Done. Execution time: 16.503745317459106 seconds
2023-01-25 10:02:01,445 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz7694096120567911162/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7694096120567911162/bin -o /tmp/qfuzz7694096120567911162/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7694096120567911162/bin
Found file /tmp/qfuzz7694096120567911162/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz7694096120567911162/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7694096120567911162/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7694096120567911162/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7694096120567911162/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7694096120567911162/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 34, exec speed = 131821 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7694096120567911162/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz7694096120567911162/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7694096120567911162/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz7694096120567911162/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7694096120567911162/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(95, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 87, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7694096120567911162/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.494s
user	0m10.147s
sys	0m0.769s

2023-01-25 10:02:01,445 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-25 10:02:01,445 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-25 10:02:01,451 INFO     Done. Execution time: 0.0053026676177978516 seconds
2023-01-25 10:02:01,451 INFO     Output: 
2023-01-25 10:02:01,451 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 10:02:08,659 INFO     Done. Execution time: 7.207148790359497 seconds
2023-01-25 10:02:08,659 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m7.197s
user	0m14.336s
sys	0m2.025s

2023-01-25 10:02:08,659 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:02:17,831 INFO     Done. Execution time: 9.171684265136719 seconds
2023-01-25 10:02:17,831 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `6.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1002-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1002-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.161s
user	0m19.693s
sys	0m3.036s

2023-01-25 10:02:17,832 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 10:02:17,832 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:02:34,081 INFO     Done. Execution time: 16.248839855194092 seconds
2023-01-25 10:02:34,081 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz3971258099931662061/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3971258099931662061/bin -o /tmp/qfuzz3971258099931662061/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3971258099931662061/bin
Found file /tmp/qfuzz3971258099931662061/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz3971258099931662061/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3971258099931662061/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3971258099931662061/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3971258099931662061/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3971258099931662061/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 42, exec speed = 156701 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m156k to 156k us (average: 156k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
3; /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
5; /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
6; /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
7; /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
9; /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 83, 126, 158, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 131, 126, 181, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(18, 11, 52, 85, 126, 126, 126, 159, 126, 94, 126, 126, 54, 4, 117, 126, 126, 126, 142, 11, 126, 162, 150, 26, 126, 126, 115, 132, 50, 126, 127, 21, 126, 126, 109, 131, 54, 4, 117, 126, 126, 126, 78, 11, 126, 162, 150, 26, 126, 4, 21, 52)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 190, 125, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 85, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 125, 126, 126, 42, 68, 126, 126, 78, 62, 189, 126, 97, 126, 126, 126, 126, 126, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(127)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(8, 126, 126, 140, 126, 126, 188, 126, 126, 103, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 136, 15, 126, 126, 126, 126, 126, 85, 126, 91, 126, 126, 164, 126, 123, 126, 126, 155, 64, 126, 126, 66, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3971258099931662061/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,83,126,158,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [18,11,52,85,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,190]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,125]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [127]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [8,126,126,140,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.241s
user	0m11.158s
sys	0m1.051s

2023-01-25 10:02:34,081 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-25 10:02:34,081 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-25 10:02:34,086 INFO     Done. Execution time: 0.004407405853271484 seconds
2023-01-25 10:02:34,086 INFO     Output: 
2023-01-25 10:02:34,086 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 10:05:06,678 INFO     Done. Execution time: 152.59178113937378 seconds
2023-01-25 10:05:06,679 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,83,126,158,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([18,11,52,85,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,190])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,125])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([127])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([8,126,126,140,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 6924):
                                                                                                                   
 Index  |              Commands               |  Costs  |   R    |  entry  |  i  |   j   |         sorted         |
-------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |       |  [126,83,126,158,126]  |
    10  |                      // int R = 0;  |         |     0  |         |     |       |  [126,83,126,158,126]  |
    11  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |       |  [126,83,126,158,126]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |       |  [126,83,126,158,126]  |
    14  |                     int entry = 0;  |         |     0  |      0  |     |       |  [126,83,126,158,126]  |
    16  |                         int i = 0;  |         |     0  |      0  |  0  |       |  [126,83,126,158,126]  |
    22  |      entry = arrayRead(sorted, i);  |         |     0  |    126  |  0  |       |  [126,83,126,158,126]  |
    24  |                         int j = 0;  |         |     0  |    126  |  0  |    0  |  [126,83,126,158,126]  |
    30  |                         R = R + 2;  |      2  |     2  |    126  |  0  |    0  |  [126,83,126,158,126]  |
    34  |                         j = j + 1;  |         |     2  |    126  |  0  |    1  |  [126,83,126,158,126]  |
    35  |              resetPlaceHolder_2();  |         |     2  |    126  |  0  |    1  |  [126,83,126,158,126]  |
    41  |                         R = R + 2;  |      2  |     4  |    126  |  0  |    1  |  [126,83,126,158,126]  |
    45  |                         j = j + 1;  |         |     4  |    126  |  0  |    2  |  [126,83,126,158,126]  |
    46  |              resetPlaceHolder_2();  |         |     4  |    126  |  0  |    2  |  [126,83,126,158,126]  |
    52  |                         R = R + 2;  |      2  |     6  |    126  |  0  |    2  |  [126,83,126,158,126]  |
    56  |                         j = j + 1;  |         |     6  |    126  |  0  |    3  |  [126,83,126,158,126]  |
    57  |              resetPlaceHolder_2();  |         |     6  |    126  |  0  |    3  |  [126,83,126,158,126]  |
    63  |                         R = R + 2;  |      2  |     8  |    126  |  0  |    3  |  [126,83,126,158,126]  |
    67  |                         j = j + 1;  |         |     8  |    126  |  0  |    4  |  [126,83,126,158,126]  |
    68  |              resetPlaceHolder_2();  |         |     8  |    126  |  0  |    4  |  [126,83,126,158,126]  |
    74  |                         R = R + 2;  |      2  |    10  |    126  |  0  |    4  |  [126,83,126,158,126]  |
    78  |                         j = j + 1;  |         |    10  |    126  |  0  |    5  |  [126,83,126,158,126]  |
    79  |              resetPlaceHolder_2();  |         |    10  |    126  |  0  |    5  |  [126,83,126,158,126]  |
    85  |                         R = R + 2;  |      2  |    12  |    126  |  0  |    5  |  [126,83,126,158,126]  |
    89  |                         j = j + 1;  |         |    12  |    126  |  0  |    6  |  [126,83,126,158,126]  |
    90  |              resetPlaceHolder_2();  |         |    12  |    126  |  0  |    6  |  [126,83,126,158,126]  |
    96  |                         R = R + 2;  |      2  |    14  |    126  |  0  |    6  |  [126,83,126,158,126]  |
   100  |                         j = j + 1;  |         |    14  |    126  |  0  |    7  |  [126,83,126,158,126]  |
   101  |              resetPlaceHolder_2();  |         |    14  |    126  |  0  |    7  |  [126,83,126,158,126]  |
   107  |                         R = R + 2;  |      2  |    16  |    126  |  0  |    7  |  [126,83,126,158,126]  |
   111  |                         j = j + 1;  |         |    16  |    126  |  0  |    8  |  [126,83,126,158,126]  |
   112  |              resetPlaceHolder_2();  |         |    16  |    126  |  0  |    8  |  [126,83,126,158,126]  |
   118  |                         R = R + 2;  |      2  |    18  |    126  |  0  |    8  |  [126,83,126,158,126]  |
   122  |                         j = j + 1;  |         |    18  |    126  |  0  |    9  |  [126,83,126,158,126]  |
   123  |              resetPlaceHolder_2();  |         |    18  |    126  |  0  |    9  |  [126,83,126,158,126]  |
   129  |                         R = R + 2;  |      2  |    20  |    126  |  0  |    9  |  [126,83,126,158,126]  |
   133  |                         j = j + 1;  |         |    20  |    126  |  0  |   10  |  [126,83,126,158,126]  |
   134  |              resetPlaceHolder_2();  |         |    20  |    126  |  0  |   10  |  [126,83,126,158,126]  |
   140  |                         R = R + 2;  |      2  |    22  |    126  |  0  |   10  |  [126,83,126,158,126]  |
   144  |                         j = j + 1;  |         |    22  |    126  |  0  |   11  |  [126,83,126,158,126]  |
   145  |              resetPlaceHolder_2();  |         |    22  |    126  |  0  |   11  |  [126,83,126,158,126]  |
   151  |                         R = R + 2;  |      2  |    24  |    126  |  0  |   11  |  [126,83,126,158,126]  |
   155  |                         j = j + 1;  |         |    24  |    126  |  0  |   12  |  [126,83,126,158,126]  |
   156  |              resetPlaceHolder_2();  |         |    24  |    126  |  0  |   12  |  [126,83,126,158,126]  |
   162  |                         R = R + 2;  |      2  |    26  |    126  |  0  |   12  |  [126,83,126,158,126]  |
   166  |                         j = j + 1;  |         |    26  |    126  |  0  |   13  |  [126,83,126,158,126]  |
   167  |              resetPlaceHolder_2();  |         |    26  |    126  |  0  |   13  |  [126,83,126,158,126]  |
   173  |                         R = R + 2;  |      2  |    28  |    126  |  0  |   13  |  [126,83,126,158,126]  |
   177  |                         j = j + 1;  |         |    28  |    126  |  0  |   14  |  [126,83,126,158,126]  |
   178  |              resetPlaceHolder_2();  |         |    28  |    126  |  0  |   14  |  [126,83,126,158,126]  |
   184  |                         R = R + 2;  |      2  |    30  |    126  |  0  |   14  |  [126,83,126,158,126]  |
   188  |                         j = j + 1;  |         |    30  |    126  |  0  |   15  |  [126,83,126,158,126]  |
   189  |              resetPlaceHolder_2();  |         |    30  |    126  |  0  |   15  |  [126,83,126,158,126]  |
   195  |                         R = R + 2;  |      2  |    32  |    126  |  0  |   15  |  [126,83,126,158,126]  |
   199  |                         j = j + 1;  |         |    32  |    126  |  0  |   16  |  [126,83,126,158,126]  |
   200  |              resetPlaceHolder_2();  |         |    32  |    126  |  0  |   16  |  [126,83,126,158,126]  |
   206  |                         R = R + 2;  |      2  |    34  |    126  |  0  |   16  |  [126,83,126,158,126]  |
   210  |                         j = j + 1;  |         |    34  |    126  |  0  |   17  |  [126,83,126,158,126]  |
   211  |              resetPlaceHolder_2();  |         |    34  |    126  |  0  |   17  |  [126,83,126,158,126]  |
   217  |                         R = R + 2;  |      2  |    36  |    126  |  0  |   17  |  [126,83,126,158,126]  |
   221  |                         j = j + 1;  |         |    36  |    126  |  0  |   18  |  [126,83,126,158,126]  |
   222  |              resetPlaceHolder_2();  |         |    36  |    126  |  0  |   18  |  [126,83,126,158,126]  |
   228  |                         R = R + 2;  |      2  |    38  |    126  |  0  |   18  |  [126,83,126,158,126]  |
   232  |                         j = j + 1;  |         |    38  |    126  |  0  |   19  |  [126,83,126,158,126]  |
   233  |              resetPlaceHolder_2();  |         |    38  |    126  |  0  |   19  |  [126,83,126,158,126]  |
   239  |                         R = R + 2;  |      2  |    40  |    126  |  0  |   19  |  [126,83,126,158,126]  |
   243  |                         j = j + 1;  |         |    40  |    126  |  0  |   20  |  [126,83,126,158,126]  |
   244  |              resetPlaceHolder_2();  |         |    40  |    126  |  0  |   20  |  [126,83,126,158,126]  |
   250  |                         R = R + 2;  |      2  |    42  |    126  |  0  |   20  |  [126,83,126,158,126]  |
   254  |                         j = j + 1;  |         |    42  |    126  |  0  |   21  |  [126,83,126,158,126]  |
   255  |              resetPlaceHolder_2();  |         |    42  |    126  |  0  |   21  |  [126,83,126,158,126]  |
   261  |                         R = R + 2;  |      2  |    44  |    126  |  0  |   21  |  [126,83,126,158,126]  |
   265  |                         j = j + 1;  |         |    44  |    126  |  0  |   22  |  [126,83,126,158,126]  |
   266  |              resetPlaceHolder_2();  |         |    44  |    126  |  0  |   22  |  [126,83,126,158,126]  |
   272  |                         R = R + 2;  |      2  |    46  |    126  |  0  |   22  |  [126,83,126,158,126]  |
   276  |                         j = j + 1;  |         |    46  |    126  |  0  |   23  |  [126,83,126,158,126]  |
   277  |              resetPlaceHolder_2();  |         |    46  |    126  |  0  |   23  |  [126,83,126,158,126]  |
   283  |                         R = R + 2;  |      2  |    48  |    126  |  0  |   23  |  [126,83,126,158,126]  |
   287  |                         j = j + 1;  |         |    48  |    126  |  0  |   24  |  [126,83,126,158,126]  |
   288  |              resetPlaceHolder_2();  |         |    48  |    126  |  0  |   24  |  [126,83,126,158,126]  |
   294  |                         R = R + 2;  |      2  |    50  |    126  |  0  |   24  |  [126,83,126,158,126]  |
   298  |                         j = j + 1;  |         |    50  |    126  |  0  |   25  |  [126,83,126,158,126]  |
   299  |              resetPlaceHolder_2();  |         |    50  |    126  |  0  |   25  |  [126,83,126,158,126]  |
   305  |                         R = R + 2;  |      2  |    52  |    126  |  0  |   25  |  [126,83,126,158,126]  |
   309  |                         j = j + 1;  |         |    52  |    126  |  0  |   26  |  [126,83,126,158,126]  |
   310  |              resetPlaceHolder_2();  |         |    52  |    126  |  0  |   26  |  [126,83,126,158,126]  |
   316  |                         R = R + 2;  |      2  |    54  |    126  |  0  |   26  |  [126,83,126,158,126]  |
   320  |                         j = j + 1;  |         |    54  |    126  |  0  |   27  |  [126,83,126,158,126]  |
   321  |              resetPlaceHolder_2();  |         |    54  |    126  |  0  |   27  |  [126,83,126,158,126]  |
   327  |                         R = R + 2;  |      2  |    56  |    126  |  0  |   27  |  [126,83,126,158,126]  |
   331  |                         j = j + 1;  |         |    56  |    126  |  0  |   28  |  [126,83,126,158,126]  |
   332  |              resetPlaceHolder_2();  |         |    56  |    126  |  0  |   28  |  [126,83,126,158,126]  |
   338  |                         R = R + 2;  |      2  |    58  |    126  |  0  |   28  |  [126,83,126,158,126]  |
   342  |                         j = j + 1;  |         |    58  |    126  |  0  |   29  |  [126,83,126,158,126]  |
   343  |              resetPlaceHolder_2();  |         |    58  |    126  |  0  |   29  |  [126,83,126,158,126]  |
   349  |                         R = R + 2;  |      2  |    60  |    126  |  0  |   29  |  [126,83,126,158,126]  |
   353  |                         j = j + 1;  |         |    60  |    126  |  0  |   30  |  [126,83,126,158,126]  |
   354  |              resetPlaceHolder_2();  |         |    60  |    126  |  0  |   30  |  [126,83,126,158,126]  |
   360  |                         R = R + 2;  |      2  |    62  |    126  |  0  |   30  |  [126,83,126,158,126]  |
   364  |                         j = j + 1;  |         |    62  |    126  |  0  |   31  |  [126,83,126,158,126]  |
   365  |              resetPlaceHolder_2();  |         |    62  |    126  |  0  |   31  |  [126,83,126,158,126]  |
   371  |                         R = R + 2;  |      2  |    64  |    126  |  0  |   31  |  [126,83,126,158,126]  |
   375  |                         j = j + 1;  |         |    64  |    126  |  0  |   32  |  [126,83,126,158,126]  |
   376  |              resetPlaceHolder_2();  |         |    64  |    126  |  0  |   32  |  [126,83,126,158,126]  |
   382  |                         R = R + 2;  |      2  |    66  |    126  |  0  |   32  |  [126,83,126,158,126]  |
   386  |                         j = j + 1;  |         |    66  |    126  |  0  |   33  |  [126,83,126,158,126]  |
   387  |              resetPlaceHolder_2();  |         |    66  |    126  |  0  |   33  |  [126,83,126,158,126]  |
   393  |                         R = R + 2;  |      2  |    68  |    126  |  0  |   33  |  [126,83,126,158,126]  |
   397  |                         j = j + 1;  |         |    68  |    126  |  0  |   34  |  [126,83,126,158,126]  |
   398  |              resetPlaceHolder_2();  |         |    68  |    126  |  0  |   34  |  [126,83,126,158,126]  |
   404  |                         R = R + 2;  |      2  |    70  |    126  |  0  |   34  |  [126,83,126,158,126]  |
   408  |                         j = j + 1;  |         |    70  |    126  |  0  |   35  |  [126,83,126,158,126]  |
   409  |              resetPlaceHolder_2();  |         |    70  |    126  |  0  |   35  |  [126,83,126,158,126]  |
   415  |                         R = R + 2;  |      2  |    72  |    126  |  0  |   35  |  [126,83,126,158,126]  |
   419  |                         j = j + 1;  |         |    72  |    126  |  0  |   36  |  [126,83,126,158,126]  |
   420  |              resetPlaceHolder_2();  |         |    72  |    126  |  0  |   36  |  [126,83,126,158,126]  |
   426  |                         R = R + 2;  |      2  |    74  |    126  |  0  |   36  |  [126,83,126,158,126]  |
   430  |                         j = j + 1;  |         |    74  |    126  |  0  |   37  |  [126,83,126,158,126]  |
   431  |              resetPlaceHolder_2();  |         |    74  |    126  |  0  |   37  |  [126,83,126,158,126]  |
   437  |                         R = R + 2;  |      2  |    76  |    126  |  0  |   37  |  [126,83,126,158,126]  |
   441  |                         j = j + 1;  |         |    76  |    126  |  0  |   38  |  [126,83,126,158,126]  |
   442  |              resetPlaceHolder_2();  |         |    76  |    126  |  0  |   38  |  [126,83,126,158,126]  |
   448  |                         R = R + 2;  |      2  |    78  |    126  |  0  |   38  |  [126,83,126,158,126]  |
   452  |                         j = j + 1;  |         |    78  |    126  |  0  |   39  |  [126,83,126,158,126]  |
   453  |              resetPlaceHolder_2();  |         |    78  |    126  |  0  |   39  |  [126,83,126,158,126]  |
   459  |                         R = R + 2;  |      2  |    80  |    126  |  0  |   39  |  [126,83,126,158,126]  |
   463  |                         j = j + 1;  |         |    80  |    126  |  0  |   40  |  [126,83,126,158,126]  |
   464  |              resetPlaceHolder_2();  |         |    80  |    126  |  0  |   40  |  [126,83,126,158,126]  |
   470  |                         R = R + 2;  |      2  |    82  |    126  |  0  |   40  |  [126,83,126,158,126]  |
   474  |                         j = j + 1;  |         |    82  |    126  |  0  |   41  |  [126,83,126,158,126]  |
   475  |              resetPlaceHolder_2();  |         |    82  |    126  |  0  |   41  |  [126,83,126,158,126]  |
   481  |                         R = R + 2;  |      2  |    84  |    126  |  0  |   41  |  [126,83,126,158,126]  |
   485  |                         j = j + 1;  |         |    84  |    126  |  0  |   42  |  [126,83,126,158,126]  |
   486  |              resetPlaceHolder_2();  |         |    84  |    126  |  0  |   42  |  [126,83,126,158,126]  |
   492  |                         R = R + 2;  |      2  |    86  |    126  |  0  |   42  |  [126,83,126,158,126]  |
   496  |                         j = j + 1;  |         |    86  |    126  |  0  |   43  |  [126,83,126,158,126]  |
   497  |              resetPlaceHolder_2();  |         |    86  |    126  |  0  |   43  |  [126,83,126,158,126]  |
   503  |                         R = R + 2;  |      2  |    88  |    126  |  0  |   43  |  [126,83,126,158,126]  |
   507  |                         j = j + 1;  |         |    88  |    126  |  0  |   44  |  [126,83,126,158,126]  |
   508  |              resetPlaceHolder_2();  |         |    88  |    126  |  0  |   44  |  [126,83,126,158,126]  |
   514  |                         R = R + 2;  |      2  |    90  |    126  |  0  |   44  |  [126,83,126,158,126]  |
   518  |                         j = j + 1;  |         |    90  |    126  |  0  |   45  |  [126,83,126,158,126]  |
   519  |              resetPlaceHolder_2();  |         |    90  |    126  |  0  |   45  |  [126,83,126,158,126]  |
   525  |                         R = R + 2;  |      2  |    92  |    126  |  0  |   45  |  [126,83,126,158,126]  |
   529  |                         j = j + 1;  |         |    92  |    126  |  0  |   46  |  [126,83,126,158,126]  |
   530  |              resetPlaceHolder_2();  |         |    92  |    126  |  0  |   46  |  [126,83,126,158,126]  |
   536  |                         R = R + 2;  |      2  |    94  |    126  |  0  |   46  |  [126,83,126,158,126]  |
   540  |                         j = j + 1;  |         |    94  |    126  |  0  |   47  |  [126,83,126,158,126]  |
   541  |              resetPlaceHolder_2();  |         |    94  |    126  |  0  |   47  |  [126,83,126,158,126]  |
   547  |                         R = R + 2;  |      2  |    96  |    126  |  0  |   47  |  [126,83,126,158,126]  |
   551  |                         j = j + 1;  |         |    96  |    126  |  0  |   48  |  [126,83,126,158,126]  |
   552  |              resetPlaceHolder_2();  |         |    96  |    126  |  0  |   48  |  [126,83,126,158,126]  |
   558  |                         R = R + 2;  |      2  |    98  |    126  |  0  |   48  |  [126,83,126,158,126]  |
   562  |                         j = j + 1;  |         |    98  |    126  |  0  |   49  |  [126,83,126,158,126]  |
   563  |              resetPlaceHolder_2();  |         |    98  |    126  |  0  |   49  |  [126,83,126,158,126]  |
   569  |                         R = R + 2;  |      2  |   100  |    126  |  0  |   49  |  [126,83,126,158,126]  |
   573  |                         j = j + 1;  |         |   100  |    126  |  0  |   50  |  [126,83,126,158,126]  |
   574  |              resetPlaceHolder_2();  |         |   100  |    126  |  0  |   50  |  [126,83,126,158,126]  |
   580  |                         R = R + 2;  |      2  |   102  |    126  |  0  |   50  |  [126,83,126,158,126]  |
   584  |                         j = j + 1;  |         |   102  |    126  |  0  |   51  |  [126,83,126,158,126]  |
   585  |              resetPlaceHolder_2();  |         |   102  |    126  |  0  |   51  |  [126,83,126,158,126]  |
   591  |                         R = R + 2;  |      2  |   104  |    126  |  0  |   51  |  [126,83,126,158,126]  |
   595  |                         j = j + 1;  |         |   104  |    126  |  0  |   52  |  [126,83,126,158,126]  |
   596  |              resetPlaceHolder_2();  |         |   104  |    126  |  0  |   52  |  [126,83,126,158,126]  |
   602  |                         R = R + 2;  |      2  |   106  |    126  |  0  |   52  |  [126,83,126,158,126]  |
   606  |                         j = j + 1;  |         |   106  |    126  |  0  |   53  |  [126,83,126,158,126]  |
   607  |              resetPlaceHolder_2();  |         |   106  |    126  |  0  |   53  |  [126,83,126,158,126]  |
   613  |                         R = R + 2;  |      2  |   108  |    126  |  0  |   53  |  [126,83,126,158,126]  |
   617  |                         j = j + 1;  |         |   108  |    126  |  0  |   54  |  [126,83,126,158,126]  |
   618  |              resetPlaceHolder_2();  |         |   108  |    126  |  0  |   54  |  [126,83,126,158,126]  |
   624  |                         R = R + 2;  |      2  |   110  |    126  |  0  |   54  |  [126,83,126,158,126]  |
   628  |                         j = j + 1;  |         |   110  |    126  |  0  |   55  |  [126,83,126,158,126]  |
   629  |              resetPlaceHolder_2();  |         |   110  |    126  |  0  |   55  |  [126,83,126,158,126]  |
   635  |                         R = R + 2;  |      2  |   112  |    126  |  0  |   55  |  [126,83,126,158,126]  |
   639  |                         j = j + 1;  |         |   112  |    126  |  0  |   56  |  [126,83,126,158,126]  |
   640  |              resetPlaceHolder_2();  |         |   112  |    126  |  0  |   56  |  [126,83,126,158,126]  |
   646  |                         R = R + 2;  |      2  |   114  |    126  |  0  |   56  |  [126,83,126,158,126]  |
   650  |                         j = j + 1;  |         |   114  |    126  |  0  |   57  |  [126,83,126,158,126]  |
   651  |              resetPlaceHolder_2();  |         |   114  |    126  |  0  |   57  |  [126,83,126,158,126]  |
   657  |                         R = R + 2;  |      2  |   116  |    126  |  0  |   57  |  [126,83,126,158,126]  |
   661  |                         j = j + 1;  |         |   116  |    126  |  0  |   58  |  [126,83,126,158,126]  |
   662  |              resetPlaceHolder_2();  |         |   116  |    126  |  0  |   58  |  [126,83,126,158,126]  |
   668  |                         R = R + 2;  |      2  |   118  |    126  |  0  |   58  |  [126,83,126,158,126]  |
   672  |                         j = j + 1;  |         |   118  |    126  |  0  |   59  |  [126,83,126,158,126]  |
   673  |              resetPlaceHolder_2();  |         |   118  |    126  |  0  |   59  |  [126,83,126,158,126]  |
   679  |                         R = R + 2;  |      2  |   120  |    126  |  0  |   59  |  [126,83,126,158,126]  |
   683  |                         j = j + 1;  |         |   120  |    126  |  0  |   60  |  [126,83,126,158,126]  |
   684  |              resetPlaceHolder_2();  |         |   120  |    126  |  0  |   60  |  [126,83,126,158,126]  |
   690  |                         R = R + 2;  |      2  |   122  |    126  |  0  |   60  |  [126,83,126,158,126]  |
   694  |                         j = j + 1;  |         |   122  |    126  |  0  |   61  |  [126,83,126,158,126]  |
   695  |              resetPlaceHolder_2();  |         |   122  |    126  |  0  |   61  |  [126,83,126,158,126]  |
   701  |                         R = R + 2;  |      2  |   124  |    126  |  0  |   61  |  [126,83,126,158,126]  |
   705  |                         j = j + 1;  |         |   124  |    126  |  0  |   62  |  [126,83,126,158,126]  |
   706  |              resetPlaceHolder_2();  |         |   124  |    126  |  0  |   62  |  [126,83,126,158,126]  |
   712  |                         R = R + 2;  |      2  |   126  |    126  |  0  |   62  |  [126,83,126,158,126]  |
   716  |                         j = j + 1;  |         |   126  |    126  |  0  |   63  |  [126,83,126,158,126]  |
   717  |              resetPlaceHolder_2();  |         |   126  |    126  |  0  |   63  |  [126,83,126,158,126]  |
   723  |                         R = R + 2;  |      2  |   128  |    126  |  0  |   63  |  [126,83,126,158,126]  |
   727  |                         j = j + 1;  |         |   128  |    126  |  0  |   64  |  [126,83,126,158,126]  |
   728  |              resetPlaceHolder_2();  |         |   128  |    126  |  0  |   64  |  [126,83,126,158,126]  |
   734  |                         R = R + 2;  |      2  |   130  |    126  |  0  |   64  |  [126,83,126,158,126]  |
   738  |                         j = j + 1;  |         |   130  |    126  |  0  |   65  |  [126,83,126,158,126]  |
   739  |              resetPlaceHolder_2();  |         |   130  |    126  |  0  |   65  |  [126,83,126,158,126]  |
   745  |                         R = R + 2;  |      2  |   132  |    126  |  0  |   65  |  [126,83,126,158,126]  |
   749  |                         j = j + 1;  |         |   132  |    126  |  0  |   66  |  [126,83,126,158,126]  |
   750  |              resetPlaceHolder_2();  |         |   132  |    126  |  0  |   66  |  [126,83,126,158,126]  |
   756  |                         R = R + 2;  |      2  |   134  |    126  |  0  |   66  |  [126,83,126,158,126]  |
   760  |                         j = j + 1;  |         |   134  |    126  |  0  |   67  |  [126,83,126,158,126]  |
   761  |              resetPlaceHolder_2();  |         |   134  |    126  |  0  |   67  |  [126,83,126,158,126]  |
   767  |                         R = R + 2;  |      2  |   136  |    126  |  0  |   67  |  [126,83,126,158,126]  |
   771  |                         j = j + 1;  |         |   136  |    126  |  0  |   68  |  [126,83,126,158,126]  |
   772  |              resetPlaceHolder_2();  |         |   136  |    126  |  0  |   68  |  [126,83,126,158,126]  |
   778  |                         R = R + 2;  |      2  |   138  |    126  |  0  |   68  |  [126,83,126,158,126]  |
   782  |                         j = j + 1;  |         |   138  |    126  |  0  |   69  |  [126,83,126,158,126]  |
   783  |              resetPlaceHolder_2();  |         |   138  |    126  |  0  |   69  |  [126,83,126,158,126]  |
   789  |                         R = R + 2;  |      2  |   140  |    126  |  0  |   69  |  [126,83,126,158,126]  |
   793  |                         j = j + 1;  |         |   140  |    126  |  0  |   70  |  [126,83,126,158,126]  |
   794  |              resetPlaceHolder_2();  |         |   140  |    126  |  0  |   70  |  [126,83,126,158,126]  |
   800  |                         R = R + 2;  |      2  |   142  |    126  |  0  |   70  |  [126,83,126,158,126]  |
   804  |                         j = j + 1;  |         |   142  |    126  |  0  |   71  |  [126,83,126,158,126]  |
   805  |              resetPlaceHolder_2();  |         |   142  |    126  |  0  |   71  |  [126,83,126,158,126]  |
   811  |                         R = R + 2;  |      2  |   144  |    126  |  0  |   71  |  [126,83,126,158,126]  |
   815  |                         j = j + 1;  |         |   144  |    126  |  0  |   72  |  [126,83,126,158,126]  |
   816  |              resetPlaceHolder_2();  |         |   144  |    126  |  0  |   72  |  [126,83,126,158,126]  |
   822  |                         R = R + 2;  |      2  |   146  |    126  |  0  |   72  |  [126,83,126,158,126]  |
   826  |                         j = j + 1;  |         |   146  |    126  |  0  |   73  |  [126,83,126,158,126]  |
   827  |              resetPlaceHolder_2();  |         |   146  |    126  |  0  |   73  |  [126,83,126,158,126]  |
   833  |                         R = R + 2;  |      2  |   148  |    126  |  0  |   73  |  [126,83,126,158,126]  |
   837  |                         j = j + 1;  |         |   148  |    126  |  0  |   74  |  [126,83,126,158,126]  |
   838  |              resetPlaceHolder_2();  |         |   148  |    126  |  0  |   74  |  [126,83,126,158,126]  |
   844  |                         R = R + 2;  |      2  |   150  |    126  |  0  |   74  |  [126,83,126,158,126]  |
   848  |                         j = j + 1;  |         |   150  |    126  |  0  |   75  |  [126,83,126,158,126]  |
   849  |              resetPlaceHolder_2();  |         |   150  |    126  |  0  |   75  |  [126,83,126,158,126]  |
   855  |                         R = R + 2;  |      2  |   152  |    126  |  0  |   75  |  [126,83,126,158,126]  |
   859  |                         j = j + 1;  |         |   152  |    126  |  0  |   76  |  [126,83,126,158,126]  |
   860  |              resetPlaceHolder_2();  |         |   152  |    126  |  0  |   76  |  [126,83,126,158,126]  |
   866  |                         R = R + 2;  |      2  |   154  |    126  |  0  |   76  |  [126,83,126,158,126]  |
   870  |                         j = j + 1;  |         |   154  |    126  |  0  |   77  |  [126,83,126,158,126]  |
   871  |              resetPlaceHolder_2();  |         |   154  |    126  |  0  |   77  |  [126,83,126,158,126]  |
   877  |                         R = R + 2;  |      2  |   156  |    126  |  0  |   77  |  [126,83,126,158,126]  |
   881  |                         j = j + 1;  |         |   156  |    126  |  0  |   78  |  [126,83,126,158,126]  |
   882  |              resetPlaceHolder_2();  |         |   156  |    126  |  0  |   78  |  [126,83,126,158,126]  |
   888  |                         R = R + 2;  |      2  |   158  |    126  |  0  |   78  |  [126,83,126,158,126]  |
   892  |                         j = j + 1;  |         |   158  |    126  |  0  |   79  |  [126,83,126,158,126]  |
   893  |              resetPlaceHolder_2();  |         |   158  |    126  |  0  |   79  |  [126,83,126,158,126]  |
   899  |                         R = R + 2;  |      2  |   160  |    126  |  0  |   79  |  [126,83,126,158,126]  |
   903  |                         j = j + 1;  |         |   160  |    126  |  0  |   80  |  [126,83,126,158,126]  |
   904  |              resetPlaceHolder_2();  |         |   160  |    126  |  0  |   80  |  [126,83,126,158,126]  |
   910  |                         R = R + 2;  |      2  |   162  |    126  |  0  |   80  |  [126,83,126,158,126]  |
   914  |                         j = j + 1;  |         |   162  |    126  |  0  |   81  |  [126,83,126,158,126]  |
   915  |              resetPlaceHolder_2();  |         |   162  |    126  |  0  |   81  |  [126,83,126,158,126]  |
   921  |                         R = R + 2;  |      2  |   164  |    126  |  0  |   81  |  [126,83,126,158,126]  |
   925  |                         j = j + 1;  |         |   164  |    126  |  0  |   82  |  [126,83,126,158,126]  |
   926  |              resetPlaceHolder_2();  |         |   164  |    126  |  0  |   82  |  [126,83,126,158,126]  |
   932  |                         R = R + 2;  |      2  |   166  |    126  |  0  |   82  |  [126,83,126,158,126]  |
   936  |                         j = j + 1;  |         |   166  |    126  |  0  |   83  |  [126,83,126,158,126]  |
   937  |              resetPlaceHolder_2();  |         |   166  |    126  |  0  |   83  |  [126,83,126,158,126]  |
   943  |                         R = R + 2;  |      2  |   168  |    126  |  0  |   83  |  [126,83,126,158,126]  |
   947  |                         j = j + 1;  |         |   168  |    126  |  0  |   84  |  [126,83,126,158,126]  |
   948  |              resetPlaceHolder_2();  |         |   168  |    126  |  0  |   84  |  [126,83,126,158,126]  |
   954  |                         R = R + 2;  |      2  |   170  |    126  |  0  |   84  |  [126,83,126,158,126]  |
   958  |                         j = j + 1;  |         |   170  |    126  |  0  |   85  |  [126,83,126,158,126]  |
   959  |              resetPlaceHolder_2();  |         |   170  |    126  |  0  |   85  |  [126,83,126,158,126]  |
   965  |                         R = R + 2;  |      2  |   172  |    126  |  0  |   85  |  [126,83,126,158,126]  |
   969  |                         j = j + 1;  |         |   172  |    126  |  0  |   86  |  [126,83,126,158,126]  |
   970  |              resetPlaceHolder_2();  |         |   172  |    126  |  0  |   86  |  [126,83,126,158,126]  |
   976  |                         R = R + 2;  |      2  |   174  |    126  |  0  |   86  |  [126,83,126,158,126]  |
   980  |                         j = j + 1;  |         |   174  |    126  |  0  |   87  |  [126,83,126,158,126]  |
   981  |              resetPlaceHolder_2();  |         |   174  |    126  |  0  |   87  |  [126,83,126,158,126]  |
   987  |                         R = R + 2;  |      2  |   176  |    126  |  0  |   87  |  [126,83,126,158,126]  |
   991  |                         j = j + 1;  |         |   176  |    126  |  0  |   88  |  [126,83,126,158,126]  |
   992  |              resetPlaceHolder_2();  |         |   176  |    126  |  0  |   88  |  [126,83,126,158,126]  |
   998  |                         R = R + 2;  |      2  |   178  |    126  |  0  |   88  |  [126,83,126,158,126]  |
  1002  |                         j = j + 1;  |         |   178  |    126  |  0  |   89  |  [126,83,126,158,126]  |
  1003  |              resetPlaceHolder_2();  |         |   178  |    126  |  0  |   89  |  [126,83,126,158,126]  |
  1009  |                         R = R + 2;  |      2  |   180  |    126  |  0  |   89  |  [126,83,126,158,126]  |
  1013  |                         j = j + 1;  |         |   180  |    126  |  0  |   90  |  [126,83,126,158,126]  |
  1014  |              resetPlaceHolder_2();  |         |   180  |    126  |  0  |   90  |  [126,83,126,158,126]  |
  1020  |                         R = R + 2;  |      2  |   182  |    126  |  0  |   90  |  [126,83,126,158,126]  |
  1024  |                         j = j + 1;  |         |   182  |    126  |  0  |   91  |  [126,83,126,158,126]  |
  1025  |              resetPlaceHolder_2();  |         |   182  |    126  |  0  |   91  |  [126,83,126,158,126]  |
  1031  |                         R = R + 2;  |      2  |   184  |    126  |  0  |   91  |  [126,83,126,158,126]  |
  1035  |                         j = j + 1;  |         |   184  |    126  |  0  |   92  |  [126,83,126,158,126]  |
  1036  |              resetPlaceHolder_2();  |         |   184  |    126  |  0  |   92  |  [126,83,126,158,126]  |
  1042  |                         R = R + 2;  |      2  |   186  |    126  |  0  |   92  |  [126,83,126,158,126]  |
  1046  |                         j = j + 1;  |         |   186  |    126  |  0  |   93  |  [126,83,126,158,126]  |
  1047  |              resetPlaceHolder_2();  |         |   186  |    126  |  0  |   93  |  [126,83,126,158,126]  |
  1053  |                         R = R + 2;  |      2  |   188  |    126  |  0  |   93  |  [126,83,126,158,126]  |
  1057  |                         j = j + 1;  |         |   188  |    126  |  0  |   94  |  [126,83,126,158,126]  |
  1058  |              resetPlaceHolder_2();  |         |   188  |    126  |  0  |   94  |  [126,83,126,158,126]  |
  1064  |                         R = R + 2;  |      2  |   190  |    126  |  0  |   94  |  [126,83,126,158,126]  |
  1068  |                         j = j + 1;  |         |   190  |    126  |  0  |   95  |  [126,83,126,158,126]  |
  1069  |              resetPlaceHolder_2();  |         |   190  |    126  |  0  |   95  |  [126,83,126,158,126]  |
  1075  |                         R = R + 2;  |      2  |   192  |    126  |  0  |   95  |  [126,83,126,158,126]  |
  1079  |                         j = j + 1;  |         |   192  |    126  |  0  |   96  |  [126,83,126,158,126]  |
  1080  |              resetPlaceHolder_2();  |         |   192  |    126  |  0  |   96  |  [126,83,126,158,126]  |
  1086  |                         R = R + 2;  |      2  |   194  |    126  |  0  |   96  |  [126,83,126,158,126]  |
  1090  |                         j = j + 1;  |         |   194  |    126  |  0  |   97  |  [126,83,126,158,126]  |
  1091  |              resetPlaceHolder_2();  |         |   194  |    126  |  0  |   97  |  [126,83,126,158,126]  |
  1097  |                         R = R + 2;  |      2  |   196  |    126  |  0  |   97  |  [126,83,126,158,126]  |
  1101  |                         j = j + 1;  |         |   196  |    126  |  0  |   98  |  [126,83,126,158,126]  |
  1102  |              resetPlaceHolder_2();  |         |   196  |    126  |  0  |   98  |  [126,83,126,158,126]  |
  1108  |                         R = R + 2;  |      2  |   198  |    126  |  0  |   98  |  [126,83,126,158,126]  |
  1112  |                         j = j + 1;  |         |   198  |    126  |  0  |   99  |  [126,83,126,158,126]  |
  1113  |              resetPlaceHolder_2();  |         |   198  |    126  |  0  |   99  |  [126,83,126,158,126]  |
  1119  |                         R = R + 2;  |      2  |   200  |    126  |  0  |   99  |  [126,83,126,158,126]  |
  1123  |                         j = j + 1;  |         |   200  |    126  |  0  |  100  |  [126,83,126,158,126]  |
  1124  |              resetPlaceHolder_2();  |         |   200  |    126  |  0  |  100  |  [126,83,126,158,126]  |
  1130  |                         R = R + 2;  |      2  |   202  |    126  |  0  |  100  |  [126,83,126,158,126]  |
  1134  |                         j = j + 1;  |         |   202  |    126  |  0  |  101  |  [126,83,126,158,126]  |
  1135  |              resetPlaceHolder_2();  |         |   202  |    126  |  0  |  101  |  [126,83,126,158,126]  |
  1141  |                         R = R + 2;  |      2  |   204  |    126  |  0  |  101  |  [126,83,126,158,126]  |
  1145  |                         j = j + 1;  |         |   204  |    126  |  0  |  102  |  [126,83,126,158,126]  |
  1146  |              resetPlaceHolder_2();  |         |   204  |    126  |  0  |  102  |  [126,83,126,158,126]  |
  1152  |                         R = R + 2;  |      2  |   206  |    126  |  0  |  102  |  [126,83,126,158,126]  |
  1156  |                         j = j + 1;  |         |   206  |    126  |  0  |  103  |  [126,83,126,158,126]  |
  1157  |              resetPlaceHolder_2();  |         |   206  |    126  |  0  |  103  |  [126,83,126,158,126]  |
  1163  |                         R = R + 2;  |      2  |   208  |    126  |  0  |  103  |  [126,83,126,158,126]  |
  1167  |                         j = j + 1;  |         |   208  |    126  |  0  |  104  |  [126,83,126,158,126]  |
  1168  |              resetPlaceHolder_2();  |         |   208  |    126  |  0  |  104  |  [126,83,126,158,126]  |
  1174  |                         R = R + 2;  |      2  |   210  |    126  |  0  |  104  |  [126,83,126,158,126]  |
  1178  |                         j = j + 1;  |         |   210  |    126  |  0  |  105  |  [126,83,126,158,126]  |
  1179  |              resetPlaceHolder_2();  |         |   210  |    126  |  0  |  105  |  [126,83,126,158,126]  |
  1185  |                         R = R + 2;  |      2  |   212  |    126  |  0  |  105  |  [126,83,126,158,126]  |
  1189  |                         j = j + 1;  |         |   212  |    126  |  0  |  106  |  [126,83,126,158,126]  |
  1190  |              resetPlaceHolder_2();  |         |   212  |    126  |  0  |  106  |  [126,83,126,158,126]  |
  1196  |                         R = R + 2;  |      2  |   214  |    126  |  0  |  106  |  [126,83,126,158,126]  |
  1200  |                         j = j + 1;  |         |   214  |    126  |  0  |  107  |  [126,83,126,158,126]  |
  1201  |              resetPlaceHolder_2();  |         |   214  |    126  |  0  |  107  |  [126,83,126,158,126]  |
  1207  |                         R = R + 2;  |      2  |   216  |    126  |  0  |  107  |  [126,83,126,158,126]  |
  1211  |                         j = j + 1;  |         |   216  |    126  |  0  |  108  |  [126,83,126,158,126]  |
  1212  |              resetPlaceHolder_2();  |         |   216  |    126  |  0  |  108  |  [126,83,126,158,126]  |
  1218  |                         R = R + 2;  |      2  |   218  |    126  |  0  |  108  |  [126,83,126,158,126]  |
  1222  |                         j = j + 1;  |         |   218  |    126  |  0  |  109  |  [126,83,126,158,126]  |
  1223  |              resetPlaceHolder_2();  |         |   218  |    126  |  0  |  109  |  [126,83,126,158,126]  |
  1229  |                         R = R + 2;  |      2  |   220  |    126  |  0  |  109  |  [126,83,126,158,126]  |
  1233  |                         j = j + 1;  |         |   220  |    126  |  0  |  110  |  [126,83,126,158,126]  |
  1234  |              resetPlaceHolder_2();  |         |   220  |    126  |  0  |  110  |  [126,83,126,158,126]  |
  1240  |                         R = R + 2;  |      2  |   222  |    126  |  0  |  110  |  [126,83,126,158,126]  |
  1244  |                         j = j + 1;  |         |   222  |    126  |  0  |  111  |  [126,83,126,158,126]  |
  1245  |              resetPlaceHolder_2();  |         |   222  |    126  |  0  |  111  |  [126,83,126,158,126]  |
  1251  |                         R = R + 2;  |      2  |   224  |    126  |  0  |  111  |  [126,83,126,158,126]  |
  1255  |                         j = j + 1;  |         |   224  |    126  |  0  |  112  |  [126,83,126,158,126]  |
  1256  |              resetPlaceHolder_2();  |         |   224  |    126  |  0  |  112  |  [126,83,126,158,126]  |
  1262  |                         R = R + 2;  |      2  |   226  |    126  |  0  |  112  |  [126,83,126,158,126]  |
  1266  |                         j = j + 1;  |         |   226  |    126  |  0  |  113  |  [126,83,126,158,126]  |
  1267  |              resetPlaceHolder_2();  |         |   226  |    126  |  0  |  113  |  [126,83,126,158,126]  |
  1273  |                         R = R + 2;  |      2  |   228  |    126  |  0  |  113  |  [126,83,126,158,126]  |
  1277  |                         j = j + 1;  |         |   228  |    126  |  0  |  114  |  [126,83,126,158,126]  |
  1278  |              resetPlaceHolder_2();  |         |   228  |    126  |  0  |  114  |  [126,83,126,158,126]  |
  1284  |                         R = R + 2;  |      2  |   230  |    126  |  0  |  114  |  [126,83,126,158,126]  |
  1288  |                         j = j + 1;  |         |   230  |    126  |  0  |  115  |  [126,83,126,158,126]  |
  1289  |              resetPlaceHolder_2();  |         |   230  |    126  |  0  |  115  |  [126,83,126,158,126]  |
  1295  |                         R = R + 2;  |      2  |   232  |    126  |  0  |  115  |  [126,83,126,158,126]  |
  1299  |                         j = j + 1;  |         |   232  |    126  |  0  |  116  |  [126,83,126,158,126]  |
  1300  |              resetPlaceHolder_2();  |         |   232  |    126  |  0  |  116  |  [126,83,126,158,126]  |
  1306  |                         R = R + 2;  |      2  |   234  |    126  |  0  |  116  |  [126,83,126,158,126]  |
  1310  |                         j = j + 1;  |         |   234  |    126  |  0  |  117  |  [126,83,126,158,126]  |
  1311  |              resetPlaceHolder_2();  |         |   234  |    126  |  0  |  117  |  [126,83,126,158,126]  |
  1317  |                         R = R + 2;  |      2  |   236  |    126  |  0  |  117  |  [126,83,126,158,126]  |
  1321  |                         j = j + 1;  |         |   236  |    126  |  0  |  118  |  [126,83,126,158,126]  |
  1322  |              resetPlaceHolder_2();  |         |   236  |    126  |  0  |  118  |  [126,83,126,158,126]  |
  1328  |                         R = R + 2;  |      2  |   238  |    126  |  0  |  118  |  [126,83,126,158,126]  |
  1332  |                         j = j + 1;  |         |   238  |    126  |  0  |  119  |  [126,83,126,158,126]  |
  1333  |              resetPlaceHolder_2();  |         |   238  |    126  |  0  |  119  |  [126,83,126,158,126]  |
  1339  |                         R = R + 2;  |      2  |   240  |    126  |  0  |  119  |  [126,83,126,158,126]  |
  1343  |                         j = j + 1;  |         |   240  |    126  |  0  |  120  |  [126,83,126,158,126]  |
  1344  |              resetPlaceHolder_2();  |         |   240  |    126  |  0  |  120  |  [126,83,126,158,126]  |
  1350  |                         R = R + 2;  |      2  |   242  |    126  |  0  |  120  |  [126,83,126,158,126]  |
  1354  |                         j = j + 1;  |         |   242  |    126  |  0  |  121  |  [126,83,126,158,126]  |
  1355  |              resetPlaceHolder_2();  |         |   242  |    126  |  0  |  121  |  [126,83,126,158,126]  |
  1361  |                         R = R + 2;  |      2  |   244  |    126  |  0  |  121  |  [126,83,126,158,126]  |
  1365  |                         j = j + 1;  |         |   244  |    126  |  0  |  122  |  [126,83,126,158,126]  |
  1366  |              resetPlaceHolder_2();  |         |   244  |    126  |  0  |  122  |  [126,83,126,158,126]  |
  1372  |                         R = R + 2;  |      2  |   246  |    126  |  0  |  122  |  [126,83,126,158,126]  |
  1376  |                         j = j + 1;  |         |   246  |    126  |  0  |  123  |  [126,83,126,158,126]  |
  1377  |              resetPlaceHolder_2();  |         |   246  |    126  |  0  |  123  |  [126,83,126,158,126]  |
  1383  |                         R = R + 2;  |      2  |   248  |    126  |  0  |  123  |  [126,83,126,158,126]  |
  1387  |                         j = j + 1;  |         |   248  |    126  |  0  |  124  |  [126,83,126,158,126]  |
  1388  |              resetPlaceHolder_2();  |         |   248  |    126  |  0  |  124  |  [126,83,126,158,126]  |
  1394  |                         R = R + 2;  |      2  |   250  |    126  |  0  |  124  |  [126,83,126,158,126]  |
  1398  |                         j = j + 1;  |         |   250  |    126  |  0  |  125  |  [126,83,126,158,126]  |
  1399  |              resetPlaceHolder_2();  |         |   250  |    126  |  0  |  125  |  [126,83,126,158,126]  |
  1405  |                         R = R + 2;  |      2  |   252  |    126  |  0  |  125  |  [126,83,126,158,126]  |
  1409  |                         j = j + 1;  |         |   252  |    126  |  0  |  126  |  [126,83,126,158,126]  |
  1410  |              resetPlaceHolder_2();  |         |   252  |    126  |  0  |  126  |  [126,83,126,158,126]  |
  1416  |                         R = R + 1;  |      1  |   253  |    126  |  0  |  126  |  [126,83,126,158,126]  |
  1420  |                         i = i + 1;  |         |   253  |    126  |  1  |  126  |  [126,83,126,158,126]  |
  1421  |              resetPlaceHolder_1();  |         |   253  |    126  |  1  |  126  |  [126,83,126,158,126]  |
  1427  |      entry = arrayRead(sorted, i);  |         |   253  |     83  |  1  |  126  |  [126,83,126,158,126]  |
  1429  |                         int j = 0;  |         |   253  |     83  |  1  |    0  |  [126,83,126,158,126]  |
  1435  |                         R = R + 2;  |      2  |   255  |     83  |  1  |    0  |  [126,83,126,158,126]  |
  1439  |                         j = j + 1;  |         |   255  |     83  |  1  |    1  |  [126,83,126,158,126]  |
  1440  |              resetPlaceHolder_2();  |         |   255  |     83  |  1  |    1  |  [126,83,126,158,126]  |
  1446  |                         R = R + 2;  |      2  |   257  |     83  |  1  |    1  |  [126,83,126,158,126]  |
  1450  |                         j = j + 1;  |         |   257  |     83  |  1  |    2  |  [126,83,126,158,126]  |
  1451  |              resetPlaceHolder_2();  |         |   257  |     83  |  1  |    2  |  [126,83,126,158,126]  |
  1457  |                         R = R + 2;  |      2  |   259  |     83  |  1  |    2  |  [126,83,126,158,126]  |
  1461  |                         j = j + 1;  |         |   259  |     83  |  1  |    3  |  [126,83,126,158,126]  |
  1462  |              resetPlaceHolder_2();  |         |   259  |     83  |  1  |    3  |  [126,83,126,158,126]  |
  1468  |                         R = R + 2;  |      2  |   261  |     83  |  1  |    3  |  [126,83,126,158,126]  |
  1472  |                         j = j + 1;  |         |   261  |     83  |  1  |    4  |  [126,83,126,158,126]  |
  1473  |              resetPlaceHolder_2();  |         |   261  |     83  |  1  |    4  |  [126,83,126,158,126]  |
  1479  |                         R = R + 2;  |      2  |   263  |     83  |  1  |    4  |  [126,83,126,158,126]  |
  1483  |                         j = j + 1;  |         |   263  |     83  |  1  |    5  |  [126,83,126,158,126]  |
  1484  |              resetPlaceHolder_2();  |         |   263  |     83  |  1  |    5  |  [126,83,126,158,126]  |
  1490  |                         R = R + 2;  |      2  |   265  |     83  |  1  |    5  |  [126,83,126,158,126]  |
  1494  |                         j = j + 1;  |         |   265  |     83  |  1  |    6  |  [126,83,126,158,126]  |
  1495  |              resetPlaceHolder_2();  |         |   265  |     83  |  1  |    6  |  [126,83,126,158,126]  |
  1501  |                         R = R + 2;  |      2  |   267  |     83  |  1  |    6  |  [126,83,126,158,126]  |
  1505  |                         j = j + 1;  |         |   267  |     83  |  1  |    7  |  [126,83,126,158,126]  |
  1506  |              resetPlaceHolder_2();  |         |   267  |     83  |  1  |    7  |  [126,83,126,158,126]  |
  1512  |                         R = R + 2;  |      2  |   269  |     83  |  1  |    7  |  [126,83,126,158,126]  |
  1516  |                         j = j + 1;  |         |   269  |     83  |  1  |    8  |  [126,83,126,158,126]  |
  1517  |              resetPlaceHolder_2();  |         |   269  |     83  |  1  |    8  |  [126,83,126,158,126]  |
  1523  |                         R = R + 2;  |      2  |   271  |     83  |  1  |    8  |  [126,83,126,158,126]  |
  1527  |                         j = j + 1;  |         |   271  |     83  |  1  |    9  |  [126,83,126,158,126]  |
  1528  |              resetPlaceHolder_2();  |         |   271  |     83  |  1  |    9  |  [126,83,126,158,126]  |
  1534  |                         R = R + 2;  |      2  |   273  |     83  |  1  |    9  |  [126,83,126,158,126]  |
  1538  |                         j = j + 1;  |         |   273  |     83  |  1  |   10  |  [126,83,126,158,126]  |
  1539  |              resetPlaceHolder_2();  |         |   273  |     83  |  1  |   10  |  [126,83,126,158,126]  |
  1545  |                         R = R + 2;  |      2  |   275  |     83  |  1  |   10  |  [126,83,126,158,126]  |
  1549  |                         j = j + 1;  |         |   275  |     83  |  1  |   11  |  [126,83,126,158,126]  |
  1550  |              resetPlaceHolder_2();  |         |   275  |     83  |  1  |   11  |  [126,83,126,158,126]  |
  1556  |                         R = R + 2;  |      2  |   277  |     83  |  1  |   11  |  [126,83,126,158,126]  |
  1560  |                         j = j + 1;  |         |   277  |     83  |  1  |   12  |  [126,83,126,158,126]  |
  1561  |              resetPlaceHolder_2();  |         |   277  |     83  |  1  |   12  |  [126,83,126,158,126]  |
  1567  |                         R = R + 2;  |      2  |   279  |     83  |  1  |   12  |  [126,83,126,158,126]  |
  1571  |                         j = j + 1;  |         |   279  |     83  |  1  |   13  |  [126,83,126,158,126]  |
  1572  |              resetPlaceHolder_2();  |         |   279  |     83  |  1  |   13  |  [126,83,126,158,126]  |
  1578  |                         R = R + 2;  |      2  |   281  |     83  |  1  |   13  |  [126,83,126,158,126]  |
  1582  |                         j = j + 1;  |         |   281  |     83  |  1  |   14  |  [126,83,126,158,126]  |
  1583  |              resetPlaceHolder_2();  |         |   281  |     83  |  1  |   14  |  [126,83,126,158,126]  |
  1589  |                         R = R + 2;  |      2  |   283  |     83  |  1  |   14  |  [126,83,126,158,126]  |
  1593  |                         j = j + 1;  |         |   283  |     83  |  1  |   15  |  [126,83,126,158,126]  |
  1594  |              resetPlaceHolder_2();  |         |   283  |     83  |  1  |   15  |  [126,83,126,158,126]  |
  1600  |                         R = R + 2;  |      2  |   285  |     83  |  1  |   15  |  [126,83,126,158,126]  |
  1604  |                         j = j + 1;  |         |   285  |     83  |  1  |   16  |  [126,83,126,158,126]  |
  1605  |              resetPlaceHolder_2();  |         |   285  |     83  |  1  |   16  |  [126,83,126,158,126]  |
  1611  |                         R = R + 2;  |      2  |   287  |     83  |  1  |   16  |  [126,83,126,158,126]  |
  1615  |                         j = j + 1;  |         |   287  |     83  |  1  |   17  |  [126,83,126,158,126]  |
  1616  |              resetPlaceHolder_2();  |         |   287  |     83  |  1  |   17  |  [126,83,126,158,126]  |
  1622  |                         R = R + 2;  |      2  |   289  |     83  |  1  |   17  |  [126,83,126,158,126]  |
  1626  |                         j = j + 1;  |         |   289  |     83  |  1  |   18  |  [126,83,126,158,126]  |
  1627  |              resetPlaceHolder_2();  |         |   289  |     83  |  1  |   18  |  [126,83,126,158,126]  |
  1633  |                         R = R + 2;  |      2  |   291  |     83  |  1  |   18  |  [126,83,126,158,126]  |
  1637  |                         j = j + 1;  |         |   291  |     83  |  1  |   19  |  [126,83,126,158,126]  |
  1638  |              resetPlaceHolder_2();  |         |   291  |     83  |  1  |   19  |  [126,83,126,158,126]  |
  1644  |                         R = R + 2;  |      2  |   293  |     83  |  1  |   19  |  [126,83,126,158,126]  |
  1648  |                         j = j + 1;  |         |   293  |     83  |  1  |   20  |  [126,83,126,158,126]  |
  1649  |              resetPlaceHolder_2();  |         |   293  |     83  |  1  |   20  |  [126,83,126,158,126]  |
  1655  |                         R = R + 2;  |      2  |   295  |     83  |  1  |   20  |  [126,83,126,158,126]  |
  1659  |                         j = j + 1;  |         |   295  |     83  |  1  |   21  |  [126,83,126,158,126]  |
  1660  |              resetPlaceHolder_2();  |         |   295  |     83  |  1  |   21  |  [126,83,126,158,126]  |
  1666  |                         R = R + 2;  |      2  |   297  |     83  |  1  |   21  |  [126,83,126,158,126]  |
  1670  |                         j = j + 1;  |         |   297  |     83  |  1  |   22  |  [126,83,126,158,126]  |
  1671  |              resetPlaceHolder_2();  |         |   297  |     83  |  1  |   22  |  [126,83,126,158,126]  |
  1677  |                         R = R + 2;  |      2  |   299  |     83  |  1  |   22  |  [126,83,126,158,126]  |
  1681  |                         j = j + 1;  |         |   299  |     83  |  1  |   23  |  [126,83,126,158,126]  |
  1682  |              resetPlaceHolder_2();  |         |   299  |     83  |  1  |   23  |  [126,83,126,158,126]  |
  1688  |                         R = R + 2;  |      2  |   301  |     83  |  1  |   23  |  [126,83,126,158,126]  |
  1692  |                         j = j + 1;  |         |   301  |     83  |  1  |   24  |  [126,83,126,158,126]  |
  1693  |              resetPlaceHolder_2();  |         |   301  |     83  |  1  |   24  |  [126,83,126,158,126]  |
  1699  |                         R = R + 2;  |      2  |   303  |     83  |  1  |   24  |  [126,83,126,158,126]  |
  1703  |                         j = j + 1;  |         |   303  |     83  |  1  |   25  |  [126,83,126,158,126]  |
  1704  |              resetPlaceHolder_2();  |         |   303  |     83  |  1  |   25  |  [126,83,126,158,126]  |
  1710  |                         R = R + 2;  |      2  |   305  |     83  |  1  |   25  |  [126,83,126,158,126]  |
  1714  |                         j = j + 1;  |         |   305  |     83  |  1  |   26  |  [126,83,126,158,126]  |
  1715  |              resetPlaceHolder_2();  |         |   305  |     83  |  1  |   26  |  [126,83,126,158,126]  |
  1721  |                         R = R + 2;  |      2  |   307  |     83  |  1  |   26  |  [126,83,126,158,126]  |
  1725  |                         j = j + 1;  |         |   307  |     83  |  1  |   27  |  [126,83,126,158,126]  |
  1726  |              resetPlaceHolder_2();  |         |   307  |     83  |  1  |   27  |  [126,83,126,158,126]  |
  1732  |                         R = R + 2;  |      2  |   309  |     83  |  1  |   27  |  [126,83,126,158,126]  |
  1736  |                         j = j + 1;  |         |   309  |     83  |  1  |   28  |  [126,83,126,158,126]  |
  1737  |              resetPlaceHolder_2();  |         |   309  |     83  |  1  |   28  |  [126,83,126,158,126]  |
  1743  |                         R = R + 2;  |      2  |   311  |     83  |  1  |   28  |  [126,83,126,158,126]  |
  1747  |                         j = j + 1;  |         |   311  |     83  |  1  |   29  |  [126,83,126,158,126]  |
  1748  |              resetPlaceHolder_2();  |         |   311  |     83  |  1  |   29  |  [126,83,126,158,126]  |
  1754  |                         R = R + 2;  |      2  |   313  |     83  |  1  |   29  |  [126,83,126,158,126]  |
  1758  |                         j = j + 1;  |         |   313  |     83  |  1  |   30  |  [126,83,126,158,126]  |
  1759  |              resetPlaceHolder_2();  |         |   313  |     83  |  1  |   30  |  [126,83,126,158,126]  |
  1765  |                         R = R + 2;  |      2  |   315  |     83  |  1  |   30  |  [126,83,126,158,126]  |
  1769  |                         j = j + 1;  |         |   315  |     83  |  1  |   31  |  [126,83,126,158,126]  |
  1770  |              resetPlaceHolder_2();  |         |   315  |     83  |  1  |   31  |  [126,83,126,158,126]  |
  1776  |                         R = R + 2;  |      2  |   317  |     83  |  1  |   31  |  [126,83,126,158,126]  |
  1780  |                         j = j + 1;  |         |   317  |     83  |  1  |   32  |  [126,83,126,158,126]  |
  1781  |              resetPlaceHolder_2();  |         |   317  |     83  |  1  |   32  |  [126,83,126,158,126]  |
  1787  |                         R = R + 2;  |      2  |   319  |     83  |  1  |   32  |  [126,83,126,158,126]  |
  1791  |                         j = j + 1;  |         |   319  |     83  |  1  |   33  |  [126,83,126,158,126]  |
  1792  |              resetPlaceHolder_2();  |         |   319  |     83  |  1  |   33  |  [126,83,126,158,126]  |
  1798  |                         R = R + 2;  |      2  |   321  |     83  |  1  |   33  |  [126,83,126,158,126]  |
  1802  |                         j = j + 1;  |         |   321  |     83  |  1  |   34  |  [126,83,126,158,126]  |
  1803  |              resetPlaceHolder_2();  |         |   321  |     83  |  1  |   34  |  [126,83,126,158,126]  |
  1809  |                         R = R + 2;  |      2  |   323  |     83  |  1  |   34  |  [126,83,126,158,126]  |
  1813  |                         j = j + 1;  |         |   323  |     83  |  1  |   35  |  [126,83,126,158,126]  |
  1814  |              resetPlaceHolder_2();  |         |   323  |     83  |  1  |   35  |  [126,83,126,158,126]  |
  1820  |                         R = R + 2;  |      2  |   325  |     83  |  1  |   35  |  [126,83,126,158,126]  |
  1824  |                         j = j + 1;  |         |   325  |     83  |  1  |   36  |  [126,83,126,158,126]  |
  1825  |              resetPlaceHolder_2();  |         |   325  |     83  |  1  |   36  |  [126,83,126,158,126]  |
  1831  |                         R = R + 2;  |      2  |   327  |     83  |  1  |   36  |  [126,83,126,158,126]  |
  1835  |                         j = j + 1;  |         |   327  |     83  |  1  |   37  |  [126,83,126,158,126]  |
  1836  |              resetPlaceHolder_2();  |         |   327  |     83  |  1  |   37  |  [126,83,126,158,126]  |
  1842  |                         R = R + 2;  |      2  |   329  |     83  |  1  |   37  |  [126,83,126,158,126]  |
  1846  |                         j = j + 1;  |         |   329  |     83  |  1  |   38  |  [126,83,126,158,126]  |
  1847  |              resetPlaceHolder_2();  |         |   329  |     83  |  1  |   38  |  [126,83,126,158,126]  |
  1853  |                         R = R + 2;  |      2  |   331  |     83  |  1  |   38  |  [126,83,126,158,126]  |
  1857  |                         j = j + 1;  |         |   331  |     83  |  1  |   39  |  [126,83,126,158,126]  |
  1858  |              resetPlaceHolder_2();  |         |   331  |     83  |  1  |   39  |  [126,83,126,158,126]  |
  1864  |                         R = R + 2;  |      2  |   333  |     83  |  1  |   39  |  [126,83,126,158,126]  |
  1868  |                         j = j + 1;  |         |   333  |     83  |  1  |   40  |  [126,83,126,158,126]  |
  1869  |              resetPlaceHolder_2();  |         |   333  |     83  |  1  |   40  |  [126,83,126,158,126]  |
  1875  |                         R = R + 2;  |      2  |   335  |     83  |  1  |   40  |  [126,83,126,158,126]  |
  1879  |                         j = j + 1;  |         |   335  |     83  |  1  |   41  |  [126,83,126,158,126]  |
  1880  |              resetPlaceHolder_2();  |         |   335  |     83  |  1  |   41  |  [126,83,126,158,126]  |
  1886  |                         R = R + 2;  |      2  |   337  |     83  |  1  |   41  |  [126,83,126,158,126]  |
  1890  |                         j = j + 1;  |         |   337  |     83  |  1  |   42  |  [126,83,126,158,126]  |
  1891  |              resetPlaceHolder_2();  |         |   337  |     83  |  1  |   42  |  [126,83,126,158,126]  |
  1897  |                         R = R + 2;  |      2  |   339  |     83  |  1  |   42  |  [126,83,126,158,126]  |
  1901  |                         j = j + 1;  |         |   339  |     83  |  1  |   43  |  [126,83,126,158,126]  |
  1902  |              resetPlaceHolder_2();  |         |   339  |     83  |  1  |   43  |  [126,83,126,158,126]  |
  1908  |                         R = R + 2;  |      2  |   341  |     83  |  1  |   43  |  [126,83,126,158,126]  |
  1912  |                         j = j + 1;  |         |   341  |     83  |  1  |   44  |  [126,83,126,158,126]  |
  1913  |              resetPlaceHolder_2();  |         |   341  |     83  |  1  |   44  |  [126,83,126,158,126]  |
  1919  |                         R = R + 2;  |      2  |   343  |     83  |  1  |   44  |  [126,83,126,158,126]  |
  1923  |                         j = j + 1;  |         |   343  |     83  |  1  |   45  |  [126,83,126,158,126]  |
  1924  |              resetPlaceHolder_2();  |         |   343  |     83  |  1  |   45  |  [126,83,126,158,126]  |
  1930  |                         R = R + 2;  |      2  |   345  |     83  |  1  |   45  |  [126,83,126,158,126]  |
  1934  |                         j = j + 1;  |         |   345  |     83  |  1  |   46  |  [126,83,126,158,126]  |
  1935  |              resetPlaceHolder_2();  |         |   345  |     83  |  1  |   46  |  [126,83,126,158,126]  |
  1941  |                         R = R + 2;  |      2  |   347  |     83  |  1  |   46  |  [126,83,126,158,126]  |
  1945  |                         j = j + 1;  |         |   347  |     83  |  1  |   47  |  [126,83,126,158,126]  |
  1946  |              resetPlaceHolder_2();  |         |   347  |     83  |  1  |   47  |  [126,83,126,158,126]  |
  1952  |                         R = R + 2;  |      2  |   349  |     83  |  1  |   47  |  [126,83,126,158,126]  |
  1956  |                         j = j + 1;  |         |   349  |     83  |  1  |   48  |  [126,83,126,158,126]  |
  1957  |              resetPlaceHolder_2();  |         |   349  |     83  |  1  |   48  |  [126,83,126,158,126]  |
  1963  |                         R = R + 2;  |      2  |   351  |     83  |  1  |   48  |  [126,83,126,158,126]  |
  1967  |                         j = j + 1;  |         |   351  |     83  |  1  |   49  |  [126,83,126,158,126]  |
  1968  |              resetPlaceHolder_2();  |         |   351  |     83  |  1  |   49  |  [126,83,126,158,126]  |
  1974  |                         R = R + 2;  |      2  |   353  |     83  |  1  |   49  |  [126,83,126,158,126]  |
  1978  |                         j = j + 1;  |         |   353  |     83  |  1  |   50  |  [126,83,126,158,126]  |
  1979  |              resetPlaceHolder_2();  |         |   353  |     83  |  1  |   50  |  [126,83,126,158,126]  |
  1985  |                         R = R + 2;  |      2  |   355  |     83  |  1  |   50  |  [126,83,126,158,126]  |
  1989  |                         j = j + 1;  |         |   355  |     83  |  1  |   51  |  [126,83,126,158,126]  |
  1990  |              resetPlaceHolder_2();  |         |   355  |     83  |  1  |   51  |  [126,83,126,158,126]  |
  1996  |                         R = R + 2;  |      2  |   357  |     83  |  1  |   51  |  [126,83,126,158,126]  |
  2000  |                         j = j + 1;  |         |   357  |     83  |  1  |   52  |  [126,83,126,158,126]  |
  2001  |              resetPlaceHolder_2();  |         |   357  |     83  |  1  |   52  |  [126,83,126,158,126]  |
  2007  |                         R = R + 2;  |      2  |   359  |     83  |  1  |   52  |  [126,83,126,158,126]  |
  2011  |                         j = j + 1;  |         |   359  |     83  |  1  |   53  |  [126,83,126,158,126]  |
  2012  |              resetPlaceHolder_2();  |         |   359  |     83  |  1  |   53  |  [126,83,126,158,126]  |
  2018  |                         R = R + 2;  |      2  |   361  |     83  |  1  |   53  |  [126,83,126,158,126]  |
  2022  |                         j = j + 1;  |         |   361  |     83  |  1  |   54  |  [126,83,126,158,126]  |
  2023  |              resetPlaceHolder_2();  |         |   361  |     83  |  1  |   54  |  [126,83,126,158,126]  |
  2029  |                         R = R + 2;  |      2  |   363  |     83  |  1  |   54  |  [126,83,126,158,126]  |
  2033  |                         j = j + 1;  |         |   363  |     83  |  1  |   55  |  [126,83,126,158,126]  |
  2034  |              resetPlaceHolder_2();  |         |   363  |     83  |  1  |   55  |  [126,83,126,158,126]  |
  2040  |                         R = R + 2;  |      2  |   365  |     83  |  1  |   55  |  [126,83,126,158,126]  |
  2044  |                         j = j + 1;  |         |   365  |     83  |  1  |   56  |  [126,83,126,158,126]  |
  2045  |              resetPlaceHolder_2();  |         |   365  |     83  |  1  |   56  |  [126,83,126,158,126]  |
  2051  |                         R = R + 2;  |      2  |   367  |     83  |  1  |   56  |  [126,83,126,158,126]  |
  2055  |                         j = j + 1;  |         |   367  |     83  |  1  |   57  |  [126,83,126,158,126]  |
  2056  |              resetPlaceHolder_2();  |         |   367  |     83  |  1  |   57  |  [126,83,126,158,126]  |
  2062  |                         R = R + 2;  |      2  |   369  |     83  |  1  |   57  |  [126,83,126,158,126]  |
  2066  |                         j = j + 1;  |         |   369  |     83  |  1  |   58  |  [126,83,126,158,126]  |
  2067  |              resetPlaceHolder_2();  |         |   369  |     83  |  1  |   58  |  [126,83,126,158,126]  |
  2073  |                         R = R + 2;  |      2  |   371  |     83  |  1  |   58  |  [126,83,126,158,126]  |
  2077  |                         j = j + 1;  |         |   371  |     83  |  1  |   59  |  [126,83,126,158,126]  |
  2078  |              resetPlaceHolder_2();  |         |   371  |     83  |  1  |   59  |  [126,83,126,158,126]  |
  2084  |                         R = R + 2;  |      2  |   373  |     83  |  1  |   59  |  [126,83,126,158,126]  |
  2088  |                         j = j + 1;  |         |   373  |     83  |  1  |   60  |  [126,83,126,158,126]  |
  2089  |              resetPlaceHolder_2();  |         |   373  |     83  |  1  |   60  |  [126,83,126,158,126]  |
  2095  |                         R = R + 2;  |      2  |   375  |     83  |  1  |   60  |  [126,83,126,158,126]  |
  2099  |                         j = j + 1;  |         |   375  |     83  |  1  |   61  |  [126,83,126,158,126]  |
  2100  |              resetPlaceHolder_2();  |         |   375  |     83  |  1  |   61  |  [126,83,126,158,126]  |
  2106  |                         R = R + 2;  |      2  |   377  |     83  |  1  |   61  |  [126,83,126,158,126]  |
  2110  |                         j = j + 1;  |         |   377  |     83  |  1  |   62  |  [126,83,126,158,126]  |
  2111  |              resetPlaceHolder_2();  |         |   377  |     83  |  1  |   62  |  [126,83,126,158,126]  |
  2117  |                         R = R + 2;  |      2  |   379  |     83  |  1  |   62  |  [126,83,126,158,126]  |
  2121  |                         j = j + 1;  |         |   379  |     83  |  1  |   63  |  [126,83,126,158,126]  |
  2122  |              resetPlaceHolder_2();  |         |   379  |     83  |  1  |   63  |  [126,83,126,158,126]  |
  2128  |                         R = R + 2;  |      2  |   381  |     83  |  1  |   63  |  [126,83,126,158,126]  |
  2132  |                         j = j + 1;  |         |   381  |     83  |  1  |   64  |  [126,83,126,158,126]  |
  2133  |              resetPlaceHolder_2();  |         |   381  |     83  |  1  |   64  |  [126,83,126,158,126]  |
  2139  |                         R = R + 2;  |      2  |   383  |     83  |  1  |   64  |  [126,83,126,158,126]  |
  2143  |                         j = j + 1;  |         |   383  |     83  |  1  |   65  |  [126,83,126,158,126]  |
  2144  |              resetPlaceHolder_2();  |         |   383  |     83  |  1  |   65  |  [126,83,126,158,126]  |
  2150  |                         R = R + 2;  |      2  |   385  |     83  |  1  |   65  |  [126,83,126,158,126]  |
  2154  |                         j = j + 1;  |         |   385  |     83  |  1  |   66  |  [126,83,126,158,126]  |
  2155  |              resetPlaceHolder_2();  |         |   385  |     83  |  1  |   66  |  [126,83,126,158,126]  |
  2161  |                         R = R + 2;  |      2  |   387  |     83  |  1  |   66  |  [126,83,126,158,126]  |
  2165  |                         j = j + 1;  |         |   387  |     83  |  1  |   67  |  [126,83,126,158,126]  |
  2166  |              resetPlaceHolder_2();  |         |   387  |     83  |  1  |   67  |  [126,83,126,158,126]  |
  2172  |                         R = R + 2;  |      2  |   389  |     83  |  1  |   67  |  [126,83,126,158,126]  |
  2176  |                         j = j + 1;  |         |   389  |     83  |  1  |   68  |  [126,83,126,158,126]  |
  2177  |              resetPlaceHolder_2();  |         |   389  |     83  |  1  |   68  |  [126,83,126,158,126]  |
  2183  |                         R = R + 2;  |      2  |   391  |     83  |  1  |   68  |  [126,83,126,158,126]  |
  2187  |                         j = j + 1;  |         |   391  |     83  |  1  |   69  |  [126,83,126,158,126]  |
  2188  |              resetPlaceHolder_2();  |         |   391  |     83  |  1  |   69  |  [126,83,126,158,126]  |
  2194  |                         R = R + 2;  |      2  |   393  |     83  |  1  |   69  |  [126,83,126,158,126]  |
  2198  |                         j = j + 1;  |         |   393  |     83  |  1  |   70  |  [126,83,126,158,126]  |
  2199  |              resetPlaceHolder_2();  |         |   393  |     83  |  1  |   70  |  [126,83,126,158,126]  |
  2205  |                         R = R + 2;  |      2  |   395  |     83  |  1  |   70  |  [126,83,126,158,126]  |
  2209  |                         j = j + 1;  |         |   395  |     83  |  1  |   71  |  [126,83,126,158,126]  |
  2210  |              resetPlaceHolder_2();  |         |   395  |     83  |  1  |   71  |  [126,83,126,158,126]  |
  2216  |                         R = R + 2;  |      2  |   397  |     83  |  1  |   71  |  [126,83,126,158,126]  |
  2220  |                         j = j + 1;  |         |   397  |     83  |  1  |   72  |  [126,83,126,158,126]  |
  2221  |              resetPlaceHolder_2();  |         |   397  |     83  |  1  |   72  |  [126,83,126,158,126]  |
  2227  |                         R = R + 2;  |      2  |   399  |     83  |  1  |   72  |  [126,83,126,158,126]  |
  2231  |                         j = j + 1;  |         |   399  |     83  |  1  |   73  |  [126,83,126,158,126]  |
  2232  |              resetPlaceHolder_2();  |         |   399  |     83  |  1  |   73  |  [126,83,126,158,126]  |
  2238  |                         R = R + 2;  |      2  |   401  |     83  |  1  |   73  |  [126,83,126,158,126]  |
  2242  |                         j = j + 1;  |         |   401  |     83  |  1  |   74  |  [126,83,126,158,126]  |
  2243  |              resetPlaceHolder_2();  |         |   401  |     83  |  1  |   74  |  [126,83,126,158,126]  |
  2249  |                         R = R + 2;  |      2  |   403  |     83  |  1  |   74  |  [126,83,126,158,126]  |
  2253  |                         j = j + 1;  |         |   403  |     83  |  1  |   75  |  [126,83,126,158,126]  |
  2254  |              resetPlaceHolder_2();  |         |   403  |     83  |  1  |   75  |  [126,83,126,158,126]  |
  2260  |                         R = R + 2;  |      2  |   405  |     83  |  1  |   75  |  [126,83,126,158,126]  |
  2264  |                         j = j + 1;  |         |   405  |     83  |  1  |   76  |  [126,83,126,158,126]  |
  2265  |              resetPlaceHolder_2();  |         |   405  |     83  |  1  |   76  |  [126,83,126,158,126]  |
  2271  |                         R = R + 2;  |      2  |   407  |     83  |  1  |   76  |  [126,83,126,158,126]  |
  2275  |                         j = j + 1;  |         |   407  |     83  |  1  |   77  |  [126,83,126,158,126]  |
  2276  |              resetPlaceHolder_2();  |         |   407  |     83  |  1  |   77  |  [126,83,126,158,126]  |
  2282  |                         R = R + 2;  |      2  |   409  |     83  |  1  |   77  |  [126,83,126,158,126]  |
  2286  |                         j = j + 1;  |         |   409  |     83  |  1  |   78  |  [126,83,126,158,126]  |
  2287  |              resetPlaceHolder_2();  |         |   409  |     83  |  1  |   78  |  [126,83,126,158,126]  |
  2293  |                         R = R + 2;  |      2  |   411  |     83  |  1  |   78  |  [126,83,126,158,126]  |
  2297  |                         j = j + 1;  |         |   411  |     83  |  1  |   79  |  [126,83,126,158,126]  |
  2298  |              resetPlaceHolder_2();  |         |   411  |     83  |  1  |   79  |  [126,83,126,158,126]  |
  2304  |                         R = R + 2;  |      2  |   413  |     83  |  1  |   79  |  [126,83,126,158,126]  |
  2308  |                         j = j + 1;  |         |   413  |     83  |  1  |   80  |  [126,83,126,158,126]  |
  2309  |              resetPlaceHolder_2();  |         |   413  |     83  |  1  |   80  |  [126,83,126,158,126]  |
  2315  |                         R = R + 2;  |      2  |   415  |     83  |  1  |   80  |  [126,83,126,158,126]  |
  2319  |                         j = j + 1;  |         |   415  |     83  |  1  |   81  |  [126,83,126,158,126]  |
  2320  |              resetPlaceHolder_2();  |         |   415  |     83  |  1  |   81  |  [126,83,126,158,126]  |
  2326  |                         R = R + 2;  |      2  |   417  |     83  |  1  |   81  |  [126,83,126,158,126]  |
  2330  |                         j = j + 1;  |         |   417  |     83  |  1  |   82  |  [126,83,126,158,126]  |
  2331  |              resetPlaceHolder_2();  |         |   417  |     83  |  1  |   82  |  [126,83,126,158,126]  |
  2337  |                         R = R + 2;  |      2  |   419  |     83  |  1  |   82  |  [126,83,126,158,126]  |
  2341  |                         j = j + 1;  |         |   419  |     83  |  1  |   83  |  [126,83,126,158,126]  |
  2342  |              resetPlaceHolder_2();  |         |   419  |     83  |  1  |   83  |  [126,83,126,158,126]  |
  2348  |                         R = R + 1;  |      1  |   420  |     83  |  1  |   83  |  [126,83,126,158,126]  |
  2352  |                         i = i + 1;  |         |   420  |     83  |  2  |   83  |  [126,83,126,158,126]  |
  2353  |              resetPlaceHolder_1();  |         |   420  |     83  |  2  |   83  |  [126,83,126,158,126]  |
  2359  |      entry = arrayRead(sorted, i);  |         |   420  |    126  |  2  |   83  |  [126,83,126,158,126]  |
  2361  |                         int j = 0;  |         |   420  |    126  |  2  |    0  |  [126,83,126,158,126]  |
  2367  |                         R = R + 2;  |      2  |   422  |    126  |  2  |    0  |  [126,83,126,158,126]  |
  2371  |                         j = j + 1;  |         |   422  |    126  |  2  |    1  |  [126,83,126,158,126]  |
  2372  |              resetPlaceHolder_2();  |         |   422  |    126  |  2  |    1  |  [126,83,126,158,126]  |
  2378  |                         R = R + 2;  |      2  |   424  |    126  |  2  |    1  |  [126,83,126,158,126]  |
  2382  |                         j = j + 1;  |         |   424  |    126  |  2  |    2  |  [126,83,126,158,126]  |
  2383  |              resetPlaceHolder_2();  |         |   424  |    126  |  2  |    2  |  [126,83,126,158,126]  |
  2389  |                         R = R + 2;  |      2  |   426  |    126  |  2  |    2  |  [126,83,126,158,126]  |
  2393  |                         j = j + 1;  |         |   426  |    126  |  2  |    3  |  [126,83,126,158,126]  |
  2394  |              resetPlaceHolder_2();  |         |   426  |    126  |  2  |    3  |  [126,83,126,158,126]  |
  2400  |                         R = R + 2;  |      2  |   428  |    126  |  2  |    3  |  [126,83,126,158,126]  |
  2404  |                         j = j + 1;  |         |   428  |    126  |  2  |    4  |  [126,83,126,158,126]  |
  2405  |              resetPlaceHolder_2();  |         |   428  |    126  |  2  |    4  |  [126,83,126,158,126]  |
  2411  |                         R = R + 2;  |      2  |   430  |    126  |  2  |    4  |  [126,83,126,158,126]  |
  2415  |                         j = j + 1;  |         |   430  |    126  |  2  |    5  |  [126,83,126,158,126]  |
  2416  |              resetPlaceHolder_2();  |         |   430  |    126  |  2  |    5  |  [126,83,126,158,126]  |
  2422  |                         R = R + 2;  |      2  |   432  |    126  |  2  |    5  |  [126,83,126,158,126]  |
  2426  |                         j = j + 1;  |         |   432  |    126  |  2  |    6  |  [126,83,126,158,126]  |
  2427  |              resetPlaceHolder_2();  |         |   432  |    126  |  2  |    6  |  [126,83,126,158,126]  |
  2433  |                         R = R + 2;  |      2  |   434  |    126  |  2  |    6  |  [126,83,126,158,126]  |
  2437  |                         j = j + 1;  |         |   434  |    126  |  2  |    7  |  [126,83,126,158,126]  |
  2438  |              resetPlaceHolder_2();  |         |   434  |    126  |  2  |    7  |  [126,83,126,158,126]  |
  2444  |                         R = R + 2;  |      2  |   436  |    126  |  2  |    7  |  [126,83,126,158,126]  |
  2448  |                         j = j + 1;  |         |   436  |    126  |  2  |    8  |  [126,83,126,158,126]  |
  2449  |              resetPlaceHolder_2();  |         |   436  |    126  |  2  |    8  |  [126,83,126,158,126]  |
  2455  |                         R = R + 2;  |      2  |   438  |    126  |  2  |    8  |  [126,83,126,158,126]  |
  2459  |                         j = j + 1;  |         |   438  |    126  |  2  |    9  |  [126,83,126,158,126]  |
  2460  |              resetPlaceHolder_2();  |         |   438  |    126  |  2  |    9  |  [126,83,126,158,126]  |
  2466  |                         R = R + 2;  |      2  |   440  |    126  |  2  |    9  |  [126,83,126,158,126]  |
  2470  |                         j = j + 1;  |         |   440  |    126  |  2  |   10  |  [126,83,126,158,126]  |
  2471  |              resetPlaceHolder_2();  |         |   440  |    126  |  2  |   10  |  [126,83,126,158,126]  |
  2477  |                         R = R + 2;  |      2  |   442  |    126  |  2  |   10  |  [126,83,126,158,126]  |
  2481  |                         j = j + 1;  |         |   442  |    126  |  2  |   11  |  [126,83,126,158,126]  |
  2482  |              resetPlaceHolder_2();  |         |   442  |    126  |  2  |   11  |  [126,83,126,158,126]  |
  2488  |                         R = R + 2;  |      2  |   444  |    126  |  2  |   11  |  [126,83,126,158,126]  |
  2492  |                         j = j + 1;  |         |   444  |    126  |  2  |   12  |  [126,83,126,158,126]  |
  2493  |              resetPlaceHolder_2();  |         |   444  |    126  |  2  |   12  |  [126,83,126,158,126]  |
  2499  |                         R = R + 2;  |      2  |   446  |    126  |  2  |   12  |  [126,83,126,158,126]  |
  2503  |                         j = j + 1;  |         |   446  |    126  |  2  |   13  |  [126,83,126,158,126]  |
  2504  |              resetPlaceHolder_2();  |         |   446  |    126  |  2  |   13  |  [126,83,126,158,126]  |
  2510  |                         R = R + 2;  |      2  |   448  |    126  |  2  |   13  |  [126,83,126,158,126]  |
  2514  |                         j = j + 1;  |         |   448  |    126  |  2  |   14  |  [126,83,126,158,126]  |
  2515  |              resetPlaceHolder_2();  |         |   448  |    126  |  2  |   14  |  [126,83,126,158,126]  |
  2521  |                         R = R + 2;  |      2  |   450  |    126  |  2  |   14  |  [126,83,126,158,126]  |
  2525  |                         j = j + 1;  |         |   450  |    126  |  2  |   15  |  [126,83,126,158,126]  |
  2526  |              resetPlaceHolder_2();  |         |   450  |    126  |  2  |   15  |  [126,83,126,158,126]  |
  2532  |                         R = R + 2;  |      2  |   452  |    126  |  2  |   15  |  [126,83,126,158,126]  |
  2536  |                         j = j + 1;  |         |   452  |    126  |  2  |   16  |  [126,83,126,158,126]  |
  2537  |              resetPlaceHolder_2();  |         |   452  |    126  |  2  |   16  |  [126,83,126,158,126]  |
  2543  |                         R = R + 2;  |      2  |   454  |    126  |  2  |   16  |  [126,83,126,158,126]  |
  2547  |                         j = j + 1;  |         |   454  |    126  |  2  |   17  |  [126,83,126,158,126]  |
  2548  |              resetPlaceHolder_2();  |         |   454  |    126  |  2  |   17  |  [126,83,126,158,126]  |
  2554  |                         R = R + 2;  |      2  |   456  |    126  |  2  |   17  |  [126,83,126,158,126]  |
  2558  |                         j = j + 1;  |         |   456  |    126  |  2  |   18  |  [126,83,126,158,126]  |
  2559  |              resetPlaceHolder_2();  |         |   456  |    126  |  2  |   18  |  [126,83,126,158,126]  |
  2565  |                         R = R + 2;  |      2  |   458  |    126  |  2  |   18  |  [126,83,126,158,126]  |
  2569  |                         j = j + 1;  |         |   458  |    126  |  2  |   19  |  [126,83,126,158,126]  |
  2570  |              resetPlaceHolder_2();  |         |   458  |    126  |  2  |   19  |  [126,83,126,158,126]  |
  2576  |                         R = R + 2;  |      2  |   460  |    126  |  2  |   19  |  [126,83,126,158,126]  |
  2580  |                         j = j + 1;  |         |   460  |    126  |  2  |   20  |  [126,83,126,158,126]  |
  2581  |              resetPlaceHolder_2();  |         |   460  |    126  |  2  |   20  |  [126,83,126,158,126]  |
  2587  |                         R = R + 2;  |      2  |   462  |    126  |  2  |   20  |  [126,83,126,158,126]  |
  2591  |                         j = j + 1;  |         |   462  |    126  |  2  |   21  |  [126,83,126,158,126]  |
  2592  |              resetPlaceHolder_2();  |         |   462  |    126  |  2  |   21  |  [126,83,126,158,126]  |
  2598  |                         R = R + 2;  |      2  |   464  |    126  |  2  |   21  |  [126,83,126,158,126]  |
  2602  |                         j = j + 1;  |         |   464  |    126  |  2  |   22  |  [126,83,126,158,126]  |
  2603  |              resetPlaceHolder_2();  |         |   464  |    126  |  2  |   22  |  [126,83,126,158,126]  |
  2609  |                         R = R + 2;  |      2  |   466  |    126  |  2  |   22  |  [126,83,126,158,126]  |
  2613  |                         j = j + 1;  |         |   466  |    126  |  2  |   23  |  [126,83,126,158,126]  |
  2614  |              resetPlaceHolder_2();  |         |   466  |    126  |  2  |   23  |  [126,83,126,158,126]  |
  2620  |                         R = R + 2;  |      2  |   468  |    126  |  2  |   23  |  [126,83,126,158,126]  |
  2624  |                         j = j + 1;  |         |   468  |    126  |  2  |   24  |  [126,83,126,158,126]  |
  2625  |              resetPlaceHolder_2();  |         |   468  |    126  |  2  |   24  |  [126,83,126,158,126]  |
  2631  |                         R = R + 2;  |      2  |   470  |    126  |  2  |   24  |  [126,83,126,158,126]  |
  2635  |                         j = j + 1;  |         |   470  |    126  |  2  |   25  |  [126,83,126,158,126]  |
  2636  |              resetPlaceHolder_2();  |         |   470  |    126  |  2  |   25  |  [126,83,126,158,126]  |
  2642  |                         R = R + 2;  |      2  |   472  |    126  |  2  |   25  |  [126,83,126,158,126]  |
  2646  |                         j = j + 1;  |         |   472  |    126  |  2  |   26  |  [126,83,126,158,126]  |
  2647  |              resetPlaceHolder_2();  |         |   472  |    126  |  2  |   26  |  [126,83,126,158,126]  |
  2653  |                         R = R + 2;  |      2  |   474  |    126  |  2  |   26  |  [126,83,126,158,126]  |
  2657  |                         j = j + 1;  |         |   474  |    126  |  2  |   27  |  [126,83,126,158,126]  |
  2658  |              resetPlaceHolder_2();  |         |   474  |    126  |  2  |   27  |  [126,83,126,158,126]  |
  2664  |                         R = R + 2;  |      2  |   476  |    126  |  2  |   27  |  [126,83,126,158,126]  |
  2668  |                         j = j + 1;  |         |   476  |    126  |  2  |   28  |  [126,83,126,158,126]  |
  2669  |              resetPlaceHolder_2();  |         |   476  |    126  |  2  |   28  |  [126,83,126,158,126]  |
  2675  |                         R = R + 2;  |      2  |   478  |    126  |  2  |   28  |  [126,83,126,158,126]  |
  2679  |                         j = j + 1;  |         |   478  |    126  |  2  |   29  |  [126,83,126,158,126]  |
  2680  |              resetPlaceHolder_2();  |         |   478  |    126  |  2  |   29  |  [126,83,126,158,126]  |
  2686  |                         R = R + 2;  |      2  |   480  |    126  |  2  |   29  |  [126,83,126,158,126]  |
  2690  |                         j = j + 1;  |         |   480  |    126  |  2  |   30  |  [126,83,126,158,126]  |
  2691  |              resetPlaceHolder_2();  |         |   480  |    126  |  2  |   30  |  [126,83,126,158,126]  |
  2697  |                         R = R + 2;  |      2  |   482  |    126  |  2  |   30  |  [126,83,126,158,126]  |
  2701  |                         j = j + 1;  |         |   482  |    126  |  2  |   31  |  [126,83,126,158,126]  |
  2702  |              resetPlaceHolder_2();  |         |   482  |    126  |  2  |   31  |  [126,83,126,158,126]  |
  2708  |                         R = R + 2;  |      2  |   484  |    126  |  2  |   31  |  [126,83,126,158,126]  |
  2712  |                         j = j + 1;  |         |   484  |    126  |  2  |   32  |  [126,83,126,158,126]  |
  2713  |              resetPlaceHolder_2();  |         |   484  |    126  |  2  |   32  |  [126,83,126,158,126]  |
  2719  |                         R = R + 2;  |      2  |   486  |    126  |  2  |   32  |  [126,83,126,158,126]  |
  2723  |                         j = j + 1;  |         |   486  |    126  |  2  |   33  |  [126,83,126,158,126]  |
  2724  |              resetPlaceHolder_2();  |         |   486  |    126  |  2  |   33  |  [126,83,126,158,126]  |
  2730  |                         R = R + 2;  |      2  |   488  |    126  |  2  |   33  |  [126,83,126,158,126]  |
  2734  |                         j = j + 1;  |         |   488  |    126  |  2  |   34  |  [126,83,126,158,126]  |
  2735  |              resetPlaceHolder_2();  |         |   488  |    126  |  2  |   34  |  [126,83,126,158,126]  |
  2741  |                         R = R + 2;  |      2  |   490  |    126  |  2  |   34  |  [126,83,126,158,126]  |
  2745  |                         j = j + 1;  |         |   490  |    126  |  2  |   35  |  [126,83,126,158,126]  |
  2746  |              resetPlaceHolder_2();  |         |   490  |    126  |  2  |   35  |  [126,83,126,158,126]  |
  2752  |                         R = R + 2;  |      2  |   492  |    126  |  2  |   35  |  [126,83,126,158,126]  |
  2756  |                         j = j + 1;  |         |   492  |    126  |  2  |   36  |  [126,83,126,158,126]  |
  2757  |              resetPlaceHolder_2();  |         |   492  |    126  |  2  |   36  |  [126,83,126,158,126]  |
  2763  |                         R = R + 2;  |      2  |   494  |    126  |  2  |   36  |  [126,83,126,158,126]  |
  2767  |                         j = j + 1;  |         |   494  |    126  |  2  |   37  |  [126,83,126,158,126]  |
  2768  |              resetPlaceHolder_2();  |         |   494  |    126  |  2  |   37  |  [126,83,126,158,126]  |
  2774  |                         R = R + 2;  |      2  |   496  |    126  |  2  |   37  |  [126,83,126,158,126]  |
  2778  |                         j = j + 1;  |         |   496  |    126  |  2  |   38  |  [126,83,126,158,126]  |
  2779  |              resetPlaceHolder_2();  |         |   496  |    126  |  2  |   38  |  [126,83,126,158,126]  |
  2785  |                         R = R + 2;  |      2  |   498  |    126  |  2  |   38  |  [126,83,126,158,126]  |
  2789  |                         j = j + 1;  |         |   498  |    126  |  2  |   39  |  [126,83,126,158,126]  |
  2790  |              resetPlaceHolder_2();  |         |   498  |    126  |  2  |   39  |  [126,83,126,158,126]  |
  2796  |                         R = R + 2;  |      2  |   500  |    126  |  2  |   39  |  [126,83,126,158,126]  |
  2800  |                         j = j + 1;  |         |   500  |    126  |  2  |   40  |  [126,83,126,158,126]  |
  2801  |              resetPlaceHolder_2();  |         |   500  |    126  |  2  |   40  |  [126,83,126,158,126]  |
  2807  |                         R = R + 2;  |      2  |   502  |    126  |  2  |   40  |  [126,83,126,158,126]  |
  2811  |                         j = j + 1;  |         |   502  |    126  |  2  |   41  |  [126,83,126,158,126]  |
  2812  |              resetPlaceHolder_2();  |         |   502  |    126  |  2  |   41  |  [126,83,126,158,126]  |
  2818  |                         R = R + 2;  |      2  |   504  |    126  |  2  |   41  |  [126,83,126,158,126]  |
  2822  |                         j = j + 1;  |         |   504  |    126  |  2  |   42  |  [126,83,126,158,126]  |
  2823  |              resetPlaceHolder_2();  |         |   504  |    126  |  2  |   42  |  [126,83,126,158,126]  |
  2829  |                         R = R + 2;  |      2  |   506  |    126  |  2  |   42  |  [126,83,126,158,126]  |
  2833  |                         j = j + 1;  |         |   506  |    126  |  2  |   43  |  [126,83,126,158,126]  |
  2834  |              resetPlaceHolder_2();  |         |   506  |    126  |  2  |   43  |  [126,83,126,158,126]  |
  2840  |                         R = R + 2;  |      2  |   508  |    126  |  2  |   43  |  [126,83,126,158,126]  |
  2844  |                         j = j + 1;  |         |   508  |    126  |  2  |   44  |  [126,83,126,158,126]  |
  2845  |              resetPlaceHolder_2();  |         |   508  |    126  |  2  |   44  |  [126,83,126,158,126]  |
  2851  |                         R = R + 2;  |      2  |   510  |    126  |  2  |   44  |  [126,83,126,158,126]  |
  2855  |                         j = j + 1;  |         |   510  |    126  |  2  |   45  |  [126,83,126,158,126]  |
  2856  |              resetPlaceHolder_2();  |         |   510  |    126  |  2  |   45  |  [126,83,126,158,126]  |
  2862  |                         R = R + 2;  |      2  |   512  |    126  |  2  |   45  |  [126,83,126,158,126]  |
  2866  |                         j = j + 1;  |         |   512  |    126  |  2  |   46  |  [126,83,126,158,126]  |
  2867  |              resetPlaceHolder_2();  |         |   512  |    126  |  2  |   46  |  [126,83,126,158,126]  |
  2873  |                         R = R + 2;  |      2  |   514  |    126  |  2  |   46  |  [126,83,126,158,126]  |
  2877  |                         j = j + 1;  |         |   514  |    126  |  2  |   47  |  [126,83,126,158,126]  |
  2878  |              resetPlaceHolder_2();  |         |   514  |    126  |  2  |   47  |  [126,83,126,158,126]  |
  2884  |                         R = R + 2;  |      2  |   516  |    126  |  2  |   47  |  [126,83,126,158,126]  |
  2888  |                         j = j + 1;  |         |   516  |    126  |  2  |   48  |  [126,83,126,158,126]  |
  2889  |              resetPlaceHolder_2();  |         |   516  |    126  |  2  |   48  |  [126,83,126,158,126]  |
  2895  |                         R = R + 2;  |      2  |   518  |    126  |  2  |   48  |  [126,83,126,158,126]  |
  2899  |                         j = j + 1;  |         |   518  |    126  |  2  |   49  |  [126,83,126,158,126]  |
  2900  |              resetPlaceHolder_2();  |         |   518  |    126  |  2  |   49  |  [126,83,126,158,126]  |
  2906  |                         R = R + 2;  |      2  |   520  |    126  |  2  |   49  |  [126,83,126,158,126]  |
  2910  |                         j = j + 1;  |         |   520  |    126  |  2  |   50  |  [126,83,126,158,126]  |
  2911  |              resetPlaceHolder_2();  |         |   520  |    126  |  2  |   50  |  [126,83,126,158,126]  |
  2917  |                         R = R + 2;  |      2  |   522  |    126  |  2  |   50  |  [126,83,126,158,126]  |
  2921  |                         j = j + 1;  |         |   522  |    126  |  2  |   51  |  [126,83,126,158,126]  |
  2922  |              resetPlaceHolder_2();  |         |   522  |    126  |  2  |   51  |  [126,83,126,158,126]  |
  2928  |                         R = R + 2;  |      2  |   524  |    126  |  2  |   51  |  [126,83,126,158,126]  |
  2932  |                         j = j + 1;  |         |   524  |    126  |  2  |   52  |  [126,83,126,158,126]  |
  2933  |              resetPlaceHolder_2();  |         |   524  |    126  |  2  |   52  |  [126,83,126,158,126]  |
  2939  |                         R = R + 2;  |      2  |   526  |    126  |  2  |   52  |  [126,83,126,158,126]  |
  2943  |                         j = j + 1;  |         |   526  |    126  |  2  |   53  |  [126,83,126,158,126]  |
  2944  |              resetPlaceHolder_2();  |         |   526  |    126  |  2  |   53  |  [126,83,126,158,126]  |
  2950  |                         R = R + 2;  |      2  |   528  |    126  |  2  |   53  |  [126,83,126,158,126]  |
  2954  |                         j = j + 1;  |         |   528  |    126  |  2  |   54  |  [126,83,126,158,126]  |
  2955  |              resetPlaceHolder_2();  |         |   528  |    126  |  2  |   54  |  [126,83,126,158,126]  |
  2961  |                         R = R + 2;  |      2  |   530  |    126  |  2  |   54  |  [126,83,126,158,126]  |
  2965  |                         j = j + 1;  |         |   530  |    126  |  2  |   55  |  [126,83,126,158,126]  |
  2966  |              resetPlaceHolder_2();  |         |   530  |    126  |  2  |   55  |  [126,83,126,158,126]  |
  2972  |                         R = R + 2;  |      2  |   532  |    126  |  2  |   55  |  [126,83,126,158,126]  |
  2976  |                         j = j + 1;  |         |   532  |    126  |  2  |   56  |  [126,83,126,158,126]  |
  2977  |              resetPlaceHolder_2();  |         |   532  |    126  |  2  |   56  |  [126,83,126,158,126]  |
  2983  |                         R = R + 2;  |      2  |   534  |    126  |  2  |   56  |  [126,83,126,158,126]  |
  2987  |                         j = j + 1;  |         |   534  |    126  |  2  |   57  |  [126,83,126,158,126]  |
  2988  |              resetPlaceHolder_2();  |         |   534  |    126  |  2  |   57  |  [126,83,126,158,126]  |
  2994  |                         R = R + 2;  |      2  |   536  |    126  |  2  |   57  |  [126,83,126,158,126]  |
  2998  |                         j = j + 1;  |         |   536  |    126  |  2  |   58  |  [126,83,126,158,126]  |
  2999  |              resetPlaceHolder_2();  |         |   536  |    126  |  2  |   58  |  [126,83,126,158,126]  |
  3005  |                         R = R + 2;  |      2  |   538  |    126  |  2  |   58  |  [126,83,126,158,126]  |
  3009  |                         j = j + 1;  |         |   538  |    126  |  2  |   59  |  [126,83,126,158,126]  |
  3010  |              resetPlaceHolder_2();  |         |   538  |    126  |  2  |   59  |  [126,83,126,158,126]  |
  3016  |                         R = R + 2;  |      2  |   540  |    126  |  2  |   59  |  [126,83,126,158,126]  |
  3020  |                         j = j + 1;  |         |   540  |    126  |  2  |   60  |  [126,83,126,158,126]  |
  3021  |              resetPlaceHolder_2();  |         |   540  |    126  |  2  |   60  |  [126,83,126,158,126]  |
  3027  |                         R = R + 2;  |      2  |   542  |    126  |  2  |   60  |  [126,83,126,158,126]  |
  3031  |                         j = j + 1;  |         |   542  |    126  |  2  |   61  |  [126,83,126,158,126]  |
  3032  |              resetPlaceHolder_2();  |         |   542  |    126  |  2  |   61  |  [126,83,126,158,126]  |
  3038  |                         R = R + 2;  |      2  |   544  |    126  |  2  |   61  |  [126,83,126,158,126]  |
  3042  |                         j = j + 1;  |         |   544  |    126  |  2  |   62  |  [126,83,126,158,126]  |
  3043  |              resetPlaceHolder_2();  |         |   544  |    126  |  2  |   62  |  [126,83,126,158,126]  |
  3049  |                         R = R + 2;  |      2  |   546  |    126  |  2  |   62  |  [126,83,126,158,126]  |
  3053  |                         j = j + 1;  |         |   546  |    126  |  2  |   63  |  [126,83,126,158,126]  |
  3054  |              resetPlaceHolder_2();  |         |   546  |    126  |  2  |   63  |  [126,83,126,158,126]  |
  3060  |                         R = R + 2;  |      2  |   548  |    126  |  2  |   63  |  [126,83,126,158,126]  |
  3064  |                         j = j + 1;  |         |   548  |    126  |  2  |   64  |  [126,83,126,158,126]  |
  3065  |              resetPlaceHolder_2();  |         |   548  |    126  |  2  |   64  |  [126,83,126,158,126]  |
  3071  |                         R = R + 2;  |      2  |   550  |    126  |  2  |   64  |  [126,83,126,158,126]  |
  3075  |                         j = j + 1;  |         |   550  |    126  |  2  |   65  |  [126,83,126,158,126]  |
  3076  |              resetPlaceHolder_2();  |         |   550  |    126  |  2  |   65  |  [126,83,126,158,126]  |
  3082  |                         R = R + 2;  |      2  |   552  |    126  |  2  |   65  |  [126,83,126,158,126]  |
  3086  |                         j = j + 1;  |         |   552  |    126  |  2  |   66  |  [126,83,126,158,126]  |
  3087  |              resetPlaceHolder_2();  |         |   552  |    126  |  2  |   66  |  [126,83,126,158,126]  |
  3093  |                         R = R + 2;  |      2  |   554  |    126  |  2  |   66  |  [126,83,126,158,126]  |
  3097  |                         j = j + 1;  |         |   554  |    126  |  2  |   67  |  [126,83,126,158,126]  |
  3098  |              resetPlaceHolder_2();  |         |   554  |    126  |  2  |   67  |  [126,83,126,158,126]  |
  3104  |                         R = R + 2;  |      2  |   556  |    126  |  2  |   67  |  [126,83,126,158,126]  |
  3108  |                         j = j + 1;  |         |   556  |    126  |  2  |   68  |  [126,83,126,158,126]  |
  3109  |              resetPlaceHolder_2();  |         |   556  |    126  |  2  |   68  |  [126,83,126,158,126]  |
  3115  |                         R = R + 2;  |      2  |   558  |    126  |  2  |   68  |  [126,83,126,158,126]  |
  3119  |                         j = j + 1;  |         |   558  |    126  |  2  |   69  |  [126,83,126,158,126]  |
  3120  |              resetPlaceHolder_2();  |         |   558  |    126  |  2  |   69  |  [126,83,126,158,126]  |
  3126  |                         R = R + 2;  |      2  |   560  |    126  |  2  |   69  |  [126,83,126,158,126]  |
  3130  |                         j = j + 1;  |         |   560  |    126  |  2  |   70  |  [126,83,126,158,126]  |
  3131  |              resetPlaceHolder_2();  |         |   560  |    126  |  2  |   70  |  [126,83,126,158,126]  |
  3137  |                         R = R + 2;  |      2  |   562  |    126  |  2  |   70  |  [126,83,126,158,126]  |
  3141  |                         j = j + 1;  |         |   562  |    126  |  2  |   71  |  [126,83,126,158,126]  |
  3142  |              resetPlaceHolder_2();  |         |   562  |    126  |  2  |   71  |  [126,83,126,158,126]  |
  3148  |                         R = R + 2;  |      2  |   564  |    126  |  2  |   71  |  [126,83,126,158,126]  |
  3152  |                         j = j + 1;  |         |   564  |    126  |  2  |   72  |  [126,83,126,158,126]  |
  3153  |              resetPlaceHolder_2();  |         |   564  |    126  |  2  |   72  |  [126,83,126,158,126]  |
  3159  |                         R = R + 2;  |      2  |   566  |    126  |  2  |   72  |  [126,83,126,158,126]  |
  3163  |                         j = j + 1;  |         |   566  |    126  |  2  |   73  |  [126,83,126,158,126]  |
  3164  |              resetPlaceHolder_2();  |         |   566  |    126  |  2  |   73  |  [126,83,126,158,126]  |
  3170  |                         R = R + 2;  |      2  |   568  |    126  |  2  |   73  |  [126,83,126,158,126]  |
  3174  |                         j = j + 1;  |         |   568  |    126  |  2  |   74  |  [126,83,126,158,126]  |
  3175  |              resetPlaceHolder_2();  |         |   568  |    126  |  2  |   74  |  [126,83,126,158,126]  |
  3181  |                         R = R + 2;  |      2  |   570  |    126  |  2  |   74  |  [126,83,126,158,126]  |
  3185  |                         j = j + 1;  |         |   570  |    126  |  2  |   75  |  [126,83,126,158,126]  |
  3186  |              resetPlaceHolder_2();  |         |   570  |    126  |  2  |   75  |  [126,83,126,158,126]  |
  3192  |                         R = R + 2;  |      2  |   572  |    126  |  2  |   75  |  [126,83,126,158,126]  |
  3196  |                         j = j + 1;  |         |   572  |    126  |  2  |   76  |  [126,83,126,158,126]  |
  3197  |              resetPlaceHolder_2();  |         |   572  |    126  |  2  |   76  |  [126,83,126,158,126]  |
  3203  |                         R = R + 2;  |      2  |   574  |    126  |  2  |   76  |  [126,83,126,158,126]  |
  3207  |                         j = j + 1;  |         |   574  |    126  |  2  |   77  |  [126,83,126,158,126]  |
  3208  |              resetPlaceHolder_2();  |         |   574  |    126  |  2  |   77  |  [126,83,126,158,126]  |
  3214  |                         R = R + 2;  |      2  |   576  |    126  |  2  |   77  |  [126,83,126,158,126]  |
  3218  |                         j = j + 1;  |         |   576  |    126  |  2  |   78  |  [126,83,126,158,126]  |
  3219  |              resetPlaceHolder_2();  |         |   576  |    126  |  2  |   78  |  [126,83,126,158,126]  |
  3225  |                         R = R + 2;  |      2  |   578  |    126  |  2  |   78  |  [126,83,126,158,126]  |
  3229  |                         j = j + 1;  |         |   578  |    126  |  2  |   79  |  [126,83,126,158,126]  |
  3230  |              resetPlaceHolder_2();  |         |   578  |    126  |  2  |   79  |  [126,83,126,158,126]  |
  3236  |                         R = R + 2;  |      2  |   580  |    126  |  2  |   79  |  [126,83,126,158,126]  |
  3240  |                         j = j + 1;  |         |   580  |    126  |  2  |   80  |  [126,83,126,158,126]  |
  3241  |              resetPlaceHolder_2();  |         |   580  |    126  |  2  |   80  |  [126,83,126,158,126]  |
  3247  |                         R = R + 2;  |      2  |   582  |    126  |  2  |   80  |  [126,83,126,158,126]  |
  3251  |                         j = j + 1;  |         |   582  |    126  |  2  |   81  |  [126,83,126,158,126]  |
  3252  |              resetPlaceHolder_2();  |         |   582  |    126  |  2  |   81  |  [126,83,126,158,126]  |
  3258  |                         R = R + 2;  |      2  |   584  |    126  |  2  |   81  |  [126,83,126,158,126]  |
  3262  |                         j = j + 1;  |         |   584  |    126  |  2  |   82  |  [126,83,126,158,126]  |
  3263  |              resetPlaceHolder_2();  |         |   584  |    126  |  2  |   82  |  [126,83,126,158,126]  |
  3269  |                         R = R + 2;  |      2  |   586  |    126  |  2  |   82  |  [126,83,126,158,126]  |
  3273  |                         j = j + 1;  |         |   586  |    126  |  2  |   83  |  [126,83,126,158,126]  |
  3274  |              resetPlaceHolder_2();  |         |   586  |    126  |  2  |   83  |  [126,83,126,158,126]  |
  3280  |                         R = R + 2;  |      2  |   588  |    126  |  2  |   83  |  [126,83,126,158,126]  |
  3284  |                         j = j + 1;  |         |   588  |    126  |  2  |   84  |  [126,83,126,158,126]  |
  3285  |              resetPlaceHolder_2();  |         |   588  |    126  |  2  |   84  |  [126,83,126,158,126]  |
  3291  |                         R = R + 2;  |      2  |   590  |    126  |  2  |   84  |  [126,83,126,158,126]  |
  3295  |                         j = j + 1;  |         |   590  |    126  |  2  |   85  |  [126,83,126,158,126]  |
  3296  |              resetPlaceHolder_2();  |         |   590  |    126  |  2  |   85  |  [126,83,126,158,126]  |
  3302  |                         R = R + 2;  |      2  |   592  |    126  |  2  |   85  |  [126,83,126,158,126]  |
  3306  |                         j = j + 1;  |         |   592  |    126  |  2  |   86  |  [126,83,126,158,126]  |
  3307  |              resetPlaceHolder_2();  |         |   592  |    126  |  2  |   86  |  [126,83,126,158,126]  |
  3313  |                         R = R + 2;  |      2  |   594  |    126  |  2  |   86  |  [126,83,126,158,126]  |
  3317  |                         j = j + 1;  |         |   594  |    126  |  2  |   87  |  [126,83,126,158,126]  |
  3318  |              resetPlaceHolder_2();  |         |   594  |    126  |  2  |   87  |  [126,83,126,158,126]  |
  3324  |                         R = R + 2;  |      2  |   596  |    126  |  2  |   87  |  [126,83,126,158,126]  |
  3328  |                         j = j + 1;  |         |   596  |    126  |  2  |   88  |  [126,83,126,158,126]  |
  3329  |              resetPlaceHolder_2();  |         |   596  |    126  |  2  |   88  |  [126,83,126,158,126]  |
  3335  |                         R = R + 2;  |      2  |   598  |    126  |  2  |   88  |  [126,83,126,158,126]  |
  3339  |                         j = j + 1;  |         |   598  |    126  |  2  |   89  |  [126,83,126,158,126]  |
  3340  |              resetPlaceHolder_2();  |         |   598  |    126  |  2  |   89  |  [126,83,126,158,126]  |
  3346  |                         R = R + 2;  |      2  |   600  |    126  |  2  |   89  |  [126,83,126,158,126]  |
  3350  |                         j = j + 1;  |         |   600  |    126  |  2  |   90  |  [126,83,126,158,126]  |
  3351  |              resetPlaceHolder_2();  |         |   600  |    126  |  2  |   90  |  [126,83,126,158,126]  |
  3357  |                         R = R + 2;  |      2  |   602  |    126  |  2  |   90  |  [126,83,126,158,126]  |
  3361  |                         j = j + 1;  |         |   602  |    126  |  2  |   91  |  [126,83,126,158,126]  |
  3362  |              resetPlaceHolder_2();  |         |   602  |    126  |  2  |   91  |  [126,83,126,158,126]  |
  3368  |                         R = R + 2;  |      2  |   604  |    126  |  2  |   91  |  [126,83,126,158,126]  |
  3372  |                         j = j + 1;  |         |   604  |    126  |  2  |   92  |  [126,83,126,158,126]  |
  3373  |              resetPlaceHolder_2();  |         |   604  |    126  |  2  |   92  |  [126,83,126,158,126]  |
  3379  |                         R = R + 2;  |      2  |   606  |    126  |  2  |   92  |  [126,83,126,158,126]  |
  3383  |                         j = j + 1;  |         |   606  |    126  |  2  |   93  |  [126,83,126,158,126]  |
  3384  |              resetPlaceHolder_2();  |         |   606  |    126  |  2  |   93  |  [126,83,126,158,126]  |
  3390  |                         R = R + 2;  |      2  |   608  |    126  |  2  |   93  |  [126,83,126,158,126]  |
  3394  |                         j = j + 1;  |         |   608  |    126  |  2  |   94  |  [126,83,126,158,126]  |
  3395  |              resetPlaceHolder_2();  |         |   608  |    126  |  2  |   94  |  [126,83,126,158,126]  |
  3401  |                         R = R + 2;  |      2  |   610  |    126  |  2  |   94  |  [126,83,126,158,126]  |
  3405  |                         j = j + 1;  |         |   610  |    126  |  2  |   95  |  [126,83,126,158,126]  |
  3406  |              resetPlaceHolder_2();  |         |   610  |    126  |  2  |   95  |  [126,83,126,158,126]  |
  3412  |                         R = R + 2;  |      2  |   612  |    126  |  2  |   95  |  [126,83,126,158,126]  |
  3416  |                         j = j + 1;  |         |   612  |    126  |  2  |   96  |  [126,83,126,158,126]  |
  3417  |              resetPlaceHolder_2();  |         |   612  |    126  |  2  |   96  |  [126,83,126,158,126]  |
  3423  |                         R = R + 2;  |      2  |   614  |    126  |  2  |   96  |  [126,83,126,158,126]  |
  3427  |                         j = j + 1;  |         |   614  |    126  |  2  |   97  |  [126,83,126,158,126]  |
  3428  |              resetPlaceHolder_2();  |         |   614  |    126  |  2  |   97  |  [126,83,126,158,126]  |
  3434  |                         R = R + 2;  |      2  |   616  |    126  |  2  |   97  |  [126,83,126,158,126]  |
  3438  |                         j = j + 1;  |         |   616  |    126  |  2  |   98  |  [126,83,126,158,126]  |
  3439  |              resetPlaceHolder_2();  |         |   616  |    126  |  2  |   98  |  [126,83,126,158,126]  |
  3445  |                         R = R + 2;  |      2  |   618  |    126  |  2  |   98  |  [126,83,126,158,126]  |
  3449  |                         j = j + 1;  |         |   618  |    126  |  2  |   99  |  [126,83,126,158,126]  |
  3450  |              resetPlaceHolder_2();  |         |   618  |    126  |  2  |   99  |  [126,83,126,158,126]  |
  3456  |                         R = R + 2;  |      2  |   620  |    126  |  2  |   99  |  [126,83,126,158,126]  |
  3460  |                         j = j + 1;  |         |   620  |    126  |  2  |  100  |  [126,83,126,158,126]  |
  3461  |              resetPlaceHolder_2();  |         |   620  |    126  |  2  |  100  |  [126,83,126,158,126]  |
  3467  |                         R = R + 2;  |      2  |   622  |    126  |  2  |  100  |  [126,83,126,158,126]  |
  3471  |                         j = j + 1;  |         |   622  |    126  |  2  |  101  |  [126,83,126,158,126]  |
  3472  |              resetPlaceHolder_2();  |         |   622  |    126  |  2  |  101  |  [126,83,126,158,126]  |
  3478  |                         R = R + 2;  |      2  |   624  |    126  |  2  |  101  |  [126,83,126,158,126]  |
  3482  |                         j = j + 1;  |         |   624  |    126  |  2  |  102  |  [126,83,126,158,126]  |
  3483  |              resetPlaceHolder_2();  |         |   624  |    126  |  2  |  102  |  [126,83,126,158,126]  |
  3489  |                         R = R + 2;  |      2  |   626  |    126  |  2  |  102  |  [126,83,126,158,126]  |
  3493  |                         j = j + 1;  |         |   626  |    126  |  2  |  103  |  [126,83,126,158,126]  |
  3494  |              resetPlaceHolder_2();  |         |   626  |    126  |  2  |  103  |  [126,83,126,158,126]  |
  3500  |                         R = R + 2;  |      2  |   628  |    126  |  2  |  103  |  [126,83,126,158,126]  |
  3504  |                         j = j + 1;  |         |   628  |    126  |  2  |  104  |  [126,83,126,158,126]  |
  3505  |              resetPlaceHolder_2();  |         |   628  |    126  |  2  |  104  |  [126,83,126,158,126]  |
  3511  |                         R = R + 2;  |      2  |   630  |    126  |  2  |  104  |  [126,83,126,158,126]  |
  3515  |                         j = j + 1;  |         |   630  |    126  |  2  |  105  |  [126,83,126,158,126]  |
  3516  |              resetPlaceHolder_2();  |         |   630  |    126  |  2  |  105  |  [126,83,126,158,126]  |
  3522  |                         R = R + 2;  |      2  |   632  |    126  |  2  |  105  |  [126,83,126,158,126]  |
  3526  |                         j = j + 1;  |         |   632  |    126  |  2  |  106  |  [126,83,126,158,126]  |
  3527  |              resetPlaceHolder_2();  |         |   632  |    126  |  2  |  106  |  [126,83,126,158,126]  |
  3533  |                         R = R + 2;  |      2  |   634  |    126  |  2  |  106  |  [126,83,126,158,126]  |
  3537  |                         j = j + 1;  |         |   634  |    126  |  2  |  107  |  [126,83,126,158,126]  |
  3538  |              resetPlaceHolder_2();  |         |   634  |    126  |  2  |  107  |  [126,83,126,158,126]  |
  3544  |                         R = R + 2;  |      2  |   636  |    126  |  2  |  107  |  [126,83,126,158,126]  |
  3548  |                         j = j + 1;  |         |   636  |    126  |  2  |  108  |  [126,83,126,158,126]  |
  3549  |              resetPlaceHolder_2();  |         |   636  |    126  |  2  |  108  |  [126,83,126,158,126]  |
  3555  |                         R = R + 2;  |      2  |   638  |    126  |  2  |  108  |  [126,83,126,158,126]  |
  3559  |                         j = j + 1;  |         |   638  |    126  |  2  |  109  |  [126,83,126,158,126]  |
  3560  |              resetPlaceHolder_2();  |         |   638  |    126  |  2  |  109  |  [126,83,126,158,126]  |
  3566  |                         R = R + 2;  |      2  |   640  |    126  |  2  |  109  |  [126,83,126,158,126]  |
  3570  |                         j = j + 1;  |         |   640  |    126  |  2  |  110  |  [126,83,126,158,126]  |
  3571  |              resetPlaceHolder_2();  |         |   640  |    126  |  2  |  110  |  [126,83,126,158,126]  |
  3577  |                         R = R + 2;  |      2  |   642  |    126  |  2  |  110  |  [126,83,126,158,126]  |
  3581  |                         j = j + 1;  |         |   642  |    126  |  2  |  111  |  [126,83,126,158,126]  |
  3582  |              resetPlaceHolder_2();  |         |   642  |    126  |  2  |  111  |  [126,83,126,158,126]  |
  3588  |                         R = R + 2;  |      2  |   644  |    126  |  2  |  111  |  [126,83,126,158,126]  |
  3592  |                         j = j + 1;  |         |   644  |    126  |  2  |  112  |  [126,83,126,158,126]  |
  3593  |              resetPlaceHolder_2();  |         |   644  |    126  |  2  |  112  |  [126,83,126,158,126]  |
  3599  |                         R = R + 2;  |      2  |   646  |    126  |  2  |  112  |  [126,83,126,158,126]  |
  3603  |                         j = j + 1;  |         |   646  |    126  |  2  |  113  |  [126,83,126,158,126]  |
  3604  |              resetPlaceHolder_2();  |         |   646  |    126  |  2  |  113  |  [126,83,126,158,126]  |
  3610  |                         R = R + 2;  |      2  |   648  |    126  |  2  |  113  |  [126,83,126,158,126]  |
  3614  |                         j = j + 1;  |         |   648  |    126  |  2  |  114  |  [126,83,126,158,126]  |
  3615  |              resetPlaceHolder_2();  |         |   648  |    126  |  2  |  114  |  [126,83,126,158,126]  |
  3621  |                         R = R + 2;  |      2  |   650  |    126  |  2  |  114  |  [126,83,126,158,126]  |
  3625  |                         j = j + 1;  |         |   650  |    126  |  2  |  115  |  [126,83,126,158,126]  |
  3626  |              resetPlaceHolder_2();  |         |   650  |    126  |  2  |  115  |  [126,83,126,158,126]  |
  3632  |                         R = R + 2;  |      2  |   652  |    126  |  2  |  115  |  [126,83,126,158,126]  |
  3636  |                         j = j + 1;  |         |   652  |    126  |  2  |  116  |  [126,83,126,158,126]  |
  3637  |              resetPlaceHolder_2();  |         |   652  |    126  |  2  |  116  |  [126,83,126,158,126]  |
  3643  |                         R = R + 2;  |      2  |   654  |    126  |  2  |  116  |  [126,83,126,158,126]  |
  3647  |                         j = j + 1;  |         |   654  |    126  |  2  |  117  |  [126,83,126,158,126]  |
  3648  |              resetPlaceHolder_2();  |         |   654  |    126  |  2  |  117  |  [126,83,126,158,126]  |
  3654  |                         R = R + 2;  |      2  |   656  |    126  |  2  |  117  |  [126,83,126,158,126]  |
  3658  |                         j = j + 1;  |         |   656  |    126  |  2  |  118  |  [126,83,126,158,126]  |
  3659  |              resetPlaceHolder_2();  |         |   656  |    126  |  2  |  118  |  [126,83,126,158,126]  |
  3665  |                         R = R + 2;  |      2  |   658  |    126  |  2  |  118  |  [126,83,126,158,126]  |
  3669  |                         j = j + 1;  |         |   658  |    126  |  2  |  119  |  [126,83,126,158,126]  |
  3670  |              resetPlaceHolder_2();  |         |   658  |    126  |  2  |  119  |  [126,83,126,158,126]  |
  3676  |                         R = R + 2;  |      2  |   660  |    126  |  2  |  119  |  [126,83,126,158,126]  |
  3680  |                         j = j + 1;  |         |   660  |    126  |  2  |  120  |  [126,83,126,158,126]  |
  3681  |              resetPlaceHolder_2();  |         |   660  |    126  |  2  |  120  |  [126,83,126,158,126]  |
  3687  |                         R = R + 2;  |      2  |   662  |    126  |  2  |  120  |  [126,83,126,158,126]  |
  3691  |                         j = j + 1;  |         |   662  |    126  |  2  |  121  |  [126,83,126,158,126]  |
  3692  |              resetPlaceHolder_2();  |         |   662  |    126  |  2  |  121  |  [126,83,126,158,126]  |
  3698  |                         R = R + 2;  |      2  |   664  |    126  |  2  |  121  |  [126,83,126,158,126]  |
  3702  |                         j = j + 1;  |         |   664  |    126  |  2  |  122  |  [126,83,126,158,126]  |
  3703  |              resetPlaceHolder_2();  |         |   664  |    126  |  2  |  122  |  [126,83,126,158,126]  |
  3709  |                         R = R + 2;  |      2  |   666  |    126  |  2  |  122  |  [126,83,126,158,126]  |
  3713  |                         j = j + 1;  |         |   666  |    126  |  2  |  123  |  [126,83,126,158,126]  |
  3714  |              resetPlaceHolder_2();  |         |   666  |    126  |  2  |  123  |  [126,83,126,158,126]  |
  3720  |                         R = R + 2;  |      2  |   668  |    126  |  2  |  123  |  [126,83,126,158,126]  |
  3724  |                         j = j + 1;  |         |   668  |    126  |  2  |  124  |  [126,83,126,158,126]  |
  3725  |              resetPlaceHolder_2();  |         |   668  |    126  |  2  |  124  |  [126,83,126,158,126]  |
  3731  |                         R = R + 2;  |      2  |   670  |    126  |  2  |  124  |  [126,83,126,158,126]  |
  3735  |                         j = j + 1;  |         |   670  |    126  |  2  |  125  |  [126,83,126,158,126]  |
  3736  |              resetPlaceHolder_2();  |         |   670  |    126  |  2  |  125  |  [126,83,126,158,126]  |
  3742  |                         R = R + 2;  |      2  |   672  |    126  |  2  |  125  |  [126,83,126,158,126]  |
  3746  |                         j = j + 1;  |         |   672  |    126  |  2  |  126  |  [126,83,126,158,126]  |
  3747  |              resetPlaceHolder_2();  |         |   672  |    126  |  2  |  126  |  [126,83,126,158,126]  |
  3753  |                         R = R + 1;  |      1  |   673  |    126  |  2  |  126  |  [126,83,126,158,126]  |
  3757  |                         i = i + 1;  |         |   673  |    126  |  3  |  126  |  [126,83,126,158,126]  |
  3758  |              resetPlaceHolder_1();  |         |   673  |    126  |  3  |  126  |  [126,83,126,158,126]  |
  3764  |      entry = arrayRead(sorted, i);  |         |   673  |    158  |  3  |  126  |  [126,83,126,158,126]  |
  3766  |                         int j = 0;  |         |   673  |    158  |  3  |    0  |  [126,83,126,158,126]  |
  3772  |                         R = R + 2;  |      2  |   675  |    158  |  3  |    0  |  [126,83,126,158,126]  |
  3776  |                         j = j + 1;  |         |   675  |    158  |  3  |    1  |  [126,83,126,158,126]  |
  3777  |              resetPlaceHolder_2();  |         |   675  |    158  |  3  |    1  |  [126,83,126,158,126]  |
  3783  |                         R = R + 2;  |      2  |   677  |    158  |  3  |    1  |  [126,83,126,158,126]  |
  3787  |                         j = j + 1;  |         |   677  |    158  |  3  |    2  |  [126,83,126,158,126]  |
  3788  |              resetPlaceHolder_2();  |         |   677  |    158  |  3  |    2  |  [126,83,126,158,126]  |
  3794  |                         R = R + 2;  |      2  |   679  |    158  |  3  |    2  |  [126,83,126,158,126]  |
  3798  |                         j = j + 1;  |         |   679  |    158  |  3  |    3  |  [126,83,126,158,126]  |
  3799  |              resetPlaceHolder_2();  |         |   679  |    158  |  3  |    3  |  [126,83,126,158,126]  |
  3805  |                         R = R + 2;  |      2  |   681  |    158  |  3  |    3  |  [126,83,126,158,126]  |
  3809  |                         j = j + 1;  |         |   681  |    158  |  3  |    4  |  [126,83,126,158,126]  |
  3810  |              resetPlaceHolder_2();  |         |   681  |    158  |  3  |    4  |  [126,83,126,158,126]  |
  3816  |                         R = R + 2;  |      2  |   683  |    158  |  3  |    4  |  [126,83,126,158,126]  |
  3820  |                         j = j + 1;  |         |   683  |    158  |  3  |    5  |  [126,83,126,158,126]  |
  3821  |              resetPlaceHolder_2();  |         |   683  |    158  |  3  |    5  |  [126,83,126,158,126]  |
  3827  |                         R = R + 2;  |      2  |   685  |    158  |  3  |    5  |  [126,83,126,158,126]  |
  3831  |                         j = j + 1;  |         |   685  |    158  |  3  |    6  |  [126,83,126,158,126]  |
  3832  |              resetPlaceHolder_2();  |         |   685  |    158  |  3  |    6  |  [126,83,126,158,126]  |
  3838  |                         R = R + 2;  |      2  |   687  |    158  |  3  |    6  |  [126,83,126,158,126]  |
  3842  |                         j = j + 1;  |         |   687  |    158  |  3  |    7  |  [126,83,126,158,126]  |
  3843  |              resetPlaceHolder_2();  |         |   687  |    158  |  3  |    7  |  [126,83,126,158,126]  |
  3849  |                         R = R + 2;  |      2  |   689  |    158  |  3  |    7  |  [126,83,126,158,126]  |
  3853  |                         j = j + 1;  |         |   689  |    158  |  3  |    8  |  [126,83,126,158,126]  |
  3854  |              resetPlaceHolder_2();  |         |   689  |    158  |  3  |    8  |  [126,83,126,158,126]  |
  3860  |                         R = R + 2;  |      2  |   691  |    158  |  3  |    8  |  [126,83,126,158,126]  |
  3864  |                         j = j + 1;  |         |   691  |    158  |  3  |    9  |  [126,83,126,158,126]  |
  3865  |              resetPlaceHolder_2();  |         |   691  |    158  |  3  |    9  |  [126,83,126,158,126]  |
  3871  |                         R = R + 2;  |      2  |   693  |    158  |  3  |    9  |  [126,83,126,158,126]  |
  3875  |                         j = j + 1;  |         |   693  |    158  |  3  |   10  |  [126,83,126,158,126]  |
  3876  |              resetPlaceHolder_2();  |         |   693  |    158  |  3  |   10  |  [126,83,126,158,126]  |
  3882  |                         R = R + 2;  |      2  |   695  |    158  |  3  |   10  |  [126,83,126,158,126]  |
  3886  |                         j = j + 1;  |         |   695  |    158  |  3  |   11  |  [126,83,126,158,126]  |
  3887  |              resetPlaceHolder_2();  |         |   695  |    158  |  3  |   11  |  [126,83,126,158,126]  |
  3893  |                         R = R + 2;  |      2  |   697  |    158  |  3  |   11  |  [126,83,126,158,126]  |
  3897  |                         j = j + 1;  |         |   697  |    158  |  3  |   12  |  [126,83,126,158,126]  |
  3898  |              resetPlaceHolder_2();  |         |   697  |    158  |  3  |   12  |  [126,83,126,158,126]  |
  3904  |                         R = R + 2;  |      2  |   699  |    158  |  3  |   12  |  [126,83,126,158,126]  |
  3908  |                         j = j + 1;  |         |   699  |    158  |  3  |   13  |  [126,83,126,158,126]  |
  3909  |              resetPlaceHolder_2();  |         |   699  |    158  |  3  |   13  |  [126,83,126,158,126]  |
  3915  |                         R = R + 2;  |      2  |   701  |    158  |  3  |   13  |  [126,83,126,158,126]  |
  3919  |                         j = j + 1;  |         |   701  |    158  |  3  |   14  |  [126,83,126,158,126]  |
  3920  |              resetPlaceHolder_2();  |         |   701  |    158  |  3  |   14  |  [126,83,126,158,126]  |
  3926  |                         R = R + 2;  |      2  |   703  |    158  |  3  |   14  |  [126,83,126,158,126]  |
  3930  |                         j = j + 1;  |         |   703  |    158  |  3  |   15  |  [126,83,126,158,126]  |
  3931  |              resetPlaceHolder_2();  |         |   703  |    158  |  3  |   15  |  [126,83,126,158,126]  |
  3937  |                         R = R + 2;  |      2  |   705  |    158  |  3  |   15  |  [126,83,126,158,126]  |
  3941  |                         j = j + 1;  |         |   705  |    158  |  3  |   16  |  [126,83,126,158,126]  |
  3942  |              resetPlaceHolder_2();  |         |   705  |    158  |  3  |   16  |  [126,83,126,158,126]  |
  3948  |                         R = R + 2;  |      2  |   707  |    158  |  3  |   16  |  [126,83,126,158,126]  |
  3952  |                         j = j + 1;  |         |   707  |    158  |  3  |   17  |  [126,83,126,158,126]  |
  3953  |              resetPlaceHolder_2();  |         |   707  |    158  |  3  |   17  |  [126,83,126,158,126]  |
  3959  |                         R = R + 2;  |      2  |   709  |    158  |  3  |   17  |  [126,83,126,158,126]  |
  3963  |                         j = j + 1;  |         |   709  |    158  |  3  |   18  |  [126,83,126,158,126]  |
  3964  |              resetPlaceHolder_2();  |         |   709  |    158  |  3  |   18  |  [126,83,126,158,126]  |
  3970  |                         R = R + 2;  |      2  |   711  |    158  |  3  |   18  |  [126,83,126,158,126]  |
  3974  |                         j = j + 1;  |         |   711  |    158  |  3  |   19  |  [126,83,126,158,126]  |
  3975  |              resetPlaceHolder_2();  |         |   711  |    158  |  3  |   19  |  [126,83,126,158,126]  |
  3981  |                         R = R + 2;  |      2  |   713  |    158  |  3  |   19  |  [126,83,126,158,126]  |
  3985  |                         j = j + 1;  |         |   713  |    158  |  3  |   20  |  [126,83,126,158,126]  |
  3986  |              resetPlaceHolder_2();  |         |   713  |    158  |  3  |   20  |  [126,83,126,158,126]  |
  3992  |                         R = R + 2;  |      2  |   715  |    158  |  3  |   20  |  [126,83,126,158,126]  |
  3996  |                         j = j + 1;  |         |   715  |    158  |  3  |   21  |  [126,83,126,158,126]  |
  3997  |              resetPlaceHolder_2();  |         |   715  |    158  |  3  |   21  |  [126,83,126,158,126]  |
  4003  |                         R = R + 2;  |      2  |   717  |    158  |  3  |   21  |  [126,83,126,158,126]  |
  4007  |                         j = j + 1;  |         |   717  |    158  |  3  |   22  |  [126,83,126,158,126]  |
  4008  |              resetPlaceHolder_2();  |         |   717  |    158  |  3  |   22  |  [126,83,126,158,126]  |
  4014  |                         R = R + 2;  |      2  |   719  |    158  |  3  |   22  |  [126,83,126,158,126]  |
  4018  |                         j = j + 1;  |         |   719  |    158  |  3  |   23  |  [126,83,126,158,126]  |
  4019  |              resetPlaceHolder_2();  |         |   719  |    158  |  3  |   23  |  [126,83,126,158,126]  |
  4025  |                         R = R + 2;  |      2  |   721  |    158  |  3  |   23  |  [126,83,126,158,126]  |
  4029  |                         j = j + 1;  |         |   721  |    158  |  3  |   24  |  [126,83,126,158,126]  |
  4030  |              resetPlaceHolder_2();  |         |   721  |    158  |  3  |   24  |  [126,83,126,158,126]  |
  4036  |                         R = R + 2;  |      2  |   723  |    158  |  3  |   24  |  [126,83,126,158,126]  |
  4040  |                         j = j + 1;  |         |   723  |    158  |  3  |   25  |  [126,83,126,158,126]  |
  4041  |              resetPlaceHolder_2();  |         |   723  |    158  |  3  |   25  |  [126,83,126,158,126]  |
  4047  |                         R = R + 2;  |      2  |   725  |    158  |  3  |   25  |  [126,83,126,158,126]  |
  4051  |                         j = j + 1;  |         |   725  |    158  |  3  |   26  |  [126,83,126,158,126]  |
  4052  |              resetPlaceHolder_2();  |         |   725  |    158  |  3  |   26  |  [126,83,126,158,126]  |
  4058  |                         R = R + 2;  |      2  |   727  |    158  |  3  |   26  |  [126,83,126,158,126]  |
  4062  |                         j = j + 1;  |         |   727  |    158  |  3  |   27  |  [126,83,126,158,126]  |
  4063  |              resetPlaceHolder_2();  |         |   727  |    158  |  3  |   27  |  [126,83,126,158,126]  |
  4069  |                         R = R + 2;  |      2  |   729  |    158  |  3  |   27  |  [126,83,126,158,126]  |
  4073  |                         j = j + 1;  |         |   729  |    158  |  3  |   28  |  [126,83,126,158,126]  |
  4074  |              resetPlaceHolder_2();  |         |   729  |    158  |  3  |   28  |  [126,83,126,158,126]  |
  4080  |                         R = R + 2;  |      2  |   731  |    158  |  3  |   28  |  [126,83,126,158,126]  |
  4084  |                         j = j + 1;  |         |   731  |    158  |  3  |   29  |  [126,83,126,158,126]  |
  4085  |              resetPlaceHolder_2();  |         |   731  |    158  |  3  |   29  |  [126,83,126,158,126]  |
  4091  |                         R = R + 2;  |      2  |   733  |    158  |  3  |   29  |  [126,83,126,158,126]  |
  4095  |                         j = j + 1;  |         |   733  |    158  |  3  |   30  |  [126,83,126,158,126]  |
  4096  |              resetPlaceHolder_2();  |         |   733  |    158  |  3  |   30  |  [126,83,126,158,126]  |
  4102  |                         R = R + 2;  |      2  |   735  |    158  |  3  |   30  |  [126,83,126,158,126]  |
  4106  |                         j = j + 1;  |         |   735  |    158  |  3  |   31  |  [126,83,126,158,126]  |
  4107  |              resetPlaceHolder_2();  |         |   735  |    158  |  3  |   31  |  [126,83,126,158,126]  |
  4113  |                         R = R + 2;  |      2  |   737  |    158  |  3  |   31  |  [126,83,126,158,126]  |
  4117  |                         j = j + 1;  |         |   737  |    158  |  3  |   32  |  [126,83,126,158,126]  |
  4118  |              resetPlaceHolder_2();  |         |   737  |    158  |  3  |   32  |  [126,83,126,158,126]  |
  4124  |                         R = R + 2;  |      2  |   739  |    158  |  3  |   32  |  [126,83,126,158,126]  |
  4128  |                         j = j + 1;  |         |   739  |    158  |  3  |   33  |  [126,83,126,158,126]  |
  4129  |              resetPlaceHolder_2();  |         |   739  |    158  |  3  |   33  |  [126,83,126,158,126]  |
  4135  |                         R = R + 2;  |      2  |   741  |    158  |  3  |   33  |  [126,83,126,158,126]  |
  4139  |                         j = j + 1;  |         |   741  |    158  |  3  |   34  |  [126,83,126,158,126]  |
  4140  |              resetPlaceHolder_2();  |         |   741  |    158  |  3  |   34  |  [126,83,126,158,126]  |
  4146  |                         R = R + 2;  |      2  |   743  |    158  |  3  |   34  |  [126,83,126,158,126]  |
  4150  |                         j = j + 1;  |         |   743  |    158  |  3  |   35  |  [126,83,126,158,126]  |
  4151  |              resetPlaceHolder_2();  |         |   743  |    158  |  3  |   35  |  [126,83,126,158,126]  |
  4157  |                         R = R + 2;  |      2  |   745  |    158  |  3  |   35  |  [126,83,126,158,126]  |
  4161  |                         j = j + 1;  |         |   745  |    158  |  3  |   36  |  [126,83,126,158,126]  |
  4162  |              resetPlaceHolder_2();  |         |   745  |    158  |  3  |   36  |  [126,83,126,158,126]  |
  4168  |                         R = R + 2;  |      2  |   747  |    158  |  3  |   36  |  [126,83,126,158,126]  |
  4172  |                         j = j + 1;  |         |   747  |    158  |  3  |   37  |  [126,83,126,158,126]  |
  4173  |              resetPlaceHolder_2();  |         |   747  |    158  |  3  |   37  |  [126,83,126,158,126]  |
  4179  |                         R = R + 2;  |      2  |   749  |    158  |  3  |   37  |  [126,83,126,158,126]  |
  4183  |                         j = j + 1;  |         |   749  |    158  |  3  |   38  |  [126,83,126,158,126]  |
  4184  |              resetPlaceHolder_2();  |         |   749  |    158  |  3  |   38  |  [126,83,126,158,126]  |
  4190  |                         R = R + 2;  |      2  |   751  |    158  |  3  |   38  |  [126,83,126,158,126]  |
  4194  |                         j = j + 1;  |         |   751  |    158  |  3  |   39  |  [126,83,126,158,126]  |
  4195  |              resetPlaceHolder_2();  |         |   751  |    158  |  3  |   39  |  [126,83,126,158,126]  |
  4201  |                         R = R + 2;  |      2  |   753  |    158  |  3  |   39  |  [126,83,126,158,126]  |
  4205  |                         j = j + 1;  |         |   753  |    158  |  3  |   40  |  [126,83,126,158,126]  |
  4206  |              resetPlaceHolder_2();  |         |   753  |    158  |  3  |   40  |  [126,83,126,158,126]  |
  4212  |                         R = R + 2;  |      2  |   755  |    158  |  3  |   40  |  [126,83,126,158,126]  |
  4216  |                         j = j + 1;  |         |   755  |    158  |  3  |   41  |  [126,83,126,158,126]  |
  4217  |              resetPlaceHolder_2();  |         |   755  |    158  |  3  |   41  |  [126,83,126,158,126]  |
  4223  |                         R = R + 2;  |      2  |   757  |    158  |  3  |   41  |  [126,83,126,158,126]  |
  4227  |                         j = j + 1;  |         |   757  |    158  |  3  |   42  |  [126,83,126,158,126]  |
  4228  |              resetPlaceHolder_2();  |         |   757  |    158  |  3  |   42  |  [126,83,126,158,126]  |
  4234  |                         R = R + 2;  |      2  |   759  |    158  |  3  |   42  |  [126,83,126,158,126]  |
  4238  |                         j = j + 1;  |         |   759  |    158  |  3  |   43  |  [126,83,126,158,126]  |
  4239  |              resetPlaceHolder_2();  |         |   759  |    158  |  3  |   43  |  [126,83,126,158,126]  |
  4245  |                         R = R + 2;  |      2  |   761  |    158  |  3  |   43  |  [126,83,126,158,126]  |
  4249  |                         j = j + 1;  |         |   761  |    158  |  3  |   44  |  [126,83,126,158,126]  |
  4250  |              resetPlaceHolder_2();  |         |   761  |    158  |  3  |   44  |  [126,83,126,158,126]  |
  4256  |                         R = R + 2;  |      2  |   763  |    158  |  3  |   44  |  [126,83,126,158,126]  |
  4260  |                         j = j + 1;  |         |   763  |    158  |  3  |   45  |  [126,83,126,158,126]  |
  4261  |              resetPlaceHolder_2();  |         |   763  |    158  |  3  |   45  |  [126,83,126,158,126]  |
  4267  |                         R = R + 2;  |      2  |   765  |    158  |  3  |   45  |  [126,83,126,158,126]  |
  4271  |                         j = j + 1;  |         |   765  |    158  |  3  |   46  |  [126,83,126,158,126]  |
  4272  |              resetPlaceHolder_2();  |         |   765  |    158  |  3  |   46  |  [126,83,126,158,126]  |
  4278  |                         R = R + 2;  |      2  |   767  |    158  |  3  |   46  |  [126,83,126,158,126]  |
  4282  |                         j = j + 1;  |         |   767  |    158  |  3  |   47  |  [126,83,126,158,126]  |
  4283  |              resetPlaceHolder_2();  |         |   767  |    158  |  3  |   47  |  [126,83,126,158,126]  |
  4289  |                         R = R + 2;  |      2  |   769  |    158  |  3  |   47  |  [126,83,126,158,126]  |
  4293  |                         j = j + 1;  |         |   769  |    158  |  3  |   48  |  [126,83,126,158,126]  |
  4294  |              resetPlaceHolder_2();  |         |   769  |    158  |  3  |   48  |  [126,83,126,158,126]  |
  4300  |                         R = R + 2;  |      2  |   771  |    158  |  3  |   48  |  [126,83,126,158,126]  |
  4304  |                         j = j + 1;  |         |   771  |    158  |  3  |   49  |  [126,83,126,158,126]  |
  4305  |              resetPlaceHolder_2();  |         |   771  |    158  |  3  |   49  |  [126,83,126,158,126]  |
  4311  |                         R = R + 2;  |      2  |   773  |    158  |  3  |   49  |  [126,83,126,158,126]  |
  4315  |                         j = j + 1;  |         |   773  |    158  |  3  |   50  |  [126,83,126,158,126]  |
  4316  |              resetPlaceHolder_2();  |         |   773  |    158  |  3  |   50  |  [126,83,126,158,126]  |
  4322  |                         R = R + 2;  |      2  |   775  |    158  |  3  |   50  |  [126,83,126,158,126]  |
  4326  |                         j = j + 1;  |         |   775  |    158  |  3  |   51  |  [126,83,126,158,126]  |
  4327  |              resetPlaceHolder_2();  |         |   775  |    158  |  3  |   51  |  [126,83,126,158,126]  |
  4333  |                         R = R + 2;  |      2  |   777  |    158  |  3  |   51  |  [126,83,126,158,126]  |
  4337  |                         j = j + 1;  |         |   777  |    158  |  3  |   52  |  [126,83,126,158,126]  |
  4338  |              resetPlaceHolder_2();  |         |   777  |    158  |  3  |   52  |  [126,83,126,158,126]  |
  4344  |                         R = R + 2;  |      2  |   779  |    158  |  3  |   52  |  [126,83,126,158,126]  |
  4348  |                         j = j + 1;  |         |   779  |    158  |  3  |   53  |  [126,83,126,158,126]  |
  4349  |              resetPlaceHolder_2();  |         |   779  |    158  |  3  |   53  |  [126,83,126,158,126]  |
  4355  |                         R = R + 2;  |      2  |   781  |    158  |  3  |   53  |  [126,83,126,158,126]  |
  4359  |                         j = j + 1;  |         |   781  |    158  |  3  |   54  |  [126,83,126,158,126]  |
  4360  |              resetPlaceHolder_2();  |         |   781  |    158  |  3  |   54  |  [126,83,126,158,126]  |
  4366  |                         R = R + 2;  |      2  |   783  |    158  |  3  |   54  |  [126,83,126,158,126]  |
  4370  |                         j = j + 1;  |         |   783  |    158  |  3  |   55  |  [126,83,126,158,126]  |
  4371  |              resetPlaceHolder_2();  |         |   783  |    158  |  3  |   55  |  [126,83,126,158,126]  |
  4377  |                         R = R + 2;  |      2  |   785  |    158  |  3  |   55  |  [126,83,126,158,126]  |
  4381  |                         j = j + 1;  |         |   785  |    158  |  3  |   56  |  [126,83,126,158,126]  |
  4382  |              resetPlaceHolder_2();  |         |   785  |    158  |  3  |   56  |  [126,83,126,158,126]  |
  4388  |                         R = R + 2;  |      2  |   787  |    158  |  3  |   56  |  [126,83,126,158,126]  |
  4392  |                         j = j + 1;  |         |   787  |    158  |  3  |   57  |  [126,83,126,158,126]  |
  4393  |              resetPlaceHolder_2();  |         |   787  |    158  |  3  |   57  |  [126,83,126,158,126]  |
  4399  |                         R = R + 2;  |      2  |   789  |    158  |  3  |   57  |  [126,83,126,158,126]  |
  4403  |                         j = j + 1;  |         |   789  |    158  |  3  |   58  |  [126,83,126,158,126]  |
  4404  |              resetPlaceHolder_2();  |         |   789  |    158  |  3  |   58  |  [126,83,126,158,126]  |
  4410  |                         R = R + 2;  |      2  |   791  |    158  |  3  |   58  |  [126,83,126,158,126]  |
  4414  |                         j = j + 1;  |         |   791  |    158  |  3  |   59  |  [126,83,126,158,126]  |
  4415  |              resetPlaceHolder_2();  |         |   791  |    158  |  3  |   59  |  [126,83,126,158,126]  |
  4421  |                         R = R + 2;  |      2  |   793  |    158  |  3  |   59  |  [126,83,126,158,126]  |
  4425  |                         j = j + 1;  |         |   793  |    158  |  3  |   60  |  [126,83,126,158,126]  |
  4426  |              resetPlaceHolder_2();  |         |   793  |    158  |  3  |   60  |  [126,83,126,158,126]  |
  4432  |                         R = R + 2;  |      2  |   795  |    158  |  3  |   60  |  [126,83,126,158,126]  |
  4436  |                         j = j + 1;  |         |   795  |    158  |  3  |   61  |  [126,83,126,158,126]  |
  4437  |              resetPlaceHolder_2();  |         |   795  |    158  |  3  |   61  |  [126,83,126,158,126]  |
  4443  |                         R = R + 2;  |      2  |   797  |    158  |  3  |   61  |  [126,83,126,158,126]  |
  4447  |                         j = j + 1;  |         |   797  |    158  |  3  |   62  |  [126,83,126,158,126]  |
  4448  |              resetPlaceHolder_2();  |         |   797  |    158  |  3  |   62  |  [126,83,126,158,126]  |
  4454  |                         R = R + 2;  |      2  |   799  |    158  |  3  |   62  |  [126,83,126,158,126]  |
  4458  |                         j = j + 1;  |         |   799  |    158  |  3  |   63  |  [126,83,126,158,126]  |
  4459  |              resetPlaceHolder_2();  |         |   799  |    158  |  3  |   63  |  [126,83,126,158,126]  |
  4465  |                         R = R + 2;  |      2  |   801  |    158  |  3  |   63  |  [126,83,126,158,126]  |
  4469  |                         j = j + 1;  |         |   801  |    158  |  3  |   64  |  [126,83,126,158,126]  |
  4470  |              resetPlaceHolder_2();  |         |   801  |    158  |  3  |   64  |  [126,83,126,158,126]  |
  4476  |                         R = R + 2;  |      2  |   803  |    158  |  3  |   64  |  [126,83,126,158,126]  |
  4480  |                         j = j + 1;  |         |   803  |    158  |  3  |   65  |  [126,83,126,158,126]  |
  4481  |              resetPlaceHolder_2();  |         |   803  |    158  |  3  |   65  |  [126,83,126,158,126]  |
  4487  |                         R = R + 2;  |      2  |   805  |    158  |  3  |   65  |  [126,83,126,158,126]  |
  4491  |                         j = j + 1;  |         |   805  |    158  |  3  |   66  |  [126,83,126,158,126]  |
  4492  |              resetPlaceHolder_2();  |         |   805  |    158  |  3  |   66  |  [126,83,126,158,126]  |
  4498  |                         R = R + 2;  |      2  |   807  |    158  |  3  |   66  |  [126,83,126,158,126]  |
  4502  |                         j = j + 1;  |         |   807  |    158  |  3  |   67  |  [126,83,126,158,126]  |
  4503  |              resetPlaceHolder_2();  |         |   807  |    158  |  3  |   67  |  [126,83,126,158,126]  |
  4509  |                         R = R + 2;  |      2  |   809  |    158  |  3  |   67  |  [126,83,126,158,126]  |
  4513  |                         j = j + 1;  |         |   809  |    158  |  3  |   68  |  [126,83,126,158,126]  |
  4514  |              resetPlaceHolder_2();  |         |   809  |    158  |  3  |   68  |  [126,83,126,158,126]  |
  4520  |                         R = R + 2;  |      2  |   811  |    158  |  3  |   68  |  [126,83,126,158,126]  |
  4524  |                         j = j + 1;  |         |   811  |    158  |  3  |   69  |  [126,83,126,158,126]  |
  4525  |              resetPlaceHolder_2();  |         |   811  |    158  |  3  |   69  |  [126,83,126,158,126]  |
  4531  |                         R = R + 2;  |      2  |   813  |    158  |  3  |   69  |  [126,83,126,158,126]  |
  4535  |                         j = j + 1;  |         |   813  |    158  |  3  |   70  |  [126,83,126,158,126]  |
  4536  |              resetPlaceHolder_2();  |         |   813  |    158  |  3  |   70  |  [126,83,126,158,126]  |
  4542  |                         R = R + 2;  |      2  |   815  |    158  |  3  |   70  |  [126,83,126,158,126]  |
  4546  |                         j = j + 1;  |         |   815  |    158  |  3  |   71  |  [126,83,126,158,126]  |
  4547  |              resetPlaceHolder_2();  |         |   815  |    158  |  3  |   71  |  [126,83,126,158,126]  |
  4553  |                         R = R + 2;  |      2  |   817  |    158  |  3  |   71  |  [126,83,126,158,126]  |
  4557  |                         j = j + 1;  |         |   817  |    158  |  3  |   72  |  [126,83,126,158,126]  |
  4558  |              resetPlaceHolder_2();  |         |   817  |    158  |  3  |   72  |  [126,83,126,158,126]  |
  4564  |                         R = R + 2;  |      2  |   819  |    158  |  3  |   72  |  [126,83,126,158,126]  |
  4568  |                         j = j + 1;  |         |   819  |    158  |  3  |   73  |  [126,83,126,158,126]  |
  4569  |              resetPlaceHolder_2();  |         |   819  |    158  |  3  |   73  |  [126,83,126,158,126]  |
  4575  |                         R = R + 2;  |      2  |   821  |    158  |  3  |   73  |  [126,83,126,158,126]  |
  4579  |                         j = j + 1;  |         |   821  |    158  |  3  |   74  |  [126,83,126,158,126]  |
  4580  |              resetPlaceHolder_2();  |         |   821  |    158  |  3  |   74  |  [126,83,126,158,126]  |
  4586  |                         R = R + 2;  |      2  |   823  |    158  |  3  |   74  |  [126,83,126,158,126]  |
  4590  |                         j = j + 1;  |         |   823  |    158  |  3  |   75  |  [126,83,126,158,126]  |
  4591  |              resetPlaceHolder_2();  |         |   823  |    158  |  3  |   75  |  [126,83,126,158,126]  |
  4597  |                         R = R + 2;  |      2  |   825  |    158  |  3  |   75  |  [126,83,126,158,126]  |
  4601  |                         j = j + 1;  |         |   825  |    158  |  3  |   76  |  [126,83,126,158,126]  |
  4602  |              resetPlaceHolder_2();  |         |   825  |    158  |  3  |   76  |  [126,83,126,158,126]  |
  4608  |                         R = R + 2;  |      2  |   827  |    158  |  3  |   76  |  [126,83,126,158,126]  |
  4612  |                         j = j + 1;  |         |   827  |    158  |  3  |   77  |  [126,83,126,158,126]  |
  4613  |              resetPlaceHolder_2();  |         |   827  |    158  |  3  |   77  |  [126,83,126,158,126]  |
  4619  |                         R = R + 2;  |      2  |   829  |    158  |  3  |   77  |  [126,83,126,158,126]  |
  4623  |                         j = j + 1;  |         |   829  |    158  |  3  |   78  |  [126,83,126,158,126]  |
  4624  |              resetPlaceHolder_2();  |         |   829  |    158  |  3  |   78  |  [126,83,126,158,126]  |
  4630  |                         R = R + 2;  |      2  |   831  |    158  |  3  |   78  |  [126,83,126,158,126]  |
  4634  |                         j = j + 1;  |         |   831  |    158  |  3  |   79  |  [126,83,126,158,126]  |
  4635  |              resetPlaceHolder_2();  |         |   831  |    158  |  3  |   79  |  [126,83,126,158,126]  |
  4641  |                         R = R + 2;  |      2  |   833  |    158  |  3  |   79  |  [126,83,126,158,126]  |
  4645  |                         j = j + 1;  |         |   833  |    158  |  3  |   80  |  [126,83,126,158,126]  |
  4646  |              resetPlaceHolder_2();  |         |   833  |    158  |  3  |   80  |  [126,83,126,158,126]  |
  4652  |                         R = R + 2;  |      2  |   835  |    158  |  3  |   80  |  [126,83,126,158,126]  |
  4656  |                         j = j + 1;  |         |   835  |    158  |  3  |   81  |  [126,83,126,158,126]  |
  4657  |              resetPlaceHolder_2();  |         |   835  |    158  |  3  |   81  |  [126,83,126,158,126]  |
  4663  |                         R = R + 2;  |      2  |   837  |    158  |  3  |   81  |  [126,83,126,158,126]  |
  4667  |                         j = j + 1;  |         |   837  |    158  |  3  |   82  |  [126,83,126,158,126]  |
  4668  |              resetPlaceHolder_2();  |         |   837  |    158  |  3  |   82  |  [126,83,126,158,126]  |
  4674  |                         R = R + 2;  |      2  |   839  |    158  |  3  |   82  |  [126,83,126,158,126]  |
  4678  |                         j = j + 1;  |         |   839  |    158  |  3  |   83  |  [126,83,126,158,126]  |
  4679  |              resetPlaceHolder_2();  |         |   839  |    158  |  3  |   83  |  [126,83,126,158,126]  |
  4685  |                         R = R + 2;  |      2  |   841  |    158  |  3  |   83  |  [126,83,126,158,126]  |
  4689  |                         j = j + 1;  |         |   841  |    158  |  3  |   84  |  [126,83,126,158,126]  |
  4690  |              resetPlaceHolder_2();  |         |   841  |    158  |  3  |   84  |  [126,83,126,158,126]  |
  4696  |                         R = R + 2;  |      2  |   843  |    158  |  3  |   84  |  [126,83,126,158,126]  |
  4700  |                         j = j + 1;  |         |   843  |    158  |  3  |   85  |  [126,83,126,158,126]  |
  4701  |              resetPlaceHolder_2();  |         |   843  |    158  |  3  |   85  |  [126,83,126,158,126]  |
  4707  |                         R = R + 2;  |      2  |   845  |    158  |  3  |   85  |  [126,83,126,158,126]  |
  4711  |                         j = j + 1;  |         |   845  |    158  |  3  |   86  |  [126,83,126,158,126]  |
  4712  |              resetPlaceHolder_2();  |         |   845  |    158  |  3  |   86  |  [126,83,126,158,126]  |
  4718  |                         R = R + 2;  |      2  |   847  |    158  |  3  |   86  |  [126,83,126,158,126]  |
  4722  |                         j = j + 1;  |         |   847  |    158  |  3  |   87  |  [126,83,126,158,126]  |
  4723  |              resetPlaceHolder_2();  |         |   847  |    158  |  3  |   87  |  [126,83,126,158,126]  |
  4729  |                         R = R + 2;  |      2  |   849  |    158  |  3  |   87  |  [126,83,126,158,126]  |
  4733  |                         j = j + 1;  |         |   849  |    158  |  3  |   88  |  [126,83,126,158,126]  |
  4734  |              resetPlaceHolder_2();  |         |   849  |    158  |  3  |   88  |  [126,83,126,158,126]  |
  4740  |                         R = R + 2;  |      2  |   851  |    158  |  3  |   88  |  [126,83,126,158,126]  |
  4744  |                         j = j + 1;  |         |   851  |    158  |  3  |   89  |  [126,83,126,158,126]  |
  4745  |              resetPlaceHolder_2();  |         |   851  |    158  |  3  |   89  |  [126,83,126,158,126]  |
  4751  |                         R = R + 2;  |      2  |   853  |    158  |  3  |   89  |  [126,83,126,158,126]  |
  4755  |                         j = j + 1;  |         |   853  |    158  |  3  |   90  |  [126,83,126,158,126]  |
  4756  |              resetPlaceHolder_2();  |         |   853  |    158  |  3  |   90  |  [126,83,126,158,126]  |
  4762  |                         R = R + 2;  |      2  |   855  |    158  |  3  |   90  |  [126,83,126,158,126]  |
  4766  |                         j = j + 1;  |         |   855  |    158  |  3  |   91  |  [126,83,126,158,126]  |
  4767  |              resetPlaceHolder_2();  |         |   855  |    158  |  3  |   91  |  [126,83,126,158,126]  |
  4773  |                         R = R + 2;  |      2  |   857  |    158  |  3  |   91  |  [126,83,126,158,126]  |
  4777  |                         j = j + 1;  |         |   857  |    158  |  3  |   92  |  [126,83,126,158,126]  |
  4778  |              resetPlaceHolder_2();  |         |   857  |    158  |  3  |   92  |  [126,83,126,158,126]  |
  4784  |                         R = R + 2;  |      2  |   859  |    158  |  3  |   92  |  [126,83,126,158,126]  |
  4788  |                         j = j + 1;  |         |   859  |    158  |  3  |   93  |  [126,83,126,158,126]  |
  4789  |              resetPlaceHolder_2();  |         |   859  |    158  |  3  |   93  |  [126,83,126,158,126]  |
  4795  |                         R = R + 2;  |      2  |   861  |    158  |  3  |   93  |  [126,83,126,158,126]  |
  4799  |                         j = j + 1;  |         |   861  |    158  |  3  |   94  |  [126,83,126,158,126]  |
  4800  |              resetPlaceHolder_2();  |         |   861  |    158  |  3  |   94  |  [126,83,126,158,126]  |
  4806  |                         R = R + 2;  |      2  |   863  |    158  |  3  |   94  |  [126,83,126,158,126]  |
  4810  |                         j = j + 1;  |         |   863  |    158  |  3  |   95  |  [126,83,126,158,126]  |
  4811  |              resetPlaceHolder_2();  |         |   863  |    158  |  3  |   95  |  [126,83,126,158,126]  |
  4817  |                         R = R + 2;  |      2  |   865  |    158  |  3  |   95  |  [126,83,126,158,126]  |
  4821  |                         j = j + 1;  |         |   865  |    158  |  3  |   96  |  [126,83,126,158,126]  |
  4822  |              resetPlaceHolder_2();  |         |   865  |    158  |  3  |   96  |  [126,83,126,158,126]  |
  4828  |                         R = R + 2;  |      2  |   867  |    158  |  3  |   96  |  [126,83,126,158,126]  |
  4832  |                         j = j + 1;  |         |   867  |    158  |  3  |   97  |  [126,83,126,158,126]  |
  4833  |              resetPlaceHolder_2();  |         |   867  |    158  |  3  |   97  |  [126,83,126,158,126]  |
  4839  |                         R = R + 2;  |      2  |   869  |    158  |  3  |   97  |  [126,83,126,158,126]  |
  4843  |                         j = j + 1;  |         |   869  |    158  |  3  |   98  |  [126,83,126,158,126]  |
  4844  |              resetPlaceHolder_2();  |         |   869  |    158  |  3  |   98  |  [126,83,126,158,126]  |
  4850  |                         R = R + 2;  |      2  |   871  |    158  |  3  |   98  |  [126,83,126,158,126]  |
  4854  |                         j = j + 1;  |         |   871  |    158  |  3  |   99  |  [126,83,126,158,126]  |
  4855  |              resetPlaceHolder_2();  |         |   871  |    158  |  3  |   99  |  [126,83,126,158,126]  |
  4861  |                         R = R + 2;  |      2  |   873  |    158  |  3  |   99  |  [126,83,126,158,126]  |
  4865  |                         j = j + 1;  |         |   873  |    158  |  3  |  100  |  [126,83,126,158,126]  |
  4866  |              resetPlaceHolder_2();  |         |   873  |    158  |  3  |  100  |  [126,83,126,158,126]  |
  4872  |                         R = R + 2;  |      2  |   875  |    158  |  3  |  100  |  [126,83,126,158,126]  |
  4876  |                         j = j + 1;  |         |   875  |    158  |  3  |  101  |  [126,83,126,158,126]  |
  4877  |              resetPlaceHolder_2();  |         |   875  |    158  |  3  |  101  |  [126,83,126,158,126]  |
  4883  |                         R = R + 2;  |      2  |   877  |    158  |  3  |  101  |  [126,83,126,158,126]  |
  4887  |                         j = j + 1;  |         |   877  |    158  |  3  |  102  |  [126,83,126,158,126]  |
  4888  |              resetPlaceHolder_2();  |         |   877  |    158  |  3  |  102  |  [126,83,126,158,126]  |
  4894  |                         R = R + 2;  |      2  |   879  |    158  |  3  |  102  |  [126,83,126,158,126]  |
  4898  |                         j = j + 1;  |         |   879  |    158  |  3  |  103  |  [126,83,126,158,126]  |
  4899  |              resetPlaceHolder_2();  |         |   879  |    158  |  3  |  103  |  [126,83,126,158,126]  |
  4905  |                         R = R + 2;  |      2  |   881  |    158  |  3  |  103  |  [126,83,126,158,126]  |
  4909  |                         j = j + 1;  |         |   881  |    158  |  3  |  104  |  [126,83,126,158,126]  |
  4910  |              resetPlaceHolder_2();  |         |   881  |    158  |  3  |  104  |  [126,83,126,158,126]  |
  4916  |                         R = R + 2;  |      2  |   883  |    158  |  3  |  104  |  [126,83,126,158,126]  |
  4920  |                         j = j + 1;  |         |   883  |    158  |  3  |  105  |  [126,83,126,158,126]  |
  4921  |              resetPlaceHolder_2();  |         |   883  |    158  |  3  |  105  |  [126,83,126,158,126]  |
  4927  |                         R = R + 2;  |      2  |   885  |    158  |  3  |  105  |  [126,83,126,158,126]  |
  4931  |                         j = j + 1;  |         |   885  |    158  |  3  |  106  |  [126,83,126,158,126]  |
  4932  |              resetPlaceHolder_2();  |         |   885  |    158  |  3  |  106  |  [126,83,126,158,126]  |
  4938  |                         R = R + 2;  |      2  |   887  |    158  |  3  |  106  |  [126,83,126,158,126]  |
  4942  |                         j = j + 1;  |         |   887  |    158  |  3  |  107  |  [126,83,126,158,126]  |
  4943  |              resetPlaceHolder_2();  |         |   887  |    158  |  3  |  107  |  [126,83,126,158,126]  |
  4949  |                         R = R + 2;  |      2  |   889  |    158  |  3  |  107  |  [126,83,126,158,126]  |
  4953  |                         j = j + 1;  |         |   889  |    158  |  3  |  108  |  [126,83,126,158,126]  |
  4954  |              resetPlaceHolder_2();  |         |   889  |    158  |  3  |  108  |  [126,83,126,158,126]  |
  4960  |                         R = R + 2;  |      2  |   891  |    158  |  3  |  108  |  [126,83,126,158,126]  |
  4964  |                         j = j + 1;  |         |   891  |    158  |  3  |  109  |  [126,83,126,158,126]  |
  4965  |              resetPlaceHolder_2();  |         |   891  |    158  |  3  |  109  |  [126,83,126,158,126]  |
  4971  |                         R = R + 2;  |      2  |   893  |    158  |  3  |  109  |  [126,83,126,158,126]  |
  4975  |                         j = j + 1;  |         |   893  |    158  |  3  |  110  |  [126,83,126,158,126]  |
  4976  |              resetPlaceHolder_2();  |         |   893  |    158  |  3  |  110  |  [126,83,126,158,126]  |
  4982  |                         R = R + 2;  |      2  |   895  |    158  |  3  |  110  |  [126,83,126,158,126]  |
  4986  |                         j = j + 1;  |         |   895  |    158  |  3  |  111  |  [126,83,126,158,126]  |
  4987  |              resetPlaceHolder_2();  |         |   895  |    158  |  3  |  111  |  [126,83,126,158,126]  |
  4993  |                         R = R + 2;  |      2  |   897  |    158  |  3  |  111  |  [126,83,126,158,126]  |
  4997  |                         j = j + 1;  |         |   897  |    158  |  3  |  112  |  [126,83,126,158,126]  |
  4998  |              resetPlaceHolder_2();  |         |   897  |    158  |  3  |  112  |  [126,83,126,158,126]  |
  5004  |                         R = R + 2;  |      2  |   899  |    158  |  3  |  112  |  [126,83,126,158,126]  |
  5008  |                         j = j + 1;  |         |   899  |    158  |  3  |  113  |  [126,83,126,158,126]  |
  5009  |              resetPlaceHolder_2();  |         |   899  |    158  |  3  |  113  |  [126,83,126,158,126]  |
  5015  |                         R = R + 2;  |      2  |   901  |    158  |  3  |  113  |  [126,83,126,158,126]  |
  5019  |                         j = j + 1;  |         |   901  |    158  |  3  |  114  |  [126,83,126,158,126]  |
  5020  |              resetPlaceHolder_2();  |         |   901  |    158  |  3  |  114  |  [126,83,126,158,126]  |
  5026  |                         R = R + 2;  |      2  |   903  |    158  |  3  |  114  |  [126,83,126,158,126]  |
  5030  |                         j = j + 1;  |         |   903  |    158  |  3  |  115  |  [126,83,126,158,126]  |
  5031  |              resetPlaceHolder_2();  |         |   903  |    158  |  3  |  115  |  [126,83,126,158,126]  |
  5037  |                         R = R + 2;  |      2  |   905  |    158  |  3  |  115  |  [126,83,126,158,126]  |
  5041  |                         j = j + 1;  |         |   905  |    158  |  3  |  116  |  [126,83,126,158,126]  |
  5042  |              resetPlaceHolder_2();  |         |   905  |    158  |  3  |  116  |  [126,83,126,158,126]  |
  5048  |                         R = R + 2;  |      2  |   907  |    158  |  3  |  116  |  [126,83,126,158,126]  |
  5052  |                         j = j + 1;  |         |   907  |    158  |  3  |  117  |  [126,83,126,158,126]  |
  5053  |              resetPlaceHolder_2();  |         |   907  |    158  |  3  |  117  |  [126,83,126,158,126]  |
  5059  |                         R = R + 2;  |      2  |   909  |    158  |  3  |  117  |  [126,83,126,158,126]  |
  5063  |                         j = j + 1;  |         |   909  |    158  |  3  |  118  |  [126,83,126,158,126]  |
  5064  |              resetPlaceHolder_2();  |         |   909  |    158  |  3  |  118  |  [126,83,126,158,126]  |
  5070  |                         R = R + 2;  |      2  |   911  |    158  |  3  |  118  |  [126,83,126,158,126]  |
  5074  |                         j = j + 1;  |         |   911  |    158  |  3  |  119  |  [126,83,126,158,126]  |
  5075  |              resetPlaceHolder_2();  |         |   911  |    158  |  3  |  119  |  [126,83,126,158,126]  |
  5081  |                         R = R + 2;  |      2  |   913  |    158  |  3  |  119  |  [126,83,126,158,126]  |
  5085  |                         j = j + 1;  |         |   913  |    158  |  3  |  120  |  [126,83,126,158,126]  |
  5086  |              resetPlaceHolder_2();  |         |   913  |    158  |  3  |  120  |  [126,83,126,158,126]  |
  5092  |                         R = R + 2;  |      2  |   915  |    158  |  3  |  120  |  [126,83,126,158,126]  |
  5096  |                         j = j + 1;  |         |   915  |    158  |  3  |  121  |  [126,83,126,158,126]  |
  5097  |              resetPlaceHolder_2();  |         |   915  |    158  |  3  |  121  |  [126,83,126,158,126]  |
  5103  |                         R = R + 2;  |      2  |   917  |    158  |  3  |  121  |  [126,83,126,158,126]  |
  5107  |                         j = j + 1;  |         |   917  |    158  |  3  |  122  |  [126,83,126,158,126]  |
  5108  |              resetPlaceHolder_2();  |         |   917  |    158  |  3  |  122  |  [126,83,126,158,126]  |
  5114  |                         R = R + 2;  |      2  |   919  |    158  |  3  |  122  |  [126,83,126,158,126]  |
  5118  |                         j = j + 1;  |         |   919  |    158  |  3  |  123  |  [126,83,126,158,126]  |
  5119  |              resetPlaceHolder_2();  |         |   919  |    158  |  3  |  123  |  [126,83,126,158,126]  |
  5125  |                         R = R + 2;  |      2  |   921  |    158  |  3  |  123  |  [126,83,126,158,126]  |
  5129  |                         j = j + 1;  |         |   921  |    158  |  3  |  124  |  [126,83,126,158,126]  |
  5130  |              resetPlaceHolder_2();  |         |   921  |    158  |  3  |  124  |  [126,83,126,158,126]  |
  5136  |                         R = R + 2;  |      2  |   923  |    158  |  3  |  124  |  [126,83,126,158,126]  |
  5140  |                         j = j + 1;  |         |   923  |    158  |  3  |  125  |  [126,83,126,158,126]  |
  5141  |              resetPlaceHolder_2();  |         |   923  |    158  |  3  |  125  |  [126,83,126,158,126]  |
  5147  |                         R = R + 2;  |      2  |   925  |    158  |  3  |  125  |  [126,83,126,158,126]  |
  5151  |                         j = j + 1;  |         |   925  |    158  |  3  |  126  |  [126,83,126,158,126]  |
  5152  |              resetPlaceHolder_2();  |         |   925  |    158  |  3  |  126  |  [126,83,126,158,126]  |
  5158  |                         R = R + 2;  |      2  |   927  |    158  |  3  |  126  |  [126,83,126,158,126]  |
  5162  |                         j = j + 1;  |         |   927  |    158  |  3  |  127  |  [126,83,126,158,126]  |
  5163  |              resetPlaceHolder_2();  |         |   927  |    158  |  3  |  127  |  [126,83,126,158,126]  |
  5169  |                         R = R + 2;  |      2  |   929  |    158  |  3  |  127  |  [126,83,126,158,126]  |
  5173  |                         j = j + 1;  |         |   929  |    158  |  3  |  128  |  [126,83,126,158,126]  |
  5174  |              resetPlaceHolder_2();  |         |   929  |    158  |  3  |  128  |  [126,83,126,158,126]  |
  5180  |                         R = R + 2;  |      2  |   931  |    158  |  3  |  128  |  [126,83,126,158,126]  |
  5184  |                         j = j + 1;  |         |   931  |    158  |  3  |  129  |  [126,83,126,158,126]  |
  5185  |              resetPlaceHolder_2();  |         |   931  |    158  |  3  |  129  |  [126,83,126,158,126]  |
  5191  |                         R = R + 2;  |      2  |   933  |    158  |  3  |  129  |  [126,83,126,158,126]  |
  5195  |                         j = j + 1;  |         |   933  |    158  |  3  |  130  |  [126,83,126,158,126]  |
  5196  |              resetPlaceHolder_2();  |         |   933  |    158  |  3  |  130  |  [126,83,126,158,126]  |
  5202  |                         R = R + 2;  |      2  |   935  |    158  |  3  |  130  |  [126,83,126,158,126]  |
  5206  |                         j = j + 1;  |         |   935  |    158  |  3  |  131  |  [126,83,126,158,126]  |
  5207  |              resetPlaceHolder_2();  |         |   935  |    158  |  3  |  131  |  [126,83,126,158,126]  |
  5213  |                         R = R + 2;  |      2  |   937  |    158  |  3  |  131  |  [126,83,126,158,126]  |
  5217  |                         j = j + 1;  |         |   937  |    158  |  3  |  132  |  [126,83,126,158,126]  |
  5218  |              resetPlaceHolder_2();  |         |   937  |    158  |  3  |  132  |  [126,83,126,158,126]  |
  5224  |                         R = R + 2;  |      2  |   939  |    158  |  3  |  132  |  [126,83,126,158,126]  |
  5228  |                         j = j + 1;  |         |   939  |    158  |  3  |  133  |  [126,83,126,158,126]  |
  5229  |              resetPlaceHolder_2();  |         |   939  |    158  |  3  |  133  |  [126,83,126,158,126]  |
  5235  |                         R = R + 2;  |      2  |   941  |    158  |  3  |  133  |  [126,83,126,158,126]  |
  5239  |                         j = j + 1;  |         |   941  |    158  |  3  |  134  |  [126,83,126,158,126]  |
  5240  |              resetPlaceHolder_2();  |         |   941  |    158  |  3  |  134  |  [126,83,126,158,126]  |
  5246  |                         R = R + 2;  |      2  |   943  |    158  |  3  |  134  |  [126,83,126,158,126]  |
  5250  |                         j = j + 1;  |         |   943  |    158  |  3  |  135  |  [126,83,126,158,126]  |
  5251  |              resetPlaceHolder_2();  |         |   943  |    158  |  3  |  135  |  [126,83,126,158,126]  |
  5257  |                         R = R + 2;  |      2  |   945  |    158  |  3  |  135  |  [126,83,126,158,126]  |
  5261  |                         j = j + 1;  |         |   945  |    158  |  3  |  136  |  [126,83,126,158,126]  |
  5262  |              resetPlaceHolder_2();  |         |   945  |    158  |  3  |  136  |  [126,83,126,158,126]  |
  5268  |                         R = R + 2;  |      2  |   947  |    158  |  3  |  136  |  [126,83,126,158,126]  |
  5272  |                         j = j + 1;  |         |   947  |    158  |  3  |  137  |  [126,83,126,158,126]  |
  5273  |              resetPlaceHolder_2();  |         |   947  |    158  |  3  |  137  |  [126,83,126,158,126]  |
  5279  |                         R = R + 2;  |      2  |   949  |    158  |  3  |  137  |  [126,83,126,158,126]  |
  5283  |                         j = j + 1;  |         |   949  |    158  |  3  |  138  |  [126,83,126,158,126]  |
  5284  |              resetPlaceHolder_2();  |         |   949  |    158  |  3  |  138  |  [126,83,126,158,126]  |
  5290  |                         R = R + 2;  |      2  |   951  |    158  |  3  |  138  |  [126,83,126,158,126]  |
  5294  |                         j = j + 1;  |         |   951  |    158  |  3  |  139  |  [126,83,126,158,126]  |
  5295  |              resetPlaceHolder_2();  |         |   951  |    158  |  3  |  139  |  [126,83,126,158,126]  |
  5301  |                         R = R + 2;  |      2  |   953  |    158  |  3  |  139  |  [126,83,126,158,126]  |
  5305  |                         j = j + 1;  |         |   953  |    158  |  3  |  140  |  [126,83,126,158,126]  |
  5306  |              resetPlaceHolder_2();  |         |   953  |    158  |  3  |  140  |  [126,83,126,158,126]  |
  5312  |                         R = R + 2;  |      2  |   955  |    158  |  3  |  140  |  [126,83,126,158,126]  |
  5316  |                         j = j + 1;  |         |   955  |    158  |  3  |  141  |  [126,83,126,158,126]  |
  5317  |              resetPlaceHolder_2();  |         |   955  |    158  |  3  |  141  |  [126,83,126,158,126]  |
  5323  |                         R = R + 2;  |      2  |   957  |    158  |  3  |  141  |  [126,83,126,158,126]  |
  5327  |                         j = j + 1;  |         |   957  |    158  |  3  |  142  |  [126,83,126,158,126]  |
  5328  |              resetPlaceHolder_2();  |         |   957  |    158  |  3  |  142  |  [126,83,126,158,126]  |
  5334  |                         R = R + 2;  |      2  |   959  |    158  |  3  |  142  |  [126,83,126,158,126]  |
  5338  |                         j = j + 1;  |         |   959  |    158  |  3  |  143  |  [126,83,126,158,126]  |
  5339  |              resetPlaceHolder_2();  |         |   959  |    158  |  3  |  143  |  [126,83,126,158,126]  |
  5345  |                         R = R + 2;  |      2  |   961  |    158  |  3  |  143  |  [126,83,126,158,126]  |
  5349  |                         j = j + 1;  |         |   961  |    158  |  3  |  144  |  [126,83,126,158,126]  |
  5350  |              resetPlaceHolder_2();  |         |   961  |    158  |  3  |  144  |  [126,83,126,158,126]  |
  5356  |                         R = R + 2;  |      2  |   963  |    158  |  3  |  144  |  [126,83,126,158,126]  |
  5360  |                         j = j + 1;  |         |   963  |    158  |  3  |  145  |  [126,83,126,158,126]  |
  5361  |              resetPlaceHolder_2();  |         |   963  |    158  |  3  |  145  |  [126,83,126,158,126]  |
  5367  |                         R = R + 2;  |      2  |   965  |    158  |  3  |  145  |  [126,83,126,158,126]  |
  5371  |                         j = j + 1;  |         |   965  |    158  |  3  |  146  |  [126,83,126,158,126]  |
  5372  |              resetPlaceHolder_2();  |         |   965  |    158  |  3  |  146  |  [126,83,126,158,126]  |
  5378  |                         R = R + 2;  |      2  |   967  |    158  |  3  |  146  |  [126,83,126,158,126]  |
  5382  |                         j = j + 1;  |         |   967  |    158  |  3  |  147  |  [126,83,126,158,126]  |
  5383  |              resetPlaceHolder_2();  |         |   967  |    158  |  3  |  147  |  [126,83,126,158,126]  |
  5389  |                         R = R + 2;  |      2  |   969  |    158  |  3  |  147  |  [126,83,126,158,126]  |
  5393  |                         j = j + 1;  |         |   969  |    158  |  3  |  148  |  [126,83,126,158,126]  |
  5394  |              resetPlaceHolder_2();  |         |   969  |    158  |  3  |  148  |  [126,83,126,158,126]  |
  5400  |                         R = R + 2;  |      2  |   971  |    158  |  3  |  148  |  [126,83,126,158,126]  |
  5404  |                         j = j + 1;  |         |   971  |    158  |  3  |  149  |  [126,83,126,158,126]  |
  5405  |              resetPlaceHolder_2();  |         |   971  |    158  |  3  |  149  |  [126,83,126,158,126]  |
  5411  |                         R = R + 2;  |      2  |   973  |    158  |  3  |  149  |  [126,83,126,158,126]  |
  5415  |                         j = j + 1;  |         |   973  |    158  |  3  |  150  |  [126,83,126,158,126]  |
  5416  |              resetPlaceHolder_2();  |         |   973  |    158  |  3  |  150  |  [126,83,126,158,126]  |
  5422  |                         R = R + 2;  |      2  |   975  |    158  |  3  |  150  |  [126,83,126,158,126]  |
  5426  |                         j = j + 1;  |         |   975  |    158  |  3  |  151  |  [126,83,126,158,126]  |
  5427  |              resetPlaceHolder_2();  |         |   975  |    158  |  3  |  151  |  [126,83,126,158,126]  |
  5433  |                         R = R + 2;  |      2  |   977  |    158  |  3  |  151  |  [126,83,126,158,126]  |
  5437  |                         j = j + 1;  |         |   977  |    158  |  3  |  152  |  [126,83,126,158,126]  |
  5438  |              resetPlaceHolder_2();  |         |   977  |    158  |  3  |  152  |  [126,83,126,158,126]  |
  5444  |                         R = R + 2;  |      2  |   979  |    158  |  3  |  152  |  [126,83,126,158,126]  |
  5448  |                         j = j + 1;  |         |   979  |    158  |  3  |  153  |  [126,83,126,158,126]  |
  5449  |              resetPlaceHolder_2();  |         |   979  |    158  |  3  |  153  |  [126,83,126,158,126]  |
  5455  |                         R = R + 2;  |      2  |   981  |    158  |  3  |  153  |  [126,83,126,158,126]  |
  5459  |                         j = j + 1;  |         |   981  |    158  |  3  |  154  |  [126,83,126,158,126]  |
  5460  |              resetPlaceHolder_2();  |         |   981  |    158  |  3  |  154  |  [126,83,126,158,126]  |
  5466  |                         R = R + 2;  |      2  |   983  |    158  |  3  |  154  |  [126,83,126,158,126]  |
  5470  |                         j = j + 1;  |         |   983  |    158  |  3  |  155  |  [126,83,126,158,126]  |
  5471  |              resetPlaceHolder_2();  |         |   983  |    158  |  3  |  155  |  [126,83,126,158,126]  |
  5477  |                         R = R + 2;  |      2  |   985  |    158  |  3  |  155  |  [126,83,126,158,126]  |
  5481  |                         j = j + 1;  |         |   985  |    158  |  3  |  156  |  [126,83,126,158,126]  |
  5482  |              resetPlaceHolder_2();  |         |   985  |    158  |  3  |  156  |  [126,83,126,158,126]  |
  5488  |                         R = R + 2;  |      2  |   987  |    158  |  3  |  156  |  [126,83,126,158,126]  |
  5492  |                         j = j + 1;  |         |   987  |    158  |  3  |  157  |  [126,83,126,158,126]  |
  5493  |              resetPlaceHolder_2();  |         |   987  |    158  |  3  |  157  |  [126,83,126,158,126]  |
  5499  |                         R = R + 2;  |      2  |   989  |    158  |  3  |  157  |  [126,83,126,158,126]  |
  5503  |                         j = j + 1;  |         |   989  |    158  |  3  |  158  |  [126,83,126,158,126]  |
  5504  |              resetPlaceHolder_2();  |         |   989  |    158  |  3  |  158  |  [126,83,126,158,126]  |
  5510  |                         R = R + 1;  |      1  |   990  |    158  |  3  |  158  |  [126,83,126,158,126]  |
  5514  |                         i = i + 1;  |         |   990  |    158  |  4  |  158  |  [126,83,126,158,126]  |
  5515  |              resetPlaceHolder_1();  |         |   990  |    158  |  4  |  158  |  [126,83,126,158,126]  |
  5521  |      entry = arrayRead(sorted, i);  |         |   990  |    126  |  4  |  158  |  [126,83,126,158,126]  |
  5523  |                         int j = 0;  |         |   990  |    126  |  4  |    0  |  [126,83,126,158,126]  |
  5529  |                         R = R + 2;  |      2  |   992  |    126  |  4  |    0  |  [126,83,126,158,126]  |
  5533  |                         j = j + 1;  |         |   992  |    126  |  4  |    1  |  [126,83,126,158,126]  |
  5534  |              resetPlaceHolder_2();  |         |   992  |    126  |  4  |    1  |  [126,83,126,158,126]  |
  5540  |                         R = R + 2;  |      2  |   994  |    126  |  4  |    1  |  [126,83,126,158,126]  |
  5544  |                         j = j + 1;  |         |   994  |    126  |  4  |    2  |  [126,83,126,158,126]  |
  5545  |              resetPlaceHolder_2();  |         |   994  |    126  |  4  |    2  |  [126,83,126,158,126]  |
  5551  |                         R = R + 2;  |      2  |   996  |    126  |  4  |    2  |  [126,83,126,158,126]  |
  5555  |                         j = j + 1;  |         |   996  |    126  |  4  |    3  |  [126,83,126,158,126]  |
  5556  |              resetPlaceHolder_2();  |         |   996  |    126  |  4  |    3  |  [126,83,126,158,126]  |
  5562  |                         R = R + 2;  |      2  |   998  |    126  |  4  |    3  |  [126,83,126,158,126]  |
  5566  |                         j = j + 1;  |         |   998  |    126  |  4  |    4  |  [126,83,126,158,126]  |
  5567  |              resetPlaceHolder_2();  |         |   998  |    126  |  4  |    4  |  [126,83,126,158,126]  |
  5573  |                         R = R + 2;  |      2  |  1000  |    126  |  4  |    4  |  [126,83,126,158,126]  |
  5577  |                         j = j + 1;  |         |  1000  |    126  |  4  |    5  |  [126,83,126,158,126]  |
  5578  |              resetPlaceHolder_2();  |         |  1000  |    126  |  4  |    5  |  [126,83,126,158,126]  |
  5584  |                         R = R + 2;  |      2  |  1002  |    126  |  4  |    5  |  [126,83,126,158,126]  |
  5588  |                         j = j + 1;  |         |  1002  |    126  |  4  |    6  |  [126,83,126,158,126]  |
  5589  |              resetPlaceHolder_2();  |         |  1002  |    126  |  4  |    6  |  [126,83,126,158,126]  |
  5595  |                         R = R + 2;  |      2  |  1004  |    126  |  4  |    6  |  [126,83,126,158,126]  |
  5599  |                         j = j + 1;  |         |  1004  |    126  |  4  |    7  |  [126,83,126,158,126]  |
  5600  |              resetPlaceHolder_2();  |         |  1004  |    126  |  4  |    7  |  [126,83,126,158,126]  |
  5606  |                         R = R + 2;  |      2  |  1006  |    126  |  4  |    7  |  [126,83,126,158,126]  |
  5610  |                         j = j + 1;  |         |  1006  |    126  |  4  |    8  |  [126,83,126,158,126]  |
  5611  |              resetPlaceHolder_2();  |         |  1006  |    126  |  4  |    8  |  [126,83,126,158,126]  |
  5617  |                         R = R + 2;  |      2  |  1008  |    126  |  4  |    8  |  [126,83,126,158,126]  |
  5621  |                         j = j + 1;  |         |  1008  |    126  |  4  |    9  |  [126,83,126,158,126]  |
  5622  |              resetPlaceHolder_2();  |         |  1008  |    126  |  4  |    9  |  [126,83,126,158,126]  |
  5628  |                         R = R + 2;  |      2  |  1010  |    126  |  4  |    9  |  [126,83,126,158,126]  |
  5632  |                         j = j + 1;  |         |  1010  |    126  |  4  |   10  |  [126,83,126,158,126]  |
  5633  |              resetPlaceHolder_2();  |         |  1010  |    126  |  4  |   10  |  [126,83,126,158,126]  |
  5639  |                         R = R + 2;  |      2  |  1012  |    126  |  4  |   10  |  [126,83,126,158,126]  |
  5643  |                         j = j + 1;  |         |  1012  |    126  |  4  |   11  |  [126,83,126,158,126]  |
  5644  |              resetPlaceHolder_2();  |         |  1012  |    126  |  4  |   11  |  [126,83,126,158,126]  |
  5650  |                         R = R + 2;  |      2  |  1014  |    126  |  4  |   11  |  [126,83,126,158,126]  |
  5654  |                         j = j + 1;  |         |  1014  |    126  |  4  |   12  |  [126,83,126,158,126]  |
  5655  |              resetPlaceHolder_2();  |         |  1014  |    126  |  4  |   12  |  [126,83,126,158,126]  |
  5661  |                         R = R + 2;  |      2  |  1016  |    126  |  4  |   12  |  [126,83,126,158,126]  |
  5665  |                         j = j + 1;  |         |  1016  |    126  |  4  |   13  |  [126,83,126,158,126]  |
  5666  |              resetPlaceHolder_2();  |         |  1016  |    126  |  4  |   13  |  [126,83,126,158,126]  |
  5672  |                         R = R + 2;  |      2  |  1018  |    126  |  4  |   13  |  [126,83,126,158,126]  |
  5676  |                         j = j + 1;  |         |  1018  |    126  |  4  |   14  |  [126,83,126,158,126]  |
  5677  |              resetPlaceHolder_2();  |         |  1018  |    126  |  4  |   14  |  [126,83,126,158,126]  |
  5683  |                         R = R + 2;  |      2  |  1020  |    126  |  4  |   14  |  [126,83,126,158,126]  |
  5687  |                         j = j + 1;  |         |  1020  |    126  |  4  |   15  |  [126,83,126,158,126]  |
  5688  |              resetPlaceHolder_2();  |         |  1020  |    126  |  4  |   15  |  [126,83,126,158,126]  |
  5694  |                         R = R + 2;  |      2  |  1022  |    126  |  4  |   15  |  [126,83,126,158,126]  |
  5698  |                         j = j + 1;  |         |  1022  |    126  |  4  |   16  |  [126,83,126,158,126]  |
  5699  |              resetPlaceHolder_2();  |         |  1022  |    126  |  4  |   16  |  [126,83,126,158,126]  |
  5705  |                         R = R + 2;  |      2  |  1024  |    126  |  4  |   16  |  [126,83,126,158,126]  |
  5709  |                         j = j + 1;  |         |  1024  |    126  |  4  |   17  |  [126,83,126,158,126]  |
  5710  |              resetPlaceHolder_2();  |         |  1024  |    126  |  4  |   17  |  [126,83,126,158,126]  |
  5716  |                         R = R + 2;  |      2  |  1026  |    126  |  4  |   17  |  [126,83,126,158,126]  |
  5720  |                         j = j + 1;  |         |  1026  |    126  |  4  |   18  |  [126,83,126,158,126]  |
  5721  |              resetPlaceHolder_2();  |         |  1026  |    126  |  4  |   18  |  [126,83,126,158,126]  |
  5727  |                         R = R + 2;  |      2  |  1028  |    126  |  4  |   18  |  [126,83,126,158,126]  |
  5731  |                         j = j + 1;  |         |  1028  |    126  |  4  |   19  |  [126,83,126,158,126]  |
  5732  |              resetPlaceHolder_2();  |         |  1028  |    126  |  4  |   19  |  [126,83,126,158,126]  |
  5738  |                         R = R + 2;  |      2  |  1030  |    126  |  4  |   19  |  [126,83,126,158,126]  |
  5742  |                         j = j + 1;  |         |  1030  |    126  |  4  |   20  |  [126,83,126,158,126]  |
  5743  |              resetPlaceHolder_2();  |         |  1030  |    126  |  4  |   20  |  [126,83,126,158,126]  |
  5749  |                         R = R + 2;  |      2  |  1032  |    126  |  4  |   20  |  [126,83,126,158,126]  |
  5753  |                         j = j + 1;  |         |  1032  |    126  |  4  |   21  |  [126,83,126,158,126]  |
  5754  |              resetPlaceHolder_2();  |         |  1032  |    126  |  4  |   21  |  [126,83,126,158,126]  |
  5760  |                         R = R + 2;  |      2  |  1034  |    126  |  4  |   21  |  [126,83,126,158,126]  |
  5764  |                         j = j + 1;  |         |  1034  |    126  |  4  |   22  |  [126,83,126,158,126]  |
  5765  |              resetPlaceHolder_2();  |         |  1034  |    126  |  4  |   22  |  [126,83,126,158,126]  |
  5771  |                         R = R + 2;  |      2  |  1036  |    126  |  4  |   22  |  [126,83,126,158,126]  |
  5775  |                         j = j + 1;  |         |  1036  |    126  |  4  |   23  |  [126,83,126,158,126]  |
  5776  |              resetPlaceHolder_2();  |         |  1036  |    126  |  4  |   23  |  [126,83,126,158,126]  |
  5782  |                         R = R + 2;  |      2  |  1038  |    126  |  4  |   23  |  [126,83,126,158,126]  |
  5786  |                         j = j + 1;  |         |  1038  |    126  |  4  |   24  |  [126,83,126,158,126]  |
  5787  |              resetPlaceHolder_2();  |         |  1038  |    126  |  4  |   24  |  [126,83,126,158,126]  |
  5793  |                         R = R + 2;  |      2  |  1040  |    126  |  4  |   24  |  [126,83,126,158,126]  |
  5797  |                         j = j + 1;  |         |  1040  |    126  |  4  |   25  |  [126,83,126,158,126]  |
  5798  |              resetPlaceHolder_2();  |         |  1040  |    126  |  4  |   25  |  [126,83,126,158,126]  |
  5804  |                         R = R + 2;  |      2  |  1042  |    126  |  4  |   25  |  [126,83,126,158,126]  |
  5808  |                         j = j + 1;  |         |  1042  |    126  |  4  |   26  |  [126,83,126,158,126]  |
  5809  |              resetPlaceHolder_2();  |         |  1042  |    126  |  4  |   26  |  [126,83,126,158,126]  |
  5815  |                         R = R + 2;  |      2  |  1044  |    126  |  4  |   26  |  [126,83,126,158,126]  |
  5819  |                         j = j + 1;  |         |  1044  |    126  |  4  |   27  |  [126,83,126,158,126]  |
  5820  |              resetPlaceHolder_2();  |         |  1044  |    126  |  4  |   27  |  [126,83,126,158,126]  |
  5826  |                         R = R + 2;  |      2  |  1046  |    126  |  4  |   27  |  [126,83,126,158,126]  |
  5830  |                         j = j + 1;  |         |  1046  |    126  |  4  |   28  |  [126,83,126,158,126]  |
  5831  |              resetPlaceHolder_2();  |         |  1046  |    126  |  4  |   28  |  [126,83,126,158,126]  |
  5837  |                         R = R + 2;  |      2  |  1048  |    126  |  4  |   28  |  [126,83,126,158,126]  |
  5841  |                         j = j + 1;  |         |  1048  |    126  |  4  |   29  |  [126,83,126,158,126]  |
  5842  |              resetPlaceHolder_2();  |         |  1048  |    126  |  4  |   29  |  [126,83,126,158,126]  |
  5848  |                         R = R + 2;  |      2  |  1050  |    126  |  4  |   29  |  [126,83,126,158,126]  |
  5852  |                         j = j + 1;  |         |  1050  |    126  |  4  |   30  |  [126,83,126,158,126]  |
  5853  |              resetPlaceHolder_2();  |         |  1050  |    126  |  4  |   30  |  [126,83,126,158,126]  |
  5859  |                         R = R + 2;  |      2  |  1052  |    126  |  4  |   30  |  [126,83,126,158,126]  |
  5863  |                         j = j + 1;  |         |  1052  |    126  |  4  |   31  |  [126,83,126,158,126]  |
  5864  |              resetPlaceHolder_2();  |         |  1052  |    126  |  4  |   31  |  [126,83,126,158,126]  |
  5870  |                         R = R + 2;  |      2  |  1054  |    126  |  4  |   31  |  [126,83,126,158,126]  |
  5874  |                         j = j + 1;  |         |  1054  |    126  |  4  |   32  |  [126,83,126,158,126]  |
  5875  |              resetPlaceHolder_2();  |         |  1054  |    126  |  4  |   32  |  [126,83,126,158,126]  |
  5881  |                         R = R + 2;  |      2  |  1056  |    126  |  4  |   32  |  [126,83,126,158,126]  |
  5885  |                         j = j + 1;  |         |  1056  |    126  |  4  |   33  |  [126,83,126,158,126]  |
  5886  |              resetPlaceHolder_2();  |         |  1056  |    126  |  4  |   33  |  [126,83,126,158,126]  |
  5892  |                         R = R + 2;  |      2  |  1058  |    126  |  4  |   33  |  [126,83,126,158,126]  |
  5896  |                         j = j + 1;  |         |  1058  |    126  |  4  |   34  |  [126,83,126,158,126]  |
  5897  |              resetPlaceHolder_2();  |         |  1058  |    126  |  4  |   34  |  [126,83,126,158,126]  |
  5903  |                         R = R + 2;  |      2  |  1060  |    126  |  4  |   34  |  [126,83,126,158,126]  |
  5907  |                         j = j + 1;  |         |  1060  |    126  |  4  |   35  |  [126,83,126,158,126]  |
  5908  |              resetPlaceHolder_2();  |         |  1060  |    126  |  4  |   35  |  [126,83,126,158,126]  |
  5914  |                         R = R + 2;  |      2  |  1062  |    126  |  4  |   35  |  [126,83,126,158,126]  |
  5918  |                         j = j + 1;  |         |  1062  |    126  |  4  |   36  |  [126,83,126,158,126]  |
  5919  |              resetPlaceHolder_2();  |         |  1062  |    126  |  4  |   36  |  [126,83,126,158,126]  |
  5925  |                         R = R + 2;  |      2  |  1064  |    126  |  4  |   36  |  [126,83,126,158,126]  |
  5929  |                         j = j + 1;  |         |  1064  |    126  |  4  |   37  |  [126,83,126,158,126]  |
  5930  |              resetPlaceHolder_2();  |         |  1064  |    126  |  4  |   37  |  [126,83,126,158,126]  |
  5936  |                         R = R + 2;  |      2  |  1066  |    126  |  4  |   37  |  [126,83,126,158,126]  |
  5940  |                         j = j + 1;  |         |  1066  |    126  |  4  |   38  |  [126,83,126,158,126]  |
  5941  |              resetPlaceHolder_2();  |         |  1066  |    126  |  4  |   38  |  [126,83,126,158,126]  |
  5947  |                         R = R + 2;  |      2  |  1068  |    126  |  4  |   38  |  [126,83,126,158,126]  |
  5951  |                         j = j + 1;  |         |  1068  |    126  |  4  |   39  |  [126,83,126,158,126]  |
  5952  |              resetPlaceHolder_2();  |         |  1068  |    126  |  4  |   39  |  [126,83,126,158,126]  |
  5958  |                         R = R + 2;  |      2  |  1070  |    126  |  4  |   39  |  [126,83,126,158,126]  |
  5962  |                         j = j + 1;  |         |  1070  |    126  |  4  |   40  |  [126,83,126,158,126]  |
  5963  |              resetPlaceHolder_2();  |         |  1070  |    126  |  4  |   40  |  [126,83,126,158,126]  |
  5969  |                         R = R + 2;  |      2  |  1072  |    126  |  4  |   40  |  [126,83,126,158,126]  |
  5973  |                         j = j + 1;  |         |  1072  |    126  |  4  |   41  |  [126,83,126,158,126]  |
  5974  |              resetPlaceHolder_2();  |         |  1072  |    126  |  4  |   41  |  [126,83,126,158,126]  |
  5980  |                         R = R + 2;  |      2  |  1074  |    126  |  4  |   41  |  [126,83,126,158,126]  |
  5984  |                         j = j + 1;  |         |  1074  |    126  |  4  |   42  |  [126,83,126,158,126]  |
  5985  |              resetPlaceHolder_2();  |         |  1074  |    126  |  4  |   42  |  [126,83,126,158,126]  |
  5991  |                         R = R + 2;  |      2  |  1076  |    126  |  4  |   42  |  [126,83,126,158,126]  |
  5995  |                         j = j + 1;  |         |  1076  |    126  |  4  |   43  |  [126,83,126,158,126]  |
  5996  |              resetPlaceHolder_2();  |         |  1076  |    126  |  4  |   43  |  [126,83,126,158,126]  |
  6002  |                         R = R + 2;  |      2  |  1078  |    126  |  4  |   43  |  [126,83,126,158,126]  |
  6006  |                         j = j + 1;  |         |  1078  |    126  |  4  |   44  |  [126,83,126,158,126]  |
  6007  |              resetPlaceHolder_2();  |         |  1078  |    126  |  4  |   44  |  [126,83,126,158,126]  |
  6013  |                         R = R + 2;  |      2  |  1080  |    126  |  4  |   44  |  [126,83,126,158,126]  |
  6017  |                         j = j + 1;  |         |  1080  |    126  |  4  |   45  |  [126,83,126,158,126]  |
  6018  |              resetPlaceHolder_2();  |         |  1080  |    126  |  4  |   45  |  [126,83,126,158,126]  |
  6024  |                         R = R + 2;  |      2  |  1082  |    126  |  4  |   45  |  [126,83,126,158,126]  |
  6028  |                         j = j + 1;  |         |  1082  |    126  |  4  |   46  |  [126,83,126,158,126]  |
  6029  |              resetPlaceHolder_2();  |         |  1082  |    126  |  4  |   46  |  [126,83,126,158,126]  |
  6035  |                         R = R + 2;  |      2  |  1084  |    126  |  4  |   46  |  [126,83,126,158,126]  |
  6039  |                         j = j + 1;  |         |  1084  |    126  |  4  |   47  |  [126,83,126,158,126]  |
  6040  |              resetPlaceHolder_2();  |         |  1084  |    126  |  4  |   47  |  [126,83,126,158,126]  |
  6046  |                         R = R + 2;  |      2  |  1086  |    126  |  4  |   47  |  [126,83,126,158,126]  |
  6050  |                         j = j + 1;  |         |  1086  |    126  |  4  |   48  |  [126,83,126,158,126]  |
  6051  |              resetPlaceHolder_2();  |         |  1086  |    126  |  4  |   48  |  [126,83,126,158,126]  |
  6057  |                         R = R + 2;  |      2  |  1088  |    126  |  4  |   48  |  [126,83,126,158,126]  |
  6061  |                         j = j + 1;  |         |  1088  |    126  |  4  |   49  |  [126,83,126,158,126]  |
  6062  |              resetPlaceHolder_2();  |         |  1088  |    126  |  4  |   49  |  [126,83,126,158,126]  |
  6068  |                         R = R + 2;  |      2  |  1090  |    126  |  4  |   49  |  [126,83,126,158,126]  |
  6072  |                         j = j + 1;  |         |  1090  |    126  |  4  |   50  |  [126,83,126,158,126]  |
  6073  |              resetPlaceHolder_2();  |         |  1090  |    126  |  4  |   50  |  [126,83,126,158,126]  |
  6079  |                         R = R + 2;  |      2  |  1092  |    126  |  4  |   50  |  [126,83,126,158,126]  |
  6083  |                         j = j + 1;  |         |  1092  |    126  |  4  |   51  |  [126,83,126,158,126]  |
  6084  |              resetPlaceHolder_2();  |         |  1092  |    126  |  4  |   51  |  [126,83,126,158,126]  |
  6090  |                         R = R + 2;  |      2  |  1094  |    126  |  4  |   51  |  [126,83,126,158,126]  |
  6094  |                         j = j + 1;  |         |  1094  |    126  |  4  |   52  |  [126,83,126,158,126]  |
  6095  |              resetPlaceHolder_2();  |         |  1094  |    126  |  4  |   52  |  [126,83,126,158,126]  |
  6101  |                         R = R + 2;  |      2  |  1096  |    126  |  4  |   52  |  [126,83,126,158,126]  |
  6105  |                         j = j + 1;  |         |  1096  |    126  |  4  |   53  |  [126,83,126,158,126]  |
  6106  |              resetPlaceHolder_2();  |         |  1096  |    126  |  4  |   53  |  [126,83,126,158,126]  |
  6112  |                         R = R + 2;  |      2  |  1098  |    126  |  4  |   53  |  [126,83,126,158,126]  |
  6116  |                         j = j + 1;  |         |  1098  |    126  |  4  |   54  |  [126,83,126,158,126]  |
  6117  |              resetPlaceHolder_2();  |         |  1098  |    126  |  4  |   54  |  [126,83,126,158,126]  |
  6123  |                         R = R + 2;  |      2  |  1100  |    126  |  4  |   54  |  [126,83,126,158,126]  |
  6127  |                         j = j + 1;  |         |  1100  |    126  |  4  |   55  |  [126,83,126,158,126]  |
  6128  |              resetPlaceHolder_2();  |         |  1100  |    126  |  4  |   55  |  [126,83,126,158,126]  |
  6134  |                         R = R + 2;  |      2  |  1102  |    126  |  4  |   55  |  [126,83,126,158,126]  |
  6138  |                         j = j + 1;  |         |  1102  |    126  |  4  |   56  |  [126,83,126,158,126]  |
  6139  |              resetPlaceHolder_2();  |         |  1102  |    126  |  4  |   56  |  [126,83,126,158,126]  |
  6145  |                         R = R + 2;  |      2  |  1104  |    126  |  4  |   56  |  [126,83,126,158,126]  |
  6149  |                         j = j + 1;  |         |  1104  |    126  |  4  |   57  |  [126,83,126,158,126]  |
  6150  |              resetPlaceHolder_2();  |         |  1104  |    126  |  4  |   57  |  [126,83,126,158,126]  |
  6156  |                         R = R + 2;  |      2  |  1106  |    126  |  4  |   57  |  [126,83,126,158,126]  |
  6160  |                         j = j + 1;  |         |  1106  |    126  |  4  |   58  |  [126,83,126,158,126]  |
  6161  |              resetPlaceHolder_2();  |         |  1106  |    126  |  4  |   58  |  [126,83,126,158,126]  |
  6167  |                         R = R + 2;  |      2  |  1108  |    126  |  4  |   58  |  [126,83,126,158,126]  |
  6171  |                         j = j + 1;  |         |  1108  |    126  |  4  |   59  |  [126,83,126,158,126]  |
  6172  |              resetPlaceHolder_2();  |         |  1108  |    126  |  4  |   59  |  [126,83,126,158,126]  |
  6178  |                         R = R + 2;  |      2  |  1110  |    126  |  4  |   59  |  [126,83,126,158,126]  |
  6182  |                         j = j + 1;  |         |  1110  |    126  |  4  |   60  |  [126,83,126,158,126]  |
  6183  |              resetPlaceHolder_2();  |         |  1110  |    126  |  4  |   60  |  [126,83,126,158,126]  |
  6189  |                         R = R + 2;  |      2  |  1112  |    126  |  4  |   60  |  [126,83,126,158,126]  |
  6193  |                         j = j + 1;  |         |  1112  |    126  |  4  |   61  |  [126,83,126,158,126]  |
  6194  |              resetPlaceHolder_2();  |         |  1112  |    126  |  4  |   61  |  [126,83,126,158,126]  |
  6200  |                         R = R + 2;  |      2  |  1114  |    126  |  4  |   61  |  [126,83,126,158,126]  |
  6204  |                         j = j + 1;  |         |  1114  |    126  |  4  |   62  |  [126,83,126,158,126]  |
  6205  |              resetPlaceHolder_2();  |         |  1114  |    126  |  4  |   62  |  [126,83,126,158,126]  |
  6211  |                         R = R + 2;  |      2  |  1116  |    126  |  4  |   62  |  [126,83,126,158,126]  |
  6215  |                         j = j + 1;  |         |  1116  |    126  |  4  |   63  |  [126,83,126,158,126]  |
  6216  |              resetPlaceHolder_2();  |         |  1116  |    126  |  4  |   63  |  [126,83,126,158,126]  |
  6222  |                         R = R + 2;  |      2  |  1118  |    126  |  4  |   63  |  [126,83,126,158,126]  |
  6226  |                         j = j + 1;  |         |  1118  |    126  |  4  |   64  |  [126,83,126,158,126]  |
  6227  |              resetPlaceHolder_2();  |         |  1118  |    126  |  4  |   64  |  [126,83,126,158,126]  |
  6233  |                         R = R + 2;  |      2  |  1120  |    126  |  4  |   64  |  [126,83,126,158,126]  |
  6237  |                         j = j + 1;  |         |  1120  |    126  |  4  |   65  |  [126,83,126,158,126]  |
  6238  |              resetPlaceHolder_2();  |         |  1120  |    126  |  4  |   65  |  [126,83,126,158,126]  |
  6244  |                         R = R + 2;  |      2  |  1122  |    126  |  4  |   65  |  [126,83,126,158,126]  |
  6248  |                         j = j + 1;  |         |  1122  |    126  |  4  |   66  |  [126,83,126,158,126]  |
  6249  |              resetPlaceHolder_2();  |         |  1122  |    126  |  4  |   66  |  [126,83,126,158,126]  |
  6255  |                         R = R + 2;  |      2  |  1124  |    126  |  4  |   66  |  [126,83,126,158,126]  |
  6259  |                         j = j + 1;  |         |  1124  |    126  |  4  |   67  |  [126,83,126,158,126]  |
  6260  |              resetPlaceHolder_2();  |         |  1124  |    126  |  4  |   67  |  [126,83,126,158,126]  |
  6266  |                         R = R + 2;  |      2  |  1126  |    126  |  4  |   67  |  [126,83,126,158,126]  |
  6270  |                         j = j + 1;  |         |  1126  |    126  |  4  |   68  |  [126,83,126,158,126]  |
  6271  |              resetPlaceHolder_2();  |         |  1126  |    126  |  4  |   68  |  [126,83,126,158,126]  |
  6277  |                         R = R + 2;  |      2  |  1128  |    126  |  4  |   68  |  [126,83,126,158,126]  |
  6281  |                         j = j + 1;  |         |  1128  |    126  |  4  |   69  |  [126,83,126,158,126]  |
  6282  |              resetPlaceHolder_2();  |         |  1128  |    126  |  4  |   69  |  [126,83,126,158,126]  |
  6288  |                         R = R + 2;  |      2  |  1130  |    126  |  4  |   69  |  [126,83,126,158,126]  |
  6292  |                         j = j + 1;  |         |  1130  |    126  |  4  |   70  |  [126,83,126,158,126]  |
  6293  |              resetPlaceHolder_2();  |         |  1130  |    126  |  4  |   70  |  [126,83,126,158,126]  |
  6299  |                         R = R + 2;  |      2  |  1132  |    126  |  4  |   70  |  [126,83,126,158,126]  |
  6303  |                         j = j + 1;  |         |  1132  |    126  |  4  |   71  |  [126,83,126,158,126]  |
  6304  |              resetPlaceHolder_2();  |         |  1132  |    126  |  4  |   71  |  [126,83,126,158,126]  |
  6310  |                         R = R + 2;  |      2  |  1134  |    126  |  4  |   71  |  [126,83,126,158,126]  |
  6314  |                         j = j + 1;  |         |  1134  |    126  |  4  |   72  |  [126,83,126,158,126]  |
  6315  |              resetPlaceHolder_2();  |         |  1134  |    126  |  4  |   72  |  [126,83,126,158,126]  |
  6321  |                         R = R + 2;  |      2  |  1136  |    126  |  4  |   72  |  [126,83,126,158,126]  |
  6325  |                         j = j + 1;  |         |  1136  |    126  |  4  |   73  |  [126,83,126,158,126]  |
  6326  |              resetPlaceHolder_2();  |         |  1136  |    126  |  4  |   73  |  [126,83,126,158,126]  |
  6332  |                         R = R + 2;  |      2  |  1138  |    126  |  4  |   73  |  [126,83,126,158,126]  |
  6336  |                         j = j + 1;  |         |  1138  |    126  |  4  |   74  |  [126,83,126,158,126]  |
  6337  |              resetPlaceHolder_2();  |         |  1138  |    126  |  4  |   74  |  [126,83,126,158,126]  |
  6343  |                         R = R + 2;  |      2  |  1140  |    126  |  4  |   74  |  [126,83,126,158,126]  |
  6347  |                         j = j + 1;  |         |  1140  |    126  |  4  |   75  |  [126,83,126,158,126]  |
  6348  |              resetPlaceHolder_2();  |         |  1140  |    126  |  4  |   75  |  [126,83,126,158,126]  |
  6354  |                         R = R + 2;  |      2  |  1142  |    126  |  4  |   75  |  [126,83,126,158,126]  |
  6358  |                         j = j + 1;  |         |  1142  |    126  |  4  |   76  |  [126,83,126,158,126]  |
  6359  |              resetPlaceHolder_2();  |         |  1142  |    126  |  4  |   76  |  [126,83,126,158,126]  |
  6365  |                         R = R + 2;  |      2  |  1144  |    126  |  4  |   76  |  [126,83,126,158,126]  |
  6369  |                         j = j + 1;  |         |  1144  |    126  |  4  |   77  |  [126,83,126,158,126]  |
  6370  |              resetPlaceHolder_2();  |         |  1144  |    126  |  4  |   77  |  [126,83,126,158,126]  |
  6376  |                         R = R + 2;  |      2  |  1146  |    126  |  4  |   77  |  [126,83,126,158,126]  |
  6380  |                         j = j + 1;  |         |  1146  |    126  |  4  |   78  |  [126,83,126,158,126]  |
  6381  |              resetPlaceHolder_2();  |         |  1146  |    126  |  4  |   78  |  [126,83,126,158,126]  |
  6387  |                         R = R + 2;  |      2  |  1148  |    126  |  4  |   78  |  [126,83,126,158,126]  |
  6391  |                         j = j + 1;  |         |  1148  |    126  |  4  |   79  |  [126,83,126,158,126]  |
  6392  |              resetPlaceHolder_2();  |         |  1148  |    126  |  4  |   79  |  [126,83,126,158,126]  |
  6398  |                         R = R + 2;  |      2  |  1150  |    126  |  4  |   79  |  [126,83,126,158,126]  |
  6402  |                         j = j + 1;  |         |  1150  |    126  |  4  |   80  |  [126,83,126,158,126]  |
  6403  |              resetPlaceHolder_2();  |         |  1150  |    126  |  4  |   80  |  [126,83,126,158,126]  |
  6409  |                         R = R + 2;  |      2  |  1152  |    126  |  4  |   80  |  [126,83,126,158,126]  |
  6413  |                         j = j + 1;  |         |  1152  |    126  |  4  |   81  |  [126,83,126,158,126]  |
  6414  |              resetPlaceHolder_2();  |         |  1152  |    126  |  4  |   81  |  [126,83,126,158,126]  |
  6420  |                         R = R + 2;  |      2  |  1154  |    126  |  4  |   81  |  [126,83,126,158,126]  |
  6424  |                         j = j + 1;  |         |  1154  |    126  |  4  |   82  |  [126,83,126,158,126]  |
  6425  |              resetPlaceHolder_2();  |         |  1154  |    126  |  4  |   82  |  [126,83,126,158,126]  |
  6431  |                         R = R + 2;  |      2  |  1156  |    126  |  4  |   82  |  [126,83,126,158,126]  |
  6435  |                         j = j + 1;  |         |  1156  |    126  |  4  |   83  |  [126,83,126,158,126]  |
  6436  |              resetPlaceHolder_2();  |         |  1156  |    126  |  4  |   83  |  [126,83,126,158,126]  |
  6442  |                         R = R + 2;  |      2  |  1158  |    126  |  4  |   83  |  [126,83,126,158,126]  |
  6446  |                         j = j + 1;  |         |  1158  |    126  |  4  |   84  |  [126,83,126,158,126]  |
  6447  |              resetPlaceHolder_2();  |         |  1158  |    126  |  4  |   84  |  [126,83,126,158,126]  |
  6453  |                         R = R + 2;  |      2  |  1160  |    126  |  4  |   84  |  [126,83,126,158,126]  |
  6457  |                         j = j + 1;  |         |  1160  |    126  |  4  |   85  |  [126,83,126,158,126]  |
  6458  |              resetPlaceHolder_2();  |         |  1160  |    126  |  4  |   85  |  [126,83,126,158,126]  |
  6464  |                         R = R + 2;  |      2  |  1162  |    126  |  4  |   85  |  [126,83,126,158,126]  |
  6468  |                         j = j + 1;  |         |  1162  |    126  |  4  |   86  |  [126,83,126,158,126]  |
  6469  |              resetPlaceHolder_2();  |         |  1162  |    126  |  4  |   86  |  [126,83,126,158,126]  |
  6475  |                         R = R + 2;  |      2  |  1164  |    126  |  4  |   86  |  [126,83,126,158,126]  |
  6479  |                         j = j + 1;  |         |  1164  |    126  |  4  |   87  |  [126,83,126,158,126]  |
  6480  |              resetPlaceHolder_2();  |         |  1164  |    126  |  4  |   87  |  [126,83,126,158,126]  |
  6486  |                         R = R + 2;  |      2  |  1166  |    126  |  4  |   87  |  [126,83,126,158,126]  |
  6490  |                         j = j + 1;  |         |  1166  |    126  |  4  |   88  |  [126,83,126,158,126]  |
  6491  |              resetPlaceHolder_2();  |         |  1166  |    126  |  4  |   88  |  [126,83,126,158,126]  |
  6497  |                         R = R + 2;  |      2  |  1168  |    126  |  4  |   88  |  [126,83,126,158,126]  |
  6501  |                         j = j + 1;  |         |  1168  |    126  |  4  |   89  |  [126,83,126,158,126]  |
  6502  |              resetPlaceHolder_2();  |         |  1168  |    126  |  4  |   89  |  [126,83,126,158,126]  |
  6508  |                         R = R + 2;  |      2  |  1170  |    126  |  4  |   89  |  [126,83,126,158,126]  |
  6512  |                         j = j + 1;  |         |  1170  |    126  |  4  |   90  |  [126,83,126,158,126]  |
  6513  |              resetPlaceHolder_2();  |         |  1170  |    126  |  4  |   90  |  [126,83,126,158,126]  |
  6519  |                         R = R + 2;  |      2  |  1172  |    126  |  4  |   90  |  [126,83,126,158,126]  |
  6523  |                         j = j + 1;  |         |  1172  |    126  |  4  |   91  |  [126,83,126,158,126]  |
  6524  |              resetPlaceHolder_2();  |         |  1172  |    126  |  4  |   91  |  [126,83,126,158,126]  |
  6530  |                         R = R + 2;  |      2  |  1174  |    126  |  4  |   91  |  [126,83,126,158,126]  |
  6534  |                         j = j + 1;  |         |  1174  |    126  |  4  |   92  |  [126,83,126,158,126]  |
  6535  |              resetPlaceHolder_2();  |         |  1174  |    126  |  4  |   92  |  [126,83,126,158,126]  |
  6541  |                         R = R + 2;  |      2  |  1176  |    126  |  4  |   92  |  [126,83,126,158,126]  |
  6545  |                         j = j + 1;  |         |  1176  |    126  |  4  |   93  |  [126,83,126,158,126]  |
  6546  |              resetPlaceHolder_2();  |         |  1176  |    126  |  4  |   93  |  [126,83,126,158,126]  |
  6552  |                         R = R + 2;  |      2  |  1178  |    126  |  4  |   93  |  [126,83,126,158,126]  |
  6556  |                         j = j + 1;  |         |  1178  |    126  |  4  |   94  |  [126,83,126,158,126]  |
  6557  |              resetPlaceHolder_2();  |         |  1178  |    126  |  4  |   94  |  [126,83,126,158,126]  |
  6563  |                         R = R + 2;  |      2  |  1180  |    126  |  4  |   94  |  [126,83,126,158,126]  |
  6567  |                         j = j + 1;  |         |  1180  |    126  |  4  |   95  |  [126,83,126,158,126]  |
  6568  |              resetPlaceHolder_2();  |         |  1180  |    126  |  4  |   95  |  [126,83,126,158,126]  |
  6574  |                         R = R + 2;  |      2  |  1182  |    126  |  4  |   95  |  [126,83,126,158,126]  |
  6578  |                         j = j + 1;  |         |  1182  |    126  |  4  |   96  |  [126,83,126,158,126]  |
  6579  |              resetPlaceHolder_2();  |         |  1182  |    126  |  4  |   96  |  [126,83,126,158,126]  |
  6585  |                         R = R + 2;  |      2  |  1184  |    126  |  4  |   96  |  [126,83,126,158,126]  |
  6589  |                         j = j + 1;  |         |  1184  |    126  |  4  |   97  |  [126,83,126,158,126]  |
  6590  |              resetPlaceHolder_2();  |         |  1184  |    126  |  4  |   97  |  [126,83,126,158,126]  |
  6596  |                         R = R + 2;  |      2  |  1186  |    126  |  4  |   97  |  [126,83,126,158,126]  |
  6600  |                         j = j + 1;  |         |  1186  |    126  |  4  |   98  |  [126,83,126,158,126]  |
  6601  |              resetPlaceHolder_2();  |         |  1186  |    126  |  4  |   98  |  [126,83,126,158,126]  |
  6607  |                         R = R + 2;  |      2  |  1188  |    126  |  4  |   98  |  [126,83,126,158,126]  |
  6611  |                         j = j + 1;  |         |  1188  |    126  |  4  |   99  |  [126,83,126,158,126]  |
  6612  |              resetPlaceHolder_2();  |         |  1188  |    126  |  4  |   99  |  [126,83,126,158,126]  |
  6618  |                         R = R + 2;  |      2  |  1190  |    126  |  4  |   99  |  [126,83,126,158,126]  |
  6622  |                         j = j + 1;  |         |  1190  |    126  |  4  |  100  |  [126,83,126,158,126]  |
  6623  |              resetPlaceHolder_2();  |         |  1190  |    126  |  4  |  100  |  [126,83,126,158,126]  |
  6629  |                         R = R + 2;  |      2  |  1192  |    126  |  4  |  100  |  [126,83,126,158,126]  |
  6633  |                         j = j + 1;  |         |  1192  |    126  |  4  |  101  |  [126,83,126,158,126]  |
  6634  |              resetPlaceHolder_2();  |         |  1192  |    126  |  4  |  101  |  [126,83,126,158,126]  |
  6640  |                         R = R + 2;  |      2  |  1194  |    126  |  4  |  101  |  [126,83,126,158,126]  |
  6644  |                         j = j + 1;  |         |  1194  |    126  |  4  |  102  |  [126,83,126,158,126]  |
  6645  |              resetPlaceHolder_2();  |         |  1194  |    126  |  4  |  102  |  [126,83,126,158,126]  |
  6651  |                         R = R + 2;  |      2  |  1196  |    126  |  4  |  102  |  [126,83,126,158,126]  |
  6655  |                         j = j + 1;  |         |  1196  |    126  |  4  |  103  |  [126,83,126,158,126]  |
  6656  |              resetPlaceHolder_2();  |         |  1196  |    126  |  4  |  103  |  [126,83,126,158,126]  |
  6662  |                         R = R + 2;  |      2  |  1198  |    126  |  4  |  103  |  [126,83,126,158,126]  |
  6666  |                         j = j + 1;  |         |  1198  |    126  |  4  |  104  |  [126,83,126,158,126]  |
  6667  |              resetPlaceHolder_2();  |         |  1198  |    126  |  4  |  104  |  [126,83,126,158,126]  |
  6673  |                         R = R + 2;  |      2  |  1200  |    126  |  4  |  104  |  [126,83,126,158,126]  |
  6677  |                         j = j + 1;  |         |  1200  |    126  |  4  |  105  |  [126,83,126,158,126]  |
  6678  |              resetPlaceHolder_2();  |         |  1200  |    126  |  4  |  105  |  [126,83,126,158,126]  |
  6684  |                         R = R + 2;  |      2  |  1202  |    126  |  4  |  105  |  [126,83,126,158,126]  |
  6688  |                         j = j + 1;  |         |  1202  |    126  |  4  |  106  |  [126,83,126,158,126]  |
  6689  |              resetPlaceHolder_2();  |         |  1202  |    126  |  4  |  106  |  [126,83,126,158,126]  |
  6695  |                         R = R + 2;  |      2  |  1204  |    126  |  4  |  106  |  [126,83,126,158,126]  |
  6699  |                         j = j + 1;  |         |  1204  |    126  |  4  |  107  |  [126,83,126,158,126]  |
  6700  |              resetPlaceHolder_2();  |         |  1204  |    126  |  4  |  107  |  [126,83,126,158,126]  |
  6706  |                         R = R + 2;  |      2  |  1206  |    126  |  4  |  107  |  [126,83,126,158,126]  |
  6710  |                         j = j + 1;  |         |  1206  |    126  |  4  |  108  |  [126,83,126,158,126]  |
  6711  |              resetPlaceHolder_2();  |         |  1206  |    126  |  4  |  108  |  [126,83,126,158,126]  |
  6717  |                         R = R + 2;  |      2  |  1208  |    126  |  4  |  108  |  [126,83,126,158,126]  |
  6721  |                         j = j + 1;  |         |  1208  |    126  |  4  |  109  |  [126,83,126,158,126]  |
  6722  |              resetPlaceHolder_2();  |         |  1208  |    126  |  4  |  109  |  [126,83,126,158,126]  |
  6728  |                         R = R + 2;  |      2  |  1210  |    126  |  4  |  109  |  [126,83,126,158,126]  |
  6732  |                         j = j + 1;  |         |  1210  |    126  |  4  |  110  |  [126,83,126,158,126]  |
  6733  |              resetPlaceHolder_2();  |         |  1210  |    126  |  4  |  110  |  [126,83,126,158,126]  |
  6739  |                         R = R + 2;  |      2  |  1212  |    126  |  4  |  110  |  [126,83,126,158,126]  |
  6743  |                         j = j + 1;  |         |  1212  |    126  |  4  |  111  |  [126,83,126,158,126]  |
  6744  |              resetPlaceHolder_2();  |         |  1212  |    126  |  4  |  111  |  [126,83,126,158,126]  |
  6750  |                         R = R + 2;  |      2  |  1214  |    126  |  4  |  111  |  [126,83,126,158,126]  |
  6754  |                         j = j + 1;  |         |  1214  |    126  |  4  |  112  |  [126,83,126,158,126]  |
  6755  |              resetPlaceHolder_2();  |         |  1214  |    126  |  4  |  112  |  [126,83,126,158,126]  |
  6761  |                         R = R + 2;  |      2  |  1216  |    126  |  4  |  112  |  [126,83,126,158,126]  |
  6765  |                         j = j + 1;  |         |  1216  |    126  |  4  |  113  |  [126,83,126,158,126]  |
  6766  |              resetPlaceHolder_2();  |         |  1216  |    126  |  4  |  113  |  [126,83,126,158,126]  |
  6772  |                         R = R + 2;  |      2  |  1218  |    126  |  4  |  113  |  [126,83,126,158,126]  |
  6776  |                         j = j + 1;  |         |  1218  |    126  |  4  |  114  |  [126,83,126,158,126]  |
  6777  |              resetPlaceHolder_2();  |         |  1218  |    126  |  4  |  114  |  [126,83,126,158,126]  |
  6783  |                         R = R + 2;  |      2  |  1220  |    126  |  4  |  114  |  [126,83,126,158,126]  |
  6787  |                         j = j + 1;  |         |  1220  |    126  |  4  |  115  |  [126,83,126,158,126]  |
  6788  |              resetPlaceHolder_2();  |         |  1220  |    126  |  4  |  115  |  [126,83,126,158,126]  |
  6794  |                         R = R + 2;  |      2  |  1222  |    126  |  4  |  115  |  [126,83,126,158,126]  |
  6798  |                         j = j + 1;  |         |  1222  |    126  |  4  |  116  |  [126,83,126,158,126]  |
  6799  |              resetPlaceHolder_2();  |         |  1222  |    126  |  4  |  116  |  [126,83,126,158,126]  |
  6805  |                         R = R + 2;  |      2  |  1224  |    126  |  4  |  116  |  [126,83,126,158,126]  |
  6809  |                         j = j + 1;  |         |  1224  |    126  |  4  |  117  |  [126,83,126,158,126]  |
  6810  |              resetPlaceHolder_2();  |         |  1224  |    126  |  4  |  117  |  [126,83,126,158,126]  |
  6816  |                         R = R + 2;  |      2  |  1226  |    126  |  4  |  117  |  [126,83,126,158,126]  |
  6820  |                         j = j + 1;  |         |  1226  |    126  |  4  |  118  |  [126,83,126,158,126]  |
  6821  |              resetPlaceHolder_2();  |         |  1226  |    126  |  4  |  118  |  [126,83,126,158,126]  |
  6827  |                         R = R + 2;  |      2  |  1228  |    126  |  4  |  118  |  [126,83,126,158,126]  |
  6831  |                         j = j + 1;  |         |  1228  |    126  |  4  |  119  |  [126,83,126,158,126]  |
  6832  |              resetPlaceHolder_2();  |         |  1228  |    126  |  4  |  119  |  [126,83,126,158,126]  |
  6838  |                         R = R + 2;  |      2  |  1230  |    126  |  4  |  119  |  [126,83,126,158,126]  |
  6842  |                         j = j + 1;  |         |  1230  |    126  |  4  |  120  |  [126,83,126,158,126]  |
  6843  |              resetPlaceHolder_2();  |         |  1230  |    126  |  4  |  120  |  [126,83,126,158,126]  |
  6849  |                         R = R + 2;  |      2  |  1232  |    126  |  4  |  120  |  [126,83,126,158,126]  |
  6853  |                         j = j + 1;  |         |  1232  |    126  |  4  |  121  |  [126,83,126,158,126]  |
  6854  |              resetPlaceHolder_2();  |         |  1232  |    126  |  4  |  121  |  [126,83,126,158,126]  |
  6860  |                         R = R + 2;  |      2  |  1234  |    126  |  4  |  121  |  [126,83,126,158,126]  |
  6864  |                         j = j + 1;  |         |  1234  |    126  |  4  |  122  |  [126,83,126,158,126]  |
  6865  |              resetPlaceHolder_2();  |         |  1234  |    126  |  4  |  122  |  [126,83,126,158,126]  |
  6871  |                         R = R + 2;  |      2  |  1236  |    126  |  4  |  122  |  [126,83,126,158,126]  |
  6875  |                         j = j + 1;  |         |  1236  |    126  |  4  |  123  |  [126,83,126,158,126]  |
  6876  |              resetPlaceHolder_2();  |         |  1236  |    126  |  4  |  123  |  [126,83,126,158,126]  |
  6882  |                         R = R + 2;  |      2  |  1238  |    126  |  4  |  123  |  [126,83,126,158,126]  |
  6886  |                         j = j + 1;  |         |  1238  |    126  |  4  |  124  |  [126,83,126,158,126]  |
  6887  |              resetPlaceHolder_2();  |         |  1238  |    126  |  4  |  124  |  [126,83,126,158,126]  |
  6893  |                         R = R + 2;  |      2  |  1240  |    126  |  4  |  124  |  [126,83,126,158,126]  |
  6897  |                         j = j + 1;  |         |  1240  |    126  |  4  |  125  |  [126,83,126,158,126]  |
  6898  |              resetPlaceHolder_2();  |         |  1240  |    126  |  4  |  125  |  [126,83,126,158,126]  |
  6904  |                         R = R + 2;  |      2  |  1242  |    126  |  4  |  125  |  [126,83,126,158,126]  |
  6908  |                         j = j + 1;  |         |  1242  |    126  |  4  |  126  |  [126,83,126,158,126]  |
  6909  |              resetPlaceHolder_2();  |         |  1242  |    126  |  4  |  126  |  [126,83,126,158,126]  |
  6915  |                         R = R + 1;  |      1  |  1243  |    126  |  4  |  126  |  [126,83,126,158,126]  |
  6919  |                         i = i + 1;  |         |  1243  |    126  |  5  |  126  |  [126,83,126,158,126]  |
  6920  |              resetPlaceHolder_1();  |         |  1243  |    126  |  5  |  126  |  [126,83,126,158,126]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [1501, 4201, 5422, 6387, 6167, 5136, 6530, 1633, 4729, 6651, 3434, 3698, 1031, 6431, 2499, 3566, 1295, 481, 5444, 6057, 2117, 217, 4311, 6695, 2062, 3959, 5793, 4960, 5224, 2282, 5529, 4487, 4234, 5037, 3794, 1655, 3049, 2686, 4575, 4839, 5257, 4564, 4058, 1919, 3313, 5782, 3577, 6640, 4762, 6046, 404, 3335, 1196, 4047, 2216, 3236, 2348, 2972, 2763, 3915, 2227, 6904, 4124, 4916, 5903, 5301, 2400, 4322, 52, 6552, 1985, 184, 2708, 2444, 3148, 3280, 2488, 6662, 6332, 6519, 2466, 5279, 1545, 4179, 6310, 1479, 5323, 5925, 6365, 2730, 228, 5727, 448, 316, 1963, 1875, 5617, 261, 3258, 2829, 4432, 2007, 2950, 4696, 5433, 6002, 492, 5892, 756, 789, 4443, 591, 4454, 646, 6189, 1864, 3621, 5804, 5914, 514, 1383, 5650, 1020, 3357, 1677, 3093, 6717, 2073, 602, 5059, 4718, 4751, 5738, 2367, 877, 734, 866, 1886, 1119, 1622, 1394, 5246, 3676, 5169, 6772, 998, 1405, 1600, 6156, 4707, 3588, 74, 2205, 206, 6860, 2884, 3720, 5411, 85, 1306, 4531, 6684, 5070, 5562, 5540, 5334, 6442, 6464, 6200, 1163, 910, 6343, 6079, 3827, 2249, 778, 1042, 349, 1174, 5455, 5815, 1666, 3610, 3742, 4344, 4091, 6915, 3816, 2150, 6178, 3948, 5826, 2873, 3269, 6629, 4608, 2433, 2477, 2565, 3137, 4553, 1457, 2609, 5551, 1787, 4740, 3926, 2741, 5936, 4080, 3445, 6090, 2653, 6728, 3731, 1350, 3467, 2840, 6101, 1534, 5345, 2895, 1328, 1064, 2631, 3632, 4883, 5081, 3060, 4817, 1567, 6299, 4333, 1361, 5694, 5705, 1075, 4421, 2455, 4938, 1842, 5213, 4861, 2172, 1446, 1207, 3643, 6541, 3555, 1644, 679, 547, 96, 393, 5947, 1776, 6134, 3654, 701, 6827, 3126, 2304, 6805, 2598, 1831, 5639, 1974, 2851, 6475, 6211, 173, 3390, 3937, 129, 5683, 3115, 569, 3247, 2862, 4135, 2697, 41, 5026, 4069, 3005, 371, 503, 4223, 6409, 1086, 3225, 360, 4212, 6486, 4476, 921, 657, 558, 4036, 1185, 1996, 888, 1732, 6497, 965, 1251, 4685, 1754, 4872, 3871, 5969, 1273, 4256, 5048, 745, 5400, 2260, 5488, 4465, 118, 3599, 2161, 382, 2029, 2326, 2293, 6673, 5595, 5859, 6794, 3783, 1765, 1897, 6123, 5158, 3302, 4245, 3170, 2510, 6585, 6024, 2521, 5870, 1853, 4498, 2642, 2084, 5103, 3038, 2422, 5848, 2774, 4828, 2906, 6112, 1589, 6321, 4586, 3500, 4300, 2378, 4773, 4509, 4388, 3456, 5114, 811, 5367, 5584, 5202, 1339, 3027, 6849, 140, 3192, 2785, 4850, 4652, 5466, 1556, 5180, 943, 2664, 4993, 668, 2928, 932, 1952, 3893, 1820, 6376, 1688, 6255, 6574, 1699, 3838, 2051, 3423, 2620, 6288, 6783, 2139, 3687, 3159, 6816, 3016, 2752, 1435, 5661, 6838, 3522, 1809, 426, 162, 5881, 2994, 2271, 3981, 4113, 4355, 4168, 5991, 3849, 1798, 525, 712, 5716, 580, 855, 690, 63, 6453, 6266, 5125, 1611, 1743, 4366, 3082, 3214, 3904, 327, 5499, 1941, 954, 5980, 4641, 4894, 4971, 4377, 4630, 6596, 1053, 5235, 4905, 6244, 4190, 5015, 4003, 1262, 2337, 6508, 2128, 1317, 338, 3544, 470, 4982, 3412, 1130, 1218, 2675, 5147, 2411, 3970, 5628, 1141, 613, 2543, 1284, 4267, 2939, 3071, 1372, 2807, 4795, 6420, 1240, 5771, 6706, 250, 3478, 4289, 4278, 3401, 5749, 2818, 6013, 6068, 3533, 976, 5573, 5510, 2194, 4102, 3346, 6882, 844, 5389, 1108, 3665, 1721, 2389, 4806, 3709, 6607, 6893, 2554, 2532, 5191, 4542, 3104, 1523, 6618, 3368, 6354, 3181, 3324, 2796, 5837, 2576, 6277, 2183, 272, 899, 2095, 5672, 2315, 6871, 2917, 4927, 4025, 536, 4619, 800, 3992, 1908, 3379, 151, 1512, 4014, 1578, 4399, 3860, 3511, 5606, 3291, 833, 2983, 2719, 1097, 5004, 2587, 5268, 1229, 6563, 30, 3882, 5356, 5477, 4663, 4597, 5760, 3203, 305, 4146, 107, 239, 294, 5092, 5290, 195, 437, 4157, 767, 2961, 1710, 5378, 635, 6398, 2040, 3805, 283, 415, 1930, 624, 987, 6750, 1152, 3772, 459, 3489, 723, 4410, 6233, 822, 5958, 6222, 4674, 3753, 4520, 5312, 1009, 4784, 4949, 6145, 2018, 2238, 1490, 1416, 6761, 6035, 2106, 6739, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1020,1031,1042,1053,1064,1075,1086,1097,1108,1119,1130,1141,1152,1163,1174,1185,1196,1207,1218,1229,1240,1251,1262,1273,1284,1295,1306,1317,1328,1339,1350,1361,1372,1383,1394,1405,1416,1435,1446,1457,1468,1479,1490,1501,1512,1523,1534,1545,1556,1567,1578,1589,1600,1611,1622,1633,1644,1655,1666,1677,1688,1699,1710,1721,1732,1743,1754,1765,1776,1787,1798,1809,1820,1831,1842,1853,1864,1875,1886,1897,1908,1919,1930,1941,1952,1963,1974,1985,1996,2007,2018,2029,2040,2051,2062,2073,2084,2095,2106,2117,2128,2139,2150,2161,2172,2183,2194,2205,2216,2227,2238,2249,2260,2271,2282,2293,2304,2315,2326,2337,2348,2367,2378,2389,2400,2411,2422,2433,2444,2455,2466,2477,2488,2499,2510,2521,2532,2543,2554,2565,2576,2587,2598,2609,2620,2631,2642,2653,2664,2675,2686,2697,2708,2719,2730,2741,2752,2763,2774,2785,2796,2807,2818,2829,2840,2851,2862,2873,2884,2895,2906,2917,2928,2939,2950,2961,2972,2983,2994,3005,3016,3027,3038,3049,3060,3071,3082,3093,3104,3115,3126,3137,3148,3159,3170,3181,3192,3203,3214,3225,3236,3247,3258,3269,3280,3291,3302,3313,3324,3335,3346,3357,3368,3379,3390,3401,3412,3423,3434,3445,3456,3467,3478,3489,3500,3511,3522,3533,3544,3555,3566,3577,3588,3599,3610,3621,3632,3643,3654,3665,3676,3687,3698,3709,3720,3731,3742,3753,3772,3783,3794,3805,3816,3827,3838,3849,3860,3871,3882,3893,3904,3915,3926,3937,3948,3959,3970,3981,3992,4003,4014,4025,4036,4047,4058,4069,4080,4091,4102,4113,4124,4135,4146,4157,4168,4179,4190,4201,4212,4223,4234,4245,4256,4267,4278,4289,4300,4311,4322,4333,4344,4355,4366,4377,4388,4399,4410,4421,4432,4443,4454,4465,4476,4487,4498,4509,4520,4531,4542,4553,4564,4575,4586,4597,4608,4619,4630,4641,4652,4663,4674,4685,4696,4707,4718,4729,4740,4751,4762,4773,4784,4795,4806,4817,4828,4839,4850,4861,4872,4883,4894,4905,4916,4927,4938,4949,4960,4971,4982,4993,5004,5015,5026,5037,5048,5059,5070,5081,5092,5103,5114,5125,5136,5147,5158,5169,5180,5191,5202,5213,5224,5235,5246,5257,5268,5279,5290,5301,5312,5323,5334,5345,5356,5367,5378,5389,5400,5411,5422,5433,5444,5455,5466,5477,5488,5499,5510,5529,5540,5551,5562,5573,5584,5595,5606,5617,5628,5639,5650,5661,5672,5683,5694,5705,5716,5727,5738,5749,5760,5771,5782,5793,5804,5815,5826,5837,5848,5859,5870,5881,5892,5903,5914,5925,5936,5947,5958,5969,5980,5991,6002,6013,6024,6035,6046,6057,6068,6079,6090,6101,6112,6123,6134,6145,6156,6167,6178,6189,6200,6211,6222,6233,6244,6255,6266,6277,6288,6299,6310,6321,6332,6343,6354,6365,6376,6387,6398,6409,6420,6431,6442,6453,6464,6475,6486,6497,6508,6519,6530,6541,6552,6563,6574,6585,6596,6607,6618,6629,6640,6651,6662,6673,6684,6695,6706,6717,6728,6739,6750,6761,6772,6783,6794,6805,6816,6827,6838,6849,6860,6871,6882,6893,6904,6915}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 2;  |      2  |                         0  |
  1014  |  resetPlaceHolder_2();  |         |                            |
  1020  |             R = R + 2;  |      2  |                         0  |
  1025  |  resetPlaceHolder_2();  |         |                            |
  1031  |             R = R + 2;  |      2  |                         0  |
  1036  |  resetPlaceHolder_2();  |         |                            |
  1042  |             R = R + 2;  |      2  |                         0  |
  1047  |  resetPlaceHolder_2();  |         |                            |
  1053  |             R = R + 2;  |      2  |                         0  |
  1058  |  resetPlaceHolder_2();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1069  |  resetPlaceHolder_2();  |         |                            |
  1075  |             R = R + 2;  |      2  |                         0  |
  1080  |  resetPlaceHolder_2();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1091  |  resetPlaceHolder_2();  |         |                            |
  1097  |             R = R + 2;  |      2  |                         0  |
  1102  |  resetPlaceHolder_2();  |         |                            |
  1108  |             R = R + 2;  |      2  |                         0  |
  1113  |  resetPlaceHolder_2();  |         |                            |
  1119  |             R = R + 2;  |      2  |                         0  |
  1124  |  resetPlaceHolder_2();  |         |                            |
  1130  |             R = R + 2;  |      2  |                         0  |
  1135  |  resetPlaceHolder_2();  |         |                            |
  1141  |             R = R + 2;  |      2  |                         0  |
  1146  |  resetPlaceHolder_2();  |         |                            |
  1152  |             R = R + 2;  |      2  |                         0  |
  1157  |  resetPlaceHolder_2();  |         |                            |
  1163  |             R = R + 2;  |      2  |                         0  |
  1168  |  resetPlaceHolder_2();  |         |                            |
  1174  |             R = R + 2;  |      2  |                         0  |
  1179  |  resetPlaceHolder_2();  |         |                            |
  1185  |             R = R + 2;  |      2  |                         0  |
  1190  |  resetPlaceHolder_2();  |         |                            |
  1196  |             R = R + 2;  |      2  |                         0  |
  1201  |  resetPlaceHolder_2();  |         |                            |
  1207  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_2();  |         |                            |
  1218  |             R = R + 2;  |      2  |                         0  |
  1223  |  resetPlaceHolder_2();  |         |                            |
  1229  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_2();  |         |                            |
  1240  |             R = R + 2;  |      2  |                         0  |
  1245  |  resetPlaceHolder_2();  |         |                            |
  1251  |             R = R + 2;  |      2  |                         0  |
  1256  |  resetPlaceHolder_2();  |         |                            |
  1262  |             R = R + 2;  |      2  |                         0  |
  1267  |  resetPlaceHolder_2();  |         |                            |
  1273  |             R = R + 2;  |      2  |                         0  |
  1278  |  resetPlaceHolder_2();  |         |                            |
  1284  |             R = R + 2;  |      2  |                         0  |
  1289  |  resetPlaceHolder_2();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1300  |  resetPlaceHolder_2();  |         |                            |
  1306  |             R = R + 2;  |      2  |                         0  |
  1311  |  resetPlaceHolder_2();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1322  |  resetPlaceHolder_2();  |         |                            |
  1328  |             R = R + 2;  |      2  |                         0  |
  1333  |  resetPlaceHolder_2();  |         |                            |
  1339  |             R = R + 2;  |      2  |                         0  |
  1344  |  resetPlaceHolder_2();  |         |                            |
  1350  |             R = R + 2;  |      2  |                         0  |
  1355  |  resetPlaceHolder_2();  |         |                            |
  1361  |             R = R + 2;  |      2  |                         0  |
  1366  |  resetPlaceHolder_2();  |         |                            |
  1372  |             R = R + 2;  |      2  |                         0  |
  1377  |  resetPlaceHolder_2();  |         |                            |
  1383  |             R = R + 2;  |      2  |                         0  |
  1388  |  resetPlaceHolder_2();  |         |                            |
  1394  |             R = R + 2;  |      2  |                         0  |
  1399  |  resetPlaceHolder_2();  |         |                            |
  1405  |             R = R + 2;  |      2  |                         0  |
  1410  |  resetPlaceHolder_2();  |         |                            |
  1416  |             R = R + 1;  |      1  |                         0  |
  1421  |  resetPlaceHolder_1();  |         |                            |
  1435  |             R = R + 2;  |      2  |                         0  |
  1440  |  resetPlaceHolder_2();  |         |                            |
  1446  |             R = R + 2;  |      2  |                         0  |
  1451  |  resetPlaceHolder_2();  |         |                            |
  1457  |             R = R + 2;  |      2  |                         0  |
  1462  |  resetPlaceHolder_2();  |         |                            |
  1468  |             R = R + 2;  |      2  |                         0  |
  1473  |  resetPlaceHolder_2();  |         |                            |
  1479  |             R = R + 2;  |      2  |                         0  |
  1484  |  resetPlaceHolder_2();  |         |                            |
  1490  |             R = R + 2;  |      2  |                         0  |
  1495  |  resetPlaceHolder_2();  |         |                            |
  1501  |             R = R + 2;  |      2  |                         0  |
  1506  |  resetPlaceHolder_2();  |         |                            |
  1512  |             R = R + 2;  |      2  |                         0  |
  1517  |  resetPlaceHolder_2();  |         |                            |
  1523  |             R = R + 2;  |      2  |                         0  |
  1528  |  resetPlaceHolder_2();  |         |                            |
  1534  |             R = R + 2;  |      2  |                         0  |
  1539  |  resetPlaceHolder_2();  |         |                            |
  1545  |             R = R + 2;  |      2  |                         0  |
  1550  |  resetPlaceHolder_2();  |         |                            |
  1556  |             R = R + 2;  |      2  |                         0  |
  1561  |  resetPlaceHolder_2();  |         |                            |
  1567  |             R = R + 2;  |      2  |                         0  |
  1572  |  resetPlaceHolder_2();  |         |                            |
  1578  |             R = R + 2;  |      2  |                         0  |
  1583  |  resetPlaceHolder_2();  |         |                            |
  1589  |             R = R + 2;  |      2  |                         0  |
  1594  |  resetPlaceHolder_2();  |         |                            |
  1600  |             R = R + 2;  |      2  |                         0  |
  1605  |  resetPlaceHolder_2();  |         |                            |
  1611  |             R = R + 2;  |      2  |                         0  |
  1616  |  resetPlaceHolder_2();  |         |                            |
  1622  |             R = R + 2;  |      2  |                         0  |
  1627  |  resetPlaceHolder_2();  |         |                            |
  1633  |             R = R + 2;  |      2  |                         0  |
  1638  |  resetPlaceHolder_2();  |         |                            |
  1644  |             R = R + 2;  |      2  |                         0  |
  1649  |  resetPlaceHolder_2();  |         |                            |
  1655  |             R = R + 2;  |      2  |                         0  |
  1660  |  resetPlaceHolder_2();  |         |                            |
  1666  |             R = R + 2;  |      2  |                         0  |
  1671  |  resetPlaceHolder_2();  |         |                            |
  1677  |             R = R + 2;  |      2  |                         0  |
  1682  |  resetPlaceHolder_2();  |         |                            |
  1688  |             R = R + 2;  |      2  |                         0  |
  1693  |  resetPlaceHolder_2();  |         |                            |
  1699  |             R = R + 2;  |      2  |                         0  |
  1704  |  resetPlaceHolder_2();  |         |                            |
  1710  |             R = R + 2;  |      2  |                         0  |
  1715  |  resetPlaceHolder_2();  |         |                            |
  1721  |             R = R + 2;  |      2  |                         0  |
  1726  |  resetPlaceHolder_2();  |         |                            |
  1732  |             R = R + 2;  |      2  |                         0  |
  1737  |  resetPlaceHolder_2();  |         |                            |
  1743  |             R = R + 2;  |      2  |                         0  |
  1748  |  resetPlaceHolder_2();  |         |                            |
  1754  |             R = R + 2;  |      2  |                         0  |
  1759  |  resetPlaceHolder_2();  |         |                            |
  1765  |             R = R + 2;  |      2  |                         0  |
  1770  |  resetPlaceHolder_2();  |         |                            |
  1776  |             R = R + 2;  |      2  |                         0  |
  1781  |  resetPlaceHolder_2();  |         |                            |
  1787  |             R = R + 2;  |      2  |                         0  |
  1792  |  resetPlaceHolder_2();  |         |                            |
  1798  |             R = R + 2;  |      2  |                         0  |
  1803  |  resetPlaceHolder_2();  |         |                            |
  1809  |             R = R + 2;  |      2  |                         0  |
  1814  |  resetPlaceHolder_2();  |         |                            |
  1820  |             R = R + 2;  |      2  |                         0  |
  1825  |  resetPlaceHolder_2();  |         |                            |
  1831  |             R = R + 2;  |      2  |                         0  |
  1836  |  resetPlaceHolder_2();  |         |                            |
  1842  |             R = R + 2;  |      2  |                         0  |
  1847  |  resetPlaceHolder_2();  |         |                            |
  1853  |             R = R + 2;  |      2  |                         0  |
  1858  |  resetPlaceHolder_2();  |         |                            |
  1864  |             R = R + 2;  |      2  |                         0  |
  1869  |  resetPlaceHolder_2();  |         |                            |
  1875  |             R = R + 2;  |      2  |                         0  |
  1880  |  resetPlaceHolder_2();  |         |                            |
  1886  |             R = R + 2;  |      2  |                         0  |
  1891  |  resetPlaceHolder_2();  |         |                            |
  1897  |             R = R + 2;  |      2  |                         0  |
  1902  |  resetPlaceHolder_2();  |         |                            |
  1908  |             R = R + 2;  |      2  |                         0  |
  1913  |  resetPlaceHolder_2();  |         |                            |
  1919  |             R = R + 2;  |      2  |                         0  |
  1924  |  resetPlaceHolder_2();  |         |                            |
  1930  |             R = R + 2;  |      2  |                         0  |
  1935  |  resetPlaceHolder_2();  |         |                            |
  1941  |             R = R + 2;  |      2  |                         0  |
  1946  |  resetPlaceHolder_2();  |         |                            |
  1952  |             R = R + 2;  |      2  |                         0  |
  1957  |  resetPlaceHolder_2();  |         |                            |
  1963  |             R = R + 2;  |      2  |                         0  |
  1968  |  resetPlaceHolder_2();  |         |                            |
  1974  |             R = R + 2;  |      2  |                         0  |
  1979  |  resetPlaceHolder_2();  |         |                            |
  1985  |             R = R + 2;  |      2  |                         0  |
  1990  |  resetPlaceHolder_2();  |         |                            |
  1996  |             R = R + 2;  |      2  |                         0  |
  2001  |  resetPlaceHolder_2();  |         |                            |
  2007  |             R = R + 2;  |      2  |                         0  |
  2012  |  resetPlaceHolder_2();  |         |                            |
  2018  |             R = R + 2;  |      2  |                         0  |
  2023  |  resetPlaceHolder_2();  |         |                            |
  2029  |             R = R + 2;  |      2  |                         0  |
  2034  |  resetPlaceHolder_2();  |         |                            |
  2040  |             R = R + 2;  |      2  |                         0  |
  2045  |  resetPlaceHolder_2();  |         |                            |
  2051  |             R = R + 2;  |      2  |                         0  |
  2056  |  resetPlaceHolder_2();  |         |                            |
  2062  |             R = R + 2;  |      2  |                         0  |
  2067  |  resetPlaceHolder_2();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2078  |  resetPlaceHolder_2();  |         |                            |
  2084  |             R = R + 2;  |      2  |                         0  |
  2089  |  resetPlaceHolder_2();  |         |                            |
  2095  |             R = R + 2;  |      2  |                         0  |
  2100  |  resetPlaceHolder_2();  |         |                            |
  2106  |             R = R + 2;  |      2  |                         0  |
  2111  |  resetPlaceHolder_2();  |         |                            |
  2117  |             R = R + 2;  |      2  |                         0  |
  2122  |  resetPlaceHolder_2();  |         |                            |
  2128  |             R = R + 2;  |      2  |                         0  |
  2133  |  resetPlaceHolder_2();  |         |                            |
  2139  |             R = R + 2;  |      2  |                         0  |
  2144  |  resetPlaceHolder_2();  |         |                            |
  2150  |             R = R + 2;  |      2  |                         0  |
  2155  |  resetPlaceHolder_2();  |         |                            |
  2161  |             R = R + 2;  |      2  |                         0  |
  2166  |  resetPlaceHolder_2();  |         |                            |
  2172  |             R = R + 2;  |      2  |                         0  |
  2177  |  resetPlaceHolder_2();  |         |                            |
  2183  |             R = R + 2;  |      2  |                         0  |
  2188  |  resetPlaceHolder_2();  |         |                            |
  2194  |             R = R + 2;  |      2  |                         0  |
  2199  |  resetPlaceHolder_2();  |         |                            |
  2205  |             R = R + 2;  |      2  |                         0  |
  2210  |  resetPlaceHolder_2();  |         |                            |
  2216  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_2();  |         |                            |
  2227  |             R = R + 2;  |      2  |                         0  |
  2232  |  resetPlaceHolder_2();  |         |                            |
  2238  |             R = R + 2;  |      2  |                         0  |
  2243  |  resetPlaceHolder_2();  |         |                            |
  2249  |             R = R + 2;  |      2  |                         0  |
  2254  |  resetPlaceHolder_2();  |         |                            |
  2260  |             R = R + 2;  |      2  |                         0  |
  2265  |  resetPlaceHolder_2();  |         |                            |
  2271  |             R = R + 2;  |      2  |                         0  |
  2276  |  resetPlaceHolder_2();  |         |                            |
  2282  |             R = R + 2;  |      2  |                         0  |
  2287  |  resetPlaceHolder_2();  |         |                            |
  2293  |             R = R + 2;  |      2  |                         0  |
  2298  |  resetPlaceHolder_2();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2309  |  resetPlaceHolder_2();  |         |                            |
  2315  |             R = R + 2;  |      2  |                         0  |
  2320  |  resetPlaceHolder_2();  |         |                            |
  2326  |             R = R + 2;  |      2  |                         0  |
  2331  |  resetPlaceHolder_2();  |         |                            |
  2337  |             R = R + 2;  |      2  |                         0  |
  2342  |  resetPlaceHolder_2();  |         |                            |
  2348  |             R = R + 1;  |      1  |                         0  |
  2353  |  resetPlaceHolder_1();  |         |                            |
  2367  |             R = R + 2;  |      2  |                         0  |
  2372  |  resetPlaceHolder_2();  |         |                            |
  2378  |             R = R + 2;  |      2  |                         0  |
  2383  |  resetPlaceHolder_2();  |         |                            |
  2389  |             R = R + 2;  |      2  |                         0  |
  2394  |  resetPlaceHolder_2();  |         |                            |
  2400  |             R = R + 2;  |      2  |                         0  |
  2405  |  resetPlaceHolder_2();  |         |                            |
  2411  |             R = R + 2;  |      2  |                         0  |
  2416  |  resetPlaceHolder_2();  |         |                            |
  2422  |             R = R + 2;  |      2  |                         0  |
  2427  |  resetPlaceHolder_2();  |         |                            |
  2433  |             R = R + 2;  |      2  |                         0  |
  2438  |  resetPlaceHolder_2();  |         |                            |
  2444  |             R = R + 2;  |      2  |                         0  |
  2449  |  resetPlaceHolder_2();  |         |                            |
  2455  |             R = R + 2;  |      2  |                         0  |
  2460  |  resetPlaceHolder_2();  |         |                            |
  2466  |             R = R + 2;  |      2  |                         0  |
  2471  |  resetPlaceHolder_2();  |         |                            |
  2477  |             R = R + 2;  |      2  |                         0  |
  2482  |  resetPlaceHolder_2();  |         |                            |
  2488  |             R = R + 2;  |      2  |                         0  |
  2493  |  resetPlaceHolder_2();  |         |                            |
  2499  |             R = R + 2;  |      2  |                         0  |
  2504  |  resetPlaceHolder_2();  |         |                            |
  2510  |             R = R + 2;  |      2  |                         0  |
  2515  |  resetPlaceHolder_2();  |         |                            |
  2521  |             R = R + 2;  |      2  |                         0  |
  2526  |  resetPlaceHolder_2();  |         |                            |
  2532  |             R = R + 2;  |      2  |                         0  |
  2537  |  resetPlaceHolder_2();  |         |                            |
  2543  |             R = R + 2;  |      2  |                         0  |
  2548  |  resetPlaceHolder_2();  |         |                            |
  2554  |             R = R + 2;  |      2  |                         0  |
  2559  |  resetPlaceHolder_2();  |         |                            |
  2565  |             R = R + 2;  |      2  |                         0  |
  2570  |  resetPlaceHolder_2();  |         |                            |
  2576  |             R = R + 2;  |      2  |                         0  |
  2581  |  resetPlaceHolder_2();  |         |                            |
  2587  |             R = R + 2;  |      2  |                         0  |
  2592  |  resetPlaceHolder_2();  |         |                            |
  2598  |             R = R + 2;  |      2  |                         0  |
  2603  |  resetPlaceHolder_2();  |         |                            |
  2609  |             R = R + 2;  |      2  |                         0  |
  2614  |  resetPlaceHolder_2();  |         |                            |
  2620  |             R = R + 2;  |      2  |                         0  |
  2625  |  resetPlaceHolder_2();  |         |                            |
  2631  |             R = R + 2;  |      2  |                         0  |
  2636  |  resetPlaceHolder_2();  |         |                            |
  2642  |             R = R + 2;  |      2  |                         0  |
  2647  |  resetPlaceHolder_2();  |         |                            |
  2653  |             R = R + 2;  |      2  |                         0  |
  2658  |  resetPlaceHolder_2();  |         |                            |
  2664  |             R = R + 2;  |      2  |                         0  |
  2669  |  resetPlaceHolder_2();  |         |                            |
  2675  |             R = R + 2;  |      2  |                         0  |
  2680  |  resetPlaceHolder_2();  |         |                            |
  2686  |             R = R + 2;  |      2  |                         0  |
  2691  |  resetPlaceHolder_2();  |         |                            |
  2697  |             R = R + 2;  |      2  |                         0  |
  2702  |  resetPlaceHolder_2();  |         |                            |
  2708  |             R = R + 2;  |      2  |                         0  |
  2713  |  resetPlaceHolder_2();  |         |                            |
  2719  |             R = R + 2;  |      2  |                         0  |
  2724  |  resetPlaceHolder_2();  |         |                            |
  2730  |             R = R + 2;  |      2  |                         0  |
  2735  |  resetPlaceHolder_2();  |         |                            |
  2741  |             R = R + 2;  |      2  |                         0  |
  2746  |  resetPlaceHolder_2();  |         |                            |
  2752  |             R = R + 2;  |      2  |                         0  |
  2757  |  resetPlaceHolder_2();  |         |                            |
  2763  |             R = R + 2;  |      2  |                         0  |
  2768  |  resetPlaceHolder_2();  |         |                            |
  2774  |             R = R + 2;  |      2  |                         0  |
  2779  |  resetPlaceHolder_2();  |         |                            |
  2785  |             R = R + 2;  |      2  |                         0  |
  2790  |  resetPlaceHolder_2();  |         |                            |
  2796  |             R = R + 2;  |      2  |                         0  |
  2801  |  resetPlaceHolder_2();  |         |                            |
  2807  |             R = R + 2;  |      2  |                         0  |
  2812  |  resetPlaceHolder_2();  |         |                            |
  2818  |             R = R + 2;  |      2  |                         0  |
  2823  |  resetPlaceHolder_2();  |         |                            |
  2829  |             R = R + 2;  |      2  |                         0  |
  2834  |  resetPlaceHolder_2();  |         |                            |
  2840  |             R = R + 2;  |      2  |                         0  |
  2845  |  resetPlaceHolder_2();  |         |                            |
  2851  |             R = R + 2;  |      2  |                         0  |
  2856  |  resetPlaceHolder_2();  |         |                            |
  2862  |             R = R + 2;  |      2  |                         0  |
  2867  |  resetPlaceHolder_2();  |         |                            |
  2873  |             R = R + 2;  |      2  |                         0  |
  2878  |  resetPlaceHolder_2();  |         |                            |
  2884  |             R = R + 2;  |      2  |                         0  |
  2889  |  resetPlaceHolder_2();  |         |                            |
  2895  |             R = R + 2;  |      2  |                         0  |
  2900  |  resetPlaceHolder_2();  |         |                            |
  2906  |             R = R + 2;  |      2  |                         0  |
  2911  |  resetPlaceHolder_2();  |         |                            |
  2917  |             R = R + 2;  |      2  |                         0  |
  2922  |  resetPlaceHolder_2();  |         |                            |
  2928  |             R = R + 2;  |      2  |                         0  |
  2933  |  resetPlaceHolder_2();  |         |                            |
  2939  |             R = R + 2;  |      2  |                         0  |
  2944  |  resetPlaceHolder_2();  |         |                            |
  2950  |             R = R + 2;  |      2  |                         0  |
  2955  |  resetPlaceHolder_2();  |         |                            |
  2961  |             R = R + 2;  |      2  |                         0  |
  2966  |  resetPlaceHolder_2();  |         |                            |
  2972  |             R = R + 2;  |      2  |                         0  |
  2977  |  resetPlaceHolder_2();  |         |                            |
  2983  |             R = R + 2;  |      2  |                         0  |
  2988  |  resetPlaceHolder_2();  |         |                            |
  2994  |             R = R + 2;  |      2  |                         0  |
  2999  |  resetPlaceHolder_2();  |         |                            |
  3005  |             R = R + 2;  |      2  |                         0  |
  3010  |  resetPlaceHolder_2();  |         |                            |
  3016  |             R = R + 2;  |      2  |                         0  |
  3021  |  resetPlaceHolder_2();  |         |                            |
  3027  |             R = R + 2;  |      2  |                         0  |
  3032  |  resetPlaceHolder_2();  |         |                            |
  3038  |             R = R + 2;  |      2  |                         0  |
  3043  |  resetPlaceHolder_2();  |         |                            |
  3049  |             R = R + 2;  |      2  |                         0  |
  3054  |  resetPlaceHolder_2();  |         |                            |
  3060  |             R = R + 2;  |      2  |                         0  |
  3065  |  resetPlaceHolder_2();  |         |                            |
  3071  |             R = R + 2;  |      2  |                         0  |
  3076  |  resetPlaceHolder_2();  |         |                            |
  3082  |             R = R + 2;  |      2  |                         0  |
  3087  |  resetPlaceHolder_2();  |         |                            |
  3093  |             R = R + 2;  |      2  |                         0  |
  3098  |  resetPlaceHolder_2();  |         |                            |
  3104  |             R = R + 2;  |      2  |                         0  |
  3109  |  resetPlaceHolder_2();  |         |                            |
  3115  |             R = R + 2;  |      2  |                         0  |
  3120  |  resetPlaceHolder_2();  |         |                            |
  3126  |             R = R + 2;  |      2  |                         0  |
  3131  |  resetPlaceHolder_2();  |         |                            |
  3137  |             R = R + 2;  |      2  |                         0  |
  3142  |  resetPlaceHolder_2();  |         |                            |
  3148  |             R = R + 2;  |      2  |                         0  |
  3153  |  resetPlaceHolder_2();  |         |                            |
  3159  |             R = R + 2;  |      2  |                         0  |
  3164  |  resetPlaceHolder_2();  |         |                            |
  3170  |             R = R + 2;  |      2  |                         0  |
  3175  |  resetPlaceHolder_2();  |         |                            |
  3181  |             R = R + 2;  |      2  |                         0  |
  3186  |  resetPlaceHolder_2();  |         |                            |
  3192  |             R = R + 2;  |      2  |                         0  |
  3197  |  resetPlaceHolder_2();  |         |                            |
  3203  |             R = R + 2;  |      2  |                         0  |
  3208  |  resetPlaceHolder_2();  |         |                            |
  3214  |             R = R + 2;  |      2  |                         0  |
  3219  |  resetPlaceHolder_2();  |         |                            |
  3225  |             R = R + 2;  |      2  |                         0  |
  3230  |  resetPlaceHolder_2();  |         |                            |
  3236  |             R = R + 2;  |      2  |                         0  |
  3241  |  resetPlaceHolder_2();  |         |                            |
  3247  |             R = R + 2;  |      2  |                         0  |
  3252  |  resetPlaceHolder_2();  |         |                            |
  3258  |             R = R + 2;  |      2  |                         0  |
  3263  |  resetPlaceHolder_2();  |         |                            |
  3269  |             R = R + 2;  |      2  |                         0  |
  3274  |  resetPlaceHolder_2();  |         |                            |
  3280  |             R = R + 2;  |      2  |                         0  |
  3285  |  resetPlaceHolder_2();  |         |                            |
  3291  |             R = R + 2;  |      2  |                         0  |
  3296  |  resetPlaceHolder_2();  |         |                            |
  3302  |             R = R + 2;  |      2  |                         0  |
  3307  |  resetPlaceHolder_2();  |         |                            |
  3313  |             R = R + 2;  |      2  |                         0  |
  3318  |  resetPlaceHolder_2();  |         |                            |
  3324  |             R = R + 2;  |      2  |                         0  |
  3329  |  resetPlaceHolder_2();  |         |                            |
  3335  |             R = R + 2;  |      2  |                         0  |
  3340  |  resetPlaceHolder_2();  |         |                            |
  3346  |             R = R + 2;  |      2  |                         0  |
  3351  |  resetPlaceHolder_2();  |         |                            |
  3357  |             R = R + 2;  |      2  |                         0  |
  3362  |  resetPlaceHolder_2();  |         |                            |
  3368  |             R = R + 2;  |      2  |                         0  |
  3373  |  resetPlaceHolder_2();  |         |                            |
  3379  |             R = R + 2;  |      2  |                         0  |
  3384  |  resetPlaceHolder_2();  |         |                            |
  3390  |             R = R + 2;  |      2  |                         0  |
  3395  |  resetPlaceHolder_2();  |         |                            |
  3401  |             R = R + 2;  |      2  |                         0  |
  3406  |  resetPlaceHolder_2();  |         |                            |
  3412  |             R = R + 2;  |      2  |                         0  |
  3417  |  resetPlaceHolder_2();  |         |                            |
  3423  |             R = R + 2;  |      2  |                         0  |
  3428  |  resetPlaceHolder_2();  |         |                            |
  3434  |             R = R + 2;  |      2  |                         0  |
  3439  |  resetPlaceHolder_2();  |         |                            |
  3445  |             R = R + 2;  |      2  |                         0  |
  3450  |  resetPlaceHolder_2();  |         |                            |
  3456  |             R = R + 2;  |      2  |                         0  |
  3461  |  resetPlaceHolder_2();  |         |                            |
  3467  |             R = R + 2;  |      2  |                         0  |
  3472  |  resetPlaceHolder_2();  |         |                            |
  3478  |             R = R + 2;  |      2  |                         0  |
  3483  |  resetPlaceHolder_2();  |         |                            |
  3489  |             R = R + 2;  |      2  |                         0  |
  3494  |  resetPlaceHolder_2();  |         |                            |
  3500  |             R = R + 2;  |      2  |                         0  |
  3505  |  resetPlaceHolder_2();  |         |                            |
  3511  |             R = R + 2;  |      2  |                         0  |
  3516  |  resetPlaceHolder_2();  |         |                            |
  3522  |             R = R + 2;  |      2  |                         0  |
  3527  |  resetPlaceHolder_2();  |         |                            |
  3533  |             R = R + 2;  |      2  |                         0  |
  3538  |  resetPlaceHolder_2();  |         |                            |
  3544  |             R = R + 2;  |      2  |                         0  |
  3549  |  resetPlaceHolder_2();  |         |                            |
  3555  |             R = R + 2;  |      2  |                         0  |
  3560  |  resetPlaceHolder_2();  |         |                            |
  3566  |             R = R + 2;  |      2  |                         0  |
  3571  |  resetPlaceHolder_2();  |         |                            |
  3577  |             R = R + 2;  |      2  |                         0  |
  3582  |  resetPlaceHolder_2();  |         |                            |
  3588  |             R = R + 2;  |      2  |                         0  |
  3593  |  resetPlaceHolder_2();  |         |                            |
  3599  |             R = R + 2;  |      2  |                         0  |
  3604  |  resetPlaceHolder_2();  |         |                            |
  3610  |             R = R + 2;  |      2  |                         0  |
  3615  |  resetPlaceHolder_2();  |         |                            |
  3621  |             R = R + 2;  |      2  |                         0  |
  3626  |  resetPlaceHolder_2();  |         |                            |
  3632  |             R = R + 2;  |      2  |                         0  |
  3637  |  resetPlaceHolder_2();  |         |                            |
  3643  |             R = R + 2;  |      2  |                         0  |
  3648  |  resetPlaceHolder_2();  |         |                            |
  3654  |             R = R + 2;  |      2  |                         0  |
  3659  |  resetPlaceHolder_2();  |         |                            |
  3665  |             R = R + 2;  |      2  |                         0  |
  3670  |  resetPlaceHolder_2();  |         |                            |
  3676  |             R = R + 2;  |      2  |                         0  |
  3681  |  resetPlaceHolder_2();  |         |                            |
  3687  |             R = R + 2;  |      2  |                         0  |
  3692  |  resetPlaceHolder_2();  |         |                            |
  3698  |             R = R + 2;  |      2  |                         0  |
  3703  |  resetPlaceHolder_2();  |         |                            |
  3709  |             R = R + 2;  |      2  |                         0  |
  3714  |  resetPlaceHolder_2();  |         |                            |
  3720  |             R = R + 2;  |      2  |                         0  |
  3725  |  resetPlaceHolder_2();  |         |                            |
  3731  |             R = R + 2;  |      2  |                         0  |
  3736  |  resetPlaceHolder_2();  |         |                            |
  3742  |             R = R + 2;  |      2  |                         0  |
  3747  |  resetPlaceHolder_2();  |         |                            |
  3753  |             R = R + 1;  |      1  |                         0  |
  3758  |  resetPlaceHolder_1();  |         |                            |
  3772  |             R = R + 2;  |      2  |                         0  |
  3777  |  resetPlaceHolder_2();  |         |                            |
  3783  |             R = R + 2;  |      2  |                         0  |
  3788  |  resetPlaceHolder_2();  |         |                            |
  3794  |             R = R + 2;  |      2  |                         0  |
  3799  |  resetPlaceHolder_2();  |         |                            |
  3805  |             R = R + 2;  |      2  |                         0  |
  3810  |  resetPlaceHolder_2();  |         |                            |
  3816  |             R = R + 2;  |      2  |                         0  |
  3821  |  resetPlaceHolder_2();  |         |                            |
  3827  |             R = R + 2;  |      2  |                         0  |
  3832  |  resetPlaceHolder_2();  |         |                            |
  3838  |             R = R + 2;  |      2  |                         0  |
  3843  |  resetPlaceHolder_2();  |         |                            |
  3849  |             R = R + 2;  |      2  |                         0  |
  3854  |  resetPlaceHolder_2();  |         |                            |
  3860  |             R = R + 2;  |      2  |                         0  |
  3865  |  resetPlaceHolder_2();  |         |                            |
  3871  |             R = R + 2;  |      2  |                         0  |
  3876  |  resetPlaceHolder_2();  |         |                            |
  3882  |             R = R + 2;  |      2  |                         0  |
  3887  |  resetPlaceHolder_2();  |         |                            |
  3893  |             R = R + 2;  |      2  |                         0  |
  3898  |  resetPlaceHolder_2();  |         |                            |
  3904  |             R = R + 2;  |      2  |                         0  |
  3909  |  resetPlaceHolder_2();  |         |                            |
  3915  |             R = R + 2;  |      2  |                         0  |
  3920  |  resetPlaceHolder_2();  |         |                            |
  3926  |             R = R + 2;  |      2  |                         0  |
  3931  |  resetPlaceHolder_2();  |         |                            |
  3937  |             R = R + 2;  |      2  |                         0  |
  3942  |  resetPlaceHolder_2();  |         |                            |
  3948  |             R = R + 2;  |      2  |                         0  |
  3953  |  resetPlaceHolder_2();  |         |                            |
  3959  |             R = R + 2;  |      2  |                         0  |
  3964  |  resetPlaceHolder_2();  |         |                            |
  3970  |             R = R + 2;  |      2  |                         0  |
  3975  |  resetPlaceHolder_2();  |         |                            |
  3981  |             R = R + 2;  |      2  |                         0  |
  3986  |  resetPlaceHolder_2();  |         |                            |
  3992  |             R = R + 2;  |      2  |                         0  |
  3997  |  resetPlaceHolder_2();  |         |                            |
  4003  |             R = R + 2;  |      2  |                         0  |
  4008  |  resetPlaceHolder_2();  |         |                            |
  4014  |             R = R + 2;  |      2  |                         0  |
  4019  |  resetPlaceHolder_2();  |         |                            |
  4025  |             R = R + 2;  |      2  |                         0  |
  4030  |  resetPlaceHolder_2();  |         |                            |
  4036  |             R = R + 2;  |      2  |                         0  |
  4041  |  resetPlaceHolder_2();  |         |                            |
  4047  |             R = R + 2;  |      2  |                         0  |
  4052  |  resetPlaceHolder_2();  |         |                            |
  4058  |             R = R + 2;  |      2  |                         0  |
  4063  |  resetPlaceHolder_2();  |         |                            |
  4069  |             R = R + 2;  |      2  |                         0  |
  4074  |  resetPlaceHolder_2();  |         |                            |
  4080  |             R = R + 2;  |      2  |                         0  |
  4085  |  resetPlaceHolder_2();  |         |                            |
  4091  |             R = R + 2;  |      2  |                         0  |
  4096  |  resetPlaceHolder_2();  |         |                            |
  4102  |             R = R + 2;  |      2  |                         0  |
  4107  |  resetPlaceHolder_2();  |         |                            |
  4113  |             R = R + 2;  |      2  |                         0  |
  4118  |  resetPlaceHolder_2();  |         |                            |
  4124  |             R = R + 2;  |      2  |                         0  |
  4129  |  resetPlaceHolder_2();  |         |                            |
  4135  |             R = R + 2;  |      2  |                         0  |
  4140  |  resetPlaceHolder_2();  |         |                            |
  4146  |             R = R + 2;  |      2  |                         0  |
  4151  |  resetPlaceHolder_2();  |         |                            |
  4157  |             R = R + 2;  |      2  |                         0  |
  4162  |  resetPlaceHolder_2();  |         |                            |
  4168  |             R = R + 2;  |      2  |                         0  |
  4173  |  resetPlaceHolder_2();  |         |                            |
  4179  |             R = R + 2;  |      2  |                         0  |
  4184  |  resetPlaceHolder_2();  |         |                            |
  4190  |             R = R + 2;  |      2  |                         0  |
  4195  |  resetPlaceHolder_2();  |         |                            |
  4201  |             R = R + 2;  |      2  |                         0  |
  4206  |  resetPlaceHolder_2();  |         |                            |
  4212  |             R = R + 2;  |      2  |                         0  |
  4217  |  resetPlaceHolder_2();  |         |                            |
  4223  |             R = R + 2;  |      2  |                         0  |
  4228  |  resetPlaceHolder_2();  |         |                            |
  4234  |             R = R + 2;  |      2  |                         0  |
  4239  |  resetPlaceHolder_2();  |         |                            |
  4245  |             R = R + 2;  |      2  |                         0  |
  4250  |  resetPlaceHolder_2();  |         |                            |
  4256  |             R = R + 2;  |      2  |                         0  |
  4261  |  resetPlaceHolder_2();  |         |                            |
  4267  |             R = R + 2;  |      2  |                         0  |
  4272  |  resetPlaceHolder_2();  |         |                            |
  4278  |             R = R + 2;  |      2  |                         0  |
  4283  |  resetPlaceHolder_2();  |         |                            |
  4289  |             R = R + 2;  |      2  |                         0  |
  4294  |  resetPlaceHolder_2();  |         |                            |
  4300  |             R = R + 2;  |      2  |                         0  |
  4305  |  resetPlaceHolder_2();  |         |                            |
  4311  |             R = R + 2;  |      2  |                         0  |
  4316  |  resetPlaceHolder_2();  |         |                            |
  4322  |             R = R + 2;  |      2  |                         0  |
  4327  |  resetPlaceHolder_2();  |         |                            |
  4333  |             R = R + 2;  |      2  |                         0  |
  4338  |  resetPlaceHolder_2();  |         |                            |
  4344  |             R = R + 2;  |      2  |                         0  |
  4349  |  resetPlaceHolder_2();  |         |                            |
  4355  |             R = R + 2;  |      2  |                         0  |
  4360  |  resetPlaceHolder_2();  |         |                            |
  4366  |             R = R + 2;  |      2  |                         0  |
  4371  |  resetPlaceHolder_2();  |         |                            |
  4377  |             R = R + 2;  |      2  |                         0  |
  4382  |  resetPlaceHolder_2();  |         |                            |
  4388  |             R = R + 2;  |      2  |                         0  |
  4393  |  resetPlaceHolder_2();  |         |                            |
  4399  |             R = R + 2;  |      2  |                         0  |
  4404  |  resetPlaceHolder_2();  |         |                            |
  4410  |             R = R + 2;  |      2  |                         0  |
  4415  |  resetPlaceHolder_2();  |         |                            |
  4421  |             R = R + 2;  |      2  |                         0  |
  4426  |  resetPlaceHolder_2();  |         |                            |
  4432  |             R = R + 2;  |      2  |                         0  |
  4437  |  resetPlaceHolder_2();  |         |                            |
  4443  |             R = R + 2;  |      2  |                         0  |
  4448  |  resetPlaceHolder_2();  |         |                            |
  4454  |             R = R + 2;  |      2  |                         0  |
  4459  |  resetPlaceHolder_2();  |         |                            |
  4465  |             R = R + 2;  |      2  |                         0  |
  4470  |  resetPlaceHolder_2();  |         |                            |
  4476  |             R = R + 2;  |      2  |                         0  |
  4481  |  resetPlaceHolder_2();  |         |                            |
  4487  |             R = R + 2;  |      2  |                         0  |
  4492  |  resetPlaceHolder_2();  |         |                            |
  4498  |             R = R + 2;  |      2  |                         0  |
  4503  |  resetPlaceHolder_2();  |         |                            |
  4509  |             R = R + 2;  |      2  |                         0  |
  4514  |  resetPlaceHolder_2();  |         |                            |
  4520  |             R = R + 2;  |      2  |                         0  |
  4525  |  resetPlaceHolder_2();  |         |                            |
  4531  |             R = R + 2;  |      2  |                         0  |
  4536  |  resetPlaceHolder_2();  |         |                            |
  4542  |             R = R + 2;  |      2  |                         0  |
  4547  |  resetPlaceHolder_2();  |         |                            |
  4553  |             R = R + 2;  |      2  |                         0  |
  4558  |  resetPlaceHolder_2();  |         |                            |
  4564  |             R = R + 2;  |      2  |                         0  |
  4569  |  resetPlaceHolder_2();  |         |                            |
  4575  |             R = R + 2;  |      2  |                         0  |
  4580  |  resetPlaceHolder_2();  |         |                            |
  4586  |             R = R + 2;  |      2  |                         0  |
  4591  |  resetPlaceHolder_2();  |         |                            |
  4597  |             R = R + 2;  |      2  |                         0  |
  4602  |  resetPlaceHolder_2();  |         |                            |
  4608  |             R = R + 2;  |      2  |                         0  |
  4613  |  resetPlaceHolder_2();  |         |                            |
  4619  |             R = R + 2;  |      2  |                         0  |
  4624  |  resetPlaceHolder_2();  |         |                            |
  4630  |             R = R + 2;  |      2  |                         0  |
  4635  |  resetPlaceHolder_2();  |         |                            |
  4641  |             R = R + 2;  |      2  |                         0  |
  4646  |  resetPlaceHolder_2();  |         |                            |
  4652  |             R = R + 2;  |      2  |                         0  |
  4657  |  resetPlaceHolder_2();  |         |                            |
  4663  |             R = R + 2;  |      2  |                         0  |
  4668  |  resetPlaceHolder_2();  |         |                            |
  4674  |             R = R + 2;  |      2  |                         0  |
  4679  |  resetPlaceHolder_2();  |         |                            |
  4685  |             R = R + 2;  |      2  |                         0  |
  4690  |  resetPlaceHolder_2();  |         |                            |
  4696  |             R = R + 2;  |      2  |                         0  |
  4701  |  resetPlaceHolder_2();  |         |                            |
  4707  |             R = R + 2;  |      2  |                         0  |
  4712  |  resetPlaceHolder_2();  |         |                            |
  4718  |             R = R + 2;  |      2  |                         0  |
  4723  |  resetPlaceHolder_2();  |         |                            |
  4729  |             R = R + 2;  |      2  |                         0  |
  4734  |  resetPlaceHolder_2();  |         |                            |
  4740  |             R = R + 2;  |      2  |                         0  |
  4745  |  resetPlaceHolder_2();  |         |                            |
  4751  |             R = R + 2;  |      2  |                         0  |
  4756  |  resetPlaceHolder_2();  |         |                            |
  4762  |             R = R + 2;  |      2  |                         0  |
  4767  |  resetPlaceHolder_2();  |         |                            |
  4773  |             R = R + 2;  |      2  |                         0  |
  4778  |  resetPlaceHolder_2();  |         |                            |
  4784  |             R = R + 2;  |      2  |                         0  |
  4789  |  resetPlaceHolder_2();  |         |                            |
  4795  |             R = R + 2;  |      2  |                         0  |
  4800  |  resetPlaceHolder_2();  |         |                            |
  4806  |             R = R + 2;  |      2  |                         0  |
  4811  |  resetPlaceHolder_2();  |         |                            |
  4817  |             R = R + 2;  |      2  |                         0  |
  4822  |  resetPlaceHolder_2();  |         |                            |
  4828  |             R = R + 2;  |      2  |                         0  |
  4833  |  resetPlaceHolder_2();  |         |                            |
  4839  |             R = R + 2;  |      2  |                         0  |
  4844  |  resetPlaceHolder_2();  |         |                            |
  4850  |             R = R + 2;  |      2  |                         0  |
  4855  |  resetPlaceHolder_2();  |         |                            |
  4861  |             R = R + 2;  |      2  |                         0  |
  4866  |  resetPlaceHolder_2();  |         |                            |
  4872  |             R = R + 2;  |      2  |                         0  |
  4877  |  resetPlaceHolder_2();  |         |                            |
  4883  |             R = R + 2;  |      2  |                         0  |
  4888  |  resetPlaceHolder_2();  |         |                            |
  4894  |             R = R + 2;  |      2  |                         0  |
  4899  |  resetPlaceHolder_2();  |         |                            |
  4905  |             R = R + 2;  |      2  |                         0  |
  4910  |  resetPlaceHolder_2();  |         |                            |
  4916  |             R = R + 2;  |      2  |                         0  |
  4921  |  resetPlaceHolder_2();  |         |                            |
  4927  |             R = R + 2;  |      2  |                         0  |
  4932  |  resetPlaceHolder_2();  |         |                            |
  4938  |             R = R + 2;  |      2  |                         0  |
  4943  |  resetPlaceHolder_2();  |         |                            |
  4949  |             R = R + 2;  |      2  |                         0  |
  4954  |  resetPlaceHolder_2();  |         |                            |
  4960  |             R = R + 2;  |      2  |                         0  |
  4965  |  resetPlaceHolder_2();  |         |                            |
  4971  |             R = R + 2;  |      2  |                         0  |
  4976  |  resetPlaceHolder_2();  |         |                            |
  4982  |             R = R + 2;  |      2  |                         0  |
  4987  |  resetPlaceHolder_2();  |         |                            |
  4993  |             R = R + 2;  |      2  |                         0  |
  4998  |  resetPlaceHolder_2();  |         |                            |
  5004  |             R = R + 2;  |      2  |                         0  |
  5009  |  resetPlaceHolder_2();  |         |                            |
  5015  |             R = R + 2;  |      2  |                         0  |
  5020  |  resetPlaceHolder_2();  |         |                            |
  5026  |             R = R + 2;  |      2  |                         0  |
  5031  |  resetPlaceHolder_2();  |         |                            |
  5037  |             R = R + 2;  |      2  |                         0  |
  5042  |  resetPlaceHolder_2();  |         |                            |
  5048  |             R = R + 2;  |      2  |                         0  |
  5053  |  resetPlaceHolder_2();  |         |                            |
  5059  |             R = R + 2;  |      2  |                         0  |
  5064  |  resetPlaceHolder_2();  |         |                            |
  5070  |             R = R + 2;  |      2  |                         0  |
  5075  |  resetPlaceHolder_2();  |         |                            |
  5081  |             R = R + 2;  |      2  |                         0  |
  5086  |  resetPlaceHolder_2();  |         |                            |
  5092  |             R = R + 2;  |      2  |                         0  |
  5097  |  resetPlaceHolder_2();  |         |                            |
  5103  |             R = R + 2;  |      2  |                         0  |
  5108  |  resetPlaceHolder_2();  |         |                            |
  5114  |             R = R + 2;  |      2  |                         0  |
  5119  |  resetPlaceHolder_2();  |         |                            |
  5125  |             R = R + 2;  |      2  |                         0  |
  5130  |  resetPlaceHolder_2();  |         |                            |
  5136  |             R = R + 2;  |      2  |                         0  |
  5141  |  resetPlaceHolder_2();  |         |                            |
  5147  |             R = R + 2;  |      2  |                         0  |
  5152  |  resetPlaceHolder_2();  |         |                            |
  5158  |             R = R + 2;  |      2  |                         0  |
  5163  |  resetPlaceHolder_2();  |         |                            |
  5169  |             R = R + 2;  |      2  |                         0  |
  5174  |  resetPlaceHolder_2();  |         |                            |
  5180  |             R = R + 2;  |      2  |                         0  |
  5185  |  resetPlaceHolder_2();  |         |                            |
  5191  |             R = R + 2;  |      2  |                         0  |
  5196  |  resetPlaceHolder_2();  |         |                            |
  5202  |             R = R + 2;  |      2  |                         0  |
  5207  |  resetPlaceHolder_2();  |         |                            |
  5213  |             R = R + 2;  |      2  |                         0  |
  5218  |  resetPlaceHolder_2();  |         |                            |
  5224  |             R = R + 2;  |      2  |                         0  |
  5229  |  resetPlaceHolder_2();  |         |                            |
  5235  |             R = R + 2;  |      2  |                         0  |
  5240  |  resetPlaceHolder_2();  |         |                            |
  5246  |             R = R + 2;  |      2  |                         0  |
  5251  |  resetPlaceHolder_2();  |         |                            |
  5257  |             R = R + 2;  |      2  |                         0  |
  5262  |  resetPlaceHolder_2();  |         |                            |
  5268  |             R = R + 2;  |      2  |                         0  |
  5273  |  resetPlaceHolder_2();  |         |                            |
  5279  |             R = R + 2;  |      2  |                         0  |
  5284  |  resetPlaceHolder_2();  |         |                            |
  5290  |             R = R + 2;  |      2  |                         0  |
  5295  |  resetPlaceHolder_2();  |         |                            |
  5301  |             R = R + 2;  |      2  |                         0  |
  5306  |  resetPlaceHolder_2();  |         |                            |
  5312  |             R = R + 2;  |      2  |                         0  |
  5317  |  resetPlaceHolder_2();  |         |                            |
  5323  |             R = R + 2;  |      2  |                         0  |
  5328  |  resetPlaceHolder_2();  |         |                            |
  5334  |             R = R + 2;  |      2  |                         0  |
  5339  |  resetPlaceHolder_2();  |         |                            |
  5345  |             R = R + 2;  |      2  |                         0  |
  5350  |  resetPlaceHolder_2();  |         |                            |
  5356  |             R = R + 2;  |      2  |                         0  |
  5361  |  resetPlaceHolder_2();  |         |                            |
  5367  |             R = R + 2;  |      2  |                         0  |
  5372  |  resetPlaceHolder_2();  |         |                            |
  5378  |             R = R + 2;  |      2  |                         0  |
  5383  |  resetPlaceHolder_2();  |         |                            |
  5389  |             R = R + 2;  |      2  |                         0  |
  5394  |  resetPlaceHolder_2();  |         |                            |
  5400  |             R = R + 2;  |      2  |                         0  |
  5405  |  resetPlaceHolder_2();  |         |                            |
  5411  |             R = R + 2;  |      2  |                         0  |
  5416  |  resetPlaceHolder_2();  |         |                            |
  5422  |             R = R + 2;  |      2  |                         0  |
  5427  |  resetPlaceHolder_2();  |         |                            |
  5433  |             R = R + 2;  |      2  |                         0  |
  5438  |  resetPlaceHolder_2();  |         |                            |
  5444  |             R = R + 2;  |      2  |                         0  |
  5449  |  resetPlaceHolder_2();  |         |                            |
  5455  |             R = R + 2;  |      2  |                         0  |
  5460  |  resetPlaceHolder_2();  |         |                            |
  5466  |             R = R + 2;  |      2  |                         0  |
  5471  |  resetPlaceHolder_2();  |         |                            |
  5477  |             R = R + 2;  |      2  |                         0  |
  5482  |  resetPlaceHolder_2();  |         |                            |
  5488  |             R = R + 2;  |      2  |                         0  |
  5493  |  resetPlaceHolder_2();  |         |                            |
  5499  |             R = R + 2;  |      2  |                         0  |
  5504  |  resetPlaceHolder_2();  |         |                            |
  5510  |             R = R + 1;  |      1  |                         0  |
  5515  |  resetPlaceHolder_1();  |         |                            |
  5529  |             R = R + 2;  |      2  |                         0  |
  5534  |  resetPlaceHolder_2();  |         |                            |
  5540  |             R = R + 2;  |      2  |                         0  |
  5545  |  resetPlaceHolder_2();  |         |                            |
  5551  |             R = R + 2;  |      2  |                         0  |
  5556  |  resetPlaceHolder_2();  |         |                            |
  5562  |             R = R + 2;  |      2  |                         0  |
  5567  |  resetPlaceHolder_2();  |         |                            |
  5573  |             R = R + 2;  |      2  |                         0  |
  5578  |  resetPlaceHolder_2();  |         |                            |
  5584  |             R = R + 2;  |      2  |                         0  |
  5589  |  resetPlaceHolder_2();  |         |                            |
  5595  |             R = R + 2;  |      2  |                         0  |
  5600  |  resetPlaceHolder_2();  |         |                            |
  5606  |             R = R + 2;  |      2  |                         0  |
  5611  |  resetPlaceHolder_2();  |         |                            |
  5617  |             R = R + 2;  |      2  |                         0  |
  5622  |  resetPlaceHolder_2();  |         |                            |
  5628  |             R = R + 2;  |      2  |                         0  |
  5633  |  resetPlaceHolder_2();  |         |                            |
  5639  |             R = R + 2;  |      2  |                         0  |
  5644  |  resetPlaceHolder_2();  |         |                            |
  5650  |             R = R + 2;  |      2  |                         0  |
  5655  |  resetPlaceHolder_2();  |         |                            |
  5661  |             R = R + 2;  |      2  |                         0  |
  5666  |  resetPlaceHolder_2();  |         |                            |
  5672  |             R = R + 2;  |      2  |                         0  |
  5677  |  resetPlaceHolder_2();  |         |                            |
  5683  |             R = R + 2;  |      2  |                         0  |
  5688  |  resetPlaceHolder_2();  |         |                            |
  5694  |             R = R + 2;  |      2  |                         0  |
  5699  |  resetPlaceHolder_2();  |         |                            |
  5705  |             R = R + 2;  |      2  |                         0  |
  5710  |  resetPlaceHolder_2();  |         |                            |
  5716  |             R = R + 2;  |      2  |                         0  |
  5721  |  resetPlaceHolder_2();  |         |                            |
  5727  |             R = R + 2;  |      2  |                         0  |
  5732  |  resetPlaceHolder_2();  |         |                            |
  5738  |             R = R + 2;  |      2  |                         0  |
  5743  |  resetPlaceHolder_2();  |         |                            |
  5749  |             R = R + 2;  |      2  |                         0  |
  5754  |  resetPlaceHolder_2();  |         |                            |
  5760  |             R = R + 2;  |      2  |                         0  |
  5765  |  resetPlaceHolder_2();  |         |                            |
  5771  |             R = R + 2;  |      2  |                         0  |
  5776  |  resetPlaceHolder_2();  |         |                            |
  5782  |             R = R + 2;  |      2  |                         0  |
  5787  |  resetPlaceHolder_2();  |         |                            |
  5793  |             R = R + 2;  |      2  |                         0  |
  5798  |  resetPlaceHolder_2();  |         |                            |
  5804  |             R = R + 2;  |      2  |                         0  |
  5809  |  resetPlaceHolder_2();  |         |                            |
  5815  |             R = R + 2;  |      2  |                         0  |
  5820  |  resetPlaceHolder_2();  |         |                            |
  5826  |             R = R + 2;  |      2  |                         0  |
  5831  |  resetPlaceHolder_2();  |         |                            |
  5837  |             R = R + 2;  |      2  |                         0  |
  5842  |  resetPlaceHolder_2();  |         |                            |
  5848  |             R = R + 2;  |      2  |                         0  |
  5853  |  resetPlaceHolder_2();  |         |                            |
  5859  |             R = R + 2;  |      2  |                         0  |
  5864  |  resetPlaceHolder_2();  |         |                            |
  5870  |             R = R + 2;  |      2  |                         0  |
  5875  |  resetPlaceHolder_2();  |         |                            |
  5881  |             R = R + 2;  |      2  |                         0  |
  5886  |  resetPlaceHolder_2();  |         |                            |
  5892  |             R = R + 2;  |      2  |                         0  |
  5897  |  resetPlaceHolder_2();  |         |                            |
  5903  |             R = R + 2;  |      2  |                         0  |
  5908  |  resetPlaceHolder_2();  |         |                            |
  5914  |             R = R + 2;  |      2  |                         0  |
  5919  |  resetPlaceHolder_2();  |         |                            |
  5925  |             R = R + 2;  |      2  |                         0  |
  5930  |  resetPlaceHolder_2();  |         |                            |
  5936  |             R = R + 2;  |      2  |                         0  |
  5941  |  resetPlaceHolder_2();  |         |                            |
  5947  |             R = R + 2;  |      2  |                         0  |
  5952  |  resetPlaceHolder_2();  |         |                            |
  5958  |             R = R + 2;  |      2  |                         0  |
  5963  |  resetPlaceHolder_2();  |         |                            |
  5969  |             R = R + 2;  |      2  |                         0  |
  5974  |  resetPlaceHolder_2();  |         |                            |
  5980  |             R = R + 2;  |      2  |                         0  |
  5985  |  resetPlaceHolder_2();  |         |                            |
  5991  |             R = R + 2;  |      2  |                         0  |
  5996  |  resetPlaceHolder_2();  |         |                            |
  6002  |             R = R + 2;  |      2  |                         0  |
  6007  |  resetPlaceHolder_2();  |         |                            |
  6013  |             R = R + 2;  |      2  |                         0  |
  6018  |  resetPlaceHolder_2();  |         |                            |
  6024  |             R = R + 2;  |      2  |                         0  |
  6029  |  resetPlaceHolder_2();  |         |                            |
  6035  |             R = R + 2;  |      2  |                         0  |
  6040  |  resetPlaceHolder_2();  |         |                            |
  6046  |             R = R + 2;  |      2  |                         0  |
  6051  |  resetPlaceHolder_2();  |         |                            |
  6057  |             R = R + 2;  |      2  |                         0  |
  6062  |  resetPlaceHolder_2();  |         |                            |
  6068  |             R = R + 2;  |      2  |                         0  |
  6073  |  resetPlaceHolder_2();  |         |                            |
  6079  |             R = R + 2;  |      2  |                         0  |
  6084  |  resetPlaceHolder_2();  |         |                            |
  6090  |             R = R + 2;  |      2  |                         0  |
  6095  |  resetPlaceHolder_2();  |         |                            |
  6101  |             R = R + 2;  |      2  |                         0  |
  6106  |  resetPlaceHolder_2();  |         |                            |
  6112  |             R = R + 2;  |      2  |                         0  |
  6117  |  resetPlaceHolder_2();  |         |                            |
  6123  |             R = R + 2;  |      2  |                         0  |
  6128  |  resetPlaceHolder_2();  |         |                            |
  6134  |             R = R + 2;  |      2  |                         0  |
  6139  |  resetPlaceHolder_2();  |         |                            |
  6145  |             R = R + 2;  |      2  |                         0  |
  6150  |  resetPlaceHolder_2();  |         |                            |
  6156  |             R = R + 2;  |      2  |                         0  |
  6161  |  resetPlaceHolder_2();  |         |                            |
  6167  |             R = R + 2;  |      2  |                         0  |
  6172  |  resetPlaceHolder_2();  |         |                            |
  6178  |             R = R + 2;  |      2  |                         0  |
  6183  |  resetPlaceHolder_2();  |         |                            |
  6189  |             R = R + 2;  |      2  |                         0  |
  6194  |  resetPlaceHolder_2();  |         |                            |
  6200  |             R = R + 2;  |      2  |                         0  |
  6205  |  resetPlaceHolder_2();  |         |                            |
  6211  |             R = R + 2;  |      2  |                         0  |
  6216  |  resetPlaceHolder_2();  |         |                            |
  6222  |             R = R + 2;  |      2  |                         0  |
  6227  |  resetPlaceHolder_2();  |         |                            |
  6233  |             R = R + 2;  |      2  |                         0  |
  6238  |  resetPlaceHolder_2();  |         |                            |
  6244  |             R = R + 2;  |      2  |                         0  |
  6249  |  resetPlaceHolder_2();  |         |                            |
  6255  |             R = R + 2;  |      2  |                         0  |
  6260  |  resetPlaceHolder_2();  |         |                            |
  6266  |             R = R + 2;  |      2  |                         0  |
  6271  |  resetPlaceHolder_2();  |         |                            |
  6277  |             R = R + 2;  |      2  |                         0  |
  6282  |  resetPlaceHolder_2();  |         |                            |
  6288  |             R = R + 2;  |      2  |                         0  |
  6293  |  resetPlaceHolder_2();  |         |                            |
  6299  |             R = R + 2;  |      2  |                         0  |
  6304  |  resetPlaceHolder_2();  |         |                            |
  6310  |             R = R + 2;  |      2  |                         0  |
  6315  |  resetPlaceHolder_2();  |         |                            |
  6321  |             R = R + 2;  |      2  |                         0  |
  6326  |  resetPlaceHolder_2();  |         |                            |
  6332  |             R = R + 2;  |      2  |                         0  |
  6337  |  resetPlaceHolder_2();  |         |                            |
  6343  |             R = R + 2;  |      2  |                         0  |
  6348  |  resetPlaceHolder_2();  |         |                            |
  6354  |             R = R + 2;  |      2  |                         0  |
  6359  |  resetPlaceHolder_2();  |         |                            |
  6365  |             R = R + 2;  |      2  |                         0  |
  6370  |  resetPlaceHolder_2();  |         |                            |
  6376  |             R = R + 2;  |      2  |                         0  |
  6381  |  resetPlaceHolder_2();  |         |                            |
  6387  |             R = R + 2;  |      2  |                         0  |
  6392  |  resetPlaceHolder_2();  |         |                            |
  6398  |             R = R + 2;  |      2  |                         0  |
  6403  |  resetPlaceHolder_2();  |         |                            |
  6409  |             R = R + 2;  |      2  |                         0  |
  6414  |  resetPlaceHolder_2();  |         |                            |
  6420  |             R = R + 2;  |      2  |                         0  |
  6425  |  resetPlaceHolder_2();  |         |                            |
  6431  |             R = R + 2;  |      2  |                         0  |
  6436  |  resetPlaceHolder_2();  |         |                            |
  6442  |             R = R + 2;  |      2  |                         0  |
  6447  |  resetPlaceHolder_2();  |         |                            |
  6453  |             R = R + 2;  |      2  |                         0  |
  6458  |  resetPlaceHolder_2();  |         |                            |
  6464  |             R = R + 2;  |      2  |                         0  |
  6469  |  resetPlaceHolder_2();  |         |                            |
  6475  |             R = R + 2;  |      2  |                         0  |
  6480  |  resetPlaceHolder_2();  |         |                            |
  6486  |             R = R + 2;  |      2  |                         0  |
  6491  |  resetPlaceHolder_2();  |         |                            |
  6497  |             R = R + 2;  |      2  |                         0  |
  6502  |  resetPlaceHolder_2();  |         |                            |
  6508  |             R = R + 2;  |      2  |                         0  |
  6513  |  resetPlaceHolder_2();  |         |                            |
  6519  |             R = R + 2;  |      2  |                         0  |
  6524  |  resetPlaceHolder_2();  |         |                            |
  6530  |             R = R + 2;  |      2  |                         0  |
  6535  |  resetPlaceHolder_2();  |         |                            |
  6541  |             R = R + 2;  |      2  |                         0  |
  6546  |  resetPlaceHolder_2();  |         |                            |
  6552  |             R = R + 2;  |      2  |                         0  |
  6557  |  resetPlaceHolder_2();  |         |                            |
  6563  |             R = R + 2;  |      2  |                         0  |
  6568  |  resetPlaceHolder_2();  |         |                            |
  6574  |             R = R + 2;  |      2  |                         0  |
  6579  |  resetPlaceHolder_2();  |         |                            |
  6585  |             R = R + 2;  |      2  |                         0  |
  6590  |  resetPlaceHolder_2();  |         |                            |
  6596  |             R = R + 2;  |      2  |                         0  |
  6601  |  resetPlaceHolder_2();  |         |                            |
  6607  |             R = R + 2;  |      2  |                         0  |
  6612  |  resetPlaceHolder_2();  |         |                            |
  6618  |             R = R + 2;  |      2  |                         0  |
  6623  |  resetPlaceHolder_2();  |         |                            |
  6629  |             R = R + 2;  |      2  |                         0  |
  6634  |  resetPlaceHolder_2();  |         |                            |
  6640  |             R = R + 2;  |      2  |                         0  |
  6645  |  resetPlaceHolder_2();  |         |                            |
  6651  |             R = R + 2;  |      2  |                         0  |
  6656  |  resetPlaceHolder_2();  |         |                            |
  6662  |             R = R + 2;  |      2  |                         0  |
  6667  |  resetPlaceHolder_2();  |         |                            |
  6673  |             R = R + 2;  |      2  |                         0  |
  6678  |  resetPlaceHolder_2();  |         |                            |
  6684  |             R = R + 2;  |      2  |                         0  |
  6689  |  resetPlaceHolder_2();  |         |                            |
  6695  |             R = R + 2;  |      2  |                         0  |
  6700  |  resetPlaceHolder_2();  |         |                            |
  6706  |             R = R + 2;  |      2  |                         0  |
  6711  |  resetPlaceHolder_2();  |         |                            |
  6717  |             R = R + 2;  |      2  |                         0  |
  6722  |  resetPlaceHolder_2();  |         |                            |
  6728  |             R = R + 2;  |      2  |                         0  |
  6733  |  resetPlaceHolder_2();  |         |                            |
  6739  |             R = R + 2;  |      2  |                         0  |
  6744  |  resetPlaceHolder_2();  |         |                            |
  6750  |             R = R + 2;  |      2  |                         0  |
  6755  |  resetPlaceHolder_2();  |         |                            |
  6761  |             R = R + 2;  |      2  |                         0  |
  6766  |  resetPlaceHolder_2();  |         |                            |
  6772  |             R = R + 2;  |      2  |                         0  |
  6777  |  resetPlaceHolder_2();  |         |                            |
  6783  |             R = R + 2;  |      2  |                         0  |
  6788  |  resetPlaceHolder_2();  |         |                            |
  6794  |             R = R + 2;  |      2  |                         0  |
  6799  |  resetPlaceHolder_2();  |         |                            |
  6805  |             R = R + 2;  |      2  |                         0  |
  6810  |  resetPlaceHolder_2();  |         |                            |
  6816  |             R = R + 2;  |      2  |                         0  |
  6821  |  resetPlaceHolder_2();  |         |                            |
  6827  |             R = R + 2;  |      2  |                         0  |
  6832  |  resetPlaceHolder_2();  |         |                            |
  6838  |             R = R + 2;  |      2  |                         0  |
  6843  |  resetPlaceHolder_2();  |         |                            |
  6849  |             R = R + 2;  |      2  |                         0  |
  6854  |  resetPlaceHolder_2();  |         |                            |
  6860  |             R = R + 2;  |      2  |                         0  |
  6865  |  resetPlaceHolder_2();  |         |                            |
  6871  |             R = R + 2;  |      2  |                         0  |
  6876  |  resetPlaceHolder_2();  |         |                            |
  6882  |             R = R + 2;  |      2  |                         0  |
  6887  |  resetPlaceHolder_2();  |         |                            |
  6893  |             R = R + 2;  |      2  |                         0  |
  6898  |  resetPlaceHolder_2();  |         |                            |
  6904  |             R = R + 2;  |      2  |                         0  |
  6909  |  resetPlaceHolder_2();  |         |                            |
  6915  |             R = R + 1;  |      1  |                         0  |
  6920  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
resetPlaceHolder_2(); -> // reset R0
use R 2 -> R0 = R0 + 2;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	2m32.583s
user	2m43.735s
sys	0m1.947s

2023-01-25 10:05:06,680 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:05:17,464 INFO     Done. Execution time: 10.783879041671753 seconds
2023-01-25 10:05:17,465 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `8.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1005-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1005-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.776s
user	0m23.307s
sys	0m2.701s

2023-01-25 10:05:17,465 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 10:05:17,465 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:05:19,251 INFO     Done. Execution time: 1.7862632274627686 seconds
2023-01-25 10:05:19,252 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`

real	0m1.778s
user	0m3.419s
sys	0m0.202s

2023-01-25 10:05:19,252 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-25 10:05:19,252 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-25 10:05:19,256 INFO     Done. Execution time: 0.0037729740142822266 seconds
2023-01-25 10:05:19,256 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java': No such file or directory

2023-01-25 10:05:19,256 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 10:05:20,939 INFO     Done. Execution time: 1.6827681064605713 seconds
2023-01-25 10:05:20,939 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.675s
user	0m3.169s
sys	0m0.188s

2023-01-25 10:05:20,939 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:05:22,081 INFO     Done. Execution time: 1.141127347946167 seconds
2023-01-25 10:05:22,081 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.134s
user	0m1.715s
sys	0m0.169s

2023-01-25 10:05:22,081 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 10:05:22,082 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:05:38,248 INFO     Done. Execution time: 16.165802001953125 seconds
2023-01-25 10:05:38,248 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz6495365129671458318/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6495365129671458318/bin -o /tmp/qfuzz6495365129671458318/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6495365129671458318/bin
Found file /tmp/qfuzz6495365129671458318/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz6495365129671458318/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6495365129671458318/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6495365129671458318/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6495365129671458318/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6495365129671458318/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 27, exec speed = 122789 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m27 to 27 bits (average: 27.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6495365129671458318/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz6495365129671458318/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [53.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6495365129671458318/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz6495365129671458318/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6495365129671458318/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6495365129671458318/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.157s
user	0m9.528s
sys	0m0.655s

2023-01-25 10:05:38,248 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-25 10:05:38,248 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-25 10:05:38,252 INFO     Done. Execution time: 0.003270864486694336 seconds
2023-01-25 10:05:38,252 INFO     Output: 
2023-01-25 10:05:38,252 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 10:05:41,154 INFO     Done. Execution time: 2.9017298221588135 seconds
2023-01-25 10:05:41,154 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [126,126,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 62):
                                                                                                                                                                  
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |        stopIndex        |
------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [126,126,126,126,126]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [126,126,126,126,126]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [126,126,126,126,126]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [126,126,126,126,126]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [126,126,126,126,126]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [126,126,126,126,126]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [126,126,126,126,126]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [126,126,126,126,126]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [126,126,126,126,126]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [126,126,126,126,126]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |     126  |  1  |         1  |        2  |    1  |      1  |  [126,126,126,126,126]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |     126  |  1  |         1  |        2  |    2  |      1  |  [126,126,126,126,126]  |
    57  |                         i = i + 1;  |         |  0  |         0  |     126  |  2  |         1  |        2  |    2  |      1  |  [126,126,126,126,126]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |     126  |  2  |         1  |        2  |    2  |      1  |  [126,126,126,126,126]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m2.894s
user	0m5.480s
sys	0m0.381s

2023-01-25 10:05:41,154 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:05:43,205 INFO     Done. Execution time: 2.0511553287506104 seconds
2023-01-25 10:05:43,206 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1005-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1005-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.043s
user	0m3.589s
sys	0m0.281s

2023-01-25 10:05:43,206 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 10:05:43,206 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:05:59,119 INFO     Done. Execution time: 15.913081169128418 seconds
2023-01-25 10:05:59,119 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz1110571423458583543/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1110571423458583543/bin -o /tmp/qfuzz1110571423458583543/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1110571423458583543/bin
Found file /tmp/qfuzz1110571423458583543/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz1110571423458583543/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1110571423458583543/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1110571423458583543/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1110571423458583543/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1110571423458583543/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 127492 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1110571423458583543/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1110571423458583543/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1110571423458583543/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m15.905s
user	0m9.059s
sys	0m0.613s

2023-01-25 10:05:59,120 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-25 10:05:59,120 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-25 10:05:59,123 INFO     Done. Execution time: 0.0033953189849853516 seconds
2023-01-25 10:05:59,123 INFO     Output: 
2023-01-25 10:05:59,123 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 10:06:01,812 INFO     Done. Execution time: 2.688608407974243 seconds
2023-01-25 10:06:01,812 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                           
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |   d   |  recursiveTypeIndexes  |
-------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            126  |  126  |                     2  |
    32  |     return;  |         |  0  |            126  |  126  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m2.681s
user	0m5.425s
sys	0m0.285s

2023-01-25 10:06:01,813 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:06:04,164 INFO     Done. Execution time: 2.3509325981140137 seconds
2023-01-25 10:06:04,164 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1006-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1006-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.343s
user	0m4.286s
sys	0m0.254s

2023-01-25 10:06:04,164 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 10:06:04,164 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:06:20,038 INFO     Done. Execution time: 15.873722076416016 seconds
2023-01-25 10:06:20,038 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz7496163472570193700/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7496163472570193700/bin -o /tmp/qfuzz7496163472570193700/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7496163472570193700/bin
Found file /tmp/qfuzz7496163472570193700/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz7496163472570193700/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7496163472570193700/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7496163472570193700/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7496163472570193700/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7496163472570193700/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 128342 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7496163472570193700/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz7496163472570193700/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7496163472570193700/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz7496163472570193700/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7496163472570193700/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(197, 197)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7496163472570193700/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m15.866s
user	0m8.874s
sys	0m0.619s

2023-01-25 10:06:20,039 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-25 10:06:20,039 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-25 10:06:20,042 INFO     Done. Execution time: 0.0030951499938964844 seconds
2023-01-25 10:06:20,042 INFO     Output: 
2023-01-25 10:06:20,042 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 10:06:25,386 INFO     Done. Execution time: 5.343329906463623 seconds
2023-01-25 10:06:25,386 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m5.335s
user	0m9.276s
sys	0m1.602s

2023-01-25 10:06:25,386 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:06:33,337 INFO     Done. Execution time: 7.9508631229400635 seconds
2023-01-25 10:06:33,337 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `6.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1006-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1006-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.943s
user	0m16.220s
sys	0m2.678s

2023-01-25 10:06:33,338 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 10:06:33,338 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:06:49,628 INFO     Done. Execution time: 16.289838075637817 seconds
2023-01-25 10:06:49,628 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz8249504757097408949/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8249504757097408949/bin -o /tmp/qfuzz8249504757097408949/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8249504757097408949/bin
Found file /tmp/qfuzz8249504757097408949/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz8249504757097408949/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8249504757097408949/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8249504757097408949/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8249504757097408949/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8249504757097408949/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 32, exec speed = 129822 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 11.00; [2535.00,2546.00]
2; /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta; 5; 140.00; [655.00,1326.00,2515.00,3295.00,3435.00]
3; /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 3871.00; [15.00,3886.00]
5; /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 5; 80.00; [15.00,95.00,235.00,2406.00,3415.00]
6; /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta; 5; 189.00; [195.00,886.00,1075.00,2175.00,2515.00]
9; /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 4; 11.00; [2075.00,2535.00,2546.00,3135.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 156, 126, 126, 103, 104, 126, 126, 126, 126, 126, 126, 126, 59, 98, 126, 126, 126, 126, 126, 107, 188, 126, 159, 149, 126, 126, 105, 132, 52, 126, 126, 126, 126, 134, 90, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(43, 53, 108, 9, 125, 96, 46, 95, 70, 119, 150, 22, 161, 75, 101, 75, 4, 132, 183)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(119, 170, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(65, 125, 164, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8249504757097408949/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,156,126,126,103]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [43,53,108,9,125]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [119,170,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [65,125,164,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.278s
user	0m10.113s
sys	0m0.621s

2023-01-25 10:06:49,628 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-25 10:06:49,628 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-25 10:06:49,632 INFO     Done. Execution time: 0.00336456298828125 seconds
2023-01-25 10:06:49,632 INFO     Output: 
2023-01-25 10:06:49,632 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 10:06:56,100 INFO     Done. Execution time: 6.467672109603882 seconds
2023-01-25 10:06:56,100 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,156,126,126,103])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([43,53,108,9,125])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([119,170,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([65,125,164,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                         
 Index  |              Commands               |  Costs  |   R   |  chunk  |          diff           |  i  |  lhsBuilder  |  rhsBuilder  |
-----------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [126,156,126,126,103]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [126,156,126,126,103]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [126,156,126,126,103]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [126,156,126,126,103]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [126,156,126,126,103]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [126,156,126,126,103]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [126,156,126,126,103]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [126,156,126,126,103]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |    126  |  [126,156,126,126,103]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |    126  |  126  |    126  |  [126,156,126,126,103]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |  126  |    126  |  [126,156,126,126,103]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |  126  |    126  |  [126,156,126,126,103]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |  126  |    156  |  [126,156,126,126,103]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |    156  |  282  |    156  |  [126,156,126,126,103]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  282  |    156  |  [126,156,126,126,103]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  282  |    156  |  [126,156,126,126,103]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  282  |    126  |  [126,156,126,126,103]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |    126  |  408  |    126  |  [126,156,126,126,103]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  408  |    126  |  [126,156,126,126,103]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  408  |    126  |  [126,156,126,126,103]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  408  |    126  |  [126,156,126,126,103]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |    126  |  534  |    126  |  [126,156,126,126,103]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  534  |    126  |  [126,156,126,126,103]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  534  |    126  |  [126,156,126,126,103]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  534  |    103  |  [126,156,126,126,103]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |    103  |  637  |    103  |  [126,156,126,126,103]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  637  |    103  |  [126,156,126,126,103]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  637  |    103  |  [126,156,126,126,103]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {57}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(2), Set(3)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {57}; {71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |    126  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |    156  |                            |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |    126  |                         1  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |    126  |                         2  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |    103  |                            |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [85, 43]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {57}; {71}
GroupID(1): {43,85}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |         R = R + chunk;  |    126  |                         0  |                            |
    34  |  resetPlaceHolder_1();  |         |                            |                            |
    43  |         R = R + chunk;  |    156  |                            |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |                            |
    57  |         R = R + chunk;  |    126  |                         1  |                            |
    62  |  resetPlaceHolder_1();  |         |                            |                            |
    71  |         R = R + chunk;  |    126  |                         2  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |                            |
    85  |         R = R + chunk;  |    103  |                            |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(34, 62)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if ((i < 1) || (i == 1))
  {
    if (S0 < R0)
    {
      S0 = R0;
    }
    else
    {
      ;
    }
    R0 = 0;
    C0 = C0 + 1;
  }
  else
  {
    if ((i < 2) || (i == 2))
    {
      // reset R0
    }
    else
    {
      if (S0 < R0)
      {
        S0 = R0;
      }
      else
      {
        ;
      }
      R0 = 0;
      C0 = C0 + 1;
    }
  }
}
use R chunk -> if ((i < 3) || (i == 3))
{
  if ((i < 1) || (i == 1))
  {
    if ((i < 0) || (i == 0))
    {
      R0 = R0 + chunk;
    }
    else
    {
      R1 = R1 + chunk;
    }
  }
  else
  {
    R0 = R0 + chunk;
  }
}
else
{
  R1 = R1 + chunk;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m6.460s
user	0m11.299s
sys	0m2.273s

2023-01-25 10:06:56,100 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:07:49,392 INFO     Done. Execution time: 53.291324615478516 seconds
2023-01-25 10:07:49,392 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * diff) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < diff) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      if ((i < 3) || (i == 3))
      {
        if ((i < 1) || (i == 1))
        {
          if ((i < 0) || (i == 0))
          {
            D0 = D0 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          D0 = D0 + chunk;
        }
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      else
      {
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * diff) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < diff) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      if ((i < 3) || (i == 3))
      {
        if ((i < 1) || (i == 1))
        {
          if ((i < 0) || (i == 0))
          {
            D0 = D0 + chunk;
          }
          else
          {
            D1 = D1 + chunk;
          }
        }
        else
        {
          D0 = D0 + chunk;
        }
      }
      else
      {
        D1 = D1 + chunk;
      }
      i = i + 1;
      if ((i < 1) || (i == 1))
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      else
      {
        if ((i < 2) || (i == 2))
        {

        }
        else
        {
          D0p = D0;
          D0 = 0;
          C0 = C0 + 1;
        }
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 diff)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 diff)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun diff () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> diff 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (or (<= D1p (+ 0 (* 1 1 diff))) (= D1p 0))))
  (and (<= 0 (+ D1 a!1 D0 a!2)) (<= D1p 0) a!3 true (or true (= D0p 0)))))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 diff))) (= D1 0))))
  (and a!1 (or true (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 (+ 0 (* 1 1 diff)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (not (or (< a!1 diff) (= a!1 diff)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    7)  (define-fun D1 () Int    (- 1))  (define-fun diff () Int    2)  (define-fun D0p () Int    9)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 diff) (= a!1 diff)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `51.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1006-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1006-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m53.283s
user	2m54.803s
sys	0m5.243s

2023-01-25 10:07:49,392 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-25 10:07:49,392 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:08:05,339 INFO     Done. Execution time: 15.946637630462646 seconds
2023-01-25 10:08:05,339 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz8760332645557827970/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8760332645557827970/bin -o /tmp/qfuzz8760332645557827970/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8760332645557827970/bin
Found file /tmp/qfuzz8760332645557827970/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz8760332645557827970/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8760332645557827970/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8760332645557827970/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8760332645557827970/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8760332645557827970/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 146088 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m146k to 146k us (average: 146k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 7.00; [2528.00,2535.00,2544.00]
2; /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+partition,+delta; 4; 7.00; [2488.00,2528.00,2535.00,2544.00]
4; /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 4; 7.00; [2528.00,2535.00,2544.00,3675.00]
5; /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta; 5; 7.00; [155.00,2164.00,2528.00,2535.00,3388.00]
6; /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 5; 9.00; [188.00,2535.00,2544.00,2675.00,3435.00]
7; /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 4; 7.00; [135.00,2528.00,2535.00,2544.00]
9; /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 4; 7.00; [315.00,2528.00,2535.00,2744.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+partition,+delta
/tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(136, 15, 126, 126, 126, 126, 126, 102, 126, 67, 126, 126, 126, 69, 126, 136, 5, 22, 126, 126, 160, 126, 126, 103, 125, 134, 126, 126, 98, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 6, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 66, 126, 85, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 8, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 133, 171, 9, 9, 9, 9, 52, 134, 126, 148, 186, 126, 126, 126, 126, 126, 126, 133, 171, 9, 9, 9, 9, 101)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(107, 126, 126, 7, 126, 169, 126, 29, 126, 94, 52, 126, 126, 186, 108, 126, 48, 5, 173, 126, 126, 169, 119, 29, 71, 108, 63, 4, 126, 149, 126, 126, 169, 126, 29, 126, 151, 126, 126, 144, 149, 136, 126, 82, 52, 126, 126, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 183, 126, 126, 126, 126, 126, 126, 126, 90, 95, 172, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 124, 126, 126, 126, 126, 126, 126, 126, 141, 146, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8760332645557827970/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [136,15,126,126,126], 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,6], 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,133,171], 9, 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [107,126,126,7,126], 169, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,183,126], 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 124, 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m15.937s
user	0m10.130s
sys	0m0.662s

2023-01-25 10:08:05,340 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-25 10:08:05,340 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-25 10:08:05,343 INFO     Done. Execution time: 0.003070831298828125 seconds
2023-01-25 10:08:05,343 INFO     Output: 
2023-01-25 10:08:05,343 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-25 10:08:12,551 INFO     Done. Execution time: 7.207860708236694 seconds
2023-01-25 10:08:12,551 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([136,15,126,126,126], 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,6], 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,133,171], 9, 9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([107,126,126,7,126], 169, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,183,126], 126, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 124, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 136):
                                                                                                                                
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |         tokens         |  years  |
--------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     126  |  [136,15,126,126,126]  |    126  |
    26  |                      // int R = 0;  |         |     0  |         |     |     126  |  [136,15,126,126,126]  |    126  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |     126  |  [136,15,126,126,126]  |    126  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     126  |  [136,15,126,126,126]  |    126  |
    30  |                     int chunk = 0;  |         |     0  |      0  |     |     126  |  [136,15,126,126,126]  |    126  |
    32  |                         int i = 0;  |         |     0  |      0  |  0  |     126  |  [136,15,126,126,126]  |    126  |
    38  |      chunk = arrayRead(tokens, i);  |         |     0  |    136  |  0  |     126  |  [136,15,126,126,126]  |    126  |
    41  |                     R = R + chunk;  |    136  |   136  |    136  |  0  |     126  |  [136,15,126,126,126]  |    126  |
    44  |                     R = R + years;  |    126  |   262  |    136  |  0  |     126  |  [136,15,126,126,126]  |    126  |
    47  |                    R = R + months;  |    126  |   388  |    136  |  0  |     126  |  [136,15,126,126,126]  |    126  |
    51  |                         i = i + 1;  |         |   388  |    136  |  1  |     126  |  [136,15,126,126,126]  |    126  |
    52  |              resetPlaceHolder_1();  |         |   388  |    136  |  1  |     126  |  [136,15,126,126,126]  |    126  |
    58  |      chunk = arrayRead(tokens, i);  |         |   388  |     15  |  1  |     126  |  [136,15,126,126,126]  |    126  |
    61  |                     R = R + chunk;  |     15  |   403  |     15  |  1  |     126  |  [136,15,126,126,126]  |    126  |
    64  |                     R = R + years;  |    126  |   529  |     15  |  1  |     126  |  [136,15,126,126,126]  |    126  |
    67  |                    R = R + months;  |    126  |   655  |     15  |  1  |     126  |  [136,15,126,126,126]  |    126  |
    71  |                         i = i + 1;  |         |   655  |     15  |  2  |     126  |  [136,15,126,126,126]  |    126  |
    72  |              resetPlaceHolder_1();  |         |   655  |     15  |  2  |     126  |  [136,15,126,126,126]  |    126  |
    78  |      chunk = arrayRead(tokens, i);  |         |   655  |    126  |  2  |     126  |  [136,15,126,126,126]  |    126  |
    81  |                     R = R + chunk;  |    126  |   781  |    126  |  2  |     126  |  [136,15,126,126,126]  |    126  |
    84  |                     R = R + years;  |    126  |   907  |    126  |  2  |     126  |  [136,15,126,126,126]  |    126  |
    87  |                    R = R + months;  |    126  |  1033  |    126  |  2  |     126  |  [136,15,126,126,126]  |    126  |
    91  |                         i = i + 1;  |         |  1033  |    126  |  3  |     126  |  [136,15,126,126,126]  |    126  |
    92  |              resetPlaceHolder_1();  |         |  1033  |    126  |  3  |     126  |  [136,15,126,126,126]  |    126  |
    98  |      chunk = arrayRead(tokens, i);  |         |  1033  |    126  |  3  |     126  |  [136,15,126,126,126]  |    126  |
   101  |                     R = R + chunk;  |    126  |  1159  |    126  |  3  |     126  |  [136,15,126,126,126]  |    126  |
   104  |                     R = R + years;  |    126  |  1285  |    126  |  3  |     126  |  [136,15,126,126,126]  |    126  |
   107  |                    R = R + months;  |    126  |  1411  |    126  |  3  |     126  |  [136,15,126,126,126]  |    126  |
   111  |                         i = i + 1;  |         |  1411  |    126  |  4  |     126  |  [136,15,126,126,126]  |    126  |
   112  |              resetPlaceHolder_1();  |         |  1411  |    126  |  4  |     126  |  [136,15,126,126,126]  |    126  |
   118  |      chunk = arrayRead(tokens, i);  |         |  1411  |    126  |  4  |     126  |  [136,15,126,126,126]  |    126  |
   121  |                     R = R + chunk;  |    126  |  1537  |    126  |  4  |     126  |  [136,15,126,126,126]  |    126  |
   124  |                     R = R + years;  |    126  |  1663  |    126  |  4  |     126  |  [136,15,126,126,126]  |    126  |
   127  |                    R = R + months;  |    126  |  1789  |    126  |  4  |     126  |  [136,15,126,126,126]  |    126  |
   131  |                         i = i + 1;  |         |  1789  |    126  |  5  |     126  |  [136,15,126,126,126]  |    126  |
   132  |              resetPlaceHolder_1();  |         |  1789  |    126  |  5  |     126  |  [136,15,126,126,126]  |    126  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {101}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {81}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {84}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {101}; {104}; {107}; {121}; {124}; {127}; {44}; {47}; {64}; {67}; {81}; {84}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {101}; {104}; {107}; {121}; {124}; {127}; {44}; {47}; {64}; {67}; {81}; {84}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    136  |                            |
    44  |         R = R + years;  |    126  |                         0  |
    47  |        R = R + months;  |    126  |                         1  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     15  |                            |
    64  |         R = R + years;  |    126  |                         2  |
    67  |        R = R + months;  |    126  |                         3  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |    126  |                         4  |
    84  |         R = R + years;  |    126  |                         5  |
    87  |        R = R + months;  |    126  |                         6  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    126  |                         7  |
   104  |         R = R + years;  |    126  |                         8  |
   107  |        R = R + months;  |    126  |                         9  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    126  |                        10  |
   124  |         R = R + years;  |    126  |                        11  |
   127  |        R = R + months;  |    126  |                        12  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [61, 41]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {101}; {104}; {107}; {121}; {124}; {127}; {44}; {47}; {64}; {67}; {81}; {84}; {87}
GroupID(1): {41,61}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    136  |                            |                         0  |
    44  |         R = R + years;  |    126  |                         0  |                            |
    47  |        R = R + months;  |    126  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
    61  |         R = R + chunk;  |     15  |                            |                         0  |
    64  |         R = R + years;  |    126  |                         2  |                            |
    67  |        R = R + months;  |    126  |                         3  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |    126  |                         4  |                            |
    84  |         R = R + years;  |    126  |                         5  |                            |
    87  |        R = R + months;  |    126  |                         6  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |
   101  |         R = R + chunk;  |    126  |                         7  |                            |
   104  |         R = R + years;  |    126  |                         8  |                            |
   107  |        R = R + months;  |    126  |                         9  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                        10  |                            |
   124  |         R = R + years;  |    126  |                        11  |                            |
   127  |        R = R + months;  |    126  |                        12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [45, 46])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    136  |                            |                         0  |
    44  |         R = R + years;  |    126  |                         0  |                            |
    47  |        R = R + months;  |    126  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
    61  |         R = R + chunk;  |     15  |                            |                         0  |
    64  |         R = R + years;  |    126  |                         2  |                            |
    67  |        R = R + months;  |    126  |                         3  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |    126  |                         4  |                            |
    84  |         R = R + years;  |    126  |                         5  |                            |
    87  |        R = R + months;  |    126  |                         6  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |
   101  |         R = R + chunk;  |    126  |                         7  |                            |
   104  |         R = R + years;  |    126  |                         8  |                            |
   107  |        R = R + months;  |    126  |                         9  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                        10  |                            |
   124  |         R = R + years;  |    126  |                        11  |                            |
   127  |        R = R + months;  |    126  |                        12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [65, 66])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    136  |                            |                         0  |
    44  |         R = R + years;  |    126  |                         0  |                            |
    47  |        R = R + months;  |    126  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
    61  |         R = R + chunk;  |     15  |                            |                         0  |
    64  |         R = R + years;  |    126  |                         2  |                            |
    67  |        R = R + months;  |    126  |                         3  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |    126  |                         4  |                            |
    84  |         R = R + years;  |    126  |                         5  |                            |
    87  |        R = R + months;  |    126  |                         6  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |
   101  |         R = R + chunk;  |    126  |                         7  |                            |
   104  |         R = R + years;  |    126  |                         8  |                            |
   107  |        R = R + months;  |    126  |                         9  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                        10  |                            |
   124  |         R = R + years;  |    126  |                        11  |                            |
   127  |        R = R + months;  |    126  |                        12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [82, 83])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    136  |                            |                         0  |
    44  |         R = R + years;  |    126  |                         0  |                            |
    47  |        R = R + months;  |    126  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
    61  |         R = R + chunk;  |     15  |                            |                         0  |
    64  |         R = R + years;  |    126  |                         2  |                            |
    67  |        R = R + months;  |    126  |                         3  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |    126  |                         4  |                            |
    84  |         R = R + years;  |    126  |                         5  |                            |
    87  |        R = R + months;  |    126  |                         6  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |
   101  |         R = R + chunk;  |    126  |                         7  |                            |
   104  |         R = R + years;  |    126  |                         8  |                            |
   107  |        R = R + months;  |    126  |                         9  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                        10  |                            |
   124  |         R = R + years;  |    126  |                        11  |                            |
   127  |        R = R + months;  |    126  |                        12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [85, 86])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    136  |                            |                         0  |
    44  |         R = R + years;  |    126  |                         0  |                            |
    47  |        R = R + months;  |    126  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
    61  |         R = R + chunk;  |     15  |                            |                         0  |
    64  |         R = R + years;  |    126  |                         2  |                            |
    67  |        R = R + months;  |    126  |                         3  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |    126  |                         4  |                            |
    84  |         R = R + years;  |    126  |                         5  |                            |
    87  |        R = R + months;  |    126  |                         6  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |
   101  |         R = R + chunk;  |    126  |                         7  |                            |
   104  |         R = R + years;  |    126  |                         8  |                            |
   107  |        R = R + months;  |    126  |                         9  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                        10  |                            |
   124  |         R = R + years;  |    126  |                        11  |                            |
   127  |        R = R + months;  |    126  |                        12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [102, 103])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    136  |                            |                         0  |
    44  |         R = R + years;  |    126  |                         0  |                            |
    47  |        R = R + months;  |    126  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
    61  |         R = R + chunk;  |     15  |                            |                         0  |
    64  |         R = R + years;  |    126  |                         2  |                            |
    67  |        R = R + months;  |    126  |                         3  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |    126  |                         4  |                            |
    84  |         R = R + years;  |    126  |                         5  |                            |
    87  |        R = R + months;  |    126  |                         6  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |
   101  |         R = R + chunk;  |    126  |                         7  |                            |
   104  |         R = R + years;  |    126  |                         8  |                            |
   107  |        R = R + months;  |    126  |                         9  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                        10  |                            |
   124  |         R = R + years;  |    126  |                        11  |                            |
   127  |        R = R + months;  |    126  |                        12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [105, 106])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    136  |                            |                         0  |
    44  |         R = R + years;  |    126  |                         0  |                            |
    47  |        R = R + months;  |    126  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
    61  |         R = R + chunk;  |     15  |                            |                         0  |
    64  |         R = R + years;  |    126  |                         2  |                            |
    67  |        R = R + months;  |    126  |                         3  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |    126  |                         4  |                            |
    84  |         R = R + years;  |    126  |                         5  |                            |
    87  |        R = R + months;  |    126  |                         6  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |
   101  |         R = R + chunk;  |    126  |                         7  |                            |
   104  |         R = R + years;  |    126  |                         8  |                            |
   107  |        R = R + months;  |    126  |                         9  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                        10  |                            |
   124  |         R = R + years;  |    126  |                        11  |                            |
   127  |        R = R + months;  |    126  |                        12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [122, 123])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    136  |                            |                         0  |
    44  |         R = R + years;  |    126  |                         0  |                            |
    47  |        R = R + months;  |    126  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
    61  |         R = R + chunk;  |     15  |                            |                         0  |
    64  |         R = R + years;  |    126  |                         2  |                            |
    67  |        R = R + months;  |    126  |                         3  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |    126  |                         4  |                            |
    84  |         R = R + years;  |    126  |                         5  |                            |
    87  |        R = R + months;  |    126  |                         6  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |
   101  |         R = R + chunk;  |    126  |                         7  |                            |
   104  |         R = R + years;  |    126  |                         8  |                            |
   107  |        R = R + months;  |    126  |                         9  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                        10  |                            |
   124  |         R = R + years;  |    126  |                        11  |                            |
   127  |        R = R + months;  |    126  |                        12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [125, 126])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    136  |                            |                         0  |
    44  |         R = R + years;  |    126  |                         0  |                            |
    47  |        R = R + months;  |    126  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
    61  |         R = R + chunk;  |     15  |                            |                         0  |
    64  |         R = R + years;  |    126  |                         2  |                            |
    67  |        R = R + months;  |    126  |                         3  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |
    81  |         R = R + chunk;  |    126  |                         4  |                            |
    84  |         R = R + years;  |    126  |                         5  |                            |
    87  |        R = R + months;  |    126  |                         6  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |
   101  |         R = R + chunk;  |    126  |                         7  |                            |
   104  |         R = R + years;  |    126  |                         8  |                            |
   107  |        R = R + months;  |    126  |                         9  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    126  |                        10  |                            |
   124  |         R = R + years;  |    126  |                        11  |                            |
   127  |        R = R + months;  |    126  |                        12  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 1) || (i == 1))
{
  R1 = R1 + chunk;
}
else
{
  R0 = R0 + chunk;
}
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R years -> R0 = R0 + years;
use R months -> R0 = R0 + months;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m7.201s
user	0m14.394s
sys	0m2.415s

2023-01-25 10:08:12,552 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:10:13,043 INFO     Done. Execution time: 120.490731716156 seconds
2023-01-25 10:10:13,043 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (tokens + (tokens * (years + months)))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 1) || (i == 1))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      D0 = D0 + years;
      D0 = D0 + months;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (tokens + (tokens * (years + months)))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 1) || (i == 1))
      {
        D1 = D1 + chunk;
      }
      else
      {
        D0 = D0 + chunk;
      }
      D0 = D0 + years;
      D0 = D0 + months;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 tokens)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 months) (* 1 1 years) (* 1 1 tokens)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 months) (* 1 1 years) (* 1 1 tokens)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun years () Int)
(declare-fun tokens () Int)
(declare-fun months () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> years 0))
(assert (> tokens 0))
(assert (> months 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (<= D0p (+ 0 (* 1 1 months) (* 1 1 years) (* 1 1 tokens))))
      (a!4 (or (<= D1p (+ 0 (* 1 1 tokens))) (= D1p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) a!3 (or a!3 (= D0p 0)) (<= D1p 0) a!4)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 months) (* 1 1 years) (* 1 1 tokens)))
               (= D0 0)))
      (a!2 (or (<= D1 (+ 0 (* 1 1 tokens))) (= D1 0))))
  (and a!1 a!2)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C0 (+ 0 (* 1 1 tokens)))
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (not (or a!2 a!3)))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    1)  (define-fun D0 () Int    4)  (define-fun months () Int    1)  (define-fun tokens () Int    1)  (define-fun years () Int    2)  (define-fun D0p () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `118.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1008-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1008-transparentAmortize-60s-mostPrecise-000-099.csv`

real	2m0.483s
user	5m19.737s
sys	0m16.887s

2023-01-25 10:10:13,043 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-25 10:10:13,043 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:10:29,159 INFO     Done. Execution time: 16.11545181274414 seconds
2023-01-25 10:10:29,159 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz1186381933952674494/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1186381933952674494/bin -o /tmp/qfuzz1186381933952674494/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1186381933952674494/bin
Found file /tmp/qfuzz1186381933952674494/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz1186381933952674494/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1186381933952674494/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1186381933952674494/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1186381933952674494/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1186381933952674494/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 22, exec speed = 121955 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1186381933952674494/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz1186381933952674494/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1186381933952674494/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz1186381933952674494/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1186381933952674494/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 12, 161, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1186381933952674494/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.106s
user	0m9.207s
sys	0m0.617s

2023-01-25 10:10:29,159 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-25 10:10:29,160 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-25 10:10:29,165 INFO     Done. Execution time: 0.0052030086517333984 seconds
2023-01-25 10:10:29,165 INFO     Output: 
2023-01-25 10:10:29,166 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-25 10:10:35,195 INFO     Done. Execution time: 6.029231786727905 seconds
2023-01-25 10:10:35,195 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m6.018s
user	0m10.477s
sys	0m1.637s

2023-01-25 10:10:35,195 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:10:43,087 INFO     Done. Execution time: 7.891224145889282 seconds
2023-01-25 10:10:43,087 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1010-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1010-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.882s
user	0m16.467s
sys	0m2.881s

2023-01-25 10:10:43,087 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:10:43,087 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:10:59,202 INFO     Done. Execution time: 16.114922046661377 seconds
2023-01-25 10:10:59,203 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz453341028121011463/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz453341028121011463/bin -o /tmp/qfuzz453341028121011463/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz453341028121011463/bin
Found file /tmp/qfuzz453341028121011463/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz453341028121011463/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz453341028121011463/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz453341028121011463/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz453341028121011463/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz453341028121011463/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz453341028121011463/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz453341028121011463/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 94, exec speed = 138826 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m138k to 138k us (average: 138k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 1.00; [28.00,32.00,35.50,37.00,2528.00]
2; /tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta; 6; 1.00; [28.00,32.00,35.50,37.00,88.00,2528.00]
3; /tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+partition,+delta; 8; 1.00; [28.00,32.00,35.50,37.00,1388.00,2308.00,2528.00,2808.00]
4; /tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+partition,+delta; 9; 1.00; [28.00,32.00,35.50,37.00,108.00,228.00,1148.00,2828.00,3028.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(141, 5, 11, 57, 151, 100, 81)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 69, 115, 140, 131, 126, 126, 125, 143, 94, 126, 126, 129, 198, 112, 112, 112, 44, 112, 40, 37, 4, 117, 126, 94, 107, 60, 60, 60, 60, 60, 138, 126, 132, 126, 112)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 104, 136, 15, 126, 167, 126, 126, 125, 126, 126, 126, 126, 126, 86, 86, 178, 86, 86, 86, 86, 86, 86, 126, 126, 69, 5, 126, 126, 129, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz453341028121011463/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [141,5,11,57,151]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,69,115,140]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.105s
user	0m9.644s
sys	0m0.723s

2023-01-25 10:10:59,203 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:10:59,203 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:10:59,207 INFO     Done. Execution time: 0.004077911376953125 seconds
2023-01-25 10:10:59,208 INFO     Output: 
2023-01-25 10:10:59,208 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-25 10:11:10,751 INFO     Done. Execution time: 11.542677879333496 seconds
2023-01-25 10:11:10,751 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([141,5,11,57,151])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,69,115,140])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 191):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |     baseMessage     |  buffer  |  chunk  |  i  |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [141,5,11,57,151]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [141,5,11,57,151]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [141,5,11,57,151]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [141,5,11,57,151]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [141,5,11,57,151]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [141,5,11,57,151]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [141,5,11,57,151]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [141,5,11,57,151]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [141,5,11,57,151]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [141,5,11,57,151]  |       0  |    141  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [141,5,11,57,151]  |       0  |    141  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [141,5,11,57,151]  |       0  |    141  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [141,5,11,57,151]  |       0  |    141  |  0  |
    42  |                     R = R + chunk;  |    141  |  146  |  [141,5,11,57,151]  |       0  |    141  |  0  |
    45  |                         R = R + 1;  |      1  |  147  |  [141,5,11,57,151]  |       0  |    141  |  0  |
    48  |                         R = R + 1;  |      1  |  148  |  [141,5,11,57,151]  |       0  |    141  |  0  |
    51  |                         R = R + 1;  |      1  |  149  |  [141,5,11,57,151]  |       0  |    141  |  0  |
    55  |                         i = i + 1;  |         |  149  |  [141,5,11,57,151]  |       0  |    141  |  1  |
    56  |              resetPlaceHolder_1();  |         |  149  |  [141,5,11,57,151]  |       0  |    141  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |  149  |  [141,5,11,57,151]  |       0  |      5  |  1  |
    65  |                         R = R + 1;  |      1  |  150  |  [141,5,11,57,151]  |       0  |      5  |  1  |
    68  |                         R = R + 1;  |      1  |  151  |  [141,5,11,57,151]  |       0  |      5  |  1  |
    71  |                         R = R + 1;  |      1  |  152  |  [141,5,11,57,151]  |       0  |      5  |  1  |
    74  |                     R = R + chunk;  |      5  |  157  |  [141,5,11,57,151]  |       0  |      5  |  1  |
    77  |                         R = R + 1;  |      1  |  158  |  [141,5,11,57,151]  |       0  |      5  |  1  |
    80  |                         R = R + 1;  |      1  |  159  |  [141,5,11,57,151]  |       0  |      5  |  1  |
    83  |                         R = R + 1;  |      1  |  160  |  [141,5,11,57,151]  |       0  |      5  |  1  |
    87  |                         i = i + 1;  |         |  160  |  [141,5,11,57,151]  |       0  |      5  |  2  |
    88  |              resetPlaceHolder_1();  |         |  160  |  [141,5,11,57,151]  |       0  |      5  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |  160  |  [141,5,11,57,151]  |       0  |     11  |  2  |
    97  |                         R = R + 1;  |      1  |  161  |  [141,5,11,57,151]  |       0  |     11  |  2  |
   100  |                         R = R + 1;  |      1  |  162  |  [141,5,11,57,151]  |       0  |     11  |  2  |
   103  |                         R = R + 1;  |      1  |  163  |  [141,5,11,57,151]  |       0  |     11  |  2  |
   106  |                     R = R + chunk;  |     11  |  174  |  [141,5,11,57,151]  |       0  |     11  |  2  |
   109  |                         R = R + 1;  |      1  |  175  |  [141,5,11,57,151]  |       0  |     11  |  2  |
   112  |                         R = R + 1;  |      1  |  176  |  [141,5,11,57,151]  |       0  |     11  |  2  |
   115  |                         R = R + 1;  |      1  |  177  |  [141,5,11,57,151]  |       0  |     11  |  2  |
   119  |                         i = i + 1;  |         |  177  |  [141,5,11,57,151]  |       0  |     11  |  3  |
   120  |              resetPlaceHolder_1();  |         |  177  |  [141,5,11,57,151]  |       0  |     11  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  177  |  [141,5,11,57,151]  |       0  |     57  |  3  |
   129  |                         R = R + 1;  |      1  |  178  |  [141,5,11,57,151]  |       0  |     57  |  3  |
   132  |                         R = R + 1;  |      1  |  179  |  [141,5,11,57,151]  |       0  |     57  |  3  |
   135  |                         R = R + 1;  |      1  |  180  |  [141,5,11,57,151]  |       0  |     57  |  3  |
   138  |                     R = R + chunk;  |     57  |  237  |  [141,5,11,57,151]  |       0  |     57  |  3  |
   141  |                         R = R + 1;  |      1  |  238  |  [141,5,11,57,151]  |       0  |     57  |  3  |
   144  |                         R = R + 1;  |      1  |  239  |  [141,5,11,57,151]  |       0  |     57  |  3  |
   147  |                         R = R + 1;  |      1  |  240  |  [141,5,11,57,151]  |       0  |     57  |  3  |
   151  |                         i = i + 1;  |         |  240  |  [141,5,11,57,151]  |       0  |     57  |  4  |
   152  |              resetPlaceHolder_1();  |         |  240  |  [141,5,11,57,151]  |       0  |     57  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  240  |  [141,5,11,57,151]  |       0  |    151  |  4  |
   161  |                         R = R + 1;  |      1  |  241  |  [141,5,11,57,151]  |       0  |    151  |  4  |
   164  |                         R = R + 1;  |      1  |  242  |  [141,5,11,57,151]  |       0  |    151  |  4  |
   167  |                         R = R + 1;  |      1  |  243  |  [141,5,11,57,151]  |       0  |    151  |  4  |
   170  |                     R = R + chunk;  |    151  |  394  |  [141,5,11,57,151]  |       0  |    151  |  4  |
   173  |                         R = R + 1;  |      1  |  395  |  [141,5,11,57,151]  |       0  |    151  |  4  |
   176  |                         R = R + 1;  |      1  |  396  |  [141,5,11,57,151]  |       0  |    151  |  4  |
   179  |                         R = R + 1;  |      1  |  397  |  [141,5,11,57,151]  |       0  |    151  |  4  |
   183  |                         i = i + 1;  |         |  397  |  [141,5,11,57,151]  |       0  |    151  |  5  |
   184  |              resetPlaceHolder_1();  |         |  397  |  [141,5,11,57,151]  |       0  |    151  |  5  |
   190  |                         R = R + 1;  |      1  |  398  |  [141,5,11,57,151]  |       0  |    151  |  5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [138, 170, 115, 42, 20, 164, 179, 106, 147, 132, 74, 33, 65, 97, 141, 109, 77, 173, 129, 45, 161, 17, 176, 71, 144, 39, 103, 135, 80, 167, 112, 48, 36, 51, 190, 68, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {190}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |    141  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |      5  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |     11  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |     57  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |    151  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                        32  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {42,74,106,138,170}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 189])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    141  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |      5  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |     11  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |     57  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |    151  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m11.534s
user	0m25.878s
sys	0m5.381s

2023-01-25 10:11:10,752 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:11:23,354 INFO     Done. Execution time: 12.601869821548462 seconds
2023-01-25 10:11:23,354 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!4 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       (or a!3 (= D1p 0))
       (<= D0p 0)
       (or a!4 (= D0p 0)))))
(assert (let ((a!1 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D1 0)) (or a!2 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    2)  (define-fun D0 () Int    16)  (define-fun baseMessage () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `10.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1011-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1011-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.592s
user	0m35.858s
sys	0m4.998s

2023-01-25 10:11:23,355 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-25 10:11:23,355 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:11:39,190 INFO     Done. Execution time: 15.834895610809326 seconds
2023-01-25 10:11:39,190 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz3231337215899112893/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3231337215899112893/bin -o /tmp/qfuzz3231337215899112893/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3231337215899112893/bin
Found file /tmp/qfuzz3231337215899112893/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz3231337215899112893/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3231337215899112893/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3231337215899112893/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3231337215899112893/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3231337215899112893/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 136016 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
4; /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
7; /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
8; /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
9; /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 148, 142, 32, 138, 23, 23, 159, 90, 5, 142, 32, 137, 160, 23, 159, 90, 5, 170, 199, 23, 23, 4, 62, 23, 23, 6, 32, 23, 23, 82, 32, 23, 37)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(9, 52, 126, 126, 126, 126, 126, 136, 22, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 4, 4, 126, 94, 70, 126, 126, 126, 126, 126, 126, 132, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(191, 113, 199, 56, 64)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(77, 62, 121, 83, 145, 145, 145, 145, 68, 145, 145, 145, 145, 145, 12, 145, 109, 152, 152, 97, 143, 152, 171, 56, 155, 59, 157)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(90, 90, 157, 120, 99, 82, 120, 120, 147, 176, 120, 176)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 126, 94, 52, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3231337215899112893/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 23
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 9
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 191
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 77
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 90
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m15.827s
user	0m8.814s
sys	0m0.687s

2023-01-25 10:11:39,190 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-25 10:11:39,190 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-25 10:11:39,194 INFO     Done. Execution time: 0.0038580894470214844 seconds
2023-01-25 10:11:39,195 INFO     Output: 
2023-01-25 10:11:39,195 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-25 10:11:45,228 INFO     Done. Execution time: 6.033422231674194 seconds
2023-01-25 10:11:45,228 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(23)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(9)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(191)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(77)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(90)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 509):
                                                                                                             
 Index  |              Commands               |  Costs  |  R   |  arrayPrefix  |  className  |  className_  |
-------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |               |         23  |              |
    11  |               int arrayPrefix = 0;  |         |   0  |            0  |         23  |              |
    12  |                      // int R = 0;  |         |   0  |            0  |         23  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |   0  |            0  |         23  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |   0  |            0  |         23  |              |
    16  |        int className_ = className;  |         |   0  |            0  |         23  |          23  |
    29  |       className_ = className_ - 1;  |         |   0  |            0  |         23  |          22  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |   0  |            2  |         23  |          22  |
    36  |                         R = R + 2;  |      2  |   2  |            2  |         23  |          22  |
    37  |              resetPlaceHolder_1();  |         |   2  |            2  |         23  |          22  |
    50  |       className_ = className_ - 1;  |         |   2  |            2  |         23  |          21  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |   2  |            4  |         23  |          21  |
    57  |                         R = R + 2;  |      2  |   4  |            4  |         23  |          21  |
    58  |              resetPlaceHolder_1();  |         |   4  |            4  |         23  |          21  |
    71  |       className_ = className_ - 1;  |         |   4  |            4  |         23  |          20  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |   4  |            6  |         23  |          20  |
    78  |                         R = R + 2;  |      2  |   6  |            6  |         23  |          20  |
    79  |              resetPlaceHolder_1();  |         |   6  |            6  |         23  |          20  |
    92  |       className_ = className_ - 1;  |         |   6  |            6  |         23  |          19  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |   6  |            8  |         23  |          19  |
    99  |                         R = R + 2;  |      2  |   8  |            8  |         23  |          19  |
   100  |              resetPlaceHolder_1();  |         |   8  |            8  |         23  |          19  |
   113  |       className_ = className_ - 1;  |         |   8  |            8  |         23  |          18  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |   8  |           10  |         23  |          18  |
   120  |                         R = R + 2;  |      2  |  10  |           10  |         23  |          18  |
   121  |              resetPlaceHolder_1();  |         |  10  |           10  |         23  |          18  |
   134  |       className_ = className_ - 1;  |         |  10  |           10  |         23  |          17  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |  10  |           12  |         23  |          17  |
   141  |                         R = R + 2;  |      2  |  12  |           12  |         23  |          17  |
   142  |              resetPlaceHolder_1();  |         |  12  |           12  |         23  |          17  |
   155  |       className_ = className_ - 1;  |         |  12  |           12  |         23  |          16  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |  12  |           14  |         23  |          16  |
   162  |                         R = R + 2;  |      2  |  14  |           14  |         23  |          16  |
   163  |              resetPlaceHolder_1();  |         |  14  |           14  |         23  |          16  |
   176  |       className_ = className_ - 1;  |         |  14  |           14  |         23  |          15  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |  14  |           16  |         23  |          15  |
   183  |                         R = R + 2;  |      2  |  16  |           16  |         23  |          15  |
   184  |              resetPlaceHolder_1();  |         |  16  |           16  |         23  |          15  |
   197  |       className_ = className_ - 1;  |         |  16  |           16  |         23  |          14  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |  16  |           18  |         23  |          14  |
   204  |                         R = R + 2;  |      2  |  18  |           18  |         23  |          14  |
   205  |              resetPlaceHolder_1();  |         |  18  |           18  |         23  |          14  |
   218  |       className_ = className_ - 1;  |         |  18  |           18  |         23  |          13  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |  18  |           20  |         23  |          13  |
   225  |                         R = R + 2;  |      2  |  20  |           20  |         23  |          13  |
   226  |              resetPlaceHolder_1();  |         |  20  |           20  |         23  |          13  |
   239  |       className_ = className_ - 1;  |         |  20  |           20  |         23  |          12  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |  20  |           22  |         23  |          12  |
   246  |                         R = R + 2;  |      2  |  22  |           22  |         23  |          12  |
   247  |              resetPlaceHolder_1();  |         |  22  |           22  |         23  |          12  |
   260  |       className_ = className_ - 1;  |         |  22  |           22  |         23  |          11  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |  22  |           24  |         23  |          11  |
   267  |                         R = R + 2;  |      2  |  24  |           24  |         23  |          11  |
   268  |              resetPlaceHolder_1();  |         |  24  |           24  |         23  |          11  |
   281  |       className_ = className_ - 1;  |         |  24  |           24  |         23  |          10  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |  24  |           26  |         23  |          10  |
   288  |                         R = R + 2;  |      2  |  26  |           26  |         23  |          10  |
   289  |              resetPlaceHolder_1();  |         |  26  |           26  |         23  |          10  |
   302  |       className_ = className_ - 1;  |         |  26  |           26  |         23  |           9  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |  26  |           28  |         23  |           9  |
   309  |                         R = R + 2;  |      2  |  28  |           28  |         23  |           9  |
   310  |              resetPlaceHolder_1();  |         |  28  |           28  |         23  |           9  |
   323  |       className_ = className_ - 1;  |         |  28  |           28  |         23  |           8  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |  28  |           30  |         23  |           8  |
   330  |                         R = R + 2;  |      2  |  30  |           30  |         23  |           8  |
   331  |              resetPlaceHolder_1();  |         |  30  |           30  |         23  |           8  |
   344  |       className_ = className_ - 1;  |         |  30  |           30  |         23  |           7  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |  30  |           32  |         23  |           7  |
   351  |                         R = R + 2;  |      2  |  32  |           32  |         23  |           7  |
   352  |              resetPlaceHolder_1();  |         |  32  |           32  |         23  |           7  |
   365  |       className_ = className_ - 1;  |         |  32  |           32  |         23  |           6  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |  32  |           34  |         23  |           6  |
   372  |                         R = R + 2;  |      2  |  34  |           34  |         23  |           6  |
   373  |              resetPlaceHolder_1();  |         |  34  |           34  |         23  |           6  |
   386  |       className_ = className_ - 1;  |         |  34  |           34  |         23  |           5  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |  34  |           36  |         23  |           5  |
   393  |                         R = R + 2;  |      2  |  36  |           36  |         23  |           5  |
   394  |              resetPlaceHolder_1();  |         |  36  |           36  |         23  |           5  |
   407  |       className_ = className_ - 1;  |         |  36  |           36  |         23  |           4  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |  36  |           38  |         23  |           4  |
   414  |                         R = R + 2;  |      2  |  38  |           38  |         23  |           4  |
   415  |              resetPlaceHolder_1();  |         |  38  |           38  |         23  |           4  |
   428  |       className_ = className_ - 1;  |         |  38  |           38  |         23  |           3  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |  38  |           40  |         23  |           3  |
   435  |                         R = R + 2;  |      2  |  40  |           40  |         23  |           3  |
   436  |              resetPlaceHolder_1();  |         |  40  |           40  |         23  |           3  |
   449  |       className_ = className_ - 1;  |         |  40  |           40  |         23  |           2  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |  40  |           42  |         23  |           2  |
   456  |                         R = R + 2;  |      2  |  42  |           42  |         23  |           2  |
   457  |              resetPlaceHolder_1();  |         |  42  |           42  |         23  |           2  |
   470  |       className_ = className_ - 1;  |         |  42  |           42  |         23  |           1  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |  42  |           44  |         23  |           1  |
   477  |                         R = R + 2;  |      2  |  44  |           44  |         23  |           1  |
   478  |              resetPlaceHolder_1();  |         |  44  |           44  |         23  |           1  |
   491  |       className_ = className_ - 1;  |         |  44  |           44  |         23  |           0  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |  44  |           46  |         23  |           0  |
   498  |                         R = R + 2;  |      2  |  46  |           46  |         23  |           0  |
   499  |              resetPlaceHolder_1();  |         |  46  |           46  |         23  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [120, 288, 372, 57, 78, 435, 456, 141, 225, 393, 204, 498, 477, 330, 267, 162, 414, 99, 351, 246, 36, 183, 309]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {57}; {78}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {57}; {78}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {57}; {78}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(352, 247, 142, 436, 37, 184, 289, 121, 457, 205, 394, 226, 310, 331, 58, 478, 373, 268, 79, 415, 163, 100)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m6.025s
user	0m11.171s
sys	0m1.747s

2023-01-25 10:11:45,229 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:11:53,208 INFO     Done. Execution time: 7.979065179824829 seconds
2023-01-25 10:11:53,208 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1011-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1011-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.970s
user	0m16.752s
sys	0m2.701s

2023-01-25 10:11:53,208 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-25 10:11:53,208 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:12:09,439 INFO     Done. Execution time: 16.23079562187195 seconds
2023-01-25 10:12:09,440 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz8422703530083536768/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8422703530083536768/bin -o /tmp/qfuzz8422703530083536768/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8422703530083536768/bin
Found file /tmp/qfuzz8422703530083536768/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz8422703530083536768/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8422703530083536768/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8422703530083536768/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8422703530083536768/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8422703530083536768/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 39, exec speed = 129583 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8422703530083536768/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 16.00; [18.00,34.00]
2; /tmp/qfuzz8422703530083536768/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 15.00; [18.00,33.50]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8422703530083536768/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz8422703530083536768/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8422703530083536768/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(83, 4, 4, 4, 126, 126, 159, 126, 37, 15, 126, 6, 103, 18, 126, 126, 126, 126, 115, 4, 4, 4, 52, 126, 18, 4, 126, 98, 11)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8422703530083536768/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.222s
user	0m9.330s
sys	0m0.776s

2023-01-25 10:12:09,440 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-25 10:12:09,440 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-25 10:12:09,445 INFO     Done. Execution time: 0.004551410675048828 seconds
2023-01-25 10:12:09,445 INFO     Output: 
2023-01-25 10:12:09,445 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-25 10:12:15,242 INFO     Done. Execution time: 5.796393871307373 seconds
2023-01-25 10:12:15,242 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m5.787s
user	0m11.500s
sys	0m1.723s

2023-01-25 10:12:15,242 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:12:22,323 INFO     Done. Execution time: 7.080569267272949 seconds
2023-01-25 10:12:22,323 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1012-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1012-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.073s
user	0m15.548s
sys	0m2.394s

2023-01-25 10:12:22,323 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-25 10:12:22,324 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:12:38,295 INFO     Done. Execution time: 15.971719980239868 seconds
2023-01-25 10:12:38,296 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz7825570416478105659/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7825570416478105659/bin -o /tmp/qfuzz7825570416478105659/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7825570416478105659/bin
Found file /tmp/qfuzz7825570416478105659/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz7825570416478105659/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7825570416478105659/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7825570416478105659/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7825570416478105659/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7825570416478105659/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 28, exec speed = 127123 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7825570416478105659/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [41.00]
2; /tmp/qfuzz7825570416478105659/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta; 2; 10.00; [31.00,41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7825570416478105659/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz7825570416478105659/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7825570416478105659/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(127, 126, 69, 4, 126, 126, 5, 4, 126, 126, 126, 126, 126, 131, 126, 126, 129, 126, 126, 126, 126, 126, 126, 126, 126, 126, 69, 94, 37, 135, 126, 69, 37, 126, 126, 62, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7825570416478105659/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m15.964s
user	0m9.165s
sys	0m0.592s

2023-01-25 10:12:38,296 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-25 10:12:38,296 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-25 10:12:38,299 INFO     Done. Execution time: 0.0033273696899414062 seconds
2023-01-25 10:12:38,300 INFO     Output: 
2023-01-25 10:12:38,300 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-25 10:12:42,520 INFO     Done. Execution time: 4.220142841339111 seconds
2023-01-25 10:12:42,520 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

real	0m4.212s
user	0m7.488s
sys	0m0.935s

2023-01-25 10:12:42,520 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:12:49,812 INFO     Done. Execution time: 7.291823148727417 seconds
2023-01-25 10:12:49,813 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1012-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1012-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.283s
user	0m15.500s
sys	0m2.487s

2023-01-25 10:12:49,813 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-25 10:12:49,813 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:13:06,188 INFO     Done. Execution time: 16.375128984451294 seconds
2023-01-25 10:13:06,188 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz2300234281351368736/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2300234281351368736/bin -o /tmp/qfuzz2300234281351368736/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2300234281351368736/bin
Found file /tmp/qfuzz2300234281351368736/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz2300234281351368736/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2300234281351368736/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2300234281351368736/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2300234281351368736/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2300234281351368736/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 120329 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2300234281351368736/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz2300234281351368736/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2300234281351368736/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz2300234281351368736/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2300234281351368736/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(117, 131, 4, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2300234281351368736/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.364s
user	0m10.066s
sys	0m0.696s

2023-01-25 10:13:06,189 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-25 10:13:06,189 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-25 10:13:06,193 INFO     Done. Execution time: 0.00399017333984375 seconds
2023-01-25 10:13:06,193 INFO     Output: 
2023-01-25 10:13:06,194 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-25 10:13:12,432 INFO     Done. Execution time: 6.238087892532349 seconds
2023-01-25 10:13:12,432 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m6.229s
user	0m10.942s
sys	0m1.782s

2023-01-25 10:13:12,432 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:13:20,769 INFO     Done. Execution time: 8.336618423461914 seconds
2023-01-25 10:13:20,769 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1013-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1013-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.328s
user	0m17.349s
sys	0m2.917s

2023-01-25 10:13:20,770 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-25 10:13:20,770 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:13:37,029 INFO     Done. Execution time: 16.25892210006714 seconds
2023-01-25 10:13:37,029 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz3496386832512459029/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3496386832512459029/bin -o /tmp/qfuzz3496386832512459029/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3496386832512459029/bin
Found file /tmp/qfuzz3496386832512459029/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz3496386832512459029/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3496386832512459029/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3496386832512459029/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3496386832512459029/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3496386832512459029/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 126857 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3496386832512459029/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz3496386832512459029/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3496386832512459029/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz3496386832512459029/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3496386832512459029/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(75, 119, 124, 118, 126, 194, 101, 101, 118, 101, 121, 112, 41, 43, 101, 121, 101, 41, 135, 25, 101, 115, 121, 101, 75, 57, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3496386832512459029/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.250s
user	0m9.570s
sys	0m0.639s

2023-01-25 10:13:37,029 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-25 10:13:37,029 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-25 10:13:37,037 INFO     Done. Execution time: 0.0069773197174072266 seconds
2023-01-25 10:13:37,037 INFO     Output: 
2023-01-25 10:13:37,037 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-25 10:13:44,620 INFO     Done. Execution time: 7.582903146743774 seconds
2023-01-25 10:13:44,620 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m7.569s
user	0m13.543s
sys	0m1.801s

2023-01-25 10:13:44,621 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:13:55,021 INFO     Done. Execution time: 10.399336576461792 seconds
2023-01-25 10:13:55,021 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `8.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1013-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1013-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.388s
user	0m22.054s
sys	0m3.431s

2023-01-25 10:13:55,022 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-25 10:13:55,022 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:14:12,898 INFO     Done. Execution time: 17.875734329223633 seconds
2023-01-25 10:14:12,898 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz876207702632475556/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz876207702632475556/bin -o /tmp/qfuzz876207702632475556/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz876207702632475556/bin
Found file /tmp/qfuzz876207702632475556/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz876207702632475556/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz876207702632475556/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz876207702632475556/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz876207702632475556/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz876207702632475556/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz876207702632475556/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz876207702632475556/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 136059 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m136k to 136k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz876207702632475556/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz876207702632475556/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz876207702632475556/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
/tmp/qfuzz876207702632475556/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz876207702632475556/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 4, 82, 27, 126, 126, 126, 126, 175, 131, 126, 126, 126, 126, 126, 126, 126, 126, 159, 126, 126, 126, 126, 126, 160, 157, 126, 126, 68, 126, 126, 43, 126, 134, 126, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz876207702632475556/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m17.862s
user	0m13.076s
sys	0m0.871s

2023-01-25 10:14:12,898 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-25 10:14:12,898 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-25 10:14:12,901 INFO     Done. Execution time: 0.0031147003173828125 seconds
2023-01-25 10:14:12,902 INFO     Output: 
2023-01-25 10:14:12,902 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-25 10:14:15,945 INFO     Done. Execution time: 3.04315185546875 seconds
2023-01-25 10:14:15,945 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m3.035s
user	0m5.798s
sys	0m0.286s

2023-01-25 10:14:15,945 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:14:17,987 INFO     Done. Execution time: 2.0411741733551025 seconds
2023-01-25 10:14:17,987 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1014-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1014-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.033s
user	0m3.569s
sys	0m0.230s

2023-01-25 10:14:17,987 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-25 10:14:17,987 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:14:34,190 INFO     Done. Execution time: 16.202838897705078 seconds
2023-01-25 10:14:34,191 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz8473067690309759232/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8473067690309759232/bin -o /tmp/qfuzz8473067690309759232/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8473067690309759232/bin
Found file /tmp/qfuzz8473067690309759232/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz8473067690309759232/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8473067690309759232/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8473067690309759232/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8473067690309759232/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8473067690309759232/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 32, exec speed = 118128 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8473067690309759232/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 5.00; [31.00,51.00,56.00]
2; /tmp/qfuzz8473067690309759232/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8473067690309759232/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz8473067690309759232/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8473067690309759232/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8473067690309759232/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.193s
user	0m9.500s
sys	0m0.710s

2023-01-25 10:14:34,191 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-25 10:14:34,191 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-25 10:14:34,196 INFO     Done. Execution time: 0.00452113151550293 seconds
2023-01-25 10:14:34,196 INFO     Output: 
2023-01-25 10:14:34,196 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-25 10:14:41,932 INFO     Done. Execution time: 7.735815048217773 seconds
2023-01-25 10:14:41,932 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 2 -> R0 = R0 + 2;
use R 1 -> R1 = R1 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m7.727s
user	0m14.678s
sys	0m2.497s

2023-01-25 10:14:41,932 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:14:53,187 INFO     Done. Execution time: 11.254634141921997 seconds
2023-01-25 10:14:53,188 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `9.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1014-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1014-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.245s
user	0m29.214s
sys	0m5.065s

2023-01-25 10:14:53,188 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-25 10:14:53,188 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:15:09,115 INFO     Done. Execution time: 15.927423238754272 seconds
2023-01-25 10:15:09,116 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz4650418095865863063/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4650418095865863063/bin -o /tmp/qfuzz4650418095865863063/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4650418095865863063/bin
Found file /tmp/qfuzz4650418095865863063/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz4650418095865863063/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4650418095865863063/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4650418095865863063/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4650418095865863063/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4650418095865863063/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 128292 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4650418095865863063/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz4650418095865863063/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4650418095865863063/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz4650418095865863063/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4650418095865863063/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4650418095865863063/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m15.918s
user	0m9.016s
sys	0m0.683s

2023-01-25 10:15:09,116 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-25 10:15:09,116 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-25 10:15:09,120 INFO     Done. Execution time: 0.004038572311401367 seconds
2023-01-25 10:15:09,120 INFO     Output: 
2023-01-25 10:15:09,120 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-25 10:15:14,483 INFO     Done. Execution time: 5.362927198410034 seconds
2023-01-25 10:15:14,484 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m5.353s
user	0m9.865s
sys	0m1.466s

2023-01-25 10:15:14,484 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:15:21,920 INFO     Done. Execution time: 7.435958385467529 seconds
2023-01-25 10:15:21,920 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `5.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1015-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1015-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.428s
user	0m15.556s
sys	0m2.397s

2023-01-25 10:15:21,920 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-25 10:15:21,920 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:15:37,805 INFO     Done. Execution time: 15.884578466415405 seconds
2023-01-25 10:15:37,805 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz4146239508983729636/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4146239508983729636/bin -o /tmp/qfuzz4146239508983729636/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4146239508983729636/bin
Found file /tmp/qfuzz4146239508983729636/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz4146239508983729636/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4146239508983729636/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4146239508983729636/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4146239508983729636/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4146239508983729636/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 134540 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4146239508983729636/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [36.00]
3; /tmp/qfuzz4146239508983729636/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4146239508983729636/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz4146239508983729636/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4146239508983729636/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4146239508983729636/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m15.877s
user	0m9.132s
sys	0m0.604s

2023-01-25 10:15:37,806 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-25 10:15:37,806 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-25 10:15:37,810 INFO     Done. Execution time: 0.003980398178100586 seconds
2023-01-25 10:15:37,810 INFO     Output: 
2023-01-25 10:15:37,810 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-25 10:15:41,992 INFO     Done. Execution time: 4.181970596313477 seconds
2023-01-25 10:15:41,992 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m4.173s
user	0m7.395s
sys	0m0.945s

2023-01-25 10:15:41,993 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:15:48,284 INFO     Done. Execution time: 6.2911176681518555 seconds
2023-01-25 10:15:48,284 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `4.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1015-transparentAmortize-60s-mostPrecise/lang3-raw-0125-1015-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.284s
user	0m13.612s
sys	0m2.213s

2023-01-25 10:15:48,284 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-25 10:15:48,285 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:16:04,330 INFO     Done. Execution time: 16.045608520507812 seconds
2023-01-25 10:16:04,331 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz4209384282329054889/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4209384282329054889/bin -o /tmp/qfuzz4209384282329054889/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4209384282329054889/bin
Found file /tmp/qfuzz4209384282329054889/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz4209384282329054889/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4209384282329054889/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4209384282329054889/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4209384282329054889/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4209384282329054889/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 31, exec speed = 138661 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m31 to 31 bits (average: 31.00 bits)
[1;90m        Exec timing : [0m138k to 138k us (average: 138k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 8.00; [35.00,43.00]
2; /tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov; 1; 0.00; [0.00]
4; /tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 1; 0.00; [43.00]
5; /tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 2; 14.00; [35.00,49.00]
7; /tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 2; 8.00; [35.00,43.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
/tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 174, 153, 156)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(69, 37, 129, 160, 122, 149, 136, 63, 7, 126, 126, 160, 110, 126, 126, 63, 186, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 192)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 185, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4209384282329054889/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [174,153,156]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [37,129,160,122,149]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [192]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [4,4,4,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.038s
user	0m9.655s
sys	0m0.582s

2023-01-25 10:16:04,331 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-25 10:16:04,331 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-25 10:16:04,334 INFO     Done. Execution time: 0.003238201141357422 seconds
2023-01-25 10:16:04,335 INFO     Output: 
2023-01-25 10:16:04,335 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-25 10:16:09,419 INFO     Done. Execution time: 5.084077835083008 seconds
2023-01-25 10:16:09,419 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [174,153,156])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [37,129,160,122,149])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [192])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [4,4,4,126,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                                        
 Index  |              Commands               |  Costs  |  R  |  choice  |     choices     |  i  |  str  |  strDigits  |
------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [174,153,156]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [174,153,156]  |     |    2  |             |
    15  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [174,153,156]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [174,153,156]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [174,153,156]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [174,153,156]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [174,153,156]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |     174  |  [174,153,156]  |  0  |    2  |          0  |
    41  |         strDigits = strDigits + 1;  |         |  0  |     174  |  [174,153,156]  |  0  |    2  |          1  |
    44  |                         R = R + 1;  |      1  |  1  |     174  |  [174,153,156]  |  0  |    2  |          1  |
    48  |                         i = i + 1;  |         |  1  |     174  |  [174,153,156]  |  1  |    2  |          1  |
    49  |              resetPlaceHolder_1();  |         |  1  |     174  |  [174,153,156]  |  1  |    2  |          1  |
    55  |  choice = arrayRead(choices, i)...  |         |  1  |     153  |  [174,153,156]  |  1  |    2  |          1  |
    68  |         strDigits = strDigits + 1;  |         |  1  |     153  |  [174,153,156]  |  1  |    2  |          2  |
    71  |                         R = R + 1;  |      1  |  2  |     153  |  [174,153,156]  |  1  |    2  |          2  |
    75  |                         i = i + 1;  |         |  2  |     153  |  [174,153,156]  |  2  |    2  |          2  |
    76  |              resetPlaceHolder_1();  |         |  2  |     153  |  [174,153,156]  |  2  |    2  |          2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 71]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {44}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {44}; {71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44}; {71}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(49)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m5.076s
user	0m9.013s
sys	0m1.524s

2023-01-25 10:16:09,419 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:16:42,265 INFO     Done. Execution time: 32.84522724151611 seconds
2023-01-25 10:16:42,265 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 choices)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `30.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1016-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1016-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m32.837s
user	0m54.465s
sys	0m4.699s

2023-01-25 10:16:42,265 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-25 10:16:42,266 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:16:58,249 INFO     Done. Execution time: 15.982750654220581 seconds
2023-01-25 10:16:58,249 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz4746407541063277607/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4746407541063277607/bin -o /tmp/qfuzz4746407541063277607/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4746407541063277607/bin
Found file /tmp/qfuzz4746407541063277607/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz4746407541063277607/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4746407541063277607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4746407541063277607/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4746407541063277607/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4746407541063277607/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 9, exec speed = 112200 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m112k to 112k us (average: 112k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4746407541063277607/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4746407541063277607/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4746407541063277607/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m15.973s
user	0m9.141s
sys	0m0.724s

2023-01-25 10:16:58,249 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-25 10:16:58,249 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-25 10:16:58,252 INFO     Done. Execution time: 0.0031790733337402344 seconds
2023-01-25 10:16:58,253 INFO     Output: 
2023-01-25 10:16:58,253 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-25 10:17:01,272 INFO     Done. Execution time: 3.0192008018493652 seconds
2023-01-25 10:17:01,272 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                              
 Index  |   Commands   |  Costs  |  R  |          array          |  endIndex  |  startIndex  |
----------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [126,126,126,126,126]  |         2  |         126  |
    48  |     return;  |         |  0  |  [126,126,126,126,126]  |         2  |         126  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m3.011s
user	0m5.762s
sys	0m0.340s

2023-01-25 10:17:01,273 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:17:03,858 INFO     Done. Execution time: 2.584672451019287 seconds
2023-01-25 10:17:03,858 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1017-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1017-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.575s
user	0m4.506s
sys	0m0.342s

2023-01-25 10:17:03,858 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-25 10:17:03,858 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:17:20,203 INFO     Done. Execution time: 16.344913005828857 seconds
2023-01-25 10:17:20,203 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz6227947749855912972/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6227947749855912972/bin -o /tmp/qfuzz6227947749855912972/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6227947749855912972/bin
Found file /tmp/qfuzz6227947749855912972/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz6227947749855912972/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6227947749855912972/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6227947749855912972/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6227947749855912972/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6227947749855912972/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 47, exec speed = 135446 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 10.00; [32.00,2531.00,2541.00]
2; /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta; 3; 21.00; [11.00,32.00,2561.00]
3; /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+partition,+delta; 4; 10.00; [32.00,2531.00,2541.00,2971.00]
4; /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+partition,+delta; 5; 10.00; [32.00,2531.00,2541.00,2731.00,3311.00]
6; /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+partition,+delta; 6; 40.00; [32.00,841.00,2891.00,3271.00,3311.00,3431.00]
7; /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 6; 30.00; [32.00,1251.00,1651.00,2531.00,2661.00,2691.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+partition,+delta
/tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(132, 126, 82, 62, 134, 167, 126, 49, 126, 115, 148, 126, 126, 84, 126, 126, 126, 126, 126, 126, 128, 126, 46, 126, 126, 126, 126, 185)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 171, 144, 163, 165, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 165, 126, 126, 136, 126, 126, 126, 126, 126, 126, 11, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 190, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 148, 126, 9, 192, 126, 126, 126, 147, 143, 126, 126, 129, 126, 126, 108, 126, 126, 126, 83, 126, 126, 126, 126, 126, 126, 126, 126, 107, 126, 181, 126, 153, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(127)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6227947749855912972/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [132,126,82,62,134]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [41,171,144,163,165]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,165,126,126,136]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,148,126]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [127]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.336s
user	0m10.378s
sys	0m0.671s

2023-01-25 10:17:20,204 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-25 10:17:20,204 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-25 10:17:20,207 INFO     Done. Execution time: 0.003256559371948242 seconds
2023-01-25 10:17:20,208 INFO     Output: 
2023-01-25 10:17:20,208 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-25 10:17:30,334 INFO     Done. Execution time: 10.126326084136963 seconds
2023-01-25 10:17:30,334 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([132,126,82,62,134])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([41,171,144,163,165])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,165,126,126,136])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,148,126])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([127])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                         
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects        |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [132,126,82,62,134]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [132,126,82,62,134]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [132,126,82,62,134]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [132,126,82,62,134]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [132,126,82,62,134]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [132,126,82,62,134]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    132  |  0  |  [132,126,82,62,134]  |
    22  |                     R = R + chunk;  |    132  |  132  |    132  |  0  |  [132,126,82,62,134]  |
    26  |                         i = i + 1;  |         |  132  |    132  |  1  |  [132,126,82,62,134]  |
    32  |                         R = R + 1;  |      1  |  133  |    132  |  1  |  [132,126,82,62,134]  |
    35  |     chunk = arrayRead(objects, i);  |         |  133  |    126  |  1  |  [132,126,82,62,134]  |
    38  |                     R = R + chunk;  |    126  |  259  |    126  |  1  |  [132,126,82,62,134]  |
    42  |                         i = i + 1;  |         |  259  |    126  |  2  |  [132,126,82,62,134]  |
    43  |              resetPlaceHolder_1();  |         |  259  |    126  |  2  |  [132,126,82,62,134]  |
    49  |                         R = R + 1;  |      1  |  260  |    126  |  2  |  [132,126,82,62,134]  |
    52  |     chunk = arrayRead(objects, i);  |         |  260  |     82  |  2  |  [132,126,82,62,134]  |
    55  |                     R = R + chunk;  |     82  |  342  |     82  |  2  |  [132,126,82,62,134]  |
    59  |                         i = i + 1;  |         |  342  |     82  |  3  |  [132,126,82,62,134]  |
    60  |              resetPlaceHolder_1();  |         |  342  |     82  |  3  |  [132,126,82,62,134]  |
    66  |                         R = R + 1;  |      1  |  343  |     82  |  3  |  [132,126,82,62,134]  |
    69  |     chunk = arrayRead(objects, i);  |         |  343  |     62  |  3  |  [132,126,82,62,134]  |
    72  |                     R = R + chunk;  |     62  |  405  |     62  |  3  |  [132,126,82,62,134]  |
    76  |                         i = i + 1;  |         |  405  |     62  |  4  |  [132,126,82,62,134]  |
    77  |              resetPlaceHolder_1();  |         |  405  |     62  |  4  |  [132,126,82,62,134]  |
    83  |                         R = R + 1;  |      1  |  406  |     62  |  4  |  [132,126,82,62,134]  |
    86  |     chunk = arrayRead(objects, i);  |         |  406  |    134  |  4  |  [132,126,82,62,134]  |
    89  |                     R = R + chunk;  |    134  |  540  |    134  |  4  |  [132,126,82,62,134]  |
    93  |                         i = i + 1;  |         |  540  |    134  |  5  |  [132,126,82,62,134]  |
    94  |              resetPlaceHolder_1();  |         |  540  |    134  |  5  |  [132,126,82,62,134]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    132  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |    126  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |     82  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |     62  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |    134  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    132  |                            |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |                            |
    38  |         R = R + chunk;  |    126  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |
    55  |         R = R + chunk;  |     82  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |
    72  |         R = R + chunk;  |     62  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |
    89  |         R = R + chunk;  |    134  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m10.118s
user	0m18.029s
sys	0m3.722s

2023-01-25 10:17:30,335 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:17:45,639 INFO     Done. Execution time: 15.303995847702026 seconds
2023-01-25 10:17:45,639 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `13.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1017-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1017-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.295s
user	0m42.715s
sys	0m5.731s

2023-01-25 10:17:45,639 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-25 10:17:45,640 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:18:02,233 INFO     Done. Execution time: 16.59289240837097 seconds
2023-01-25 10:18:02,233 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz6346645657515948405/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6346645657515948405/bin -o /tmp/qfuzz6346645657515948405/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6346645657515948405/bin
Found file /tmp/qfuzz6346645657515948405/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz6346645657515948405/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6346645657515948405/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6346645657515948405/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6346645657515948405/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6346645657515948405/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 47, exec speed = 141265 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m141k to 141k us (average: 141k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 9.00; [2531.50,2541.00]
2; /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta; 3; 10.00; [91.00,101.00,2531.50]
3; /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta; 5; 240.00; [171.00,411.00,1051.00,1501.00,2531.50]
4; /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 4; 10.00; [2372.00,2531.00,2541.00,3311.00]
6; /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+partition,+delta; 6; 10.00; [1272.00,1571.00,1581.00,1931.00,2531.00,2791.00]
9; /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta; 6; 60.00; [92.00,1291.00,1351.00,1571.00,2581.00,3371.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(128, 67, 168, 64, 78, 4, 36, 126, 126, 4, 5, 126, 67, 168, 64, 78, 11, 43, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(78, 139, 96, 126, 78, 63, 62, 69, 179, 8, 62, 63, 56, 95, 10, 183, 5, 41, 12, 180, 41, 192, 14, 59, 11, 193, 12, 5, 126, 22, 132, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 165, 126, 126, 118, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 78, 43, 52, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(74, 20, 52, 126, 8, 126, 149, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 8, 126, 149, 126, 126, 144, 10, 126, 67, 126, 126, 145, 154, 145, 145, 145, 145, 87, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 126, 126, 126, 126, 6, 11, 110, 52, 126, 126, 126, 126, 126, 43, 126, 126, 126, 126, 126, 126, 126, 148, 126, 126, 7, 127, 80, 67, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6346645657515948405/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [128,67,168,64,78], 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [78,139,96,126,78], 63
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,165,126,126], 118
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [74,20,52,126,8], 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,126], 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.583s
user	0m10.734s
sys	0m0.759s

2023-01-25 10:18:02,233 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-25 10:18:02,233 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-25 10:18:02,238 INFO     Done. Execution time: 0.004148960113525391 seconds
2023-01-25 10:18:02,238 INFO     Output: 
2023-01-25 10:18:02,238 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-25 10:18:11,555 INFO     Done. Execution time: 9.316414833068848 seconds
2023-01-25 10:18:11,555 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([128,67,168,64,78], 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([78,139,96,126,78], 63)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,165,126,126], 118)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([74,20,52,126,8], 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,126], 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects        |  separator  |
----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [128,67,168,64,78]  |          4  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [128,67,168,64,78]  |          4  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [128,67,168,64,78]  |          4  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [128,67,168,64,78]  |          4  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [128,67,168,64,78]  |          4  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [128,67,168,64,78]  |          4  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    128  |  0  |  [128,67,168,64,78]  |          4  |
    22  |                     R = R + chunk;  |    128  |  128  |    128  |  0  |  [128,67,168,64,78]  |          4  |
    26  |                         i = i + 1;  |         |  128  |    128  |  1  |  [128,67,168,64,78]  |          4  |
    32  |                 R = R + separator;  |      4  |  132  |    128  |  1  |  [128,67,168,64,78]  |          4  |
    35  |     chunk = arrayRead(objects, i);  |         |  132  |     67  |  1  |  [128,67,168,64,78]  |          4  |
    38  |                     R = R + chunk;  |     67  |  199  |     67  |  1  |  [128,67,168,64,78]  |          4  |
    42  |                         i = i + 1;  |         |  199  |     67  |  2  |  [128,67,168,64,78]  |          4  |
    43  |              resetPlaceHolder_1();  |         |  199  |     67  |  2  |  [128,67,168,64,78]  |          4  |
    49  |                 R = R + separator;  |      4  |  203  |     67  |  2  |  [128,67,168,64,78]  |          4  |
    52  |     chunk = arrayRead(objects, i);  |         |  203  |    168  |  2  |  [128,67,168,64,78]  |          4  |
    55  |                     R = R + chunk;  |    168  |  371  |    168  |  2  |  [128,67,168,64,78]  |          4  |
    59  |                         i = i + 1;  |         |  371  |    168  |  3  |  [128,67,168,64,78]  |          4  |
    60  |              resetPlaceHolder_1();  |         |  371  |    168  |  3  |  [128,67,168,64,78]  |          4  |
    66  |                 R = R + separator;  |      4  |  375  |    168  |  3  |  [128,67,168,64,78]  |          4  |
    69  |     chunk = arrayRead(objects, i);  |         |  375  |     64  |  3  |  [128,67,168,64,78]  |          4  |
    72  |                     R = R + chunk;  |     64  |  439  |     64  |  3  |  [128,67,168,64,78]  |          4  |
    76  |                         i = i + 1;  |         |  439  |     64  |  4  |  [128,67,168,64,78]  |          4  |
    77  |              resetPlaceHolder_1();  |         |  439  |     64  |  4  |  [128,67,168,64,78]  |          4  |
    83  |                 R = R + separator;  |      4  |  443  |     64  |  4  |  [128,67,168,64,78]  |          4  |
    86  |     chunk = arrayRead(objects, i);  |         |  443  |     78  |  4  |  [128,67,168,64,78]  |          4  |
    89  |                     R = R + chunk;  |     78  |  521  |     78  |  4  |  [128,67,168,64,78]  |          4  |
    93  |                         i = i + 1;  |         |  521  |     78  |  5  |  [128,67,168,64,78]  |          4  |
    94  |              resetPlaceHolder_1();  |         |  521  |     78  |  5  |  [128,67,168,64,78]  |          4  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    128  |                            |
    32  |     R = R + separator;  |      4  |                         0  |
    38  |         R = R + chunk;  |     67  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |      4  |                         1  |
    55  |         R = R + chunk;  |    168  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |      4  |                         2  |
    72  |         R = R + chunk;  |     64  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |      4  |                         3  |
    89  |         R = R + chunk;  |     78  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    128  |                            |                         0  |
    32  |     R = R + separator;  |      4  |                         0  |                            |
    38  |         R = R + chunk;  |     67  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |      4  |                         1  |                            |
    55  |         R = R + chunk;  |    168  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |      4  |                         2  |                            |
    72  |         R = R + chunk;  |     64  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |      4  |                         3  |                            |
    89  |         R = R + chunk;  |     78  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m9.308s
user	0m17.501s
sys	0m3.575s

2023-01-25 10:18:11,555 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:18:19,974 INFO     Done. Execution time: 8.418269634246826 seconds
2023-01-25 10:18:19,974 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1018-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1018-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.409s
user	0m16.810s
sys	0m2.034s

2023-01-25 10:18:19,974 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-25 10:18:19,974 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:18:36,320 INFO     Done. Execution time: 16.345425128936768 seconds
2023-01-25 10:18:36,320 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz2422858423668063626/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2422858423668063626/bin -o /tmp/qfuzz2422858423668063626/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2422858423668063626/bin
Found file /tmp/qfuzz2422858423668063626/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz2422858423668063626/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2422858423668063626/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2422858423668063626/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2422858423668063626/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2422858423668063626/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 39, exec speed = 122282 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2422858423668063626/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 6.00; [2528.00,2538.00,2544.00]
2; /tmp/qfuzz2422858423668063626/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta; 3; 164.00; [104.00,268.00,3418.00]
3; /tmp/qfuzz2422858423668063626/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 3; 1470.00; [98.00,1568.00,4024.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2422858423668063626/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz2422858423668063626/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz2422858423668063626/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2422858423668063626/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(200, 135, 4, 62, 117, 35, 78, 4, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2422858423668063626/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 101, 170, 13, 13, 13, 13, 200, 4, 125, 126, 40, 126, 126, 110, 126, 51, 46, 136, 126, 13, 51, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2422858423668063626/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [200,135,4,62,117], 35, 78, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,101,170,13,13], 13, 13, 200
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126, 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.335s
user	0m9.952s
sys	0m0.760s

2023-01-25 10:18:36,320 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-25 10:18:36,320 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-25 10:18:36,324 INFO     Done. Execution time: 0.003337383270263672 seconds
2023-01-25 10:18:36,324 INFO     Output: 
2023-01-25 10:18:36,324 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-25 10:18:43,035 INFO     Done. Execution time: 6.711365222930908 seconds
2023-01-25 10:18:43,036 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([200,135,4,62,117], 35, 78, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,101,170,13,13], 13, 13, 200)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126, 126, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |         text         |
-------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |    4  |           78  |            35  |  [200,135,4,62,117]  |
    34  |                      // int R = 0;  |         |    0  |         |     |    4  |           78  |            35  |  [200,135,4,62,117]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |    4  |           78  |            35  |  [200,135,4,62,117]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |    4  |           78  |            35  |  [200,135,4,62,117]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |    4  |           78  |            35  |  [200,135,4,62,117]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |    200  |  0  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    51  |                     R = R + chunk;  |    200  |  200  |    200  |  0  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    54  |               R = R + replacement;  |     78  |  278  |    200  |  0  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  278  |    135  |  0  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    63  |                         i = i + 2;  |         |  278  |    135  |  2  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    64  |              resetPlaceHolder_1();  |         |  278  |    135  |  2  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    72  |        chunk = arrayRead(text, i);  |         |  278  |      4  |  2  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    75  |                     R = R + chunk;  |      4  |  282  |      4  |  2  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    78  |               R = R + replacement;  |     78  |  360  |      4  |  2  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  360  |     62  |  2  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    87  |                         i = i + 2;  |         |  360  |     62  |  4  |    4  |           78  |            35  |  [200,135,4,62,117]  |
    88  |              resetPlaceHolder_1();  |         |  360  |     62  |  4  |    4  |           78  |            35  |  [200,135,4,62,117]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [51, 54, 75, 78]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |    200  |                            |
    54  |   R = R + replacement;  |     78  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |      4  |                            |
    78  |   R = R + replacement;  |     78  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [51, 75]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}; {78}
GroupID(1): {51,75}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |    200  |                            |                         0  |
    54  |   R = R + replacement;  |     78  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |      4  |                            |                         0  |
    78  |   R = R + replacement;  |     78  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R replacement -> R0 = R0 + replacement;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m6.703s
user	0m12.261s
sys	0m2.409s

2023-01-25 10:18:43,036 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:20:13,106 INFO     Done. Execution time: 90.0696792602539 seconds
2023-01-25 10:20:13,106 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `88.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1018-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1018-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m30.061s
user	3m26.599s
sys	0m21.072s

2023-01-25 10:20:13,106 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-25 10:20:13,107 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:20:29,129 INFO     Done. Execution time: 16.022614240646362 seconds
2023-01-25 10:20:29,130 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz2880516273067842640/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2880516273067842640/bin -o /tmp/qfuzz2880516273067842640/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2880516273067842640/bin
Found file /tmp/qfuzz2880516273067842640/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz2880516273067842640/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2880516273067842640/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2880516273067842640/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2880516273067842640/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2880516273067842640/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 37, exec speed = 129929 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2880516273067842640/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 8.00; [32.00,40.00]
2; /tmp/qfuzz2880516273067842640/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2880516273067842640/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz2880516273067842640/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2880516273067842640/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(91, 64, 78, 137, 150, 78, 101, 78, 78, 126, 122, 7, 78, 123, 4, 137, 78, 162, 78, 101, 78, 78, 78, 69, 78, 78, 171)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2880516273067842640/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 64
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.012s
user	0m8.955s
sys	0m0.693s

2023-01-25 10:20:29,130 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-25 10:20:29,130 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-25 10:20:29,134 INFO     Done. Execution time: 0.00426483154296875 seconds
2023-01-25 10:20:29,135 INFO     Output: 
2023-01-25 10:20:29,135 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-25 10:20:35,243 INFO     Done. Execution time: 6.1085309982299805 seconds
2023-01-25 10:20:35,244 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 64)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |            64  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |            64  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |            64  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |            64  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |            64  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |            64  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |            64  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |            64  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |            64  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |            64  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |            64  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |            64  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m6.097s
user	0m12.230s
sys	0m1.711s

2023-01-25 10:20:35,244 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:20:56,902 INFO     Done. Execution time: 21.65834331512451 seconds
2023-01-25 10:20:56,903 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `19.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1020-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1020-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m21.650s
user	0m38.571s
sys	0m4.376s

2023-01-25 10:20:56,903 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-25 10:20:56,903 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:21:12,912 INFO     Done. Execution time: 16.008350133895874 seconds
2023-01-25 10:21:12,912 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz5220141815062906269/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5220141815062906269/bin -o /tmp/qfuzz5220141815062906269/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5220141815062906269/bin
Found file /tmp/qfuzz5220141815062906269/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz5220141815062906269/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5220141815062906269/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5220141815062906269/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5220141815062906269/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5220141815062906269/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 9, exec speed = 125087 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5220141815062906269/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz5220141815062906269/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [2970.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5220141815062906269/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz5220141815062906269/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5220141815062906269/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(147, 163, 197, 130, 22, 4, 69, 129, 64, 173, 186, 129, 34, 129, 129, 129, 22, 28, 129, 129, 22, 189, 61, 121, 64, 173, 186, 129, 34, 129, 129, 129, 22, 28, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5220141815062906269/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [147,163,197,130,22], 4, 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 126, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.000s
user	0m9.132s
sys	0m0.704s

2023-01-25 10:21:12,912 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-25 10:21:12,912 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-25 10:21:12,915 INFO     Done. Execution time: 0.003165006637573242 seconds
2023-01-25 10:21:12,916 INFO     Output: 
2023-01-25 10:21:12,916 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-25 10:21:17,251 INFO     Done. Execution time: 4.3345770835876465 seconds
2023-01-25 10:21:17,251 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([147,163,197,130,22], 4, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 126, 126)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 151):
                                                                                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |          str           |
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |            4  |                    |   69  |                   |  [147,163,197,130,22]  |
    28  |                      // int R = 0;  |         |    0  |         |     |            4  |                    |   69  |                   |  [147,163,197,130,22]  |
    29  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |            4  |                    |   69  |                   |  [147,163,197,130,22]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |            4  |                    |   69  |                   |  [147,163,197,130,22]  |
    32  |           int numberOfStrings = 0;  |         |    0  |         |     |            4  |                    |   69  |                0  |  [147,163,197,130,22]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |     |            4  |                    |   69  |                0  |  [147,163,197,130,22]  |
    36  |          int isSeparatorChunk = 0;  |         |    0  |      0  |     |            4  |                 0  |   69  |                0  |  [147,163,197,130,22]  |
    38  |                         int i = 0;  |         |    0  |      0  |  0  |            4  |                 0  |   69  |                0  |  [147,163,197,130,22]  |
    44  |         chunk = arrayRead(str, i);  |         |    0  |    147  |  0  |            4  |                 0  |   69  |                0  |  [147,163,197,130,22]  |
    54  |                     R = R + chunk;  |    147  |  147  |    147  |  0  |            4  |                 0  |   69  |                0  |  [147,163,197,130,22]  |
    58  |                         i = i + 1;  |         |  147  |    147  |  1  |            4  |                 0  |   69  |                0  |  [147,163,197,130,22]  |
    59  |              resetPlaceHolder_1();  |         |  147  |    147  |  1  |            4  |                 0  |   69  |                0  |  [147,163,197,130,22]  |
    65  |         chunk = arrayRead(str, i);  |         |  147  |    163  |  1  |            4  |                 0  |   69  |                0  |  [147,163,197,130,22]  |
    76  |  numberOfStrings = numberOfStri...  |         |  147  |    163  |  1  |            4  |                 0  |   69  |                1  |  [147,163,197,130,22]  |
    80  |                         i = i + 1;  |         |  147  |    163  |  2  |            4  |                 0  |   69  |                1  |  [147,163,197,130,22]  |
    81  |              resetPlaceHolder_1();  |         |  147  |    163  |  2  |            4  |                 0  |   69  |                1  |  [147,163,197,130,22]  |
    87  |         chunk = arrayRead(str, i);  |         |  147  |    197  |  2  |            4  |                 0  |   69  |                1  |  [147,163,197,130,22]  |
    98  |  numberOfStrings = numberOfStri...  |         |  147  |    197  |  2  |            4  |                 0  |   69  |                2  |  [147,163,197,130,22]  |
   102  |                         i = i + 1;  |         |  147  |    197  |  3  |            4  |                 0  |   69  |                2  |  [147,163,197,130,22]  |
   103  |              resetPlaceHolder_1();  |         |  147  |    197  |  3  |            4  |                 0  |   69  |                2  |  [147,163,197,130,22]  |
   109  |         chunk = arrayRead(str, i);  |         |  147  |    130  |  3  |            4  |                 0  |   69  |                2  |  [147,163,197,130,22]  |
   120  |  numberOfStrings = numberOfStri...  |         |  147  |    130  |  3  |            4  |                 0  |   69  |                3  |  [147,163,197,130,22]  |
   124  |                         i = i + 1;  |         |  147  |    130  |  4  |            4  |                 0  |   69  |                3  |  [147,163,197,130,22]  |
   125  |              resetPlaceHolder_1();  |         |  147  |    130  |  4  |            4  |                 0  |   69  |                3  |  [147,163,197,130,22]  |
   131  |         chunk = arrayRead(str, i);  |         |  147  |     22  |  4  |            4  |                 0  |   69  |                3  |  [147,163,197,130,22]  |
   142  |  numberOfStrings = numberOfStri...  |         |  147  |     22  |  4  |            4  |                 0  |   69  |                4  |  [147,163,197,130,22]  |
   146  |                         i = i + 1;  |         |  147  |     22  |  5  |            4  |                 0  |   69  |                4  |  [147,163,197,130,22]  |
   147  |              resetPlaceHolder_1();  |         |  147  |     22  |  5  |            4  |                 0  |   69  |                4  |  [147,163,197,130,22]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |    147  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m4.327s
user	0m7.472s
sys	0m0.921s

2023-01-25 10:21:17,251 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:21:19,021 INFO     Done. Execution time: 1.7701752185821533 seconds
2023-01-25 10:21:19,022 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
        ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
            ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.763s
user	0m3.000s
sys	0m0.239s

2023-01-25 10:21:19,022 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-25 10:21:19,022 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:21:35,045 INFO     Done. Execution time: 16.02273464202881 seconds
2023-01-25 10:21:35,045 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz5660496555152537143/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5660496555152537143/bin -o /tmp/qfuzz5660496555152537143/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5660496555152537143/bin
Found file /tmp/qfuzz5660496555152537143/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz5660496555152537143/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5660496555152537143/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5660496555152537143/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5660496555152537143/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5660496555152537143/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 23, exec speed = 119905 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5660496555152537143/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz5660496555152537143/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [76.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5660496555152537143/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz5660496555152537143/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5660496555152537143/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(121)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5660496555152537143/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.014s
user	0m8.555s
sys	0m0.550s

2023-01-25 10:21:35,045 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-25 10:21:35,045 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-25 10:21:35,049 INFO     Done. Execution time: 0.003379344940185547 seconds
2023-01-25 10:21:35,049 INFO     Output: 
2023-01-25 10:21:35,049 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-25 10:21:38,134 INFO     Done. Execution time: 3.0849547386169434 seconds
2023-01-25 10:21:38,134 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

real	0m3.077s
user	0m6.092s
sys	0m0.341s

2023-01-25 10:21:38,135 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:21:40,473 INFO     Done. Execution time: 2.3376708030700684 seconds
2023-01-25 10:21:40,473 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1021-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1021-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.330s
user	0m4.211s
sys	0m0.222s

2023-01-25 10:21:40,473 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-25 10:21:40,473 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:21:56,644 INFO     Done. Execution time: 16.17028021812439 seconds
2023-01-25 10:21:56,644 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz7036620322132770222/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7036620322132770222/bin -o /tmp/qfuzz7036620322132770222/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7036620322132770222/bin
Found file /tmp/qfuzz7036620322132770222/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz7036620322132770222/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7036620322132770222/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7036620322132770222/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7036620322132770222/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7036620322132770222/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 114502 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m114k to 114k us (average: 114k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7036620322132770222/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7036620322132770222/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7036620322132770222/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 126, 126, false, 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.161s
user	0m9.964s
sys	0m0.709s

2023-01-25 10:21:56,644 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-25 10:21:56,644 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-25 10:21:56,647 INFO     Done. Execution time: 0.0033397674560546875 seconds
2023-01-25 10:21:56,648 INFO     Output: 
2023-01-25 10:21:56,648 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-25 10:21:59,538 INFO     Done. Execution time: 2.8900721073150635 seconds
2023-01-25 10:21:59,538 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 126, 126, false, 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |     126  |  126  |              false  |             126  |    2  |
    32  |     return;  |         |  0  |     126  |  126  |              false  |             126  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m2.882s
user	0m5.758s
sys	0m0.293s

2023-01-25 10:21:59,539 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:22:02,149 INFO     Done. Execution time: 2.6098885536193848 seconds
2023-01-25 10:22:02,149 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1022-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1022-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.601s
user	0m4.674s
sys	0m0.318s

2023-01-25 10:22:02,150 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-25 10:22:02,150 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:22:18,888 INFO     Done. Execution time: 16.738369941711426 seconds
2023-01-25 10:22:18,889 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz707836999722323844/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz707836999722323844/bin -o /tmp/qfuzz707836999722323844/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz707836999722323844/bin
Found file /tmp/qfuzz707836999722323844/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz707836999722323844/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz707836999722323844/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz707836999722323844/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz707836999722323844/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz707836999722323844/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz707836999722323844/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz707836999722323844/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 25, exec speed = 131128 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz707836999722323844/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz707836999722323844/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz707836999722323844/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.725s
user	0m10.608s
sys	0m0.809s

2023-01-25 10:22:18,889 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-25 10:22:18,889 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-25 10:22:18,893 INFO     Done. Execution time: 0.003495454788208008 seconds
2023-01-25 10:22:18,893 INFO     Output: 
2023-01-25 10:22:18,893 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-25 10:22:22,035 INFO     Done. Execution time: 3.1414215564727783 seconds
2023-01-25 10:22:22,035 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

real	0m3.133s
user	0m6.068s
sys	0m0.347s

2023-01-25 10:22:22,035 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:22:24,398 INFO     Done. Execution time: 2.3625268936157227 seconds
2023-01-25 10:22:24,398 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1022-transparentAmortize-60s-mostPrecise/stringutils-raw-0125-1022-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.355s
user	0m4.051s
sys	0m0.254s

2023-01-25 10:22:24,398 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-25 10:22:24,398 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:22:40,633 INFO     Done. Execution time: 16.23417639732361 seconds
2023-01-25 10:22:40,633 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz6840807939494535747/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6840807939494535747/bin -o /tmp/qfuzz6840807939494535747/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6840807939494535747/bin
Found file /tmp/qfuzz6840807939494535747/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz6840807939494535747/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6840807939494535747/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6840807939494535747/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6840807939494535747/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6840807939494535747/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 134670 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 4.00; [2538.00,2542.00]
2; /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta; 2; 2436.00; [102.00,2538.00]
3; /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta; 3; 4.00; [3558.00,3562.00,3718.00]
4; /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 3; 536.00; [978.00,2002.00,2538.00]
5; /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta; 3; 736.00; [1802.00,2538.00,3578.00]
7; /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta; 3; 740.00; [462.00,2538.00,3278.00]
8; /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta; 3; 884.00; [198.00,1082.00,2538.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(53, 38, 126, 48, 9, 20, 126, 18, 11, 135, 23, 29, 111, 159, 11, 126, 70, 95, 126, 126, 126, 126, 80, 52, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(22, 163, 126, 126, 163, 126, 93, 126, 101, 138, 139, 139, 139, 139, 139, 148, 136, 11, 53, 144)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 185, 126, 126, 178, 199, 68, 67, 4, 131, 5, 37, 11, 136, 126, 78, 43, 131, 170, 27, 147, 126, 104, 199, 68, 67, 4, 131, 5, 37, 11, 136, 126, 154, 146, 181, 126, 78)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(99, 159, 126, 90, 48, 133, 150, 127, 129, 126, 6, 42, 149, 89, 162, 126, 114, 95, 165)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(177, 177, 185, 177, 177, 177, 177, 177, 115, 177, 177, 177, 148)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 53, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 105, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 101, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6840807939494535747/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [53,38,126,48,9], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [22,163,126,126,163], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,185,126,126,178], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [99,159,126,90,48], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [177,177,185,177,177], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,126,126,126], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [126,126,126,126,126], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.220s
user	0m9.689s
sys	0m0.671s

2023-01-25 10:22:40,633 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-25 10:22:40,634 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-25 10:22:40,637 INFO     Done. Execution time: 0.0037887096405029297 seconds
2023-01-25 10:22:40,638 INFO     Output: 
2023-01-25 10:22:40,638 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-25 10:22:47,867 INFO     Done. Execution time: 7.22879433631897 seconds
2023-01-25 10:22:47,867 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([53,38,126,48,9], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([22,163,126,126,163], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,185,126,126,178], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([99,159,126,90,48], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([177,177,185,177,177], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,126,126,126], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([126,126,126,126,126], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 87):
                                                                                                                             
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |      template      |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [53,38,126,48,9]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [53,38,126,48,9]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [53,38,126,48,9]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [53,38,126,48,9]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [53,38,126,48,9]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [53,38,126,48,9]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [53,38,126,48,9]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |     53  |  0  |          0  |  [53,38,126,48,9]  |
    32  |                     R = R + chunk;  |     53  |   53  |     2  |     53  |  0  |          0  |  [53,38,126,48,9]  |
    36  |                         i = i + 1;  |         |   53  |     2  |     53  |  1  |          0  |  [53,38,126,48,9]  |
    44  |  separator = arrayRead(template...  |         |   53  |     2  |     53  |  1  |         38  |  [53,38,126,48,9]  |
    49  |  chunk = arrayRead(template, (i...  |         |   53  |     2  |    126  |  1  |         38  |  [53,38,126,48,9]  |
    52  |                     R = R + chunk;  |    126  |  179  |     2  |    126  |  1  |         38  |  [53,38,126,48,9]  |
    56  |                         i = i + 2;  |         |  179  |     2  |    126  |  3  |         38  |  [53,38,126,48,9]  |
    57  |              resetPlaceHolder_1();  |         |  179  |     2  |    126  |  3  |         38  |  [53,38,126,48,9]  |
    65  |  separator = arrayRead(template...  |         |  179  |     2  |    126  |  3  |         48  |  [53,38,126,48,9]  |
    70  |  chunk = arrayRead(template, (i...  |         |  179  |     2  |      9  |  3  |         48  |  [53,38,126,48,9]  |
    73  |                     R = R + chunk;  |      9  |  188  |     2  |      9  |  3  |         48  |  [53,38,126,48,9]  |
    77  |                         i = i + 2;  |         |  188  |     2  |      9  |  5  |         48  |  [53,38,126,48,9]  |
    78  |              resetPlaceHolder_1();  |         |  188  |     2  |      9  |  5  |         48  |  [53,38,126,48,9]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [32, 52, 73]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32,52,73}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |     53  |                         0  |
    52  |         R = R + chunk;  |    126  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |      9  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m7.218s
user	0m13.251s
sys	0m2.292s

2023-01-25 10:22:47,867 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:22:49,780 INFO     Done. Execution time: 1.9131410121917725 seconds
2023-01-25 10:22:49,781 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.905s
user	0m3.378s
sys	0m0.190s

2023-01-25 10:22:49,781 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-25 10:22:49,781 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:23:05,987 INFO     Done. Execution time: 16.206257820129395 seconds
2023-01-25 10:23:05,988 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz113604027362223270/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz113604027362223270/bin -o /tmp/qfuzz113604027362223270/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz113604027362223270/bin
Found file /tmp/qfuzz113604027362223270/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz113604027362223270/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz113604027362223270/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz113604027362223270/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz113604027362223270/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz113604027362223270/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz113604027362223270/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz113604027362223270/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 22, exec speed = 129291 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz113604027362223270/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [2534.00]
2; /tmp/qfuzz113604027362223270/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 1; 0.00; [3594.00]
5; /tmp/qfuzz113604027362223270/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 1; 0.00; [2274.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz113604027362223270/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz113604027362223270/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz113604027362223270/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz113604027362223270/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(113, 78, 48, 88, 126, 126, 126, 126, 9, 8, 78, 48, 88, 126, 126, 97, 78, 91, 126, 136, 183, 150, 126, 126, 187, 132, 24, 78, 62, 85)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz113604027362223270/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz113604027362223270/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 113, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.198s
user	0m9.129s
sys	0m0.645s

2023-01-25 10:23:05,988 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-25 10:23:05,988 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-25 10:23:05,992 INFO     Done. Execution time: 0.003828287124633789 seconds
2023-01-25 10:23:05,992 INFO     Output: 
2023-01-25 10:23:05,992 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-25 10:23:10,089 INFO     Done. Execution time: 4.096340894699097 seconds
2023-01-25 10:23:10,089 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(113, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |   i   |  minLength  |  sb   |  string  |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |       |          2  |       |     113  |
    19  |                        int sb = 0;  |         |    0  |       |          2  |    0  |     113  |
    20  |                      // int R = 0;  |         |    0  |       |          2  |    0  |     113  |
    21  |  // mostPreciseBound(R <= minLe...  |         |    0  |       |          2  |    0  |     113  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       |          2  |    0  |     113  |
    26  |                  sb = sb + string;  |         |    0  |       |          2  |  113  |     113  |
    29  |                    R = R + string;  |    113  |  113  |       |          2  |  113  |     113  |
    31  |                    int i = string;  |         |  113  |  113  |          2  |  113  |     113  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |    113  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m4.088s
user	0m7.138s
sys	0m0.959s

2023-01-25 10:23:10,089 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:23:11,890 INFO     Done. Execution time: 1.7999966144561768 seconds
2023-01-25 10:23:11,890 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.793s
user	0m3.120s
sys	0m0.227s

2023-01-25 10:23:11,890 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-25 10:23:11,890 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 10:23:28,044 INFO     Done. Execution time: 16.153650760650635 seconds
2023-01-25 10:23:28,044 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 10 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz122910851449902337/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz122910851449902337/bin -o /tmp/qfuzz122910851449902337/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz122910851449902337/bin
Found file /tmp/qfuzz122910851449902337/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz122910851449902337/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz122910851449902337/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz122910851449902337/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz122910851449902337/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 13 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz122910851449902337/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz122910851449902337/fuzzer-out. Timeout: 10 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz122910851449902337/fuzzer-out -c quantify -K 100 -S afl -t 10000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 7, exec speed = 113766 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m113k to 113k us (average: 113k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz122910851449902337/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz122910851449902337/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz122910851449902337/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 126, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m16.144s
user	0m9.064s
sys	0m0.604s

2023-01-25 10:23:28,044 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-25 10:23:28,045 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-25 10:23:28,049 INFO     Done. Execution time: 0.003887653350830078 seconds
2023-01-25 10:23:28,049 INFO     Output: 
2023-01-25 10:23:28,049 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-25 10:23:30,772 INFO     Done. Execution time: 2.7233352661132812 seconds
2023-01-25 10:23:30,773 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(126, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |     126  |
    22  |     return;  |         |  0  |          2  |     126  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

real	0m2.714s
user	0m5.356s
sys	0m0.276s

2023-01-25 10:23:30,773 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 10:23:32,909 INFO     Done. Execution time: 2.1359782218933105 seconds
2023-01-25 10:23:32,909 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-1023-transparentAmortize-60s-mostPrecise/guava-raw-0125-1023-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.129s
user	0m3.705s
sys	0m0.242s

2023-01-25 10:23:32,910 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    15.978832244873047,
    7.005711078643799,
    8.281871318817139
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    15.965606927871704,
    7.389562606811523,
    75.52579045295715
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    16.110525369644165,
    6.987821817398071,
    215.2423026561737
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    16.753698110580444,
    8.644217729568481,
    8.98707365989685
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    16.32121706008911,
    5.842475175857544,
    16.83142852783203
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    16.503745317459106,
    7.207148790359497,
    9.171684265136719
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    16.248839855194092,
    152.59178113937378,
    10.783879041671753
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.7862632274627686,
    1.6827681064605713,
    1.141127347946167
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    16.165802001953125,
    2.9017298221588135,
    2.0511553287506104
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    15.913081169128418,
    2.688608407974243,
    2.3509325981140137
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    15.873722076416016,
    5.343329906463623,
    7.9508631229400635
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    16.289838075637817,
    6.467672109603882,
    53.291324615478516
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    15.946637630462646,
    7.207860708236694,
    120.490731716156
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    16.11545181274414,
    6.029231786727905,
    7.891224145889282
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    16.114922046661377,
    11.542677879333496,
    12.601869821548462
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    15.834895610809326,
    6.033422231674194,
    7.979065179824829
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    16.23079562187195,
    5.796393871307373,
    7.080569267272949
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    15.971719980239868,
    4.220142841339111,
    7.291823148727417
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    16.375128984451294,
    6.238087892532349,
    8.336618423461914
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    16.25892210006714,
    7.582903146743774,
    10.399336576461792
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    17.875734329223633,
    3.04315185546875,
    2.0411741733551025
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    16.202838897705078,
    7.735815048217773,
    11.254634141921997
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    15.927423238754272,
    5.362927198410034,
    7.435958385467529
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    15.884578466415405,
    4.181970596313477,
    6.2911176681518555
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    16.045608520507812,
    5.084077835083008,
    32.84522724151611
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    15.982750654220581,
    3.0192008018493652,
    2.584672451019287
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    16.344913005828857,
    10.126326084136963,
    15.303995847702026
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    16.59289240837097,
    9.316414833068848,
    8.418269634246826
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    16.345425128936768,
    6.711365222930908,
    90.0696792602539
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    16.022614240646362,
    6.1085309982299805,
    21.65834331512451
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    16.008350133895874,
    4.3345770835876465,
    1.7701752185821533
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    16.02273464202881,
    3.0849547386169434,
    2.3376708030700684
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    16.17028021812439,
    2.8900721073150635,
    2.6098885536193848
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    16.738369941711426,
    3.1414215564727783,
    2.3625268936157227
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    16.23417639732361,
    7.22879433631897,
    1.9131410121917725
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    16.206257820129395,
    4.096340894699097,
    1.7999966144561768
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    16.153650760650635,
    2.7233352661132812,
    2.1359782218933105
  ]
}
2023-01-25 10:23:32,910 INFO     Total time elapsed: 1749.6241881847382 seconds
2023-01-25 10:23:32,910 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-25 10:23:32,910 INFO     Number of verified programs: {
  "stac": 3,
  "lang3": 14,
  "stringutils": 8,
  "guava": 1
}
2023-01-25 10:23:32,910 INFO     Number of not verified programs: {
  "stac": 1,
  "lang3": 5,
  "stringutils": 1
}
2023-01-25 10:23:32,910 INFO     Number of unknown programs: {
  "lang3": 1,
  "stringutils": 1,
  "guava": 2
}
2023-01-25 10:23:32,911 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/timeout/20230125_10-26-22/timeout10_00.json

2023-01-23 20:00:48,525 INFO     Arguments:
2023-01-23 20:00:48,525 INFO     timeout	60
2023-01-23 20:00:48,525 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-23 20:00:48,525 INFO     samples	0
2023-01-23 20:00:48,525 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-23 20:00:48,525 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-23 20:00:48,525 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-23 20:00:48,525 INFO     dry	False
2023-01-23 20:00:48,525 INFO     log	/root/Documents/workspace/brbo2-impl/logs/timeout/20230123_20-00-48/timeout60_000.txt
2023-01-23 20:00:48,525 INFO     mode	qfuzz
2023-01-23 20:00:48,525 INFO     version	master
2023-01-23 20:00:48,525 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-23 20:00:48,529 INFO     Done. Execution time: 0.0037147998809814453 seconds
2023-01-23 20:00:48,529 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "d165bc7d4a8e6dc564fb366d613607933474745b"`
2023-01-23 20:00:48,532 INFO     Done. Execution time: 0.0031604766845703125 seconds
2023-01-23 20:00:48,533 INFO     Build a new version: "d165bc7d4a8e6dc564fb366d613607933474745b"
2023-01-23 20:00:48,533 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-23 20:01:00,233 INFO     Done. Execution time: 11.700448751449585 seconds
2023-01-23 20:01:00,234 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[success] Total time: 3 s, completed Jan 23, 2023 8:00:59 PM

2023-01-23 20:01:00,236 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-23 20:01:00,236 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:02:07,035 INFO     Done. Execution time: 66.79862761497498 seconds
2023-01-23 20:02:07,035 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz3466608171305206735/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3466608171305206735/bin -o /tmp/qfuzz3466608171305206735/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3466608171305206735/bin
Found file /tmp/qfuzz3466608171305206735/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz3466608171305206735/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3466608171305206735/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3466608171305206735/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3466608171305206735/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3466608171305206735/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 151700 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m151k to 151k us (average: 151k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 680.00; [679.00,1359.00,3762.00]
3; /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 3; 220.00; [459.00,679.00,3762.00]
4; /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 3; 1260.00; [259.00,1519.00,3762.00]
6; /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 2; 2403.00; [19.00,2422.00]
8; /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta; 3; 1420.00; [679.00,2099.00,3762.00]
9; /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 3; 3.00; [119.00,122.00,1779.00]
11; /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta; 3; 1440.00; [679.00,2119.00,3762.00]
19; /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128; 3; 977.00; [1839.00,2882.00,3859.00]
20; /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta; 3; 1480.00; [739.00,2219.00,3762.00]
26; /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta; 3; 1600.00; [139.00,1739.00,3402.00]
34; /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4; 3; 203.00; [1079.00,3559.00,3762.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
/tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
/tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 177, 4, 53, 50, 170, 93, 35, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 146, 50, 170, 93, 16, 187, 110, 33, 168, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(169, 10, 6, 4, 86, 4, 41, 5, 14, 101, 161, 75, 167, 61, 120, 83, 13, 185, 132, 117, 140, 163, 5, 142, 5, 48, 5, 14, 9, 179, 78, 34, 27, 5, 48, 198, 5, 14, 5, 62, 140, 5, 163, 5, 142, 5, 48, 5, 14, 9, 179, 78, 34, 5, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 36, 187, 110, 33, 153, 67, 50, 170, 93, 152, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(143, 142, 192, 178, 91, 4, 102, 53, 9, 19, 194, 171, 39, 109, 73, 52, 60, 73, 24, 137, 169, 75, 105, 140, 85, 109, 131, 171, 118, 49, 91, 8, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 105, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 73, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 162, 5, 23, 88, 88, 87, 31, 11, 94, 108, 174, 41, 31, 158, 62, 53, 131, 41, 41, 152, 169, 150, 119)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 104, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 5, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 89, 110, 17, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(120, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 115, 75, 71, 12, 49, 69, 110, 147, 147, 12, 91, 135, 147, 147, 147, 147, 153, 18, 38, 10, 39, 153, 65, 19, 61, 147, 116, 63, 125, 147, 147, 147, 147, 54, 145, 147, 4, 132, 112, 193, 75, 62, 50, 31, 12, 137, 54, 50, 170, 133, 56)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 193, 22, 50, 170, 93, 16, 187, 110, 33, 153, 67, 170, 93, 16, 187, 110, 33, 153, 67, 91, 170, 93, 16, 187, 113, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3466608171305206735/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,177,4,53]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [169,10,6,4,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,36,187,110]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [143,142,192,178,91]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,105]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,162,5,23,88]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,104]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [120,73]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,115,75,71,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,193,22]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.792s
user	0m28.760s
sys	0m1.976s

2023-01-23 20:02:07,035 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-23 20:02:07,036 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-23 20:02:07,037 INFO     Done. Execution time: 0.0013113021850585938 seconds
2023-01-23 20:02:07,037 INFO     Output: 
2023-01-23 20:02:07,037 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-23 20:02:14,068 INFO     Done. Execution time: 7.0311102867126465 seconds
2023-01-23 20:02:14,069 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,177,4,53])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,36,187,110])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([169,10,6,4,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([143,142,192,178,91])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,105])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,162,5,23,88])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,104])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([120,73])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,193,22])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,115,75,71,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text         |
----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [187,110,177,4,53]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [187,110,177,4,53]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [187,110,177,4,53]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [187,110,177,4,53]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [187,110,177,4,53]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [187,110,177,4,53]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [187,110,177,4,53]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |    0  |  [187,110,177,4,53]  |
    24  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |    0  |  [187,110,177,4,53]  |
    28  |                         i = i + 1;  |         |  187  |    187  |  1  |    0  |  [187,110,177,4,53]  |
    36  |          tag = arrayRead(text, i);  |         |  187  |    187  |  1  |  110  |  [187,110,177,4,53]  |
    40  |                         i = i + 1;  |         |  187  |    187  |  2  |  110  |  [187,110,177,4,53]  |
    43  |        chunk = arrayRead(text, i);  |         |  187  |    177  |  2  |  110  |  [187,110,177,4,53]  |
    46  |                     R = R + chunk;  |    177  |  364  |    177  |  2  |  110  |  [187,110,177,4,53]  |
    50  |                         i = i + 1;  |         |  364  |    177  |  3  |  110  |  [187,110,177,4,53]  |
    51  |              resetPlaceHolder_1();  |         |  364  |    177  |  3  |  110  |  [187,110,177,4,53]  |
    59  |          tag = arrayRead(text, i);  |         |  364  |    177  |  3  |    4  |  [187,110,177,4,53]  |
    63  |                         i = i + 1;  |         |  364  |    177  |  4  |    4  |  [187,110,177,4,53]  |
    66  |        chunk = arrayRead(text, i);  |         |  364  |     53  |  4  |    4  |  [187,110,177,4,53]  |
    69  |                     R = R + chunk;  |     53  |  417  |     53  |  4  |    4  |  [187,110,177,4,53]  |
    73  |                         i = i + 1;  |         |  417  |     53  |  5  |    4  |  [187,110,177,4,53]  |
    74  |              resetPlaceHolder_1();  |         |  417  |     53  |  5  |    4  |  [187,110,177,4,53]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 46, 69]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,46,69}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    187  |                         0  |
    46  |         R = R + chunk;  |    177  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
    69  |         R = R + chunk;  |     53  |                         0  |
    74  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m7.025s
user	0m13.200s
sys	0m2.653s

2023-01-23 20:02:14,069 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:02:23,632 INFO     Done. Execution time: 9.562837362289429 seconds
2023-01-23 20:02:23,632 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `7.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2002-transparentAmortize-60s-mostPrecise/stac-raw-0123-2002-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.557s
user	0m22.291s
sys	0m2.372s

2023-01-23 20:02:23,632 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-23 20:02:23,632 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:03:29,936 INFO     Done. Execution time: 66.3035032749176 seconds
2023-01-23 20:03:29,936 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz5986223005115793187/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5986223005115793187/bin -o /tmp/qfuzz5986223005115793187/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5986223005115793187/bin
Found file /tmp/qfuzz5986223005115793187/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz5986223005115793187/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5986223005115793187/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5986223005115793187/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5986223005115793187/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5986223005115793187/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 56, exec speed = 139651 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m56 to 56 bits (average: 56.00 bits)
[1;90m        Exec timing : [0m139k to 139k us (average: 139k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 12.00; [679.00,1359.00,3413.00,3753.00,3765.00]
2; /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 5; 12.00; [179.00,1353.00,1365.00,1393.00,1799.00]
3; /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 4; 6.00; [1773.00,1785.00,3213.00,3219.00]
8; /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 5; 12.00; [1359.00,2773.00,3479.00,3753.00,3765.00]
10; /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 5; 12.00; [679.00,1119.00,3413.00,3753.00,3765.00]
12; /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 4; 12.00; [773.00,785.00,2719.00,2853.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
/tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(38, 67, 135, 135, 135, 135, 142, 142, 135, 160, 135, 135, 50, 102, 23)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 55, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 191, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 173, 129, 67, 50, 138, 93, 16, 187, 110, 33, 98, 67, 50, 187, 93, 156, 64, 110, 33, 164, 67, 191, 170, 93, 134, 128, 110, 33, 153, 103, 50, 170, 93, 46, 102, 102, 102, 102, 102, 102, 102, 65, 196, 5, 49, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(88, 37, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 139, 58, 122, 58, 58, 122, 58, 16, 67, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(67, 11, 89, 153, 8, 9, 69, 11, 138, 5, 138, 139, 158, 69, 138, 120, 33, 147, 110, 66, 153, 126, 50, 37, 93, 13, 33, 67, 165, 150, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5986223005115793187/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [38,67,135,135,135], 2, 142
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,55], 2, 170
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,173,129,67], 2, 138
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [88,37,160,160,160], 2, 160
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [67,11,89,153,8], 2, 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2, 170
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.298s
user	0m29.386s
sys	0m1.807s

2023-01-23 20:03:29,936 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-23 20:03:29,936 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-23 20:03:29,938 INFO     Done. Execution time: 0.0016818046569824219 seconds
2023-01-23 20:03:29,938 INFO     Output: 
2023-01-23 20:03:29,938 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-23 20:03:40,802 INFO     Done. Execution time: 10.8641357421875 seconds
2023-01-23 20:03:40,803 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([38,67,135,135,135], 2, 142)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,55], 2, 170)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,173,129,67], 2, 138)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([88,37,160,160,160], 2, 160)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([67,11,89,153,8], 2, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2, 170)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                    
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |         text          |
----------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |     |        142  |       |           2  |  [38,67,135,135,135]  |
    26  |                      // int R = 0;  |         |    0  |         |     |     |        142  |       |           2  |  [38,67,135,135,135]  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |     |        142  |       |           2  |  [38,67,135,135,135]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |     |        142  |       |           2  |  [38,67,135,135,135]  |
    30  |                         int i = 0;  |         |    0  |         |  0  |     |        142  |       |           2  |  [38,67,135,135,135]  |
    32  |                         int j = 0;  |         |    0  |         |  0  |  0  |        142  |       |           2  |  [38,67,135,135,135]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |  0  |  0  |        142  |       |           2  |  [38,67,135,135,135]  |
    36  |                       int tag = 0;  |         |    0  |      0  |  0  |  0  |        142  |    0  |           2  |  [38,67,135,135,135]  |
    41  |                             j = 0;  |         |    0  |      0  |  0  |  0  |        142  |    0  |           2  |  [38,67,135,135,135]  |
    44  |        chunk = arrayRead(text, j);  |         |    0  |     38  |  0  |  0  |        142  |    0  |           2  |  [38,67,135,135,135]  |
    47  |                     R = R + chunk;  |     38  |   38  |     38  |  0  |  0  |        142  |    0  |           2  |  [38,67,135,135,135]  |
    51  |                         j = j + 1;  |         |   38  |     38  |  0  |  1  |        142  |    0  |           2  |  [38,67,135,135,135]  |
    59  |          tag = arrayRead(text, j);  |         |   38  |     38  |  0  |  1  |        142  |   67  |           2  |  [38,67,135,135,135]  |
    63  |                         j = j + 1;  |         |   38  |     38  |  0  |  2  |        142  |   67  |           2  |  [38,67,135,135,135]  |
    66  |        chunk = arrayRead(text, j);  |         |   38  |    135  |  0  |  2  |        142  |   67  |           2  |  [38,67,135,135,135]  |
    69  |                     R = R + chunk;  |    135  |  173  |    135  |  0  |  2  |        142  |   67  |           2  |  [38,67,135,135,135]  |
    73  |                         j = j + 1;  |         |  173  |    135  |  0  |  3  |        142  |   67  |           2  |  [38,67,135,135,135]  |
    74  |              resetPlaceHolder_2();  |         |  173  |    135  |  0  |  3  |        142  |   67  |           2  |  [38,67,135,135,135]  |
    82  |          tag = arrayRead(text, j);  |         |  173  |    135  |  0  |  3  |        142  |  135  |           2  |  [38,67,135,135,135]  |
    86  |                         j = j + 1;  |         |  173  |    135  |  0  |  4  |        142  |  135  |           2  |  [38,67,135,135,135]  |
    89  |        chunk = arrayRead(text, j);  |         |  173  |    135  |  0  |  4  |        142  |  135  |           2  |  [38,67,135,135,135]  |
    92  |                     R = R + chunk;  |    135  |  308  |    135  |  0  |  4  |        142  |  135  |           2  |  [38,67,135,135,135]  |
    96  |                         j = j + 1;  |         |  308  |    135  |  0  |  5  |        142  |  135  |           2  |  [38,67,135,135,135]  |
    97  |              resetPlaceHolder_2();  |         |  308  |    135  |  0  |  5  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   106  |                         i = i + 1;  |         |  308  |    135  |  1  |  5  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   109  |                 R = R + separator;  |    142  |  450  |    135  |  1  |  5  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   110  |              resetPlaceHolder_1();  |         |  450  |    135  |  1  |  5  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   115  |                             j = 0;  |         |  450  |    135  |  1  |  0  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   118  |        chunk = arrayRead(text, j);  |         |  450  |     38  |  1  |  0  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   121  |                     R = R + chunk;  |     38  |  488  |     38  |  1  |  0  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   125  |                         j = j + 1;  |         |  488  |     38  |  1  |  1  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   133  |          tag = arrayRead(text, j);  |         |  488  |     38  |  1  |  1  |        142  |   67  |           2  |  [38,67,135,135,135]  |
   137  |                         j = j + 1;  |         |  488  |     38  |  1  |  2  |        142  |   67  |           2  |  [38,67,135,135,135]  |
   140  |        chunk = arrayRead(text, j);  |         |  488  |    135  |  1  |  2  |        142  |   67  |           2  |  [38,67,135,135,135]  |
   143  |                     R = R + chunk;  |    135  |  623  |    135  |  1  |  2  |        142  |   67  |           2  |  [38,67,135,135,135]  |
   147  |                         j = j + 1;  |         |  623  |    135  |  1  |  3  |        142  |   67  |           2  |  [38,67,135,135,135]  |
   148  |              resetPlaceHolder_2();  |         |  623  |    135  |  1  |  3  |        142  |   67  |           2  |  [38,67,135,135,135]  |
   156  |          tag = arrayRead(text, j);  |         |  623  |    135  |  1  |  3  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   160  |                         j = j + 1;  |         |  623  |    135  |  1  |  4  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   163  |        chunk = arrayRead(text, j);  |         |  623  |    135  |  1  |  4  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   166  |                     R = R + chunk;  |    135  |  758  |    135  |  1  |  4  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   170  |                         j = j + 1;  |         |  758  |    135  |  1  |  5  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   171  |              resetPlaceHolder_2();  |         |  758  |    135  |  1  |  5  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   180  |                         i = i + 1;  |         |  758  |    135  |  2  |  5  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   183  |                 R = R + separator;  |    142  |  900  |    135  |  2  |  5  |        142  |  135  |           2  |  [38,67,135,135,135]  |
   184  |              resetPlaceHolder_1();  |         |  900  |    135  |  2  |  5  |        142  |  135  |           2  |  [38,67,135,135,135]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {183} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |     38  |                            |
    69  |         R = R + chunk;  |    135  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |    135  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    142  |                         0  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     38  |                            |
   143  |         R = R + chunk;  |    135  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |    135  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    142  |                         1  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {166}; {69}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(4), Set(2), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {143}; {166}; {69}; {92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |     38  |                            |
    69  |         R = R + chunk;  |    135  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |    135  |                         1  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    142  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     38  |                            |
   143  |         R = R + chunk;  |    135  |                         2  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |    135  |                         3  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    142  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [121, 47]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {183}
GroupID(1): {143}; {166}; {69}; {92}
GroupID(2): {47,121}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |     38  |                            |                            |                         0  |
    69  |         R = R + chunk;  |    135  |                            |                         0  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    92  |         R = R + chunk;  |    135  |                            |                         1  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   109  |     R = R + separator;  |    142  |                         0  |                            |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     38  |                            |                            |                         0  |
   143  |         R = R + chunk;  |    135  |                            |                         2  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   166  |         R = R + chunk;  |    135  |                            |                         3  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |     R = R + separator;  |    142  |                         1  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_2();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(74, 97, 148)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R separator -> R0 = R0 + separator;
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_2(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m10.857s
user	0m21.861s
sys	0m4.920s

2023-01-23 20:03:40,803 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:05:32,062 INFO     Done. Execution time: 111.25883340835571 seconds
2023-01-23 20:05:32,062 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((text * templateds) + (separator * templateds))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 text templateds)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D2p () Int)
(declare-fun D0p () Int)
(declare-fun separator () Int)
(declare-fun text () Int)
(declare-fun templateds () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C50 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C53 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C52 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C51 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D2p 0))
(assert (>= D0p 0))
(assert (> separator 0))
(assert (> text 0))
(assert (> templateds 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (or (<= D1p (+ 0 (* 1 1 text))) (= D1p 0)))
      (a!5 (or (<= D2p (+ 0 (* 1 1 text))) (= D2p 0)))
      (a!6 (or (<= D0p (+ 0 (* 1 1 separator))) (= D0p 0))))
  (and (<= 0 (+ D1 a!1 D2 a!2 D0 a!3))
       (<= D1p (+ 0 (* 1 1 text)))
       a!4
       (<= D2p 0)
       a!5
       (<= D0p (+ 0 (* 1 1 separator)))
       a!6)))
(assert (let ((a!1 (or (<= D1 (+ 0 (* 1 1 text))) (= D1 0)))
      (a!2 (or (<= D2 (+ 0 (* 1 1 text))) (= D2 0)))
      (a!3 (or (<= D0 (+ 0 (* 1 1 separator))) (= D0 0))))
  (and a!1 a!2 a!3)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C51 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C52 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C53 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C50 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 (+ 0 (* 1 1 text templateds)))
     (<= C2 0)
     (<= C0 (+ 0 (* 1 1 templateds)))))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ (* text templateds) (* separator templateds)))
               (= a!1 (+ (* text templateds) (* separator templateds))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    (- 2))  (define-fun D2 () Int    (- 2))  (define-fun D1 () Int    7)  (define-fun C1 () Int    7)  (define-fun templateds () Int    1)  (define-fun text () Int    16)  (define-fun separator () Int    12)  (define-fun D0p () Int    0)  (define-fun D1p () Int    15)  (define-fun C2 () Int    0)  (define-fun C0 () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C50 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C53 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C52 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C51 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `109.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2003-transparentAmortize-60s-mostPrecise/stac-raw-0123-2003-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m51.253s
user	6m4.321s
sys	0m21.393s

2023-01-23 20:05:32,062 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-23 20:05:32,062 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:06:38,721 INFO     Done. Execution time: 66.65909838676453 seconds
2023-01-23 20:06:38,722 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz1818924861545376331/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1818924861545376331/bin -o /tmp/qfuzz1818924861545376331/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1818924861545376331/bin
Found file /tmp/qfuzz1818924861545376331/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz1818924861545376331/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1818924861545376331/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1818924861545376331/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1818924861545376331/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1818924861545376331/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 63, exec speed = 145206 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m63 to 63 bits (average: 63.00 bits)
[1;90m        Exec timing : [0m145k to 145k us (average: 145k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000000,orig:example.txt; 6; 12.00; [679.00,1359.00,1868.00,3413.00,3753.00,3765.00]
2; /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 6; 6.00; [93.00,99.00,105.00,1359.00,1868.00,3413.00]
4; /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 6; 12.00; [99.00,593.00,748.00,1419.00,3153.00,3165.00]
7; /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 5; 5.00; [1508.00,1513.00,1519.00,3453.00,3465.00]
12; /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 6; 12.00; [99.00,679.00,1868.00,3413.00,3753.00,3765.00]
38; /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 6; 12.00; [679.00,1359.00,1908.00,3753.00,3765.00,4013.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 200, 95, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 27, 132, 4, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 5, 33, 132, 4, 50, 170, 93, 16, 187, 110, 33, 153, 82, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 63, 4, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(172, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 75, 90, 187, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(157, 110, 4, 20, 70, 31, 29, 37, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 50, 170, 93, 25, 187, 110, 33, 122, 67, 50, 14, 93, 16, 187, 110, 4, 131, 67, 50, 169, 33, 153, 67, 50, 170, 93, 157, 187, 110, 33, 153, 67, 50, 170, 93, 16, 88, 110, 153, 67, 50, 170, 93, 16, 187, 111, 167, 68, 68, 68, 68, 68, 96, 68, 68, 68, 68, 170, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1818924861545376331/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2, 200, 95
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,5,33,132,4], 2, 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [172,75,75,75,75], 2, 75, 75
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [157,110,4,20,70], 2, 29, 37
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,67], 2, 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2, 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.652s
user	0m31.590s
sys	0m1.654s

2023-01-23 20:06:38,722 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-23 20:06:38,722 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-23 20:06:38,724 INFO     Done. Execution time: 0.0014998912811279297 seconds
2023-01-23 20:06:38,724 INFO     Output: 
2023-01-23 20:06:38,724 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-23 20:06:51,595 INFO     Done. Execution time: 12.870996952056885 seconds
2023-01-23 20:06:51,595 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2, 200, 95)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,5,33,132,4], 2, 170, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([172,75,75,75,75], 2, 75, 75)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([157,110,4,20,70], 2, 29, 37)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,67], 2, 170, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2, 170, 93)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                               
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |         text          |  ts  |
-----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |   95  |  200  |       |  [187,110,33,153,67]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |   95  |  200  |       |  [187,110,33,153,67]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |   95  |  200  |       |  [187,110,33,153,67]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |   95  |  200  |       |  [187,110,33,153,67]  |   2  |
    38  |                         int i = 0;  |         |     0  |         |  0  |     |   95  |  200  |       |  [187,110,33,153,67]  |   2  |
    40  |                         int j = 0;  |         |     0  |         |  0  |  0  |   95  |  200  |       |  [187,110,33,153,67]  |   2  |
    42  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |   95  |  200  |       |  [187,110,33,153,67]  |   2  |
    44  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |   95  |  200  |    0  |  [187,110,33,153,67]  |   2  |
    49  |                             j = 0;  |         |     0  |      0  |  0  |  0  |   95  |  200  |    0  |  [187,110,33,153,67]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |     0  |    187  |  0  |  0  |   95  |  200  |    0  |  [187,110,33,153,67]  |   2  |
    55  |                     R = R + chunk;  |    187  |   187  |    187  |  0  |  0  |   95  |  200  |    0  |  [187,110,33,153,67]  |   2  |
    59  |                         j = j + 1;  |         |   187  |    187  |  0  |  1  |   95  |  200  |    0  |  [187,110,33,153,67]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |   187  |    187  |  0  |  1  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
    71  |                         j = j + 1;  |         |   187  |    187  |  0  |  2  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |   187  |     33  |  0  |  2  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
    77  |                     R = R + chunk;  |     33  |   220  |     33  |  0  |  2  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
    80  |                       R = R + rep;  |     95  |   315  |     33  |  0  |  2  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
    84  |                         j = j + 1;  |         |   315  |     33  |  0  |  3  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
    85  |              resetPlaceHolder_2();  |         |   315  |     33  |  0  |  3  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |   315  |     33  |  0  |  3  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
    97  |                         j = j + 1;  |         |   315  |     33  |  0  |  4  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |   315  |     67  |  0  |  4  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   103  |                     R = R + chunk;  |     67  |   382  |     67  |  0  |  4  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   106  |                       R = R + rep;  |     95  |   477  |     67  |  0  |  4  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   110  |                         j = j + 1;  |         |   477  |     67  |  0  |  5  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   111  |              resetPlaceHolder_2();  |         |   477  |     67  |  0  |  5  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   120  |                         i = i + 1;  |         |   477  |     67  |  1  |  5  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   123  |                       R = R + sep;  |    200  |   677  |     67  |  1  |  5  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   124  |              resetPlaceHolder_1();  |         |   677  |     67  |  1  |  5  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   129  |                             j = 0;  |         |   677  |     67  |  1  |  0  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |   677  |    187  |  1  |  0  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   135  |                     R = R + chunk;  |    187  |   864  |    187  |  1  |  0  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   139  |                         j = j + 1;  |         |   864  |    187  |  1  |  1  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |   864  |    187  |  1  |  1  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
   151  |                         j = j + 1;  |         |   864  |    187  |  1  |  2  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |   864  |     33  |  1  |  2  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
   157  |                     R = R + chunk;  |     33  |   897  |     33  |  1  |  2  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
   160  |                       R = R + rep;  |     95  |   992  |     33  |  1  |  2  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
   164  |                         j = j + 1;  |         |   992  |     33  |  1  |  3  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
   165  |              resetPlaceHolder_2();  |         |   992  |     33  |  1  |  3  |   95  |  200  |  110  |  [187,110,33,153,67]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |   992  |     33  |  1  |  3  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   177  |                         j = j + 1;  |         |   992  |     33  |  1  |  4  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |   992  |     67  |  1  |  4  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   183  |                     R = R + chunk;  |     67  |  1059  |     67  |  1  |  4  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   186  |                       R = R + rep;  |     95  |  1154  |     67  |  1  |  4  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   190  |                         j = j + 1;  |         |  1154  |     67  |  1  |  5  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   191  |              resetPlaceHolder_2();  |         |  1154  |     67  |  1  |  5  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   200  |                         i = i + 1;  |         |  1154  |     67  |  2  |  5  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   203  |                       R = R + sep;  |    200  |  1354  |     67  |  2  |  5  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  1354  |     67  |  2  |  5  |   95  |  200  |  153  |  [187,110,33,153,67]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {160}; {186}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {160}; {186}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |
    77  |         R = R + chunk;  |     33  |                            |
    80  |           R = R + rep;  |     95  |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |     67  |                            |
   106  |           R = R + rep;  |     95  |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    200  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    187  |                            |
   157  |         R = R + chunk;  |     33  |                            |
   160  |           R = R + rep;  |     95  |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |     67  |                            |
   186  |           R = R + rep;  |     95  |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    200  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {123}; {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {123}; {203} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |
    77  |         R = R + chunk;  |     33  |                            |
    80  |           R = R + rep;  |     95  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |     67  |                            |
   106  |           R = R + rep;  |     95  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    200  |                         0  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    187  |                            |
   157  |         R = R + chunk;  |     33  |                            |
   160  |           R = R + rep;  |     95  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |     67  |                            |
   186  |           R = R + rep;  |     95  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    200  |                         1  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,135}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {55,77,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {77,103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {77,135,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {135,157,183}; {55,77,103} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                         0  |
    77  |         R = R + chunk;  |     33  |                         0  |
    80  |           R = R + rep;  |     95  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |     67  |                         0  |
   106  |           R = R + rep;  |     95  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    200  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    187  |                         1  |
   157  |         R = R + chunk;  |     33  |                         1  |
   160  |           R = R + rep;  |     95  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |     67  |                         1  |
   186  |           R = R + rep;  |     95  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    200  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {106}; {160}; {186}; {80}
GroupID(1): {123}; {203}
GroupID(2): {135,157,183}; {55,77,103}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    77  |         R = R + chunk;  |     33  |                            |                            |                         0  |
    80  |           R = R + rep;  |     95  |                         0  |                            |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |     67  |                            |                            |                         0  |
   106  |           R = R + rep;  |     95  |                         1  |                            |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    200  |                            |                         0  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |    187  |                            |                            |                         1  |
   157  |         R = R + chunk;  |     33  |                            |                            |                         1  |
   160  |           R = R + rep;  |     95  |                         2  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |     67  |                            |                            |                         1  |
   186  |           R = R + rep;  |     95  |                         3  |                            |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    200  |                            |                         1  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(85, 111, 165)
GroupID(1): Set(124)
GroupID(2): Set(124)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R sep -> R1 = R1 + sep;
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_1(); -> {
  if (S2 < R2)
  {
    S2 = R2;
  }
  else
  {
    ;
  }
  R2 = 0;
  C2 = C2 + 1;
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R chunk -> R2 = R2 + chunk;
use R rep -> R0 = R0 + rep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m12.864s
user	0m24.022s
sys	0m6.219s

2023-01-23 20:06:51,595 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:12:08,748 INFO     Done. Execution time: 317.1528971195221 seconds
2023-01-23 20:12:08,749 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 sep)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 rep)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 rep)))` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3330824499428289482.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6757051485369901076.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 sep)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p (+ 0 (* 1 1 text)))` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 (+ 0 (* 1 1 ts)))` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
FATAL brbo.common.Z3Solver - Z3 timed out after `10 seconds`!
FATAL brbo.common.Z3Solver - Error when running Z3. Exit code: `143`
ERROR brbo.common.Z3Solver - Z3 output:

INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `314.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2006-transparentAmortize-60s-mostPrecise/stac-raw-0123-2006-transparentAmortize-60s-mostPrecise-000-099.csv`

real	5m17.147s
user	17m14.479s
sys	0m41.643s

2023-01-23 20:12:08,749 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-23 20:12:08,749 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:13:15,755 INFO     Done. Execution time: 67.00588750839233 seconds
2023-01-23 20:13:15,755 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz5243636479022125708/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5243636479022125708/bin -o /tmp/qfuzz5243636479022125708/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5243636479022125708/bin
Found file /tmp/qfuzz5243636479022125708/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz5243636479022125708/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5243636479022125708/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5243636479022125708/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5243636479022125708/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5243636479022125708/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 41, exec speed = 130175 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 680.00; [675.00,1355.00,2215.00,3075.00,3762.00]
2; /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 4; 7.00; [95.00,102.00,1355.00,3235.00]
3; /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 4; 640.00; [15.00,655.00,2715.00,3662.00]
4; /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 5; 200.00; [675.00,2215.00,2875.00,3075.00,3762.00]
11; /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 5; 687.00; [435.00,1355.00,2215.00,3075.00,3762.00]
26; /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 5; 73.00; [1135.00,1455.00,1655.00,2142.00,2215.00]
33; /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 5; 140.00; [675.00,1355.00,2255.00,2395.00,3762.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 112, 33, 119, 67, 36, 170, 93, 16, 187, 110, 33, 153, 67, 114, 67, 50, 183, 93, 16, 187, 110, 20, 4, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(106, 82, 72, 56, 110, 11, 128, 57, 112, 46, 54, 74, 54, 115, 187, 110, 40, 153, 17, 55, 170, 93, 16, 187, 110, 23, 128, 4, 110, 33, 153, 4, 131, 170, 147, 54, 74, 54, 110, 129, 189, 22, 88, 170, 106, 4, 160, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 21, 153, 67, 4, 43, 187, 110, 63, 35, 104, 90, 42, 42, 42, 42, 42, 42, 42, 42, 192, 16, 187, 15, 33, 107, 170, 68, 80, 21, 6, 4, 86, 5, 11, 58, 153, 67, 50, 170, 93, 152, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 62, 63, 56, 169, 16, 187, 110, 33, 33, 178)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 143, 58, 170, 93, 16, 187, 90, 58, 153, 67, 50, 175, 15, 16, 187, 110, 4, 15, 15, 50, 46, 34, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(182, 32, 135)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 161, 67, 50, 170, 93, 59, 54, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5243636479022125708/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,112,33,119,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [106,82,72,56,110]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,21,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,143]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [182,32,135]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,161,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.997s
user	0m28.718s
sys	0m1.979s

2023-01-23 20:13:15,756 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-23 20:13:15,756 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-23 20:13:15,757 INFO     Done. Execution time: 0.0015075206756591797 seconds
2023-01-23 20:13:15,757 INFO     Output: 
2023-01-23 20:13:15,758 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-23 20:13:25,709 INFO     Done. Execution time: 9.951184272766113 seconds
2023-01-23 20:13:25,709 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,112,33,119,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([106,82,72,56,110])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,21,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,143])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([182,32,135])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,161,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 88):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text          |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [187,112,33,119,67]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [187,112,33,119,67]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [187,112,33,119,67]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [187,112,33,119,67]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [187,112,33,119,67]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [187,112,33,119,67]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [187,112,33,119,67]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |    0  |  [187,112,33,119,67]  |
    24  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |    0  |  [187,112,33,119,67]  |
    28  |                         i = i + 1;  |         |  187  |    187  |  1  |    0  |  [187,112,33,119,67]  |
    34  |        chunk = arrayRead(text, i);  |         |  187  |    112  |  1  |    0  |  [187,112,33,119,67]  |
    37  |                     R = R + chunk;  |    112  |  299  |    112  |  1  |    0  |  [187,112,33,119,67]  |
    41  |                         i = i + 1;  |         |  299  |    112  |  2  |    0  |  [187,112,33,119,67]  |
    42  |              resetPlaceHolder_1();  |         |  299  |    112  |  2  |    0  |  [187,112,33,119,67]  |
    48  |        chunk = arrayRead(text, i);  |         |  299  |     33  |  2  |    0  |  [187,112,33,119,67]  |
    51  |                     R = R + chunk;  |     33  |  332  |     33  |  2  |    0  |  [187,112,33,119,67]  |
    55  |                         i = i + 1;  |         |  332  |     33  |  3  |    0  |  [187,112,33,119,67]  |
    56  |              resetPlaceHolder_1();  |         |  332  |     33  |  3  |    0  |  [187,112,33,119,67]  |
    62  |        chunk = arrayRead(text, i);  |         |  332  |    119  |  3  |    0  |  [187,112,33,119,67]  |
    65  |                     R = R + chunk;  |    119  |  451  |    119  |  3  |    0  |  [187,112,33,119,67]  |
    69  |                         i = i + 1;  |         |  451  |    119  |  4  |    0  |  [187,112,33,119,67]  |
    70  |              resetPlaceHolder_1();  |         |  451  |    119  |  4  |    0  |  [187,112,33,119,67]  |
    76  |        chunk = arrayRead(text, i);  |         |  451  |     67  |  4  |    0  |  [187,112,33,119,67]  |
    79  |                     R = R + chunk;  |     67  |  518  |     67  |  4  |    0  |  [187,112,33,119,67]  |
    83  |                         i = i + 1;  |         |  518  |     67  |  5  |    0  |  [187,112,33,119,67]  |
    84  |              resetPlaceHolder_1();  |         |  518  |     67  |  5  |    0  |  [187,112,33,119,67]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,37,51,65,79}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    187  |                         0  |
    37  |         R = R + chunk;  |    112  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     33  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |    119  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     67  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m9.944s
user	0m16.424s
sys	0m3.563s

2023-01-23 20:13:25,709 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:13:34,106 INFO     Done. Execution time: 8.396699666976929 seconds
2023-01-23 20:13:34,106 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2013-transparentAmortize-60s-mostPrecise/stac-raw-0123-2013-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.391s
user	0m19.234s
sys	0m2.288s

2023-01-23 20:13:34,106 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-23 20:13:34,106 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:14:40,541 INFO     Done. Execution time: 66.43439364433289 seconds
2023-01-23 20:14:40,541 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz7842628137217352602/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7842628137217352602/bin -o /tmp/qfuzz7842628137217352602/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7842628137217352602/bin
Found file /tmp/qfuzz7842628137217352602/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz7842628137217352602/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7842628137217352602/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7842628137217352602/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7842628137217352602/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7842628137217352602/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 40, exec speed = 151523 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m151k to 151k us (average: 151k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 5.00; [29.00,34.00,3751.00]
2; /tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,2511.00]
4; /tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 3; 5.00; [29.00,34.00,111.00]
6; /tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 3; 5.00; [29.00,34.00,3751.00]
10; /tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 3; 5.00; [29.00,34.00,3811.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 93, 16, 187, 110, 33, 152, 50, 170, 88, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 187, 110, 33, 153, 70, 50, 170, 93, 195, 187, 110, 176, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 143, 33, 153, 67, 50, 170, 93, 16, 127, 93, 16, 187, 187, 110, 24, 153, 67, 50, 170, 93, 16, 33, 153, 67, 50, 170, 93, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 5, 5, 132, 4, 62, 5, 5, 141, 5, 141, 5, 5, 14, 62, 83, 63, 161, 5, 189, 11, 13, 5, 20, 121, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(125, 125, 125, 125, 164, 125, 125, 125, 151, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 131, 109, 109, 109, 48, 48, 48, 48, 48, 48, 48, 48, 16, 48, 48, 48, 48, 48, 67, 112, 50, 4, 63, 70, 7, 152, 58, 38, 15, 15, 58, 103, 61, 193, 15, 15, 15, 15, 15, 15, 10, 186, 10, 26, 105, 197, 186, 81, 169, 81, 73, 69, 93, 7, 44, 50, 193, 61, 181, 150, 148, 196, 153, 91, 50, 132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7842628137217352602/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 190, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 5, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 125, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.427s
user	0m27.774s
sys	0m2.064s

2023-01-23 20:14:40,541 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-23 20:14:40,541 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-23 20:14:40,543 INFO     Done. Execution time: 0.0017197132110595703 seconds
2023-01-23 20:14:40,543 INFO     Output: 
2023-01-23 20:14:40,544 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-23 20:14:46,769 INFO     Done. Execution time: 6.224950790405273 seconds
2023-01-23 20:14:46,769 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(190, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(5, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(125, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  builder  |  i  |  sep  |  types  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |           |     |  190  |      2  |
    19  |                   int builder = 0;  |         |    0  |        0  |     |  190  |      2  |
    20  |                      // int R = 0;  |         |    0  |        0  |     |  190  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |    0  |        0  |     |  190  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |    0  |        0  |     |  190  |      2  |
    26  |             builder = builder + 1;  |         |    0  |        1  |     |  190  |      2  |
    29  |                         R = R + 1;  |      1  |    1  |        1  |     |  190  |      2  |
    31  |                         int i = 1;  |         |    1  |        1  |  1  |  190  |      2  |
    38  |           builder = builder + sep;  |         |    1  |      191  |  1  |  190  |      2  |
    41  |                       R = R + sep;  |    190  |  191  |      191  |  1  |  190  |      2  |
    45  |             builder = builder + 1;  |         |  191  |      192  |  1  |  190  |      2  |
    48  |                         R = R + 1;  |      1  |  192  |      192  |  1  |  190  |      2  |
    52  |                         i = i + 1;  |         |  192  |      192  |  2  |  190  |      2  |
    53  |              resetPlaceHolder_1();  |         |  192  |      192  |  2  |  190  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |    190  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    190  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    190  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m6.218s
user	0m12.237s
sys	0m1.891s

2023-01-23 20:14:46,769 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:15:05,173 INFO     Done. Execution time: 18.403835773468018 seconds
2023-01-23 20:15:05,173 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `16.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2014-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2014-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m18.398s
user	0m49.279s
sys	0m7.141s

2023-01-23 20:15:05,173 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-23 20:15:05,173 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:16:11,903 INFO     Done. Execution time: 66.72927117347717 seconds
2023-01-23 20:16:11,903 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz368858460767170857/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz368858460767170857/bin -o /tmp/qfuzz368858460767170857/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz368858460767170857/bin
Found file /tmp/qfuzz368858460767170857/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz368858460767170857/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz368858460767170857/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz368858460767170857/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz368858460767170857/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz368858460767170857/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz368858460767170857/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz368858460767170857/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 34, exec speed = 133569 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz368858460767170857/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz368858460767170857/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz368858460767170857/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz368858460767170857/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz368858460767170857/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 165, 5, 131, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz368858460767170857/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.722s
user	0m27.477s
sys	0m1.923s

2023-01-23 20:16:11,903 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-23 20:16:11,903 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-23 20:16:11,905 INFO     Done. Execution time: 0.0017552375793457031 seconds
2023-01-23 20:16:11,905 INFO     Output: 
2023-01-23 20:16:11,905 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-23 20:16:18,051 INFO     Done. Execution time: 6.146027565002441 seconds
2023-01-23 20:16:18,052 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m6.139s
user	0m11.935s
sys	0m2.006s

2023-01-23 20:16:18,052 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:16:27,058 INFO     Done. Execution time: 9.005832433700562 seconds
2023-01-23 20:16:27,058 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `6.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2016-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2016-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.998s
user	0m19.725s
sys	0m2.596s

2023-01-23 20:16:27,058 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-23 20:16:27,058 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:17:34,119 INFO     Done. Execution time: 67.06089758872986 seconds
2023-01-23 20:17:34,119 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz6559786422556694055/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6559786422556694055/bin -o /tmp/qfuzz6559786422556694055/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6559786422556694055/bin
Found file /tmp/qfuzz6559786422556694055/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz6559786422556694055/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6559786422556694055/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6559786422556694055/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6559786422556694055/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6559786422556694055/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 42, exec speed = 158021 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m158k to 158k us (average: 158k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
3; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
4; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
6; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
7; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
8; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
11; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
12; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
14; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
15; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
17; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
18; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
20; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
22; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
24; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
25; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
27; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
28; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
30; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
31; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
34; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
35; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
37; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
39; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
40; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
42; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
44; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
48; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
50; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
52; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
54; /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:32
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:4
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:16
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:8
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:128
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:64
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:128
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:64
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:128
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:8
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:128
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:64
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:32
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:4
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:128
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(118, 110, 176, 160, 4, 37, 172, 38, 50, 173, 107, 190, 40, 67, 4, 37, 50, 190, 38, 10, 190, 38, 16, 137, 4, 153, 121, 162, 38, 10, 190, 38, 16, 137, 4, 153, 121, 162, 119, 120, 63, 49, 49, 49, 49, 49, 72, 178, 115, 187, 110, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 108, 33, 153, 67, 50, 170, 93, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 92, 153, 67, 50, 170, 93, 16, 187, 110, 4, 4, 67, 50, 170, 69, 5, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 51, 153, 18, 63, 5, 187, 6, 93, 16, 187, 110, 33, 131, 67, 50, 173, 170, 196)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 18, 88, 170, 93, 189, 69, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 150, 67, 65, 170, 93, 16, 187, 110, 30, 153, 64, 50, 190, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(90)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(78, 118, 184, 138, 138, 138, 138, 138, 69, 140, 138, 138, 116, 72, 34)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(157)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 169, 118, 169, 118, 146, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(153, 67, 50, 170, 93, 16, 187, 110, 37, 153, 67, 119, 170, 93, 40, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(64, 64, 53, 64, 35, 64, 64, 142, 130, 87, 9, 12, 68)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(124, 33, 54)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 111, 93, 16, 187, 110, 176, 4, 168, 50, 170, 93, 16, 187, 11, 4, 153, 67, 50, 170, 93, 83, 170, 194, 16, 187, 110, 26, 153, 67, 50, 170, 93, 16, 187, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(153, 75, 151, 153, 153, 153, 153, 20, 153, 177, 153, 182, 153, 166, 20, 153, 177, 153, 182, 153, 166)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(71, 48, 31, 48, 78, 13, 48, 16, 64, 188, 23, 161, 200, 53, 170, 174, 128, 99, 188, 23, 161, 51, 143, 180, 134, 100, 191, 132, 143, 31, 21, 83, 5, 178, 8, 79, 128, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(147, 165, 79, 122, 16, 22, 110, 33, 98, 73, 152, 97, 5, 40, 152, 55, 172, 5, 148, 16, 152, 149, 97, 63, 96, 5, 164, 150, 67, 50, 168, 158, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 156, 4, 46, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 132, 112, 110, 110, 110, 35, 24, 132, 167, 170, 112, 164, 113, 67, 131, 134, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(41, 4, 80)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 128, 43, 153, 70, 4, 67, 12, 5, 185, 131, 61, 156, 110, 107, 47, 67, 50, 92, 39, 176, 180, 110, 33, 77)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 109, 151, 93, 41, 72, 144, 107, 60, 58, 4, 4, 170, 93, 16, 99, 163, 7, 71, 67, 19, 151, 4, 19, 177, 28, 50, 69, 86, 182, 187, 132, 33, 76)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(134, 4, 153, 132, 169, 131, 5, 51, 169, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 7, 184, 153, 74, 67, 196, 170, 93, 16, 197, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(161)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 110, 168, 153, 8, 147, 43, 152, 152, 152, 152, 101, 172)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(182, 93, 141, 4, 58, 121, 184, 133, 153, 153, 136, 153, 184, 7, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 85, 33, 153, 48, 50, 117, 53, 90, 38, 109, 93, 65, 63, 4, 58, 134, 184, 138, 153, 153, 136, 153, 184, 68, 132, 50, 153, 197, 131, 92, 196)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(74)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 59, 4, 155, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6559786422556694055/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [118,110,176,160,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,108,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,51,153,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [90]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [78,118,184,138,138]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [157]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [151,169,118,169,118]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [153,67,50,170,93]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [64,64,53,64,35]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [124,33,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,111,93,16,187]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [153,75,151,153,153]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [71,48,31,48,78]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [147,165,79,122,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,110]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,132,112,110,110]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [41,4,80]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,128,43,153,70]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,109,151,93,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [134,4,153,132,169]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,7,184,153,74]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [161]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,110,168,153,8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [182,93,141,4,58]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [74]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.053s
user	0m30.984s
sys	0m3.608s

2023-01-23 20:17:34,120 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-23 20:17:34,120 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-23 20:17:34,121 INFO     Done. Execution time: 0.0014917850494384766 seconds
2023-01-23 20:17:34,121 INFO     Output: 
2023-01-23 20:17:34,122 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-23 20:19:53,342 INFO     Done. Execution time: 139.22080516815186 seconds
2023-01-23 20:19:53,343 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([118,110,176,160,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 32 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,108,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,51,153,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([90])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([78,118,184,138,138])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([157])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([151,169,118,169,118])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([64,64,53,64,35])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([153,67,50,170,93])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([124,33,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,111,93,16,187])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([153,75,151,153,153])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([71,48,31,48,78])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([147,165,79,122,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 32 (50.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,110])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,132,112,110,110])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([41,4,80])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,128,43,153,70])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,109,151,93,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([134,4,153,132,169])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137,7,184,153,74])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([161])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,110,168,153,8])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([182,93,141,4,58])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([74])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 32)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 32 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 6363):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R    |  entry  |  i  |   j   |        sorted         |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |       |  [118,110,176,160,4]  |
    10  |                      // int R = 0;  |         |     0  |         |     |       |  [118,110,176,160,4]  |
    11  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |       |  [118,110,176,160,4]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |       |  [118,110,176,160,4]  |
    14  |                     int entry = 0;  |         |     0  |      0  |     |       |  [118,110,176,160,4]  |
    16  |                         int i = 0;  |         |     0  |      0  |  0  |       |  [118,110,176,160,4]  |
    22  |      entry = arrayRead(sorted, i);  |         |     0  |    118  |  0  |       |  [118,110,176,160,4]  |
    24  |                         int j = 0;  |         |     0  |    118  |  0  |    0  |  [118,110,176,160,4]  |
    30  |                         R = R + 2;  |      2  |     2  |    118  |  0  |    0  |  [118,110,176,160,4]  |
    34  |                         j = j + 1;  |         |     2  |    118  |  0  |    1  |  [118,110,176,160,4]  |
    35  |              resetPlaceHolder_2();  |         |     2  |    118  |  0  |    1  |  [118,110,176,160,4]  |
    41  |                         R = R + 2;  |      2  |     4  |    118  |  0  |    1  |  [118,110,176,160,4]  |
    45  |                         j = j + 1;  |         |     4  |    118  |  0  |    2  |  [118,110,176,160,4]  |
    46  |              resetPlaceHolder_2();  |         |     4  |    118  |  0  |    2  |  [118,110,176,160,4]  |
    52  |                         R = R + 2;  |      2  |     6  |    118  |  0  |    2  |  [118,110,176,160,4]  |
    56  |                         j = j + 1;  |         |     6  |    118  |  0  |    3  |  [118,110,176,160,4]  |
    57  |              resetPlaceHolder_2();  |         |     6  |    118  |  0  |    3  |  [118,110,176,160,4]  |
    63  |                         R = R + 2;  |      2  |     8  |    118  |  0  |    3  |  [118,110,176,160,4]  |
    67  |                         j = j + 1;  |         |     8  |    118  |  0  |    4  |  [118,110,176,160,4]  |
    68  |              resetPlaceHolder_2();  |         |     8  |    118  |  0  |    4  |  [118,110,176,160,4]  |
    74  |                         R = R + 2;  |      2  |    10  |    118  |  0  |    4  |  [118,110,176,160,4]  |
    78  |                         j = j + 1;  |         |    10  |    118  |  0  |    5  |  [118,110,176,160,4]  |
    79  |              resetPlaceHolder_2();  |         |    10  |    118  |  0  |    5  |  [118,110,176,160,4]  |
    85  |                         R = R + 2;  |      2  |    12  |    118  |  0  |    5  |  [118,110,176,160,4]  |
    89  |                         j = j + 1;  |         |    12  |    118  |  0  |    6  |  [118,110,176,160,4]  |
    90  |              resetPlaceHolder_2();  |         |    12  |    118  |  0  |    6  |  [118,110,176,160,4]  |
    96  |                         R = R + 2;  |      2  |    14  |    118  |  0  |    6  |  [118,110,176,160,4]  |
   100  |                         j = j + 1;  |         |    14  |    118  |  0  |    7  |  [118,110,176,160,4]  |
   101  |              resetPlaceHolder_2();  |         |    14  |    118  |  0  |    7  |  [118,110,176,160,4]  |
   107  |                         R = R + 2;  |      2  |    16  |    118  |  0  |    7  |  [118,110,176,160,4]  |
   111  |                         j = j + 1;  |         |    16  |    118  |  0  |    8  |  [118,110,176,160,4]  |
   112  |              resetPlaceHolder_2();  |         |    16  |    118  |  0  |    8  |  [118,110,176,160,4]  |
   118  |                         R = R + 2;  |      2  |    18  |    118  |  0  |    8  |  [118,110,176,160,4]  |
   122  |                         j = j + 1;  |         |    18  |    118  |  0  |    9  |  [118,110,176,160,4]  |
   123  |              resetPlaceHolder_2();  |         |    18  |    118  |  0  |    9  |  [118,110,176,160,4]  |
   129  |                         R = R + 2;  |      2  |    20  |    118  |  0  |    9  |  [118,110,176,160,4]  |
   133  |                         j = j + 1;  |         |    20  |    118  |  0  |   10  |  [118,110,176,160,4]  |
   134  |              resetPlaceHolder_2();  |         |    20  |    118  |  0  |   10  |  [118,110,176,160,4]  |
   140  |                         R = R + 2;  |      2  |    22  |    118  |  0  |   10  |  [118,110,176,160,4]  |
   144  |                         j = j + 1;  |         |    22  |    118  |  0  |   11  |  [118,110,176,160,4]  |
   145  |              resetPlaceHolder_2();  |         |    22  |    118  |  0  |   11  |  [118,110,176,160,4]  |
   151  |                         R = R + 2;  |      2  |    24  |    118  |  0  |   11  |  [118,110,176,160,4]  |
   155  |                         j = j + 1;  |         |    24  |    118  |  0  |   12  |  [118,110,176,160,4]  |
   156  |              resetPlaceHolder_2();  |         |    24  |    118  |  0  |   12  |  [118,110,176,160,4]  |
   162  |                         R = R + 2;  |      2  |    26  |    118  |  0  |   12  |  [118,110,176,160,4]  |
   166  |                         j = j + 1;  |         |    26  |    118  |  0  |   13  |  [118,110,176,160,4]  |
   167  |              resetPlaceHolder_2();  |         |    26  |    118  |  0  |   13  |  [118,110,176,160,4]  |
   173  |                         R = R + 2;  |      2  |    28  |    118  |  0  |   13  |  [118,110,176,160,4]  |
   177  |                         j = j + 1;  |         |    28  |    118  |  0  |   14  |  [118,110,176,160,4]  |
   178  |              resetPlaceHolder_2();  |         |    28  |    118  |  0  |   14  |  [118,110,176,160,4]  |
   184  |                         R = R + 2;  |      2  |    30  |    118  |  0  |   14  |  [118,110,176,160,4]  |
   188  |                         j = j + 1;  |         |    30  |    118  |  0  |   15  |  [118,110,176,160,4]  |
   189  |              resetPlaceHolder_2();  |         |    30  |    118  |  0  |   15  |  [118,110,176,160,4]  |
   195  |                         R = R + 2;  |      2  |    32  |    118  |  0  |   15  |  [118,110,176,160,4]  |
   199  |                         j = j + 1;  |         |    32  |    118  |  0  |   16  |  [118,110,176,160,4]  |
   200  |              resetPlaceHolder_2();  |         |    32  |    118  |  0  |   16  |  [118,110,176,160,4]  |
   206  |                         R = R + 2;  |      2  |    34  |    118  |  0  |   16  |  [118,110,176,160,4]  |
   210  |                         j = j + 1;  |         |    34  |    118  |  0  |   17  |  [118,110,176,160,4]  |
   211  |              resetPlaceHolder_2();  |         |    34  |    118  |  0  |   17  |  [118,110,176,160,4]  |
   217  |                         R = R + 2;  |      2  |    36  |    118  |  0  |   17  |  [118,110,176,160,4]  |
   221  |                         j = j + 1;  |         |    36  |    118  |  0  |   18  |  [118,110,176,160,4]  |
   222  |              resetPlaceHolder_2();  |         |    36  |    118  |  0  |   18  |  [118,110,176,160,4]  |
   228  |                         R = R + 2;  |      2  |    38  |    118  |  0  |   18  |  [118,110,176,160,4]  |
   232  |                         j = j + 1;  |         |    38  |    118  |  0  |   19  |  [118,110,176,160,4]  |
   233  |              resetPlaceHolder_2();  |         |    38  |    118  |  0  |   19  |  [118,110,176,160,4]  |
   239  |                         R = R + 2;  |      2  |    40  |    118  |  0  |   19  |  [118,110,176,160,4]  |
   243  |                         j = j + 1;  |         |    40  |    118  |  0  |   20  |  [118,110,176,160,4]  |
   244  |              resetPlaceHolder_2();  |         |    40  |    118  |  0  |   20  |  [118,110,176,160,4]  |
   250  |                         R = R + 2;  |      2  |    42  |    118  |  0  |   20  |  [118,110,176,160,4]  |
   254  |                         j = j + 1;  |         |    42  |    118  |  0  |   21  |  [118,110,176,160,4]  |
   255  |              resetPlaceHolder_2();  |         |    42  |    118  |  0  |   21  |  [118,110,176,160,4]  |
   261  |                         R = R + 2;  |      2  |    44  |    118  |  0  |   21  |  [118,110,176,160,4]  |
   265  |                         j = j + 1;  |         |    44  |    118  |  0  |   22  |  [118,110,176,160,4]  |
   266  |              resetPlaceHolder_2();  |         |    44  |    118  |  0  |   22  |  [118,110,176,160,4]  |
   272  |                         R = R + 2;  |      2  |    46  |    118  |  0  |   22  |  [118,110,176,160,4]  |
   276  |                         j = j + 1;  |         |    46  |    118  |  0  |   23  |  [118,110,176,160,4]  |
   277  |              resetPlaceHolder_2();  |         |    46  |    118  |  0  |   23  |  [118,110,176,160,4]  |
   283  |                         R = R + 2;  |      2  |    48  |    118  |  0  |   23  |  [118,110,176,160,4]  |
   287  |                         j = j + 1;  |         |    48  |    118  |  0  |   24  |  [118,110,176,160,4]  |
   288  |              resetPlaceHolder_2();  |         |    48  |    118  |  0  |   24  |  [118,110,176,160,4]  |
   294  |                         R = R + 2;  |      2  |    50  |    118  |  0  |   24  |  [118,110,176,160,4]  |
   298  |                         j = j + 1;  |         |    50  |    118  |  0  |   25  |  [118,110,176,160,4]  |
   299  |              resetPlaceHolder_2();  |         |    50  |    118  |  0  |   25  |  [118,110,176,160,4]  |
   305  |                         R = R + 2;  |      2  |    52  |    118  |  0  |   25  |  [118,110,176,160,4]  |
   309  |                         j = j + 1;  |         |    52  |    118  |  0  |   26  |  [118,110,176,160,4]  |
   310  |              resetPlaceHolder_2();  |         |    52  |    118  |  0  |   26  |  [118,110,176,160,4]  |
   316  |                         R = R + 2;  |      2  |    54  |    118  |  0  |   26  |  [118,110,176,160,4]  |
   320  |                         j = j + 1;  |         |    54  |    118  |  0  |   27  |  [118,110,176,160,4]  |
   321  |              resetPlaceHolder_2();  |         |    54  |    118  |  0  |   27  |  [118,110,176,160,4]  |
   327  |                         R = R + 2;  |      2  |    56  |    118  |  0  |   27  |  [118,110,176,160,4]  |
   331  |                         j = j + 1;  |         |    56  |    118  |  0  |   28  |  [118,110,176,160,4]  |
   332  |              resetPlaceHolder_2();  |         |    56  |    118  |  0  |   28  |  [118,110,176,160,4]  |
   338  |                         R = R + 2;  |      2  |    58  |    118  |  0  |   28  |  [118,110,176,160,4]  |
   342  |                         j = j + 1;  |         |    58  |    118  |  0  |   29  |  [118,110,176,160,4]  |
   343  |              resetPlaceHolder_2();  |         |    58  |    118  |  0  |   29  |  [118,110,176,160,4]  |
   349  |                         R = R + 2;  |      2  |    60  |    118  |  0  |   29  |  [118,110,176,160,4]  |
   353  |                         j = j + 1;  |         |    60  |    118  |  0  |   30  |  [118,110,176,160,4]  |
   354  |              resetPlaceHolder_2();  |         |    60  |    118  |  0  |   30  |  [118,110,176,160,4]  |
   360  |                         R = R + 2;  |      2  |    62  |    118  |  0  |   30  |  [118,110,176,160,4]  |
   364  |                         j = j + 1;  |         |    62  |    118  |  0  |   31  |  [118,110,176,160,4]  |
   365  |              resetPlaceHolder_2();  |         |    62  |    118  |  0  |   31  |  [118,110,176,160,4]  |
   371  |                         R = R + 2;  |      2  |    64  |    118  |  0  |   31  |  [118,110,176,160,4]  |
   375  |                         j = j + 1;  |         |    64  |    118  |  0  |   32  |  [118,110,176,160,4]  |
   376  |              resetPlaceHolder_2();  |         |    64  |    118  |  0  |   32  |  [118,110,176,160,4]  |
   382  |                         R = R + 2;  |      2  |    66  |    118  |  0  |   32  |  [118,110,176,160,4]  |
   386  |                         j = j + 1;  |         |    66  |    118  |  0  |   33  |  [118,110,176,160,4]  |
   387  |              resetPlaceHolder_2();  |         |    66  |    118  |  0  |   33  |  [118,110,176,160,4]  |
   393  |                         R = R + 2;  |      2  |    68  |    118  |  0  |   33  |  [118,110,176,160,4]  |
   397  |                         j = j + 1;  |         |    68  |    118  |  0  |   34  |  [118,110,176,160,4]  |
   398  |              resetPlaceHolder_2();  |         |    68  |    118  |  0  |   34  |  [118,110,176,160,4]  |
   404  |                         R = R + 2;  |      2  |    70  |    118  |  0  |   34  |  [118,110,176,160,4]  |
   408  |                         j = j + 1;  |         |    70  |    118  |  0  |   35  |  [118,110,176,160,4]  |
   409  |              resetPlaceHolder_2();  |         |    70  |    118  |  0  |   35  |  [118,110,176,160,4]  |
   415  |                         R = R + 2;  |      2  |    72  |    118  |  0  |   35  |  [118,110,176,160,4]  |
   419  |                         j = j + 1;  |         |    72  |    118  |  0  |   36  |  [118,110,176,160,4]  |
   420  |              resetPlaceHolder_2();  |         |    72  |    118  |  0  |   36  |  [118,110,176,160,4]  |
   426  |                         R = R + 2;  |      2  |    74  |    118  |  0  |   36  |  [118,110,176,160,4]  |
   430  |                         j = j + 1;  |         |    74  |    118  |  0  |   37  |  [118,110,176,160,4]  |
   431  |              resetPlaceHolder_2();  |         |    74  |    118  |  0  |   37  |  [118,110,176,160,4]  |
   437  |                         R = R + 2;  |      2  |    76  |    118  |  0  |   37  |  [118,110,176,160,4]  |
   441  |                         j = j + 1;  |         |    76  |    118  |  0  |   38  |  [118,110,176,160,4]  |
   442  |              resetPlaceHolder_2();  |         |    76  |    118  |  0  |   38  |  [118,110,176,160,4]  |
   448  |                         R = R + 2;  |      2  |    78  |    118  |  0  |   38  |  [118,110,176,160,4]  |
   452  |                         j = j + 1;  |         |    78  |    118  |  0  |   39  |  [118,110,176,160,4]  |
   453  |              resetPlaceHolder_2();  |         |    78  |    118  |  0  |   39  |  [118,110,176,160,4]  |
   459  |                         R = R + 2;  |      2  |    80  |    118  |  0  |   39  |  [118,110,176,160,4]  |
   463  |                         j = j + 1;  |         |    80  |    118  |  0  |   40  |  [118,110,176,160,4]  |
   464  |              resetPlaceHolder_2();  |         |    80  |    118  |  0  |   40  |  [118,110,176,160,4]  |
   470  |                         R = R + 2;  |      2  |    82  |    118  |  0  |   40  |  [118,110,176,160,4]  |
   474  |                         j = j + 1;  |         |    82  |    118  |  0  |   41  |  [118,110,176,160,4]  |
   475  |              resetPlaceHolder_2();  |         |    82  |    118  |  0  |   41  |  [118,110,176,160,4]  |
   481  |                         R = R + 2;  |      2  |    84  |    118  |  0  |   41  |  [118,110,176,160,4]  |
   485  |                         j = j + 1;  |         |    84  |    118  |  0  |   42  |  [118,110,176,160,4]  |
   486  |              resetPlaceHolder_2();  |         |    84  |    118  |  0  |   42  |  [118,110,176,160,4]  |
   492  |                         R = R + 2;  |      2  |    86  |    118  |  0  |   42  |  [118,110,176,160,4]  |
   496  |                         j = j + 1;  |         |    86  |    118  |  0  |   43  |  [118,110,176,160,4]  |
   497  |              resetPlaceHolder_2();  |         |    86  |    118  |  0  |   43  |  [118,110,176,160,4]  |
   503  |                         R = R + 2;  |      2  |    88  |    118  |  0  |   43  |  [118,110,176,160,4]  |
   507  |                         j = j + 1;  |         |    88  |    118  |  0  |   44  |  [118,110,176,160,4]  |
   508  |              resetPlaceHolder_2();  |         |    88  |    118  |  0  |   44  |  [118,110,176,160,4]  |
   514  |                         R = R + 2;  |      2  |    90  |    118  |  0  |   44  |  [118,110,176,160,4]  |
   518  |                         j = j + 1;  |         |    90  |    118  |  0  |   45  |  [118,110,176,160,4]  |
   519  |              resetPlaceHolder_2();  |         |    90  |    118  |  0  |   45  |  [118,110,176,160,4]  |
   525  |                         R = R + 2;  |      2  |    92  |    118  |  0  |   45  |  [118,110,176,160,4]  |
   529  |                         j = j + 1;  |         |    92  |    118  |  0  |   46  |  [118,110,176,160,4]  |
   530  |              resetPlaceHolder_2();  |         |    92  |    118  |  0  |   46  |  [118,110,176,160,4]  |
   536  |                         R = R + 2;  |      2  |    94  |    118  |  0  |   46  |  [118,110,176,160,4]  |
   540  |                         j = j + 1;  |         |    94  |    118  |  0  |   47  |  [118,110,176,160,4]  |
   541  |              resetPlaceHolder_2();  |         |    94  |    118  |  0  |   47  |  [118,110,176,160,4]  |
   547  |                         R = R + 2;  |      2  |    96  |    118  |  0  |   47  |  [118,110,176,160,4]  |
   551  |                         j = j + 1;  |         |    96  |    118  |  0  |   48  |  [118,110,176,160,4]  |
   552  |              resetPlaceHolder_2();  |         |    96  |    118  |  0  |   48  |  [118,110,176,160,4]  |
   558  |                         R = R + 2;  |      2  |    98  |    118  |  0  |   48  |  [118,110,176,160,4]  |
   562  |                         j = j + 1;  |         |    98  |    118  |  0  |   49  |  [118,110,176,160,4]  |
   563  |              resetPlaceHolder_2();  |         |    98  |    118  |  0  |   49  |  [118,110,176,160,4]  |
   569  |                         R = R + 2;  |      2  |   100  |    118  |  0  |   49  |  [118,110,176,160,4]  |
   573  |                         j = j + 1;  |         |   100  |    118  |  0  |   50  |  [118,110,176,160,4]  |
   574  |              resetPlaceHolder_2();  |         |   100  |    118  |  0  |   50  |  [118,110,176,160,4]  |
   580  |                         R = R + 2;  |      2  |   102  |    118  |  0  |   50  |  [118,110,176,160,4]  |
   584  |                         j = j + 1;  |         |   102  |    118  |  0  |   51  |  [118,110,176,160,4]  |
   585  |              resetPlaceHolder_2();  |         |   102  |    118  |  0  |   51  |  [118,110,176,160,4]  |
   591  |                         R = R + 2;  |      2  |   104  |    118  |  0  |   51  |  [118,110,176,160,4]  |
   595  |                         j = j + 1;  |         |   104  |    118  |  0  |   52  |  [118,110,176,160,4]  |
   596  |              resetPlaceHolder_2();  |         |   104  |    118  |  0  |   52  |  [118,110,176,160,4]  |
   602  |                         R = R + 2;  |      2  |   106  |    118  |  0  |   52  |  [118,110,176,160,4]  |
   606  |                         j = j + 1;  |         |   106  |    118  |  0  |   53  |  [118,110,176,160,4]  |
   607  |              resetPlaceHolder_2();  |         |   106  |    118  |  0  |   53  |  [118,110,176,160,4]  |
   613  |                         R = R + 2;  |      2  |   108  |    118  |  0  |   53  |  [118,110,176,160,4]  |
   617  |                         j = j + 1;  |         |   108  |    118  |  0  |   54  |  [118,110,176,160,4]  |
   618  |              resetPlaceHolder_2();  |         |   108  |    118  |  0  |   54  |  [118,110,176,160,4]  |
   624  |                         R = R + 2;  |      2  |   110  |    118  |  0  |   54  |  [118,110,176,160,4]  |
   628  |                         j = j + 1;  |         |   110  |    118  |  0  |   55  |  [118,110,176,160,4]  |
   629  |              resetPlaceHolder_2();  |         |   110  |    118  |  0  |   55  |  [118,110,176,160,4]  |
   635  |                         R = R + 2;  |      2  |   112  |    118  |  0  |   55  |  [118,110,176,160,4]  |
   639  |                         j = j + 1;  |         |   112  |    118  |  0  |   56  |  [118,110,176,160,4]  |
   640  |              resetPlaceHolder_2();  |         |   112  |    118  |  0  |   56  |  [118,110,176,160,4]  |
   646  |                         R = R + 2;  |      2  |   114  |    118  |  0  |   56  |  [118,110,176,160,4]  |
   650  |                         j = j + 1;  |         |   114  |    118  |  0  |   57  |  [118,110,176,160,4]  |
   651  |              resetPlaceHolder_2();  |         |   114  |    118  |  0  |   57  |  [118,110,176,160,4]  |
   657  |                         R = R + 2;  |      2  |   116  |    118  |  0  |   57  |  [118,110,176,160,4]  |
   661  |                         j = j + 1;  |         |   116  |    118  |  0  |   58  |  [118,110,176,160,4]  |
   662  |              resetPlaceHolder_2();  |         |   116  |    118  |  0  |   58  |  [118,110,176,160,4]  |
   668  |                         R = R + 2;  |      2  |   118  |    118  |  0  |   58  |  [118,110,176,160,4]  |
   672  |                         j = j + 1;  |         |   118  |    118  |  0  |   59  |  [118,110,176,160,4]  |
   673  |              resetPlaceHolder_2();  |         |   118  |    118  |  0  |   59  |  [118,110,176,160,4]  |
   679  |                         R = R + 2;  |      2  |   120  |    118  |  0  |   59  |  [118,110,176,160,4]  |
   683  |                         j = j + 1;  |         |   120  |    118  |  0  |   60  |  [118,110,176,160,4]  |
   684  |              resetPlaceHolder_2();  |         |   120  |    118  |  0  |   60  |  [118,110,176,160,4]  |
   690  |                         R = R + 2;  |      2  |   122  |    118  |  0  |   60  |  [118,110,176,160,4]  |
   694  |                         j = j + 1;  |         |   122  |    118  |  0  |   61  |  [118,110,176,160,4]  |
   695  |              resetPlaceHolder_2();  |         |   122  |    118  |  0  |   61  |  [118,110,176,160,4]  |
   701  |                         R = R + 2;  |      2  |   124  |    118  |  0  |   61  |  [118,110,176,160,4]  |
   705  |                         j = j + 1;  |         |   124  |    118  |  0  |   62  |  [118,110,176,160,4]  |
   706  |              resetPlaceHolder_2();  |         |   124  |    118  |  0  |   62  |  [118,110,176,160,4]  |
   712  |                         R = R + 2;  |      2  |   126  |    118  |  0  |   62  |  [118,110,176,160,4]  |
   716  |                         j = j + 1;  |         |   126  |    118  |  0  |   63  |  [118,110,176,160,4]  |
   717  |              resetPlaceHolder_2();  |         |   126  |    118  |  0  |   63  |  [118,110,176,160,4]  |
   723  |                         R = R + 2;  |      2  |   128  |    118  |  0  |   63  |  [118,110,176,160,4]  |
   727  |                         j = j + 1;  |         |   128  |    118  |  0  |   64  |  [118,110,176,160,4]  |
   728  |              resetPlaceHolder_2();  |         |   128  |    118  |  0  |   64  |  [118,110,176,160,4]  |
   734  |                         R = R + 2;  |      2  |   130  |    118  |  0  |   64  |  [118,110,176,160,4]  |
   738  |                         j = j + 1;  |         |   130  |    118  |  0  |   65  |  [118,110,176,160,4]  |
   739  |              resetPlaceHolder_2();  |         |   130  |    118  |  0  |   65  |  [118,110,176,160,4]  |
   745  |                         R = R + 2;  |      2  |   132  |    118  |  0  |   65  |  [118,110,176,160,4]  |
   749  |                         j = j + 1;  |         |   132  |    118  |  0  |   66  |  [118,110,176,160,4]  |
   750  |              resetPlaceHolder_2();  |         |   132  |    118  |  0  |   66  |  [118,110,176,160,4]  |
   756  |                         R = R + 2;  |      2  |   134  |    118  |  0  |   66  |  [118,110,176,160,4]  |
   760  |                         j = j + 1;  |         |   134  |    118  |  0  |   67  |  [118,110,176,160,4]  |
   761  |              resetPlaceHolder_2();  |         |   134  |    118  |  0  |   67  |  [118,110,176,160,4]  |
   767  |                         R = R + 2;  |      2  |   136  |    118  |  0  |   67  |  [118,110,176,160,4]  |
   771  |                         j = j + 1;  |         |   136  |    118  |  0  |   68  |  [118,110,176,160,4]  |
   772  |              resetPlaceHolder_2();  |         |   136  |    118  |  0  |   68  |  [118,110,176,160,4]  |
   778  |                         R = R + 2;  |      2  |   138  |    118  |  0  |   68  |  [118,110,176,160,4]  |
   782  |                         j = j + 1;  |         |   138  |    118  |  0  |   69  |  [118,110,176,160,4]  |
   783  |              resetPlaceHolder_2();  |         |   138  |    118  |  0  |   69  |  [118,110,176,160,4]  |
   789  |                         R = R + 2;  |      2  |   140  |    118  |  0  |   69  |  [118,110,176,160,4]  |
   793  |                         j = j + 1;  |         |   140  |    118  |  0  |   70  |  [118,110,176,160,4]  |
   794  |              resetPlaceHolder_2();  |         |   140  |    118  |  0  |   70  |  [118,110,176,160,4]  |
   800  |                         R = R + 2;  |      2  |   142  |    118  |  0  |   70  |  [118,110,176,160,4]  |
   804  |                         j = j + 1;  |         |   142  |    118  |  0  |   71  |  [118,110,176,160,4]  |
   805  |              resetPlaceHolder_2();  |         |   142  |    118  |  0  |   71  |  [118,110,176,160,4]  |
   811  |                         R = R + 2;  |      2  |   144  |    118  |  0  |   71  |  [118,110,176,160,4]  |
   815  |                         j = j + 1;  |         |   144  |    118  |  0  |   72  |  [118,110,176,160,4]  |
   816  |              resetPlaceHolder_2();  |         |   144  |    118  |  0  |   72  |  [118,110,176,160,4]  |
   822  |                         R = R + 2;  |      2  |   146  |    118  |  0  |   72  |  [118,110,176,160,4]  |
   826  |                         j = j + 1;  |         |   146  |    118  |  0  |   73  |  [118,110,176,160,4]  |
   827  |              resetPlaceHolder_2();  |         |   146  |    118  |  0  |   73  |  [118,110,176,160,4]  |
   833  |                         R = R + 2;  |      2  |   148  |    118  |  0  |   73  |  [118,110,176,160,4]  |
   837  |                         j = j + 1;  |         |   148  |    118  |  0  |   74  |  [118,110,176,160,4]  |
   838  |              resetPlaceHolder_2();  |         |   148  |    118  |  0  |   74  |  [118,110,176,160,4]  |
   844  |                         R = R + 2;  |      2  |   150  |    118  |  0  |   74  |  [118,110,176,160,4]  |
   848  |                         j = j + 1;  |         |   150  |    118  |  0  |   75  |  [118,110,176,160,4]  |
   849  |              resetPlaceHolder_2();  |         |   150  |    118  |  0  |   75  |  [118,110,176,160,4]  |
   855  |                         R = R + 2;  |      2  |   152  |    118  |  0  |   75  |  [118,110,176,160,4]  |
   859  |                         j = j + 1;  |         |   152  |    118  |  0  |   76  |  [118,110,176,160,4]  |
   860  |              resetPlaceHolder_2();  |         |   152  |    118  |  0  |   76  |  [118,110,176,160,4]  |
   866  |                         R = R + 2;  |      2  |   154  |    118  |  0  |   76  |  [118,110,176,160,4]  |
   870  |                         j = j + 1;  |         |   154  |    118  |  0  |   77  |  [118,110,176,160,4]  |
   871  |              resetPlaceHolder_2();  |         |   154  |    118  |  0  |   77  |  [118,110,176,160,4]  |
   877  |                         R = R + 2;  |      2  |   156  |    118  |  0  |   77  |  [118,110,176,160,4]  |
   881  |                         j = j + 1;  |         |   156  |    118  |  0  |   78  |  [118,110,176,160,4]  |
   882  |              resetPlaceHolder_2();  |         |   156  |    118  |  0  |   78  |  [118,110,176,160,4]  |
   888  |                         R = R + 2;  |      2  |   158  |    118  |  0  |   78  |  [118,110,176,160,4]  |
   892  |                         j = j + 1;  |         |   158  |    118  |  0  |   79  |  [118,110,176,160,4]  |
   893  |              resetPlaceHolder_2();  |         |   158  |    118  |  0  |   79  |  [118,110,176,160,4]  |
   899  |                         R = R + 2;  |      2  |   160  |    118  |  0  |   79  |  [118,110,176,160,4]  |
   903  |                         j = j + 1;  |         |   160  |    118  |  0  |   80  |  [118,110,176,160,4]  |
   904  |              resetPlaceHolder_2();  |         |   160  |    118  |  0  |   80  |  [118,110,176,160,4]  |
   910  |                         R = R + 2;  |      2  |   162  |    118  |  0  |   80  |  [118,110,176,160,4]  |
   914  |                         j = j + 1;  |         |   162  |    118  |  0  |   81  |  [118,110,176,160,4]  |
   915  |              resetPlaceHolder_2();  |         |   162  |    118  |  0  |   81  |  [118,110,176,160,4]  |
   921  |                         R = R + 2;  |      2  |   164  |    118  |  0  |   81  |  [118,110,176,160,4]  |
   925  |                         j = j + 1;  |         |   164  |    118  |  0  |   82  |  [118,110,176,160,4]  |
   926  |              resetPlaceHolder_2();  |         |   164  |    118  |  0  |   82  |  [118,110,176,160,4]  |
   932  |                         R = R + 2;  |      2  |   166  |    118  |  0  |   82  |  [118,110,176,160,4]  |
   936  |                         j = j + 1;  |         |   166  |    118  |  0  |   83  |  [118,110,176,160,4]  |
   937  |              resetPlaceHolder_2();  |         |   166  |    118  |  0  |   83  |  [118,110,176,160,4]  |
   943  |                         R = R + 2;  |      2  |   168  |    118  |  0  |   83  |  [118,110,176,160,4]  |
   947  |                         j = j + 1;  |         |   168  |    118  |  0  |   84  |  [118,110,176,160,4]  |
   948  |              resetPlaceHolder_2();  |         |   168  |    118  |  0  |   84  |  [118,110,176,160,4]  |
   954  |                         R = R + 2;  |      2  |   170  |    118  |  0  |   84  |  [118,110,176,160,4]  |
   958  |                         j = j + 1;  |         |   170  |    118  |  0  |   85  |  [118,110,176,160,4]  |
   959  |              resetPlaceHolder_2();  |         |   170  |    118  |  0  |   85  |  [118,110,176,160,4]  |
   965  |                         R = R + 2;  |      2  |   172  |    118  |  0  |   85  |  [118,110,176,160,4]  |
   969  |                         j = j + 1;  |         |   172  |    118  |  0  |   86  |  [118,110,176,160,4]  |
   970  |              resetPlaceHolder_2();  |         |   172  |    118  |  0  |   86  |  [118,110,176,160,4]  |
   976  |                         R = R + 2;  |      2  |   174  |    118  |  0  |   86  |  [118,110,176,160,4]  |
   980  |                         j = j + 1;  |         |   174  |    118  |  0  |   87  |  [118,110,176,160,4]  |
   981  |              resetPlaceHolder_2();  |         |   174  |    118  |  0  |   87  |  [118,110,176,160,4]  |
   987  |                         R = R + 2;  |      2  |   176  |    118  |  0  |   87  |  [118,110,176,160,4]  |
   991  |                         j = j + 1;  |         |   176  |    118  |  0  |   88  |  [118,110,176,160,4]  |
   992  |              resetPlaceHolder_2();  |         |   176  |    118  |  0  |   88  |  [118,110,176,160,4]  |
   998  |                         R = R + 2;  |      2  |   178  |    118  |  0  |   88  |  [118,110,176,160,4]  |
  1002  |                         j = j + 1;  |         |   178  |    118  |  0  |   89  |  [118,110,176,160,4]  |
  1003  |              resetPlaceHolder_2();  |         |   178  |    118  |  0  |   89  |  [118,110,176,160,4]  |
  1009  |                         R = R + 2;  |      2  |   180  |    118  |  0  |   89  |  [118,110,176,160,4]  |
  1013  |                         j = j + 1;  |         |   180  |    118  |  0  |   90  |  [118,110,176,160,4]  |
  1014  |              resetPlaceHolder_2();  |         |   180  |    118  |  0  |   90  |  [118,110,176,160,4]  |
  1020  |                         R = R + 2;  |      2  |   182  |    118  |  0  |   90  |  [118,110,176,160,4]  |
  1024  |                         j = j + 1;  |         |   182  |    118  |  0  |   91  |  [118,110,176,160,4]  |
  1025  |              resetPlaceHolder_2();  |         |   182  |    118  |  0  |   91  |  [118,110,176,160,4]  |
  1031  |                         R = R + 2;  |      2  |   184  |    118  |  0  |   91  |  [118,110,176,160,4]  |
  1035  |                         j = j + 1;  |         |   184  |    118  |  0  |   92  |  [118,110,176,160,4]  |
  1036  |              resetPlaceHolder_2();  |         |   184  |    118  |  0  |   92  |  [118,110,176,160,4]  |
  1042  |                         R = R + 2;  |      2  |   186  |    118  |  0  |   92  |  [118,110,176,160,4]  |
  1046  |                         j = j + 1;  |         |   186  |    118  |  0  |   93  |  [118,110,176,160,4]  |
  1047  |              resetPlaceHolder_2();  |         |   186  |    118  |  0  |   93  |  [118,110,176,160,4]  |
  1053  |                         R = R + 2;  |      2  |   188  |    118  |  0  |   93  |  [118,110,176,160,4]  |
  1057  |                         j = j + 1;  |         |   188  |    118  |  0  |   94  |  [118,110,176,160,4]  |
  1058  |              resetPlaceHolder_2();  |         |   188  |    118  |  0  |   94  |  [118,110,176,160,4]  |
  1064  |                         R = R + 2;  |      2  |   190  |    118  |  0  |   94  |  [118,110,176,160,4]  |
  1068  |                         j = j + 1;  |         |   190  |    118  |  0  |   95  |  [118,110,176,160,4]  |
  1069  |              resetPlaceHolder_2();  |         |   190  |    118  |  0  |   95  |  [118,110,176,160,4]  |
  1075  |                         R = R + 2;  |      2  |   192  |    118  |  0  |   95  |  [118,110,176,160,4]  |
  1079  |                         j = j + 1;  |         |   192  |    118  |  0  |   96  |  [118,110,176,160,4]  |
  1080  |              resetPlaceHolder_2();  |         |   192  |    118  |  0  |   96  |  [118,110,176,160,4]  |
  1086  |                         R = R + 2;  |      2  |   194  |    118  |  0  |   96  |  [118,110,176,160,4]  |
  1090  |                         j = j + 1;  |         |   194  |    118  |  0  |   97  |  [118,110,176,160,4]  |
  1091  |              resetPlaceHolder_2();  |         |   194  |    118  |  0  |   97  |  [118,110,176,160,4]  |
  1097  |                         R = R + 2;  |      2  |   196  |    118  |  0  |   97  |  [118,110,176,160,4]  |
  1101  |                         j = j + 1;  |         |   196  |    118  |  0  |   98  |  [118,110,176,160,4]  |
  1102  |              resetPlaceHolder_2();  |         |   196  |    118  |  0  |   98  |  [118,110,176,160,4]  |
  1108  |                         R = R + 2;  |      2  |   198  |    118  |  0  |   98  |  [118,110,176,160,4]  |
  1112  |                         j = j + 1;  |         |   198  |    118  |  0  |   99  |  [118,110,176,160,4]  |
  1113  |              resetPlaceHolder_2();  |         |   198  |    118  |  0  |   99  |  [118,110,176,160,4]  |
  1119  |                         R = R + 2;  |      2  |   200  |    118  |  0  |   99  |  [118,110,176,160,4]  |
  1123  |                         j = j + 1;  |         |   200  |    118  |  0  |  100  |  [118,110,176,160,4]  |
  1124  |              resetPlaceHolder_2();  |         |   200  |    118  |  0  |  100  |  [118,110,176,160,4]  |
  1130  |                         R = R + 2;  |      2  |   202  |    118  |  0  |  100  |  [118,110,176,160,4]  |
  1134  |                         j = j + 1;  |         |   202  |    118  |  0  |  101  |  [118,110,176,160,4]  |
  1135  |              resetPlaceHolder_2();  |         |   202  |    118  |  0  |  101  |  [118,110,176,160,4]  |
  1141  |                         R = R + 2;  |      2  |   204  |    118  |  0  |  101  |  [118,110,176,160,4]  |
  1145  |                         j = j + 1;  |         |   204  |    118  |  0  |  102  |  [118,110,176,160,4]  |
  1146  |              resetPlaceHolder_2();  |         |   204  |    118  |  0  |  102  |  [118,110,176,160,4]  |
  1152  |                         R = R + 2;  |      2  |   206  |    118  |  0  |  102  |  [118,110,176,160,4]  |
  1156  |                         j = j + 1;  |         |   206  |    118  |  0  |  103  |  [118,110,176,160,4]  |
  1157  |              resetPlaceHolder_2();  |         |   206  |    118  |  0  |  103  |  [118,110,176,160,4]  |
  1163  |                         R = R + 2;  |      2  |   208  |    118  |  0  |  103  |  [118,110,176,160,4]  |
  1167  |                         j = j + 1;  |         |   208  |    118  |  0  |  104  |  [118,110,176,160,4]  |
  1168  |              resetPlaceHolder_2();  |         |   208  |    118  |  0  |  104  |  [118,110,176,160,4]  |
  1174  |                         R = R + 2;  |      2  |   210  |    118  |  0  |  104  |  [118,110,176,160,4]  |
  1178  |                         j = j + 1;  |         |   210  |    118  |  0  |  105  |  [118,110,176,160,4]  |
  1179  |              resetPlaceHolder_2();  |         |   210  |    118  |  0  |  105  |  [118,110,176,160,4]  |
  1185  |                         R = R + 2;  |      2  |   212  |    118  |  0  |  105  |  [118,110,176,160,4]  |
  1189  |                         j = j + 1;  |         |   212  |    118  |  0  |  106  |  [118,110,176,160,4]  |
  1190  |              resetPlaceHolder_2();  |         |   212  |    118  |  0  |  106  |  [118,110,176,160,4]  |
  1196  |                         R = R + 2;  |      2  |   214  |    118  |  0  |  106  |  [118,110,176,160,4]  |
  1200  |                         j = j + 1;  |         |   214  |    118  |  0  |  107  |  [118,110,176,160,4]  |
  1201  |              resetPlaceHolder_2();  |         |   214  |    118  |  0  |  107  |  [118,110,176,160,4]  |
  1207  |                         R = R + 2;  |      2  |   216  |    118  |  0  |  107  |  [118,110,176,160,4]  |
  1211  |                         j = j + 1;  |         |   216  |    118  |  0  |  108  |  [118,110,176,160,4]  |
  1212  |              resetPlaceHolder_2();  |         |   216  |    118  |  0  |  108  |  [118,110,176,160,4]  |
  1218  |                         R = R + 2;  |      2  |   218  |    118  |  0  |  108  |  [118,110,176,160,4]  |
  1222  |                         j = j + 1;  |         |   218  |    118  |  0  |  109  |  [118,110,176,160,4]  |
  1223  |              resetPlaceHolder_2();  |         |   218  |    118  |  0  |  109  |  [118,110,176,160,4]  |
  1229  |                         R = R + 2;  |      2  |   220  |    118  |  0  |  109  |  [118,110,176,160,4]  |
  1233  |                         j = j + 1;  |         |   220  |    118  |  0  |  110  |  [118,110,176,160,4]  |
  1234  |              resetPlaceHolder_2();  |         |   220  |    118  |  0  |  110  |  [118,110,176,160,4]  |
  1240  |                         R = R + 2;  |      2  |   222  |    118  |  0  |  110  |  [118,110,176,160,4]  |
  1244  |                         j = j + 1;  |         |   222  |    118  |  0  |  111  |  [118,110,176,160,4]  |
  1245  |              resetPlaceHolder_2();  |         |   222  |    118  |  0  |  111  |  [118,110,176,160,4]  |
  1251  |                         R = R + 2;  |      2  |   224  |    118  |  0  |  111  |  [118,110,176,160,4]  |
  1255  |                         j = j + 1;  |         |   224  |    118  |  0  |  112  |  [118,110,176,160,4]  |
  1256  |              resetPlaceHolder_2();  |         |   224  |    118  |  0  |  112  |  [118,110,176,160,4]  |
  1262  |                         R = R + 2;  |      2  |   226  |    118  |  0  |  112  |  [118,110,176,160,4]  |
  1266  |                         j = j + 1;  |         |   226  |    118  |  0  |  113  |  [118,110,176,160,4]  |
  1267  |              resetPlaceHolder_2();  |         |   226  |    118  |  0  |  113  |  [118,110,176,160,4]  |
  1273  |                         R = R + 2;  |      2  |   228  |    118  |  0  |  113  |  [118,110,176,160,4]  |
  1277  |                         j = j + 1;  |         |   228  |    118  |  0  |  114  |  [118,110,176,160,4]  |
  1278  |              resetPlaceHolder_2();  |         |   228  |    118  |  0  |  114  |  [118,110,176,160,4]  |
  1284  |                         R = R + 2;  |      2  |   230  |    118  |  0  |  114  |  [118,110,176,160,4]  |
  1288  |                         j = j + 1;  |         |   230  |    118  |  0  |  115  |  [118,110,176,160,4]  |
  1289  |              resetPlaceHolder_2();  |         |   230  |    118  |  0  |  115  |  [118,110,176,160,4]  |
  1295  |                         R = R + 2;  |      2  |   232  |    118  |  0  |  115  |  [118,110,176,160,4]  |
  1299  |                         j = j + 1;  |         |   232  |    118  |  0  |  116  |  [118,110,176,160,4]  |
  1300  |              resetPlaceHolder_2();  |         |   232  |    118  |  0  |  116  |  [118,110,176,160,4]  |
  1306  |                         R = R + 2;  |      2  |   234  |    118  |  0  |  116  |  [118,110,176,160,4]  |
  1310  |                         j = j + 1;  |         |   234  |    118  |  0  |  117  |  [118,110,176,160,4]  |
  1311  |              resetPlaceHolder_2();  |         |   234  |    118  |  0  |  117  |  [118,110,176,160,4]  |
  1317  |                         R = R + 2;  |      2  |   236  |    118  |  0  |  117  |  [118,110,176,160,4]  |
  1321  |                         j = j + 1;  |         |   236  |    118  |  0  |  118  |  [118,110,176,160,4]  |
  1322  |              resetPlaceHolder_2();  |         |   236  |    118  |  0  |  118  |  [118,110,176,160,4]  |
  1328  |                         R = R + 1;  |      1  |   237  |    118  |  0  |  118  |  [118,110,176,160,4]  |
  1332  |                         i = i + 1;  |         |   237  |    118  |  1  |  118  |  [118,110,176,160,4]  |
  1333  |              resetPlaceHolder_1();  |         |   237  |    118  |  1  |  118  |  [118,110,176,160,4]  |
  1339  |      entry = arrayRead(sorted, i);  |         |   237  |    110  |  1  |  118  |  [118,110,176,160,4]  |
  1341  |                         int j = 0;  |         |   237  |    110  |  1  |    0  |  [118,110,176,160,4]  |
  1347  |                         R = R + 2;  |      2  |   239  |    110  |  1  |    0  |  [118,110,176,160,4]  |
  1351  |                         j = j + 1;  |         |   239  |    110  |  1  |    1  |  [118,110,176,160,4]  |
  1352  |              resetPlaceHolder_2();  |         |   239  |    110  |  1  |    1  |  [118,110,176,160,4]  |
  1358  |                         R = R + 2;  |      2  |   241  |    110  |  1  |    1  |  [118,110,176,160,4]  |
  1362  |                         j = j + 1;  |         |   241  |    110  |  1  |    2  |  [118,110,176,160,4]  |
  1363  |              resetPlaceHolder_2();  |         |   241  |    110  |  1  |    2  |  [118,110,176,160,4]  |
  1369  |                         R = R + 2;  |      2  |   243  |    110  |  1  |    2  |  [118,110,176,160,4]  |
  1373  |                         j = j + 1;  |         |   243  |    110  |  1  |    3  |  [118,110,176,160,4]  |
  1374  |              resetPlaceHolder_2();  |         |   243  |    110  |  1  |    3  |  [118,110,176,160,4]  |
  1380  |                         R = R + 2;  |      2  |   245  |    110  |  1  |    3  |  [118,110,176,160,4]  |
  1384  |                         j = j + 1;  |         |   245  |    110  |  1  |    4  |  [118,110,176,160,4]  |
  1385  |              resetPlaceHolder_2();  |         |   245  |    110  |  1  |    4  |  [118,110,176,160,4]  |
  1391  |                         R = R + 2;  |      2  |   247  |    110  |  1  |    4  |  [118,110,176,160,4]  |
  1395  |                         j = j + 1;  |         |   247  |    110  |  1  |    5  |  [118,110,176,160,4]  |
  1396  |              resetPlaceHolder_2();  |         |   247  |    110  |  1  |    5  |  [118,110,176,160,4]  |
  1402  |                         R = R + 2;  |      2  |   249  |    110  |  1  |    5  |  [118,110,176,160,4]  |
  1406  |                         j = j + 1;  |         |   249  |    110  |  1  |    6  |  [118,110,176,160,4]  |
  1407  |              resetPlaceHolder_2();  |         |   249  |    110  |  1  |    6  |  [118,110,176,160,4]  |
  1413  |                         R = R + 2;  |      2  |   251  |    110  |  1  |    6  |  [118,110,176,160,4]  |
  1417  |                         j = j + 1;  |         |   251  |    110  |  1  |    7  |  [118,110,176,160,4]  |
  1418  |              resetPlaceHolder_2();  |         |   251  |    110  |  1  |    7  |  [118,110,176,160,4]  |
  1424  |                         R = R + 2;  |      2  |   253  |    110  |  1  |    7  |  [118,110,176,160,4]  |
  1428  |                         j = j + 1;  |         |   253  |    110  |  1  |    8  |  [118,110,176,160,4]  |
  1429  |              resetPlaceHolder_2();  |         |   253  |    110  |  1  |    8  |  [118,110,176,160,4]  |
  1435  |                         R = R + 2;  |      2  |   255  |    110  |  1  |    8  |  [118,110,176,160,4]  |
  1439  |                         j = j + 1;  |         |   255  |    110  |  1  |    9  |  [118,110,176,160,4]  |
  1440  |              resetPlaceHolder_2();  |         |   255  |    110  |  1  |    9  |  [118,110,176,160,4]  |
  1446  |                         R = R + 2;  |      2  |   257  |    110  |  1  |    9  |  [118,110,176,160,4]  |
  1450  |                         j = j + 1;  |         |   257  |    110  |  1  |   10  |  [118,110,176,160,4]  |
  1451  |              resetPlaceHolder_2();  |         |   257  |    110  |  1  |   10  |  [118,110,176,160,4]  |
  1457  |                         R = R + 2;  |      2  |   259  |    110  |  1  |   10  |  [118,110,176,160,4]  |
  1461  |                         j = j + 1;  |         |   259  |    110  |  1  |   11  |  [118,110,176,160,4]  |
  1462  |              resetPlaceHolder_2();  |         |   259  |    110  |  1  |   11  |  [118,110,176,160,4]  |
  1468  |                         R = R + 2;  |      2  |   261  |    110  |  1  |   11  |  [118,110,176,160,4]  |
  1472  |                         j = j + 1;  |         |   261  |    110  |  1  |   12  |  [118,110,176,160,4]  |
  1473  |              resetPlaceHolder_2();  |         |   261  |    110  |  1  |   12  |  [118,110,176,160,4]  |
  1479  |                         R = R + 2;  |      2  |   263  |    110  |  1  |   12  |  [118,110,176,160,4]  |
  1483  |                         j = j + 1;  |         |   263  |    110  |  1  |   13  |  [118,110,176,160,4]  |
  1484  |              resetPlaceHolder_2();  |         |   263  |    110  |  1  |   13  |  [118,110,176,160,4]  |
  1490  |                         R = R + 2;  |      2  |   265  |    110  |  1  |   13  |  [118,110,176,160,4]  |
  1494  |                         j = j + 1;  |         |   265  |    110  |  1  |   14  |  [118,110,176,160,4]  |
  1495  |              resetPlaceHolder_2();  |         |   265  |    110  |  1  |   14  |  [118,110,176,160,4]  |
  1501  |                         R = R + 2;  |      2  |   267  |    110  |  1  |   14  |  [118,110,176,160,4]  |
  1505  |                         j = j + 1;  |         |   267  |    110  |  1  |   15  |  [118,110,176,160,4]  |
  1506  |              resetPlaceHolder_2();  |         |   267  |    110  |  1  |   15  |  [118,110,176,160,4]  |
  1512  |                         R = R + 2;  |      2  |   269  |    110  |  1  |   15  |  [118,110,176,160,4]  |
  1516  |                         j = j + 1;  |         |   269  |    110  |  1  |   16  |  [118,110,176,160,4]  |
  1517  |              resetPlaceHolder_2();  |         |   269  |    110  |  1  |   16  |  [118,110,176,160,4]  |
  1523  |                         R = R + 2;  |      2  |   271  |    110  |  1  |   16  |  [118,110,176,160,4]  |
  1527  |                         j = j + 1;  |         |   271  |    110  |  1  |   17  |  [118,110,176,160,4]  |
  1528  |              resetPlaceHolder_2();  |         |   271  |    110  |  1  |   17  |  [118,110,176,160,4]  |
  1534  |                         R = R + 2;  |      2  |   273  |    110  |  1  |   17  |  [118,110,176,160,4]  |
  1538  |                         j = j + 1;  |         |   273  |    110  |  1  |   18  |  [118,110,176,160,4]  |
  1539  |              resetPlaceHolder_2();  |         |   273  |    110  |  1  |   18  |  [118,110,176,160,4]  |
  1545  |                         R = R + 2;  |      2  |   275  |    110  |  1  |   18  |  [118,110,176,160,4]  |
  1549  |                         j = j + 1;  |         |   275  |    110  |  1  |   19  |  [118,110,176,160,4]  |
  1550  |              resetPlaceHolder_2();  |         |   275  |    110  |  1  |   19  |  [118,110,176,160,4]  |
  1556  |                         R = R + 2;  |      2  |   277  |    110  |  1  |   19  |  [118,110,176,160,4]  |
  1560  |                         j = j + 1;  |         |   277  |    110  |  1  |   20  |  [118,110,176,160,4]  |
  1561  |              resetPlaceHolder_2();  |         |   277  |    110  |  1  |   20  |  [118,110,176,160,4]  |
  1567  |                         R = R + 2;  |      2  |   279  |    110  |  1  |   20  |  [118,110,176,160,4]  |
  1571  |                         j = j + 1;  |         |   279  |    110  |  1  |   21  |  [118,110,176,160,4]  |
  1572  |              resetPlaceHolder_2();  |         |   279  |    110  |  1  |   21  |  [118,110,176,160,4]  |
  1578  |                         R = R + 2;  |      2  |   281  |    110  |  1  |   21  |  [118,110,176,160,4]  |
  1582  |                         j = j + 1;  |         |   281  |    110  |  1  |   22  |  [118,110,176,160,4]  |
  1583  |              resetPlaceHolder_2();  |         |   281  |    110  |  1  |   22  |  [118,110,176,160,4]  |
  1589  |                         R = R + 2;  |      2  |   283  |    110  |  1  |   22  |  [118,110,176,160,4]  |
  1593  |                         j = j + 1;  |         |   283  |    110  |  1  |   23  |  [118,110,176,160,4]  |
  1594  |              resetPlaceHolder_2();  |         |   283  |    110  |  1  |   23  |  [118,110,176,160,4]  |
  1600  |                         R = R + 2;  |      2  |   285  |    110  |  1  |   23  |  [118,110,176,160,4]  |
  1604  |                         j = j + 1;  |         |   285  |    110  |  1  |   24  |  [118,110,176,160,4]  |
  1605  |              resetPlaceHolder_2();  |         |   285  |    110  |  1  |   24  |  [118,110,176,160,4]  |
  1611  |                         R = R + 2;  |      2  |   287  |    110  |  1  |   24  |  [118,110,176,160,4]  |
  1615  |                         j = j + 1;  |         |   287  |    110  |  1  |   25  |  [118,110,176,160,4]  |
  1616  |              resetPlaceHolder_2();  |         |   287  |    110  |  1  |   25  |  [118,110,176,160,4]  |
  1622  |                         R = R + 2;  |      2  |   289  |    110  |  1  |   25  |  [118,110,176,160,4]  |
  1626  |                         j = j + 1;  |         |   289  |    110  |  1  |   26  |  [118,110,176,160,4]  |
  1627  |              resetPlaceHolder_2();  |         |   289  |    110  |  1  |   26  |  [118,110,176,160,4]  |
  1633  |                         R = R + 2;  |      2  |   291  |    110  |  1  |   26  |  [118,110,176,160,4]  |
  1637  |                         j = j + 1;  |         |   291  |    110  |  1  |   27  |  [118,110,176,160,4]  |
  1638  |              resetPlaceHolder_2();  |         |   291  |    110  |  1  |   27  |  [118,110,176,160,4]  |
  1644  |                         R = R + 2;  |      2  |   293  |    110  |  1  |   27  |  [118,110,176,160,4]  |
  1648  |                         j = j + 1;  |         |   293  |    110  |  1  |   28  |  [118,110,176,160,4]  |
  1649  |              resetPlaceHolder_2();  |         |   293  |    110  |  1  |   28  |  [118,110,176,160,4]  |
  1655  |                         R = R + 2;  |      2  |   295  |    110  |  1  |   28  |  [118,110,176,160,4]  |
  1659  |                         j = j + 1;  |         |   295  |    110  |  1  |   29  |  [118,110,176,160,4]  |
  1660  |              resetPlaceHolder_2();  |         |   295  |    110  |  1  |   29  |  [118,110,176,160,4]  |
  1666  |                         R = R + 2;  |      2  |   297  |    110  |  1  |   29  |  [118,110,176,160,4]  |
  1670  |                         j = j + 1;  |         |   297  |    110  |  1  |   30  |  [118,110,176,160,4]  |
  1671  |              resetPlaceHolder_2();  |         |   297  |    110  |  1  |   30  |  [118,110,176,160,4]  |
  1677  |                         R = R + 2;  |      2  |   299  |    110  |  1  |   30  |  [118,110,176,160,4]  |
  1681  |                         j = j + 1;  |         |   299  |    110  |  1  |   31  |  [118,110,176,160,4]  |
  1682  |              resetPlaceHolder_2();  |         |   299  |    110  |  1  |   31  |  [118,110,176,160,4]  |
  1688  |                         R = R + 2;  |      2  |   301  |    110  |  1  |   31  |  [118,110,176,160,4]  |
  1692  |                         j = j + 1;  |         |   301  |    110  |  1  |   32  |  [118,110,176,160,4]  |
  1693  |              resetPlaceHolder_2();  |         |   301  |    110  |  1  |   32  |  [118,110,176,160,4]  |
  1699  |                         R = R + 2;  |      2  |   303  |    110  |  1  |   32  |  [118,110,176,160,4]  |
  1703  |                         j = j + 1;  |         |   303  |    110  |  1  |   33  |  [118,110,176,160,4]  |
  1704  |              resetPlaceHolder_2();  |         |   303  |    110  |  1  |   33  |  [118,110,176,160,4]  |
  1710  |                         R = R + 2;  |      2  |   305  |    110  |  1  |   33  |  [118,110,176,160,4]  |
  1714  |                         j = j + 1;  |         |   305  |    110  |  1  |   34  |  [118,110,176,160,4]  |
  1715  |              resetPlaceHolder_2();  |         |   305  |    110  |  1  |   34  |  [118,110,176,160,4]  |
  1721  |                         R = R + 2;  |      2  |   307  |    110  |  1  |   34  |  [118,110,176,160,4]  |
  1725  |                         j = j + 1;  |         |   307  |    110  |  1  |   35  |  [118,110,176,160,4]  |
  1726  |              resetPlaceHolder_2();  |         |   307  |    110  |  1  |   35  |  [118,110,176,160,4]  |
  1732  |                         R = R + 2;  |      2  |   309  |    110  |  1  |   35  |  [118,110,176,160,4]  |
  1736  |                         j = j + 1;  |         |   309  |    110  |  1  |   36  |  [118,110,176,160,4]  |
  1737  |              resetPlaceHolder_2();  |         |   309  |    110  |  1  |   36  |  [118,110,176,160,4]  |
  1743  |                         R = R + 2;  |      2  |   311  |    110  |  1  |   36  |  [118,110,176,160,4]  |
  1747  |                         j = j + 1;  |         |   311  |    110  |  1  |   37  |  [118,110,176,160,4]  |
  1748  |              resetPlaceHolder_2();  |         |   311  |    110  |  1  |   37  |  [118,110,176,160,4]  |
  1754  |                         R = R + 2;  |      2  |   313  |    110  |  1  |   37  |  [118,110,176,160,4]  |
  1758  |                         j = j + 1;  |         |   313  |    110  |  1  |   38  |  [118,110,176,160,4]  |
  1759  |              resetPlaceHolder_2();  |         |   313  |    110  |  1  |   38  |  [118,110,176,160,4]  |
  1765  |                         R = R + 2;  |      2  |   315  |    110  |  1  |   38  |  [118,110,176,160,4]  |
  1769  |                         j = j + 1;  |         |   315  |    110  |  1  |   39  |  [118,110,176,160,4]  |
  1770  |              resetPlaceHolder_2();  |         |   315  |    110  |  1  |   39  |  [118,110,176,160,4]  |
  1776  |                         R = R + 2;  |      2  |   317  |    110  |  1  |   39  |  [118,110,176,160,4]  |
  1780  |                         j = j + 1;  |         |   317  |    110  |  1  |   40  |  [118,110,176,160,4]  |
  1781  |              resetPlaceHolder_2();  |         |   317  |    110  |  1  |   40  |  [118,110,176,160,4]  |
  1787  |                         R = R + 2;  |      2  |   319  |    110  |  1  |   40  |  [118,110,176,160,4]  |
  1791  |                         j = j + 1;  |         |   319  |    110  |  1  |   41  |  [118,110,176,160,4]  |
  1792  |              resetPlaceHolder_2();  |         |   319  |    110  |  1  |   41  |  [118,110,176,160,4]  |
  1798  |                         R = R + 2;  |      2  |   321  |    110  |  1  |   41  |  [118,110,176,160,4]  |
  1802  |                         j = j + 1;  |         |   321  |    110  |  1  |   42  |  [118,110,176,160,4]  |
  1803  |              resetPlaceHolder_2();  |         |   321  |    110  |  1  |   42  |  [118,110,176,160,4]  |
  1809  |                         R = R + 2;  |      2  |   323  |    110  |  1  |   42  |  [118,110,176,160,4]  |
  1813  |                         j = j + 1;  |         |   323  |    110  |  1  |   43  |  [118,110,176,160,4]  |
  1814  |              resetPlaceHolder_2();  |         |   323  |    110  |  1  |   43  |  [118,110,176,160,4]  |
  1820  |                         R = R + 2;  |      2  |   325  |    110  |  1  |   43  |  [118,110,176,160,4]  |
  1824  |                         j = j + 1;  |         |   325  |    110  |  1  |   44  |  [118,110,176,160,4]  |
  1825  |              resetPlaceHolder_2();  |         |   325  |    110  |  1  |   44  |  [118,110,176,160,4]  |
  1831  |                         R = R + 2;  |      2  |   327  |    110  |  1  |   44  |  [118,110,176,160,4]  |
  1835  |                         j = j + 1;  |         |   327  |    110  |  1  |   45  |  [118,110,176,160,4]  |
  1836  |              resetPlaceHolder_2();  |         |   327  |    110  |  1  |   45  |  [118,110,176,160,4]  |
  1842  |                         R = R + 2;  |      2  |   329  |    110  |  1  |   45  |  [118,110,176,160,4]  |
  1846  |                         j = j + 1;  |         |   329  |    110  |  1  |   46  |  [118,110,176,160,4]  |
  1847  |              resetPlaceHolder_2();  |         |   329  |    110  |  1  |   46  |  [118,110,176,160,4]  |
  1853  |                         R = R + 2;  |      2  |   331  |    110  |  1  |   46  |  [118,110,176,160,4]  |
  1857  |                         j = j + 1;  |         |   331  |    110  |  1  |   47  |  [118,110,176,160,4]  |
  1858  |              resetPlaceHolder_2();  |         |   331  |    110  |  1  |   47  |  [118,110,176,160,4]  |
  1864  |                         R = R + 2;  |      2  |   333  |    110  |  1  |   47  |  [118,110,176,160,4]  |
  1868  |                         j = j + 1;  |         |   333  |    110  |  1  |   48  |  [118,110,176,160,4]  |
  1869  |              resetPlaceHolder_2();  |         |   333  |    110  |  1  |   48  |  [118,110,176,160,4]  |
  1875  |                         R = R + 2;  |      2  |   335  |    110  |  1  |   48  |  [118,110,176,160,4]  |
  1879  |                         j = j + 1;  |         |   335  |    110  |  1  |   49  |  [118,110,176,160,4]  |
  1880  |              resetPlaceHolder_2();  |         |   335  |    110  |  1  |   49  |  [118,110,176,160,4]  |
  1886  |                         R = R + 2;  |      2  |   337  |    110  |  1  |   49  |  [118,110,176,160,4]  |
  1890  |                         j = j + 1;  |         |   337  |    110  |  1  |   50  |  [118,110,176,160,4]  |
  1891  |              resetPlaceHolder_2();  |         |   337  |    110  |  1  |   50  |  [118,110,176,160,4]  |
  1897  |                         R = R + 2;  |      2  |   339  |    110  |  1  |   50  |  [118,110,176,160,4]  |
  1901  |                         j = j + 1;  |         |   339  |    110  |  1  |   51  |  [118,110,176,160,4]  |
  1902  |              resetPlaceHolder_2();  |         |   339  |    110  |  1  |   51  |  [118,110,176,160,4]  |
  1908  |                         R = R + 2;  |      2  |   341  |    110  |  1  |   51  |  [118,110,176,160,4]  |
  1912  |                         j = j + 1;  |         |   341  |    110  |  1  |   52  |  [118,110,176,160,4]  |
  1913  |              resetPlaceHolder_2();  |         |   341  |    110  |  1  |   52  |  [118,110,176,160,4]  |
  1919  |                         R = R + 2;  |      2  |   343  |    110  |  1  |   52  |  [118,110,176,160,4]  |
  1923  |                         j = j + 1;  |         |   343  |    110  |  1  |   53  |  [118,110,176,160,4]  |
  1924  |              resetPlaceHolder_2();  |         |   343  |    110  |  1  |   53  |  [118,110,176,160,4]  |
  1930  |                         R = R + 2;  |      2  |   345  |    110  |  1  |   53  |  [118,110,176,160,4]  |
  1934  |                         j = j + 1;  |         |   345  |    110  |  1  |   54  |  [118,110,176,160,4]  |
  1935  |              resetPlaceHolder_2();  |         |   345  |    110  |  1  |   54  |  [118,110,176,160,4]  |
  1941  |                         R = R + 2;  |      2  |   347  |    110  |  1  |   54  |  [118,110,176,160,4]  |
  1945  |                         j = j + 1;  |         |   347  |    110  |  1  |   55  |  [118,110,176,160,4]  |
  1946  |              resetPlaceHolder_2();  |         |   347  |    110  |  1  |   55  |  [118,110,176,160,4]  |
  1952  |                         R = R + 2;  |      2  |   349  |    110  |  1  |   55  |  [118,110,176,160,4]  |
  1956  |                         j = j + 1;  |         |   349  |    110  |  1  |   56  |  [118,110,176,160,4]  |
  1957  |              resetPlaceHolder_2();  |         |   349  |    110  |  1  |   56  |  [118,110,176,160,4]  |
  1963  |                         R = R + 2;  |      2  |   351  |    110  |  1  |   56  |  [118,110,176,160,4]  |
  1967  |                         j = j + 1;  |         |   351  |    110  |  1  |   57  |  [118,110,176,160,4]  |
  1968  |              resetPlaceHolder_2();  |         |   351  |    110  |  1  |   57  |  [118,110,176,160,4]  |
  1974  |                         R = R + 2;  |      2  |   353  |    110  |  1  |   57  |  [118,110,176,160,4]  |
  1978  |                         j = j + 1;  |         |   353  |    110  |  1  |   58  |  [118,110,176,160,4]  |
  1979  |              resetPlaceHolder_2();  |         |   353  |    110  |  1  |   58  |  [118,110,176,160,4]  |
  1985  |                         R = R + 2;  |      2  |   355  |    110  |  1  |   58  |  [118,110,176,160,4]  |
  1989  |                         j = j + 1;  |         |   355  |    110  |  1  |   59  |  [118,110,176,160,4]  |
  1990  |              resetPlaceHolder_2();  |         |   355  |    110  |  1  |   59  |  [118,110,176,160,4]  |
  1996  |                         R = R + 2;  |      2  |   357  |    110  |  1  |   59  |  [118,110,176,160,4]  |
  2000  |                         j = j + 1;  |         |   357  |    110  |  1  |   60  |  [118,110,176,160,4]  |
  2001  |              resetPlaceHolder_2();  |         |   357  |    110  |  1  |   60  |  [118,110,176,160,4]  |
  2007  |                         R = R + 2;  |      2  |   359  |    110  |  1  |   60  |  [118,110,176,160,4]  |
  2011  |                         j = j + 1;  |         |   359  |    110  |  1  |   61  |  [118,110,176,160,4]  |
  2012  |              resetPlaceHolder_2();  |         |   359  |    110  |  1  |   61  |  [118,110,176,160,4]  |
  2018  |                         R = R + 2;  |      2  |   361  |    110  |  1  |   61  |  [118,110,176,160,4]  |
  2022  |                         j = j + 1;  |         |   361  |    110  |  1  |   62  |  [118,110,176,160,4]  |
  2023  |              resetPlaceHolder_2();  |         |   361  |    110  |  1  |   62  |  [118,110,176,160,4]  |
  2029  |                         R = R + 2;  |      2  |   363  |    110  |  1  |   62  |  [118,110,176,160,4]  |
  2033  |                         j = j + 1;  |         |   363  |    110  |  1  |   63  |  [118,110,176,160,4]  |
  2034  |              resetPlaceHolder_2();  |         |   363  |    110  |  1  |   63  |  [118,110,176,160,4]  |
  2040  |                         R = R + 2;  |      2  |   365  |    110  |  1  |   63  |  [118,110,176,160,4]  |
  2044  |                         j = j + 1;  |         |   365  |    110  |  1  |   64  |  [118,110,176,160,4]  |
  2045  |              resetPlaceHolder_2();  |         |   365  |    110  |  1  |   64  |  [118,110,176,160,4]  |
  2051  |                         R = R + 2;  |      2  |   367  |    110  |  1  |   64  |  [118,110,176,160,4]  |
  2055  |                         j = j + 1;  |         |   367  |    110  |  1  |   65  |  [118,110,176,160,4]  |
  2056  |              resetPlaceHolder_2();  |         |   367  |    110  |  1  |   65  |  [118,110,176,160,4]  |
  2062  |                         R = R + 2;  |      2  |   369  |    110  |  1  |   65  |  [118,110,176,160,4]  |
  2066  |                         j = j + 1;  |         |   369  |    110  |  1  |   66  |  [118,110,176,160,4]  |
  2067  |              resetPlaceHolder_2();  |         |   369  |    110  |  1  |   66  |  [118,110,176,160,4]  |
  2073  |                         R = R + 2;  |      2  |   371  |    110  |  1  |   66  |  [118,110,176,160,4]  |
  2077  |                         j = j + 1;  |         |   371  |    110  |  1  |   67  |  [118,110,176,160,4]  |
  2078  |              resetPlaceHolder_2();  |         |   371  |    110  |  1  |   67  |  [118,110,176,160,4]  |
  2084  |                         R = R + 2;  |      2  |   373  |    110  |  1  |   67  |  [118,110,176,160,4]  |
  2088  |                         j = j + 1;  |         |   373  |    110  |  1  |   68  |  [118,110,176,160,4]  |
  2089  |              resetPlaceHolder_2();  |         |   373  |    110  |  1  |   68  |  [118,110,176,160,4]  |
  2095  |                         R = R + 2;  |      2  |   375  |    110  |  1  |   68  |  [118,110,176,160,4]  |
  2099  |                         j = j + 1;  |         |   375  |    110  |  1  |   69  |  [118,110,176,160,4]  |
  2100  |              resetPlaceHolder_2();  |         |   375  |    110  |  1  |   69  |  [118,110,176,160,4]  |
  2106  |                         R = R + 2;  |      2  |   377  |    110  |  1  |   69  |  [118,110,176,160,4]  |
  2110  |                         j = j + 1;  |         |   377  |    110  |  1  |   70  |  [118,110,176,160,4]  |
  2111  |              resetPlaceHolder_2();  |         |   377  |    110  |  1  |   70  |  [118,110,176,160,4]  |
  2117  |                         R = R + 2;  |      2  |   379  |    110  |  1  |   70  |  [118,110,176,160,4]  |
  2121  |                         j = j + 1;  |         |   379  |    110  |  1  |   71  |  [118,110,176,160,4]  |
  2122  |              resetPlaceHolder_2();  |         |   379  |    110  |  1  |   71  |  [118,110,176,160,4]  |
  2128  |                         R = R + 2;  |      2  |   381  |    110  |  1  |   71  |  [118,110,176,160,4]  |
  2132  |                         j = j + 1;  |         |   381  |    110  |  1  |   72  |  [118,110,176,160,4]  |
  2133  |              resetPlaceHolder_2();  |         |   381  |    110  |  1  |   72  |  [118,110,176,160,4]  |
  2139  |                         R = R + 2;  |      2  |   383  |    110  |  1  |   72  |  [118,110,176,160,4]  |
  2143  |                         j = j + 1;  |         |   383  |    110  |  1  |   73  |  [118,110,176,160,4]  |
  2144  |              resetPlaceHolder_2();  |         |   383  |    110  |  1  |   73  |  [118,110,176,160,4]  |
  2150  |                         R = R + 2;  |      2  |   385  |    110  |  1  |   73  |  [118,110,176,160,4]  |
  2154  |                         j = j + 1;  |         |   385  |    110  |  1  |   74  |  [118,110,176,160,4]  |
  2155  |              resetPlaceHolder_2();  |         |   385  |    110  |  1  |   74  |  [118,110,176,160,4]  |
  2161  |                         R = R + 2;  |      2  |   387  |    110  |  1  |   74  |  [118,110,176,160,4]  |
  2165  |                         j = j + 1;  |         |   387  |    110  |  1  |   75  |  [118,110,176,160,4]  |
  2166  |              resetPlaceHolder_2();  |         |   387  |    110  |  1  |   75  |  [118,110,176,160,4]  |
  2172  |                         R = R + 2;  |      2  |   389  |    110  |  1  |   75  |  [118,110,176,160,4]  |
  2176  |                         j = j + 1;  |         |   389  |    110  |  1  |   76  |  [118,110,176,160,4]  |
  2177  |              resetPlaceHolder_2();  |         |   389  |    110  |  1  |   76  |  [118,110,176,160,4]  |
  2183  |                         R = R + 2;  |      2  |   391  |    110  |  1  |   76  |  [118,110,176,160,4]  |
  2187  |                         j = j + 1;  |         |   391  |    110  |  1  |   77  |  [118,110,176,160,4]  |
  2188  |              resetPlaceHolder_2();  |         |   391  |    110  |  1  |   77  |  [118,110,176,160,4]  |
  2194  |                         R = R + 2;  |      2  |   393  |    110  |  1  |   77  |  [118,110,176,160,4]  |
  2198  |                         j = j + 1;  |         |   393  |    110  |  1  |   78  |  [118,110,176,160,4]  |
  2199  |              resetPlaceHolder_2();  |         |   393  |    110  |  1  |   78  |  [118,110,176,160,4]  |
  2205  |                         R = R + 2;  |      2  |   395  |    110  |  1  |   78  |  [118,110,176,160,4]  |
  2209  |                         j = j + 1;  |         |   395  |    110  |  1  |   79  |  [118,110,176,160,4]  |
  2210  |              resetPlaceHolder_2();  |         |   395  |    110  |  1  |   79  |  [118,110,176,160,4]  |
  2216  |                         R = R + 2;  |      2  |   397  |    110  |  1  |   79  |  [118,110,176,160,4]  |
  2220  |                         j = j + 1;  |         |   397  |    110  |  1  |   80  |  [118,110,176,160,4]  |
  2221  |              resetPlaceHolder_2();  |         |   397  |    110  |  1  |   80  |  [118,110,176,160,4]  |
  2227  |                         R = R + 2;  |      2  |   399  |    110  |  1  |   80  |  [118,110,176,160,4]  |
  2231  |                         j = j + 1;  |         |   399  |    110  |  1  |   81  |  [118,110,176,160,4]  |
  2232  |              resetPlaceHolder_2();  |         |   399  |    110  |  1  |   81  |  [118,110,176,160,4]  |
  2238  |                         R = R + 2;  |      2  |   401  |    110  |  1  |   81  |  [118,110,176,160,4]  |
  2242  |                         j = j + 1;  |         |   401  |    110  |  1  |   82  |  [118,110,176,160,4]  |
  2243  |              resetPlaceHolder_2();  |         |   401  |    110  |  1  |   82  |  [118,110,176,160,4]  |
  2249  |                         R = R + 2;  |      2  |   403  |    110  |  1  |   82  |  [118,110,176,160,4]  |
  2253  |                         j = j + 1;  |         |   403  |    110  |  1  |   83  |  [118,110,176,160,4]  |
  2254  |              resetPlaceHolder_2();  |         |   403  |    110  |  1  |   83  |  [118,110,176,160,4]  |
  2260  |                         R = R + 2;  |      2  |   405  |    110  |  1  |   83  |  [118,110,176,160,4]  |
  2264  |                         j = j + 1;  |         |   405  |    110  |  1  |   84  |  [118,110,176,160,4]  |
  2265  |              resetPlaceHolder_2();  |         |   405  |    110  |  1  |   84  |  [118,110,176,160,4]  |
  2271  |                         R = R + 2;  |      2  |   407  |    110  |  1  |   84  |  [118,110,176,160,4]  |
  2275  |                         j = j + 1;  |         |   407  |    110  |  1  |   85  |  [118,110,176,160,4]  |
  2276  |              resetPlaceHolder_2();  |         |   407  |    110  |  1  |   85  |  [118,110,176,160,4]  |
  2282  |                         R = R + 2;  |      2  |   409  |    110  |  1  |   85  |  [118,110,176,160,4]  |
  2286  |                         j = j + 1;  |         |   409  |    110  |  1  |   86  |  [118,110,176,160,4]  |
  2287  |              resetPlaceHolder_2();  |         |   409  |    110  |  1  |   86  |  [118,110,176,160,4]  |
  2293  |                         R = R + 2;  |      2  |   411  |    110  |  1  |   86  |  [118,110,176,160,4]  |
  2297  |                         j = j + 1;  |         |   411  |    110  |  1  |   87  |  [118,110,176,160,4]  |
  2298  |              resetPlaceHolder_2();  |         |   411  |    110  |  1  |   87  |  [118,110,176,160,4]  |
  2304  |                         R = R + 2;  |      2  |   413  |    110  |  1  |   87  |  [118,110,176,160,4]  |
  2308  |                         j = j + 1;  |         |   413  |    110  |  1  |   88  |  [118,110,176,160,4]  |
  2309  |              resetPlaceHolder_2();  |         |   413  |    110  |  1  |   88  |  [118,110,176,160,4]  |
  2315  |                         R = R + 2;  |      2  |   415  |    110  |  1  |   88  |  [118,110,176,160,4]  |
  2319  |                         j = j + 1;  |         |   415  |    110  |  1  |   89  |  [118,110,176,160,4]  |
  2320  |              resetPlaceHolder_2();  |         |   415  |    110  |  1  |   89  |  [118,110,176,160,4]  |
  2326  |                         R = R + 2;  |      2  |   417  |    110  |  1  |   89  |  [118,110,176,160,4]  |
  2330  |                         j = j + 1;  |         |   417  |    110  |  1  |   90  |  [118,110,176,160,4]  |
  2331  |              resetPlaceHolder_2();  |         |   417  |    110  |  1  |   90  |  [118,110,176,160,4]  |
  2337  |                         R = R + 2;  |      2  |   419  |    110  |  1  |   90  |  [118,110,176,160,4]  |
  2341  |                         j = j + 1;  |         |   419  |    110  |  1  |   91  |  [118,110,176,160,4]  |
  2342  |              resetPlaceHolder_2();  |         |   419  |    110  |  1  |   91  |  [118,110,176,160,4]  |
  2348  |                         R = R + 2;  |      2  |   421  |    110  |  1  |   91  |  [118,110,176,160,4]  |
  2352  |                         j = j + 1;  |         |   421  |    110  |  1  |   92  |  [118,110,176,160,4]  |
  2353  |              resetPlaceHolder_2();  |         |   421  |    110  |  1  |   92  |  [118,110,176,160,4]  |
  2359  |                         R = R + 2;  |      2  |   423  |    110  |  1  |   92  |  [118,110,176,160,4]  |
  2363  |                         j = j + 1;  |         |   423  |    110  |  1  |   93  |  [118,110,176,160,4]  |
  2364  |              resetPlaceHolder_2();  |         |   423  |    110  |  1  |   93  |  [118,110,176,160,4]  |
  2370  |                         R = R + 2;  |      2  |   425  |    110  |  1  |   93  |  [118,110,176,160,4]  |
  2374  |                         j = j + 1;  |         |   425  |    110  |  1  |   94  |  [118,110,176,160,4]  |
  2375  |              resetPlaceHolder_2();  |         |   425  |    110  |  1  |   94  |  [118,110,176,160,4]  |
  2381  |                         R = R + 2;  |      2  |   427  |    110  |  1  |   94  |  [118,110,176,160,4]  |
  2385  |                         j = j + 1;  |         |   427  |    110  |  1  |   95  |  [118,110,176,160,4]  |
  2386  |              resetPlaceHolder_2();  |         |   427  |    110  |  1  |   95  |  [118,110,176,160,4]  |
  2392  |                         R = R + 2;  |      2  |   429  |    110  |  1  |   95  |  [118,110,176,160,4]  |
  2396  |                         j = j + 1;  |         |   429  |    110  |  1  |   96  |  [118,110,176,160,4]  |
  2397  |              resetPlaceHolder_2();  |         |   429  |    110  |  1  |   96  |  [118,110,176,160,4]  |
  2403  |                         R = R + 2;  |      2  |   431  |    110  |  1  |   96  |  [118,110,176,160,4]  |
  2407  |                         j = j + 1;  |         |   431  |    110  |  1  |   97  |  [118,110,176,160,4]  |
  2408  |              resetPlaceHolder_2();  |         |   431  |    110  |  1  |   97  |  [118,110,176,160,4]  |
  2414  |                         R = R + 2;  |      2  |   433  |    110  |  1  |   97  |  [118,110,176,160,4]  |
  2418  |                         j = j + 1;  |         |   433  |    110  |  1  |   98  |  [118,110,176,160,4]  |
  2419  |              resetPlaceHolder_2();  |         |   433  |    110  |  1  |   98  |  [118,110,176,160,4]  |
  2425  |                         R = R + 2;  |      2  |   435  |    110  |  1  |   98  |  [118,110,176,160,4]  |
  2429  |                         j = j + 1;  |         |   435  |    110  |  1  |   99  |  [118,110,176,160,4]  |
  2430  |              resetPlaceHolder_2();  |         |   435  |    110  |  1  |   99  |  [118,110,176,160,4]  |
  2436  |                         R = R + 2;  |      2  |   437  |    110  |  1  |   99  |  [118,110,176,160,4]  |
  2440  |                         j = j + 1;  |         |   437  |    110  |  1  |  100  |  [118,110,176,160,4]  |
  2441  |              resetPlaceHolder_2();  |         |   437  |    110  |  1  |  100  |  [118,110,176,160,4]  |
  2447  |                         R = R + 2;  |      2  |   439  |    110  |  1  |  100  |  [118,110,176,160,4]  |
  2451  |                         j = j + 1;  |         |   439  |    110  |  1  |  101  |  [118,110,176,160,4]  |
  2452  |              resetPlaceHolder_2();  |         |   439  |    110  |  1  |  101  |  [118,110,176,160,4]  |
  2458  |                         R = R + 2;  |      2  |   441  |    110  |  1  |  101  |  [118,110,176,160,4]  |
  2462  |                         j = j + 1;  |         |   441  |    110  |  1  |  102  |  [118,110,176,160,4]  |
  2463  |              resetPlaceHolder_2();  |         |   441  |    110  |  1  |  102  |  [118,110,176,160,4]  |
  2469  |                         R = R + 2;  |      2  |   443  |    110  |  1  |  102  |  [118,110,176,160,4]  |
  2473  |                         j = j + 1;  |         |   443  |    110  |  1  |  103  |  [118,110,176,160,4]  |
  2474  |              resetPlaceHolder_2();  |         |   443  |    110  |  1  |  103  |  [118,110,176,160,4]  |
  2480  |                         R = R + 2;  |      2  |   445  |    110  |  1  |  103  |  [118,110,176,160,4]  |
  2484  |                         j = j + 1;  |         |   445  |    110  |  1  |  104  |  [118,110,176,160,4]  |
  2485  |              resetPlaceHolder_2();  |         |   445  |    110  |  1  |  104  |  [118,110,176,160,4]  |
  2491  |                         R = R + 2;  |      2  |   447  |    110  |  1  |  104  |  [118,110,176,160,4]  |
  2495  |                         j = j + 1;  |         |   447  |    110  |  1  |  105  |  [118,110,176,160,4]  |
  2496  |              resetPlaceHolder_2();  |         |   447  |    110  |  1  |  105  |  [118,110,176,160,4]  |
  2502  |                         R = R + 2;  |      2  |   449  |    110  |  1  |  105  |  [118,110,176,160,4]  |
  2506  |                         j = j + 1;  |         |   449  |    110  |  1  |  106  |  [118,110,176,160,4]  |
  2507  |              resetPlaceHolder_2();  |         |   449  |    110  |  1  |  106  |  [118,110,176,160,4]  |
  2513  |                         R = R + 2;  |      2  |   451  |    110  |  1  |  106  |  [118,110,176,160,4]  |
  2517  |                         j = j + 1;  |         |   451  |    110  |  1  |  107  |  [118,110,176,160,4]  |
  2518  |              resetPlaceHolder_2();  |         |   451  |    110  |  1  |  107  |  [118,110,176,160,4]  |
  2524  |                         R = R + 2;  |      2  |   453  |    110  |  1  |  107  |  [118,110,176,160,4]  |
  2528  |                         j = j + 1;  |         |   453  |    110  |  1  |  108  |  [118,110,176,160,4]  |
  2529  |              resetPlaceHolder_2();  |         |   453  |    110  |  1  |  108  |  [118,110,176,160,4]  |
  2535  |                         R = R + 2;  |      2  |   455  |    110  |  1  |  108  |  [118,110,176,160,4]  |
  2539  |                         j = j + 1;  |         |   455  |    110  |  1  |  109  |  [118,110,176,160,4]  |
  2540  |              resetPlaceHolder_2();  |         |   455  |    110  |  1  |  109  |  [118,110,176,160,4]  |
  2546  |                         R = R + 2;  |      2  |   457  |    110  |  1  |  109  |  [118,110,176,160,4]  |
  2550  |                         j = j + 1;  |         |   457  |    110  |  1  |  110  |  [118,110,176,160,4]  |
  2551  |              resetPlaceHolder_2();  |         |   457  |    110  |  1  |  110  |  [118,110,176,160,4]  |
  2557  |                         R = R + 1;  |      1  |   458  |    110  |  1  |  110  |  [118,110,176,160,4]  |
  2561  |                         i = i + 1;  |         |   458  |    110  |  2  |  110  |  [118,110,176,160,4]  |
  2562  |              resetPlaceHolder_1();  |         |   458  |    110  |  2  |  110  |  [118,110,176,160,4]  |
  2568  |      entry = arrayRead(sorted, i);  |         |   458  |    176  |  2  |  110  |  [118,110,176,160,4]  |
  2570  |                         int j = 0;  |         |   458  |    176  |  2  |    0  |  [118,110,176,160,4]  |
  2576  |                         R = R + 2;  |      2  |   460  |    176  |  2  |    0  |  [118,110,176,160,4]  |
  2580  |                         j = j + 1;  |         |   460  |    176  |  2  |    1  |  [118,110,176,160,4]  |
  2581  |              resetPlaceHolder_2();  |         |   460  |    176  |  2  |    1  |  [118,110,176,160,4]  |
  2587  |                         R = R + 2;  |      2  |   462  |    176  |  2  |    1  |  [118,110,176,160,4]  |
  2591  |                         j = j + 1;  |         |   462  |    176  |  2  |    2  |  [118,110,176,160,4]  |
  2592  |              resetPlaceHolder_2();  |         |   462  |    176  |  2  |    2  |  [118,110,176,160,4]  |
  2598  |                         R = R + 2;  |      2  |   464  |    176  |  2  |    2  |  [118,110,176,160,4]  |
  2602  |                         j = j + 1;  |         |   464  |    176  |  2  |    3  |  [118,110,176,160,4]  |
  2603  |              resetPlaceHolder_2();  |         |   464  |    176  |  2  |    3  |  [118,110,176,160,4]  |
  2609  |                         R = R + 2;  |      2  |   466  |    176  |  2  |    3  |  [118,110,176,160,4]  |
  2613  |                         j = j + 1;  |         |   466  |    176  |  2  |    4  |  [118,110,176,160,4]  |
  2614  |              resetPlaceHolder_2();  |         |   466  |    176  |  2  |    4  |  [118,110,176,160,4]  |
  2620  |                         R = R + 2;  |      2  |   468  |    176  |  2  |    4  |  [118,110,176,160,4]  |
  2624  |                         j = j + 1;  |         |   468  |    176  |  2  |    5  |  [118,110,176,160,4]  |
  2625  |              resetPlaceHolder_2();  |         |   468  |    176  |  2  |    5  |  [118,110,176,160,4]  |
  2631  |                         R = R + 2;  |      2  |   470  |    176  |  2  |    5  |  [118,110,176,160,4]  |
  2635  |                         j = j + 1;  |         |   470  |    176  |  2  |    6  |  [118,110,176,160,4]  |
  2636  |              resetPlaceHolder_2();  |         |   470  |    176  |  2  |    6  |  [118,110,176,160,4]  |
  2642  |                         R = R + 2;  |      2  |   472  |    176  |  2  |    6  |  [118,110,176,160,4]  |
  2646  |                         j = j + 1;  |         |   472  |    176  |  2  |    7  |  [118,110,176,160,4]  |
  2647  |              resetPlaceHolder_2();  |         |   472  |    176  |  2  |    7  |  [118,110,176,160,4]  |
  2653  |                         R = R + 2;  |      2  |   474  |    176  |  2  |    7  |  [118,110,176,160,4]  |
  2657  |                         j = j + 1;  |         |   474  |    176  |  2  |    8  |  [118,110,176,160,4]  |
  2658  |              resetPlaceHolder_2();  |         |   474  |    176  |  2  |    8  |  [118,110,176,160,4]  |
  2664  |                         R = R + 2;  |      2  |   476  |    176  |  2  |    8  |  [118,110,176,160,4]  |
  2668  |                         j = j + 1;  |         |   476  |    176  |  2  |    9  |  [118,110,176,160,4]  |
  2669  |              resetPlaceHolder_2();  |         |   476  |    176  |  2  |    9  |  [118,110,176,160,4]  |
  2675  |                         R = R + 2;  |      2  |   478  |    176  |  2  |    9  |  [118,110,176,160,4]  |
  2679  |                         j = j + 1;  |         |   478  |    176  |  2  |   10  |  [118,110,176,160,4]  |
  2680  |              resetPlaceHolder_2();  |         |   478  |    176  |  2  |   10  |  [118,110,176,160,4]  |
  2686  |                         R = R + 2;  |      2  |   480  |    176  |  2  |   10  |  [118,110,176,160,4]  |
  2690  |                         j = j + 1;  |         |   480  |    176  |  2  |   11  |  [118,110,176,160,4]  |
  2691  |              resetPlaceHolder_2();  |         |   480  |    176  |  2  |   11  |  [118,110,176,160,4]  |
  2697  |                         R = R + 2;  |      2  |   482  |    176  |  2  |   11  |  [118,110,176,160,4]  |
  2701  |                         j = j + 1;  |         |   482  |    176  |  2  |   12  |  [118,110,176,160,4]  |
  2702  |              resetPlaceHolder_2();  |         |   482  |    176  |  2  |   12  |  [118,110,176,160,4]  |
  2708  |                         R = R + 2;  |      2  |   484  |    176  |  2  |   12  |  [118,110,176,160,4]  |
  2712  |                         j = j + 1;  |         |   484  |    176  |  2  |   13  |  [118,110,176,160,4]  |
  2713  |              resetPlaceHolder_2();  |         |   484  |    176  |  2  |   13  |  [118,110,176,160,4]  |
  2719  |                         R = R + 2;  |      2  |   486  |    176  |  2  |   13  |  [118,110,176,160,4]  |
  2723  |                         j = j + 1;  |         |   486  |    176  |  2  |   14  |  [118,110,176,160,4]  |
  2724  |              resetPlaceHolder_2();  |         |   486  |    176  |  2  |   14  |  [118,110,176,160,4]  |
  2730  |                         R = R + 2;  |      2  |   488  |    176  |  2  |   14  |  [118,110,176,160,4]  |
  2734  |                         j = j + 1;  |         |   488  |    176  |  2  |   15  |  [118,110,176,160,4]  |
  2735  |              resetPlaceHolder_2();  |         |   488  |    176  |  2  |   15  |  [118,110,176,160,4]  |
  2741  |                         R = R + 2;  |      2  |   490  |    176  |  2  |   15  |  [118,110,176,160,4]  |
  2745  |                         j = j + 1;  |         |   490  |    176  |  2  |   16  |  [118,110,176,160,4]  |
  2746  |              resetPlaceHolder_2();  |         |   490  |    176  |  2  |   16  |  [118,110,176,160,4]  |
  2752  |                         R = R + 2;  |      2  |   492  |    176  |  2  |   16  |  [118,110,176,160,4]  |
  2756  |                         j = j + 1;  |         |   492  |    176  |  2  |   17  |  [118,110,176,160,4]  |
  2757  |              resetPlaceHolder_2();  |         |   492  |    176  |  2  |   17  |  [118,110,176,160,4]  |
  2763  |                         R = R + 2;  |      2  |   494  |    176  |  2  |   17  |  [118,110,176,160,4]  |
  2767  |                         j = j + 1;  |         |   494  |    176  |  2  |   18  |  [118,110,176,160,4]  |
  2768  |              resetPlaceHolder_2();  |         |   494  |    176  |  2  |   18  |  [118,110,176,160,4]  |
  2774  |                         R = R + 2;  |      2  |   496  |    176  |  2  |   18  |  [118,110,176,160,4]  |
  2778  |                         j = j + 1;  |         |   496  |    176  |  2  |   19  |  [118,110,176,160,4]  |
  2779  |              resetPlaceHolder_2();  |         |   496  |    176  |  2  |   19  |  [118,110,176,160,4]  |
  2785  |                         R = R + 2;  |      2  |   498  |    176  |  2  |   19  |  [118,110,176,160,4]  |
  2789  |                         j = j + 1;  |         |   498  |    176  |  2  |   20  |  [118,110,176,160,4]  |
  2790  |              resetPlaceHolder_2();  |         |   498  |    176  |  2  |   20  |  [118,110,176,160,4]  |
  2796  |                         R = R + 2;  |      2  |   500  |    176  |  2  |   20  |  [118,110,176,160,4]  |
  2800  |                         j = j + 1;  |         |   500  |    176  |  2  |   21  |  [118,110,176,160,4]  |
  2801  |              resetPlaceHolder_2();  |         |   500  |    176  |  2  |   21  |  [118,110,176,160,4]  |
  2807  |                         R = R + 2;  |      2  |   502  |    176  |  2  |   21  |  [118,110,176,160,4]  |
  2811  |                         j = j + 1;  |         |   502  |    176  |  2  |   22  |  [118,110,176,160,4]  |
  2812  |              resetPlaceHolder_2();  |         |   502  |    176  |  2  |   22  |  [118,110,176,160,4]  |
  2818  |                         R = R + 2;  |      2  |   504  |    176  |  2  |   22  |  [118,110,176,160,4]  |
  2822  |                         j = j + 1;  |         |   504  |    176  |  2  |   23  |  [118,110,176,160,4]  |
  2823  |              resetPlaceHolder_2();  |         |   504  |    176  |  2  |   23  |  [118,110,176,160,4]  |
  2829  |                         R = R + 2;  |      2  |   506  |    176  |  2  |   23  |  [118,110,176,160,4]  |
  2833  |                         j = j + 1;  |         |   506  |    176  |  2  |   24  |  [118,110,176,160,4]  |
  2834  |              resetPlaceHolder_2();  |         |   506  |    176  |  2  |   24  |  [118,110,176,160,4]  |
  2840  |                         R = R + 2;  |      2  |   508  |    176  |  2  |   24  |  [118,110,176,160,4]  |
  2844  |                         j = j + 1;  |         |   508  |    176  |  2  |   25  |  [118,110,176,160,4]  |
  2845  |              resetPlaceHolder_2();  |         |   508  |    176  |  2  |   25  |  [118,110,176,160,4]  |
  2851  |                         R = R + 2;  |      2  |   510  |    176  |  2  |   25  |  [118,110,176,160,4]  |
  2855  |                         j = j + 1;  |         |   510  |    176  |  2  |   26  |  [118,110,176,160,4]  |
  2856  |              resetPlaceHolder_2();  |         |   510  |    176  |  2  |   26  |  [118,110,176,160,4]  |
  2862  |                         R = R + 2;  |      2  |   512  |    176  |  2  |   26  |  [118,110,176,160,4]  |
  2866  |                         j = j + 1;  |         |   512  |    176  |  2  |   27  |  [118,110,176,160,4]  |
  2867  |              resetPlaceHolder_2();  |         |   512  |    176  |  2  |   27  |  [118,110,176,160,4]  |
  2873  |                         R = R + 2;  |      2  |   514  |    176  |  2  |   27  |  [118,110,176,160,4]  |
  2877  |                         j = j + 1;  |         |   514  |    176  |  2  |   28  |  [118,110,176,160,4]  |
  2878  |              resetPlaceHolder_2();  |         |   514  |    176  |  2  |   28  |  [118,110,176,160,4]  |
  2884  |                         R = R + 2;  |      2  |   516  |    176  |  2  |   28  |  [118,110,176,160,4]  |
  2888  |                         j = j + 1;  |         |   516  |    176  |  2  |   29  |  [118,110,176,160,4]  |
  2889  |              resetPlaceHolder_2();  |         |   516  |    176  |  2  |   29  |  [118,110,176,160,4]  |
  2895  |                         R = R + 2;  |      2  |   518  |    176  |  2  |   29  |  [118,110,176,160,4]  |
  2899  |                         j = j + 1;  |         |   518  |    176  |  2  |   30  |  [118,110,176,160,4]  |
  2900  |              resetPlaceHolder_2();  |         |   518  |    176  |  2  |   30  |  [118,110,176,160,4]  |
  2906  |                         R = R + 2;  |      2  |   520  |    176  |  2  |   30  |  [118,110,176,160,4]  |
  2910  |                         j = j + 1;  |         |   520  |    176  |  2  |   31  |  [118,110,176,160,4]  |
  2911  |              resetPlaceHolder_2();  |         |   520  |    176  |  2  |   31  |  [118,110,176,160,4]  |
  2917  |                         R = R + 2;  |      2  |   522  |    176  |  2  |   31  |  [118,110,176,160,4]  |
  2921  |                         j = j + 1;  |         |   522  |    176  |  2  |   32  |  [118,110,176,160,4]  |
  2922  |              resetPlaceHolder_2();  |         |   522  |    176  |  2  |   32  |  [118,110,176,160,4]  |
  2928  |                         R = R + 2;  |      2  |   524  |    176  |  2  |   32  |  [118,110,176,160,4]  |
  2932  |                         j = j + 1;  |         |   524  |    176  |  2  |   33  |  [118,110,176,160,4]  |
  2933  |              resetPlaceHolder_2();  |         |   524  |    176  |  2  |   33  |  [118,110,176,160,4]  |
  2939  |                         R = R + 2;  |      2  |   526  |    176  |  2  |   33  |  [118,110,176,160,4]  |
  2943  |                         j = j + 1;  |         |   526  |    176  |  2  |   34  |  [118,110,176,160,4]  |
  2944  |              resetPlaceHolder_2();  |         |   526  |    176  |  2  |   34  |  [118,110,176,160,4]  |
  2950  |                         R = R + 2;  |      2  |   528  |    176  |  2  |   34  |  [118,110,176,160,4]  |
  2954  |                         j = j + 1;  |         |   528  |    176  |  2  |   35  |  [118,110,176,160,4]  |
  2955  |              resetPlaceHolder_2();  |         |   528  |    176  |  2  |   35  |  [118,110,176,160,4]  |
  2961  |                         R = R + 2;  |      2  |   530  |    176  |  2  |   35  |  [118,110,176,160,4]  |
  2965  |                         j = j + 1;  |         |   530  |    176  |  2  |   36  |  [118,110,176,160,4]  |
  2966  |              resetPlaceHolder_2();  |         |   530  |    176  |  2  |   36  |  [118,110,176,160,4]  |
  2972  |                         R = R + 2;  |      2  |   532  |    176  |  2  |   36  |  [118,110,176,160,4]  |
  2976  |                         j = j + 1;  |         |   532  |    176  |  2  |   37  |  [118,110,176,160,4]  |
  2977  |              resetPlaceHolder_2();  |         |   532  |    176  |  2  |   37  |  [118,110,176,160,4]  |
  2983  |                         R = R + 2;  |      2  |   534  |    176  |  2  |   37  |  [118,110,176,160,4]  |
  2987  |                         j = j + 1;  |         |   534  |    176  |  2  |   38  |  [118,110,176,160,4]  |
  2988  |              resetPlaceHolder_2();  |         |   534  |    176  |  2  |   38  |  [118,110,176,160,4]  |
  2994  |                         R = R + 2;  |      2  |   536  |    176  |  2  |   38  |  [118,110,176,160,4]  |
  2998  |                         j = j + 1;  |         |   536  |    176  |  2  |   39  |  [118,110,176,160,4]  |
  2999  |              resetPlaceHolder_2();  |         |   536  |    176  |  2  |   39  |  [118,110,176,160,4]  |
  3005  |                         R = R + 2;  |      2  |   538  |    176  |  2  |   39  |  [118,110,176,160,4]  |
  3009  |                         j = j + 1;  |         |   538  |    176  |  2  |   40  |  [118,110,176,160,4]  |
  3010  |              resetPlaceHolder_2();  |         |   538  |    176  |  2  |   40  |  [118,110,176,160,4]  |
  3016  |                         R = R + 2;  |      2  |   540  |    176  |  2  |   40  |  [118,110,176,160,4]  |
  3020  |                         j = j + 1;  |         |   540  |    176  |  2  |   41  |  [118,110,176,160,4]  |
  3021  |              resetPlaceHolder_2();  |         |   540  |    176  |  2  |   41  |  [118,110,176,160,4]  |
  3027  |                         R = R + 2;  |      2  |   542  |    176  |  2  |   41  |  [118,110,176,160,4]  |
  3031  |                         j = j + 1;  |         |   542  |    176  |  2  |   42  |  [118,110,176,160,4]  |
  3032  |              resetPlaceHolder_2();  |         |   542  |    176  |  2  |   42  |  [118,110,176,160,4]  |
  3038  |                         R = R + 2;  |      2  |   544  |    176  |  2  |   42  |  [118,110,176,160,4]  |
  3042  |                         j = j + 1;  |         |   544  |    176  |  2  |   43  |  [118,110,176,160,4]  |
  3043  |              resetPlaceHolder_2();  |         |   544  |    176  |  2  |   43  |  [118,110,176,160,4]  |
  3049  |                         R = R + 2;  |      2  |   546  |    176  |  2  |   43  |  [118,110,176,160,4]  |
  3053  |                         j = j + 1;  |         |   546  |    176  |  2  |   44  |  [118,110,176,160,4]  |
  3054  |              resetPlaceHolder_2();  |         |   546  |    176  |  2  |   44  |  [118,110,176,160,4]  |
  3060  |                         R = R + 2;  |      2  |   548  |    176  |  2  |   44  |  [118,110,176,160,4]  |
  3064  |                         j = j + 1;  |         |   548  |    176  |  2  |   45  |  [118,110,176,160,4]  |
  3065  |              resetPlaceHolder_2();  |         |   548  |    176  |  2  |   45  |  [118,110,176,160,4]  |
  3071  |                         R = R + 2;  |      2  |   550  |    176  |  2  |   45  |  [118,110,176,160,4]  |
  3075  |                         j = j + 1;  |         |   550  |    176  |  2  |   46  |  [118,110,176,160,4]  |
  3076  |              resetPlaceHolder_2();  |         |   550  |    176  |  2  |   46  |  [118,110,176,160,4]  |
  3082  |                         R = R + 2;  |      2  |   552  |    176  |  2  |   46  |  [118,110,176,160,4]  |
  3086  |                         j = j + 1;  |         |   552  |    176  |  2  |   47  |  [118,110,176,160,4]  |
  3087  |              resetPlaceHolder_2();  |         |   552  |    176  |  2  |   47  |  [118,110,176,160,4]  |
  3093  |                         R = R + 2;  |      2  |   554  |    176  |  2  |   47  |  [118,110,176,160,4]  |
  3097  |                         j = j + 1;  |         |   554  |    176  |  2  |   48  |  [118,110,176,160,4]  |
  3098  |              resetPlaceHolder_2();  |         |   554  |    176  |  2  |   48  |  [118,110,176,160,4]  |
  3104  |                         R = R + 2;  |      2  |   556  |    176  |  2  |   48  |  [118,110,176,160,4]  |
  3108  |                         j = j + 1;  |         |   556  |    176  |  2  |   49  |  [118,110,176,160,4]  |
  3109  |              resetPlaceHolder_2();  |         |   556  |    176  |  2  |   49  |  [118,110,176,160,4]  |
  3115  |                         R = R + 2;  |      2  |   558  |    176  |  2  |   49  |  [118,110,176,160,4]  |
  3119  |                         j = j + 1;  |         |   558  |    176  |  2  |   50  |  [118,110,176,160,4]  |
  3120  |              resetPlaceHolder_2();  |         |   558  |    176  |  2  |   50  |  [118,110,176,160,4]  |
  3126  |                         R = R + 2;  |      2  |   560  |    176  |  2  |   50  |  [118,110,176,160,4]  |
  3130  |                         j = j + 1;  |         |   560  |    176  |  2  |   51  |  [118,110,176,160,4]  |
  3131  |              resetPlaceHolder_2();  |         |   560  |    176  |  2  |   51  |  [118,110,176,160,4]  |
  3137  |                         R = R + 2;  |      2  |   562  |    176  |  2  |   51  |  [118,110,176,160,4]  |
  3141  |                         j = j + 1;  |         |   562  |    176  |  2  |   52  |  [118,110,176,160,4]  |
  3142  |              resetPlaceHolder_2();  |         |   562  |    176  |  2  |   52  |  [118,110,176,160,4]  |
  3148  |                         R = R + 2;  |      2  |   564  |    176  |  2  |   52  |  [118,110,176,160,4]  |
  3152  |                         j = j + 1;  |         |   564  |    176  |  2  |   53  |  [118,110,176,160,4]  |
  3153  |              resetPlaceHolder_2();  |         |   564  |    176  |  2  |   53  |  [118,110,176,160,4]  |
  3159  |                         R = R + 2;  |      2  |   566  |    176  |  2  |   53  |  [118,110,176,160,4]  |
  3163  |                         j = j + 1;  |         |   566  |    176  |  2  |   54  |  [118,110,176,160,4]  |
  3164  |              resetPlaceHolder_2();  |         |   566  |    176  |  2  |   54  |  [118,110,176,160,4]  |
  3170  |                         R = R + 2;  |      2  |   568  |    176  |  2  |   54  |  [118,110,176,160,4]  |
  3174  |                         j = j + 1;  |         |   568  |    176  |  2  |   55  |  [118,110,176,160,4]  |
  3175  |              resetPlaceHolder_2();  |         |   568  |    176  |  2  |   55  |  [118,110,176,160,4]  |
  3181  |                         R = R + 2;  |      2  |   570  |    176  |  2  |   55  |  [118,110,176,160,4]  |
  3185  |                         j = j + 1;  |         |   570  |    176  |  2  |   56  |  [118,110,176,160,4]  |
  3186  |              resetPlaceHolder_2();  |         |   570  |    176  |  2  |   56  |  [118,110,176,160,4]  |
  3192  |                         R = R + 2;  |      2  |   572  |    176  |  2  |   56  |  [118,110,176,160,4]  |
  3196  |                         j = j + 1;  |         |   572  |    176  |  2  |   57  |  [118,110,176,160,4]  |
  3197  |              resetPlaceHolder_2();  |         |   572  |    176  |  2  |   57  |  [118,110,176,160,4]  |
  3203  |                         R = R + 2;  |      2  |   574  |    176  |  2  |   57  |  [118,110,176,160,4]  |
  3207  |                         j = j + 1;  |         |   574  |    176  |  2  |   58  |  [118,110,176,160,4]  |
  3208  |              resetPlaceHolder_2();  |         |   574  |    176  |  2  |   58  |  [118,110,176,160,4]  |
  3214  |                         R = R + 2;  |      2  |   576  |    176  |  2  |   58  |  [118,110,176,160,4]  |
  3218  |                         j = j + 1;  |         |   576  |    176  |  2  |   59  |  [118,110,176,160,4]  |
  3219  |              resetPlaceHolder_2();  |         |   576  |    176  |  2  |   59  |  [118,110,176,160,4]  |
  3225  |                         R = R + 2;  |      2  |   578  |    176  |  2  |   59  |  [118,110,176,160,4]  |
  3229  |                         j = j + 1;  |         |   578  |    176  |  2  |   60  |  [118,110,176,160,4]  |
  3230  |              resetPlaceHolder_2();  |         |   578  |    176  |  2  |   60  |  [118,110,176,160,4]  |
  3236  |                         R = R + 2;  |      2  |   580  |    176  |  2  |   60  |  [118,110,176,160,4]  |
  3240  |                         j = j + 1;  |         |   580  |    176  |  2  |   61  |  [118,110,176,160,4]  |
  3241  |              resetPlaceHolder_2();  |         |   580  |    176  |  2  |   61  |  [118,110,176,160,4]  |
  3247  |                         R = R + 2;  |      2  |   582  |    176  |  2  |   61  |  [118,110,176,160,4]  |
  3251  |                         j = j + 1;  |         |   582  |    176  |  2  |   62  |  [118,110,176,160,4]  |
  3252  |              resetPlaceHolder_2();  |         |   582  |    176  |  2  |   62  |  [118,110,176,160,4]  |
  3258  |                         R = R + 2;  |      2  |   584  |    176  |  2  |   62  |  [118,110,176,160,4]  |
  3262  |                         j = j + 1;  |         |   584  |    176  |  2  |   63  |  [118,110,176,160,4]  |
  3263  |              resetPlaceHolder_2();  |         |   584  |    176  |  2  |   63  |  [118,110,176,160,4]  |
  3269  |                         R = R + 2;  |      2  |   586  |    176  |  2  |   63  |  [118,110,176,160,4]  |
  3273  |                         j = j + 1;  |         |   586  |    176  |  2  |   64  |  [118,110,176,160,4]  |
  3274  |              resetPlaceHolder_2();  |         |   586  |    176  |  2  |   64  |  [118,110,176,160,4]  |
  3280  |                         R = R + 2;  |      2  |   588  |    176  |  2  |   64  |  [118,110,176,160,4]  |
  3284  |                         j = j + 1;  |         |   588  |    176  |  2  |   65  |  [118,110,176,160,4]  |
  3285  |              resetPlaceHolder_2();  |         |   588  |    176  |  2  |   65  |  [118,110,176,160,4]  |
  3291  |                         R = R + 2;  |      2  |   590  |    176  |  2  |   65  |  [118,110,176,160,4]  |
  3295  |                         j = j + 1;  |         |   590  |    176  |  2  |   66  |  [118,110,176,160,4]  |
  3296  |              resetPlaceHolder_2();  |         |   590  |    176  |  2  |   66  |  [118,110,176,160,4]  |
  3302  |                         R = R + 2;  |      2  |   592  |    176  |  2  |   66  |  [118,110,176,160,4]  |
  3306  |                         j = j + 1;  |         |   592  |    176  |  2  |   67  |  [118,110,176,160,4]  |
  3307  |              resetPlaceHolder_2();  |         |   592  |    176  |  2  |   67  |  [118,110,176,160,4]  |
  3313  |                         R = R + 2;  |      2  |   594  |    176  |  2  |   67  |  [118,110,176,160,4]  |
  3317  |                         j = j + 1;  |         |   594  |    176  |  2  |   68  |  [118,110,176,160,4]  |
  3318  |              resetPlaceHolder_2();  |         |   594  |    176  |  2  |   68  |  [118,110,176,160,4]  |
  3324  |                         R = R + 2;  |      2  |   596  |    176  |  2  |   68  |  [118,110,176,160,4]  |
  3328  |                         j = j + 1;  |         |   596  |    176  |  2  |   69  |  [118,110,176,160,4]  |
  3329  |              resetPlaceHolder_2();  |         |   596  |    176  |  2  |   69  |  [118,110,176,160,4]  |
  3335  |                         R = R + 2;  |      2  |   598  |    176  |  2  |   69  |  [118,110,176,160,4]  |
  3339  |                         j = j + 1;  |         |   598  |    176  |  2  |   70  |  [118,110,176,160,4]  |
  3340  |              resetPlaceHolder_2();  |         |   598  |    176  |  2  |   70  |  [118,110,176,160,4]  |
  3346  |                         R = R + 2;  |      2  |   600  |    176  |  2  |   70  |  [118,110,176,160,4]  |
  3350  |                         j = j + 1;  |         |   600  |    176  |  2  |   71  |  [118,110,176,160,4]  |
  3351  |              resetPlaceHolder_2();  |         |   600  |    176  |  2  |   71  |  [118,110,176,160,4]  |
  3357  |                         R = R + 2;  |      2  |   602  |    176  |  2  |   71  |  [118,110,176,160,4]  |
  3361  |                         j = j + 1;  |         |   602  |    176  |  2  |   72  |  [118,110,176,160,4]  |
  3362  |              resetPlaceHolder_2();  |         |   602  |    176  |  2  |   72  |  [118,110,176,160,4]  |
  3368  |                         R = R + 2;  |      2  |   604  |    176  |  2  |   72  |  [118,110,176,160,4]  |
  3372  |                         j = j + 1;  |         |   604  |    176  |  2  |   73  |  [118,110,176,160,4]  |
  3373  |              resetPlaceHolder_2();  |         |   604  |    176  |  2  |   73  |  [118,110,176,160,4]  |
  3379  |                         R = R + 2;  |      2  |   606  |    176  |  2  |   73  |  [118,110,176,160,4]  |
  3383  |                         j = j + 1;  |         |   606  |    176  |  2  |   74  |  [118,110,176,160,4]  |
  3384  |              resetPlaceHolder_2();  |         |   606  |    176  |  2  |   74  |  [118,110,176,160,4]  |
  3390  |                         R = R + 2;  |      2  |   608  |    176  |  2  |   74  |  [118,110,176,160,4]  |
  3394  |                         j = j + 1;  |         |   608  |    176  |  2  |   75  |  [118,110,176,160,4]  |
  3395  |              resetPlaceHolder_2();  |         |   608  |    176  |  2  |   75  |  [118,110,176,160,4]  |
  3401  |                         R = R + 2;  |      2  |   610  |    176  |  2  |   75  |  [118,110,176,160,4]  |
  3405  |                         j = j + 1;  |         |   610  |    176  |  2  |   76  |  [118,110,176,160,4]  |
  3406  |              resetPlaceHolder_2();  |         |   610  |    176  |  2  |   76  |  [118,110,176,160,4]  |
  3412  |                         R = R + 2;  |      2  |   612  |    176  |  2  |   76  |  [118,110,176,160,4]  |
  3416  |                         j = j + 1;  |         |   612  |    176  |  2  |   77  |  [118,110,176,160,4]  |
  3417  |              resetPlaceHolder_2();  |         |   612  |    176  |  2  |   77  |  [118,110,176,160,4]  |
  3423  |                         R = R + 2;  |      2  |   614  |    176  |  2  |   77  |  [118,110,176,160,4]  |
  3427  |                         j = j + 1;  |         |   614  |    176  |  2  |   78  |  [118,110,176,160,4]  |
  3428  |              resetPlaceHolder_2();  |         |   614  |    176  |  2  |   78  |  [118,110,176,160,4]  |
  3434  |                         R = R + 2;  |      2  |   616  |    176  |  2  |   78  |  [118,110,176,160,4]  |
  3438  |                         j = j + 1;  |         |   616  |    176  |  2  |   79  |  [118,110,176,160,4]  |
  3439  |              resetPlaceHolder_2();  |         |   616  |    176  |  2  |   79  |  [118,110,176,160,4]  |
  3445  |                         R = R + 2;  |      2  |   618  |    176  |  2  |   79  |  [118,110,176,160,4]  |
  3449  |                         j = j + 1;  |         |   618  |    176  |  2  |   80  |  [118,110,176,160,4]  |
  3450  |              resetPlaceHolder_2();  |         |   618  |    176  |  2  |   80  |  [118,110,176,160,4]  |
  3456  |                         R = R + 2;  |      2  |   620  |    176  |  2  |   80  |  [118,110,176,160,4]  |
  3460  |                         j = j + 1;  |         |   620  |    176  |  2  |   81  |  [118,110,176,160,4]  |
  3461  |              resetPlaceHolder_2();  |         |   620  |    176  |  2  |   81  |  [118,110,176,160,4]  |
  3467  |                         R = R + 2;  |      2  |   622  |    176  |  2  |   81  |  [118,110,176,160,4]  |
  3471  |                         j = j + 1;  |         |   622  |    176  |  2  |   82  |  [118,110,176,160,4]  |
  3472  |              resetPlaceHolder_2();  |         |   622  |    176  |  2  |   82  |  [118,110,176,160,4]  |
  3478  |                         R = R + 2;  |      2  |   624  |    176  |  2  |   82  |  [118,110,176,160,4]  |
  3482  |                         j = j + 1;  |         |   624  |    176  |  2  |   83  |  [118,110,176,160,4]  |
  3483  |              resetPlaceHolder_2();  |         |   624  |    176  |  2  |   83  |  [118,110,176,160,4]  |
  3489  |                         R = R + 2;  |      2  |   626  |    176  |  2  |   83  |  [118,110,176,160,4]  |
  3493  |                         j = j + 1;  |         |   626  |    176  |  2  |   84  |  [118,110,176,160,4]  |
  3494  |              resetPlaceHolder_2();  |         |   626  |    176  |  2  |   84  |  [118,110,176,160,4]  |
  3500  |                         R = R + 2;  |      2  |   628  |    176  |  2  |   84  |  [118,110,176,160,4]  |
  3504  |                         j = j + 1;  |         |   628  |    176  |  2  |   85  |  [118,110,176,160,4]  |
  3505  |              resetPlaceHolder_2();  |         |   628  |    176  |  2  |   85  |  [118,110,176,160,4]  |
  3511  |                         R = R + 2;  |      2  |   630  |    176  |  2  |   85  |  [118,110,176,160,4]  |
  3515  |                         j = j + 1;  |         |   630  |    176  |  2  |   86  |  [118,110,176,160,4]  |
  3516  |              resetPlaceHolder_2();  |         |   630  |    176  |  2  |   86  |  [118,110,176,160,4]  |
  3522  |                         R = R + 2;  |      2  |   632  |    176  |  2  |   86  |  [118,110,176,160,4]  |
  3526  |                         j = j + 1;  |         |   632  |    176  |  2  |   87  |  [118,110,176,160,4]  |
  3527  |              resetPlaceHolder_2();  |         |   632  |    176  |  2  |   87  |  [118,110,176,160,4]  |
  3533  |                         R = R + 2;  |      2  |   634  |    176  |  2  |   87  |  [118,110,176,160,4]  |
  3537  |                         j = j + 1;  |         |   634  |    176  |  2  |   88  |  [118,110,176,160,4]  |
  3538  |              resetPlaceHolder_2();  |         |   634  |    176  |  2  |   88  |  [118,110,176,160,4]  |
  3544  |                         R = R + 2;  |      2  |   636  |    176  |  2  |   88  |  [118,110,176,160,4]  |
  3548  |                         j = j + 1;  |         |   636  |    176  |  2  |   89  |  [118,110,176,160,4]  |
  3549  |              resetPlaceHolder_2();  |         |   636  |    176  |  2  |   89  |  [118,110,176,160,4]  |
  3555  |                         R = R + 2;  |      2  |   638  |    176  |  2  |   89  |  [118,110,176,160,4]  |
  3559  |                         j = j + 1;  |         |   638  |    176  |  2  |   90  |  [118,110,176,160,4]  |
  3560  |              resetPlaceHolder_2();  |         |   638  |    176  |  2  |   90  |  [118,110,176,160,4]  |
  3566  |                         R = R + 2;  |      2  |   640  |    176  |  2  |   90  |  [118,110,176,160,4]  |
  3570  |                         j = j + 1;  |         |   640  |    176  |  2  |   91  |  [118,110,176,160,4]  |
  3571  |              resetPlaceHolder_2();  |         |   640  |    176  |  2  |   91  |  [118,110,176,160,4]  |
  3577  |                         R = R + 2;  |      2  |   642  |    176  |  2  |   91  |  [118,110,176,160,4]  |
  3581  |                         j = j + 1;  |         |   642  |    176  |  2  |   92  |  [118,110,176,160,4]  |
  3582  |              resetPlaceHolder_2();  |         |   642  |    176  |  2  |   92  |  [118,110,176,160,4]  |
  3588  |                         R = R + 2;  |      2  |   644  |    176  |  2  |   92  |  [118,110,176,160,4]  |
  3592  |                         j = j + 1;  |         |   644  |    176  |  2  |   93  |  [118,110,176,160,4]  |
  3593  |              resetPlaceHolder_2();  |         |   644  |    176  |  2  |   93  |  [118,110,176,160,4]  |
  3599  |                         R = R + 2;  |      2  |   646  |    176  |  2  |   93  |  [118,110,176,160,4]  |
  3603  |                         j = j + 1;  |         |   646  |    176  |  2  |   94  |  [118,110,176,160,4]  |
  3604  |              resetPlaceHolder_2();  |         |   646  |    176  |  2  |   94  |  [118,110,176,160,4]  |
  3610  |                         R = R + 2;  |      2  |   648  |    176  |  2  |   94  |  [118,110,176,160,4]  |
  3614  |                         j = j + 1;  |         |   648  |    176  |  2  |   95  |  [118,110,176,160,4]  |
  3615  |              resetPlaceHolder_2();  |         |   648  |    176  |  2  |   95  |  [118,110,176,160,4]  |
  3621  |                         R = R + 2;  |      2  |   650  |    176  |  2  |   95  |  [118,110,176,160,4]  |
  3625  |                         j = j + 1;  |         |   650  |    176  |  2  |   96  |  [118,110,176,160,4]  |
  3626  |              resetPlaceHolder_2();  |         |   650  |    176  |  2  |   96  |  [118,110,176,160,4]  |
  3632  |                         R = R + 2;  |      2  |   652  |    176  |  2  |   96  |  [118,110,176,160,4]  |
  3636  |                         j = j + 1;  |         |   652  |    176  |  2  |   97  |  [118,110,176,160,4]  |
  3637  |              resetPlaceHolder_2();  |         |   652  |    176  |  2  |   97  |  [118,110,176,160,4]  |
  3643  |                         R = R + 2;  |      2  |   654  |    176  |  2  |   97  |  [118,110,176,160,4]  |
  3647  |                         j = j + 1;  |         |   654  |    176  |  2  |   98  |  [118,110,176,160,4]  |
  3648  |              resetPlaceHolder_2();  |         |   654  |    176  |  2  |   98  |  [118,110,176,160,4]  |
  3654  |                         R = R + 2;  |      2  |   656  |    176  |  2  |   98  |  [118,110,176,160,4]  |
  3658  |                         j = j + 1;  |         |   656  |    176  |  2  |   99  |  [118,110,176,160,4]  |
  3659  |              resetPlaceHolder_2();  |         |   656  |    176  |  2  |   99  |  [118,110,176,160,4]  |
  3665  |                         R = R + 2;  |      2  |   658  |    176  |  2  |   99  |  [118,110,176,160,4]  |
  3669  |                         j = j + 1;  |         |   658  |    176  |  2  |  100  |  [118,110,176,160,4]  |
  3670  |              resetPlaceHolder_2();  |         |   658  |    176  |  2  |  100  |  [118,110,176,160,4]  |
  3676  |                         R = R + 2;  |      2  |   660  |    176  |  2  |  100  |  [118,110,176,160,4]  |
  3680  |                         j = j + 1;  |         |   660  |    176  |  2  |  101  |  [118,110,176,160,4]  |
  3681  |              resetPlaceHolder_2();  |         |   660  |    176  |  2  |  101  |  [118,110,176,160,4]  |
  3687  |                         R = R + 2;  |      2  |   662  |    176  |  2  |  101  |  [118,110,176,160,4]  |
  3691  |                         j = j + 1;  |         |   662  |    176  |  2  |  102  |  [118,110,176,160,4]  |
  3692  |              resetPlaceHolder_2();  |         |   662  |    176  |  2  |  102  |  [118,110,176,160,4]  |
  3698  |                         R = R + 2;  |      2  |   664  |    176  |  2  |  102  |  [118,110,176,160,4]  |
  3702  |                         j = j + 1;  |         |   664  |    176  |  2  |  103  |  [118,110,176,160,4]  |
  3703  |              resetPlaceHolder_2();  |         |   664  |    176  |  2  |  103  |  [118,110,176,160,4]  |
  3709  |                         R = R + 2;  |      2  |   666  |    176  |  2  |  103  |  [118,110,176,160,4]  |
  3713  |                         j = j + 1;  |         |   666  |    176  |  2  |  104  |  [118,110,176,160,4]  |
  3714  |              resetPlaceHolder_2();  |         |   666  |    176  |  2  |  104  |  [118,110,176,160,4]  |
  3720  |                         R = R + 2;  |      2  |   668  |    176  |  2  |  104  |  [118,110,176,160,4]  |
  3724  |                         j = j + 1;  |         |   668  |    176  |  2  |  105  |  [118,110,176,160,4]  |
  3725  |              resetPlaceHolder_2();  |         |   668  |    176  |  2  |  105  |  [118,110,176,160,4]  |
  3731  |                         R = R + 2;  |      2  |   670  |    176  |  2  |  105  |  [118,110,176,160,4]  |
  3735  |                         j = j + 1;  |         |   670  |    176  |  2  |  106  |  [118,110,176,160,4]  |
  3736  |              resetPlaceHolder_2();  |         |   670  |    176  |  2  |  106  |  [118,110,176,160,4]  |
  3742  |                         R = R + 2;  |      2  |   672  |    176  |  2  |  106  |  [118,110,176,160,4]  |
  3746  |                         j = j + 1;  |         |   672  |    176  |  2  |  107  |  [118,110,176,160,4]  |
  3747  |              resetPlaceHolder_2();  |         |   672  |    176  |  2  |  107  |  [118,110,176,160,4]  |
  3753  |                         R = R + 2;  |      2  |   674  |    176  |  2  |  107  |  [118,110,176,160,4]  |
  3757  |                         j = j + 1;  |         |   674  |    176  |  2  |  108  |  [118,110,176,160,4]  |
  3758  |              resetPlaceHolder_2();  |         |   674  |    176  |  2  |  108  |  [118,110,176,160,4]  |
  3764  |                         R = R + 2;  |      2  |   676  |    176  |  2  |  108  |  [118,110,176,160,4]  |
  3768  |                         j = j + 1;  |         |   676  |    176  |  2  |  109  |  [118,110,176,160,4]  |
  3769  |              resetPlaceHolder_2();  |         |   676  |    176  |  2  |  109  |  [118,110,176,160,4]  |
  3775  |                         R = R + 2;  |      2  |   678  |    176  |  2  |  109  |  [118,110,176,160,4]  |
  3779  |                         j = j + 1;  |         |   678  |    176  |  2  |  110  |  [118,110,176,160,4]  |
  3780  |              resetPlaceHolder_2();  |         |   678  |    176  |  2  |  110  |  [118,110,176,160,4]  |
  3786  |                         R = R + 2;  |      2  |   680  |    176  |  2  |  110  |  [118,110,176,160,4]  |
  3790  |                         j = j + 1;  |         |   680  |    176  |  2  |  111  |  [118,110,176,160,4]  |
  3791  |              resetPlaceHolder_2();  |         |   680  |    176  |  2  |  111  |  [118,110,176,160,4]  |
  3797  |                         R = R + 2;  |      2  |   682  |    176  |  2  |  111  |  [118,110,176,160,4]  |
  3801  |                         j = j + 1;  |         |   682  |    176  |  2  |  112  |  [118,110,176,160,4]  |
  3802  |              resetPlaceHolder_2();  |         |   682  |    176  |  2  |  112  |  [118,110,176,160,4]  |
  3808  |                         R = R + 2;  |      2  |   684  |    176  |  2  |  112  |  [118,110,176,160,4]  |
  3812  |                         j = j + 1;  |         |   684  |    176  |  2  |  113  |  [118,110,176,160,4]  |
  3813  |              resetPlaceHolder_2();  |         |   684  |    176  |  2  |  113  |  [118,110,176,160,4]  |
  3819  |                         R = R + 2;  |      2  |   686  |    176  |  2  |  113  |  [118,110,176,160,4]  |
  3823  |                         j = j + 1;  |         |   686  |    176  |  2  |  114  |  [118,110,176,160,4]  |
  3824  |              resetPlaceHolder_2();  |         |   686  |    176  |  2  |  114  |  [118,110,176,160,4]  |
  3830  |                         R = R + 2;  |      2  |   688  |    176  |  2  |  114  |  [118,110,176,160,4]  |
  3834  |                         j = j + 1;  |         |   688  |    176  |  2  |  115  |  [118,110,176,160,4]  |
  3835  |              resetPlaceHolder_2();  |         |   688  |    176  |  2  |  115  |  [118,110,176,160,4]  |
  3841  |                         R = R + 2;  |      2  |   690  |    176  |  2  |  115  |  [118,110,176,160,4]  |
  3845  |                         j = j + 1;  |         |   690  |    176  |  2  |  116  |  [118,110,176,160,4]  |
  3846  |              resetPlaceHolder_2();  |         |   690  |    176  |  2  |  116  |  [118,110,176,160,4]  |
  3852  |                         R = R + 2;  |      2  |   692  |    176  |  2  |  116  |  [118,110,176,160,4]  |
  3856  |                         j = j + 1;  |         |   692  |    176  |  2  |  117  |  [118,110,176,160,4]  |
  3857  |              resetPlaceHolder_2();  |         |   692  |    176  |  2  |  117  |  [118,110,176,160,4]  |
  3863  |                         R = R + 2;  |      2  |   694  |    176  |  2  |  117  |  [118,110,176,160,4]  |
  3867  |                         j = j + 1;  |         |   694  |    176  |  2  |  118  |  [118,110,176,160,4]  |
  3868  |              resetPlaceHolder_2();  |         |   694  |    176  |  2  |  118  |  [118,110,176,160,4]  |
  3874  |                         R = R + 2;  |      2  |   696  |    176  |  2  |  118  |  [118,110,176,160,4]  |
  3878  |                         j = j + 1;  |         |   696  |    176  |  2  |  119  |  [118,110,176,160,4]  |
  3879  |              resetPlaceHolder_2();  |         |   696  |    176  |  2  |  119  |  [118,110,176,160,4]  |
  3885  |                         R = R + 2;  |      2  |   698  |    176  |  2  |  119  |  [118,110,176,160,4]  |
  3889  |                         j = j + 1;  |         |   698  |    176  |  2  |  120  |  [118,110,176,160,4]  |
  3890  |              resetPlaceHolder_2();  |         |   698  |    176  |  2  |  120  |  [118,110,176,160,4]  |
  3896  |                         R = R + 2;  |      2  |   700  |    176  |  2  |  120  |  [118,110,176,160,4]  |
  3900  |                         j = j + 1;  |         |   700  |    176  |  2  |  121  |  [118,110,176,160,4]  |
  3901  |              resetPlaceHolder_2();  |         |   700  |    176  |  2  |  121  |  [118,110,176,160,4]  |
  3907  |                         R = R + 2;  |      2  |   702  |    176  |  2  |  121  |  [118,110,176,160,4]  |
  3911  |                         j = j + 1;  |         |   702  |    176  |  2  |  122  |  [118,110,176,160,4]  |
  3912  |              resetPlaceHolder_2();  |         |   702  |    176  |  2  |  122  |  [118,110,176,160,4]  |
  3918  |                         R = R + 2;  |      2  |   704  |    176  |  2  |  122  |  [118,110,176,160,4]  |
  3922  |                         j = j + 1;  |         |   704  |    176  |  2  |  123  |  [118,110,176,160,4]  |
  3923  |              resetPlaceHolder_2();  |         |   704  |    176  |  2  |  123  |  [118,110,176,160,4]  |
  3929  |                         R = R + 2;  |      2  |   706  |    176  |  2  |  123  |  [118,110,176,160,4]  |
  3933  |                         j = j + 1;  |         |   706  |    176  |  2  |  124  |  [118,110,176,160,4]  |
  3934  |              resetPlaceHolder_2();  |         |   706  |    176  |  2  |  124  |  [118,110,176,160,4]  |
  3940  |                         R = R + 2;  |      2  |   708  |    176  |  2  |  124  |  [118,110,176,160,4]  |
  3944  |                         j = j + 1;  |         |   708  |    176  |  2  |  125  |  [118,110,176,160,4]  |
  3945  |              resetPlaceHolder_2();  |         |   708  |    176  |  2  |  125  |  [118,110,176,160,4]  |
  3951  |                         R = R + 2;  |      2  |   710  |    176  |  2  |  125  |  [118,110,176,160,4]  |
  3955  |                         j = j + 1;  |         |   710  |    176  |  2  |  126  |  [118,110,176,160,4]  |
  3956  |              resetPlaceHolder_2();  |         |   710  |    176  |  2  |  126  |  [118,110,176,160,4]  |
  3962  |                         R = R + 2;  |      2  |   712  |    176  |  2  |  126  |  [118,110,176,160,4]  |
  3966  |                         j = j + 1;  |         |   712  |    176  |  2  |  127  |  [118,110,176,160,4]  |
  3967  |              resetPlaceHolder_2();  |         |   712  |    176  |  2  |  127  |  [118,110,176,160,4]  |
  3973  |                         R = R + 2;  |      2  |   714  |    176  |  2  |  127  |  [118,110,176,160,4]  |
  3977  |                         j = j + 1;  |         |   714  |    176  |  2  |  128  |  [118,110,176,160,4]  |
  3978  |              resetPlaceHolder_2();  |         |   714  |    176  |  2  |  128  |  [118,110,176,160,4]  |
  3984  |                         R = R + 2;  |      2  |   716  |    176  |  2  |  128  |  [118,110,176,160,4]  |
  3988  |                         j = j + 1;  |         |   716  |    176  |  2  |  129  |  [118,110,176,160,4]  |
  3989  |              resetPlaceHolder_2();  |         |   716  |    176  |  2  |  129  |  [118,110,176,160,4]  |
  3995  |                         R = R + 2;  |      2  |   718  |    176  |  2  |  129  |  [118,110,176,160,4]  |
  3999  |                         j = j + 1;  |         |   718  |    176  |  2  |  130  |  [118,110,176,160,4]  |
  4000  |              resetPlaceHolder_2();  |         |   718  |    176  |  2  |  130  |  [118,110,176,160,4]  |
  4006  |                         R = R + 2;  |      2  |   720  |    176  |  2  |  130  |  [118,110,176,160,4]  |
  4010  |                         j = j + 1;  |         |   720  |    176  |  2  |  131  |  [118,110,176,160,4]  |
  4011  |              resetPlaceHolder_2();  |         |   720  |    176  |  2  |  131  |  [118,110,176,160,4]  |
  4017  |                         R = R + 2;  |      2  |   722  |    176  |  2  |  131  |  [118,110,176,160,4]  |
  4021  |                         j = j + 1;  |         |   722  |    176  |  2  |  132  |  [118,110,176,160,4]  |
  4022  |              resetPlaceHolder_2();  |         |   722  |    176  |  2  |  132  |  [118,110,176,160,4]  |
  4028  |                         R = R + 2;  |      2  |   724  |    176  |  2  |  132  |  [118,110,176,160,4]  |
  4032  |                         j = j + 1;  |         |   724  |    176  |  2  |  133  |  [118,110,176,160,4]  |
  4033  |              resetPlaceHolder_2();  |         |   724  |    176  |  2  |  133  |  [118,110,176,160,4]  |
  4039  |                         R = R + 2;  |      2  |   726  |    176  |  2  |  133  |  [118,110,176,160,4]  |
  4043  |                         j = j + 1;  |         |   726  |    176  |  2  |  134  |  [118,110,176,160,4]  |
  4044  |              resetPlaceHolder_2();  |         |   726  |    176  |  2  |  134  |  [118,110,176,160,4]  |
  4050  |                         R = R + 2;  |      2  |   728  |    176  |  2  |  134  |  [118,110,176,160,4]  |
  4054  |                         j = j + 1;  |         |   728  |    176  |  2  |  135  |  [118,110,176,160,4]  |
  4055  |              resetPlaceHolder_2();  |         |   728  |    176  |  2  |  135  |  [118,110,176,160,4]  |
  4061  |                         R = R + 2;  |      2  |   730  |    176  |  2  |  135  |  [118,110,176,160,4]  |
  4065  |                         j = j + 1;  |         |   730  |    176  |  2  |  136  |  [118,110,176,160,4]  |
  4066  |              resetPlaceHolder_2();  |         |   730  |    176  |  2  |  136  |  [118,110,176,160,4]  |
  4072  |                         R = R + 2;  |      2  |   732  |    176  |  2  |  136  |  [118,110,176,160,4]  |
  4076  |                         j = j + 1;  |         |   732  |    176  |  2  |  137  |  [118,110,176,160,4]  |
  4077  |              resetPlaceHolder_2();  |         |   732  |    176  |  2  |  137  |  [118,110,176,160,4]  |
  4083  |                         R = R + 2;  |      2  |   734  |    176  |  2  |  137  |  [118,110,176,160,4]  |
  4087  |                         j = j + 1;  |         |   734  |    176  |  2  |  138  |  [118,110,176,160,4]  |
  4088  |              resetPlaceHolder_2();  |         |   734  |    176  |  2  |  138  |  [118,110,176,160,4]  |
  4094  |                         R = R + 2;  |      2  |   736  |    176  |  2  |  138  |  [118,110,176,160,4]  |
  4098  |                         j = j + 1;  |         |   736  |    176  |  2  |  139  |  [118,110,176,160,4]  |
  4099  |              resetPlaceHolder_2();  |         |   736  |    176  |  2  |  139  |  [118,110,176,160,4]  |
  4105  |                         R = R + 2;  |      2  |   738  |    176  |  2  |  139  |  [118,110,176,160,4]  |
  4109  |                         j = j + 1;  |         |   738  |    176  |  2  |  140  |  [118,110,176,160,4]  |
  4110  |              resetPlaceHolder_2();  |         |   738  |    176  |  2  |  140  |  [118,110,176,160,4]  |
  4116  |                         R = R + 2;  |      2  |   740  |    176  |  2  |  140  |  [118,110,176,160,4]  |
  4120  |                         j = j + 1;  |         |   740  |    176  |  2  |  141  |  [118,110,176,160,4]  |
  4121  |              resetPlaceHolder_2();  |         |   740  |    176  |  2  |  141  |  [118,110,176,160,4]  |
  4127  |                         R = R + 2;  |      2  |   742  |    176  |  2  |  141  |  [118,110,176,160,4]  |
  4131  |                         j = j + 1;  |         |   742  |    176  |  2  |  142  |  [118,110,176,160,4]  |
  4132  |              resetPlaceHolder_2();  |         |   742  |    176  |  2  |  142  |  [118,110,176,160,4]  |
  4138  |                         R = R + 2;  |      2  |   744  |    176  |  2  |  142  |  [118,110,176,160,4]  |
  4142  |                         j = j + 1;  |         |   744  |    176  |  2  |  143  |  [118,110,176,160,4]  |
  4143  |              resetPlaceHolder_2();  |         |   744  |    176  |  2  |  143  |  [118,110,176,160,4]  |
  4149  |                         R = R + 2;  |      2  |   746  |    176  |  2  |  143  |  [118,110,176,160,4]  |
  4153  |                         j = j + 1;  |         |   746  |    176  |  2  |  144  |  [118,110,176,160,4]  |
  4154  |              resetPlaceHolder_2();  |         |   746  |    176  |  2  |  144  |  [118,110,176,160,4]  |
  4160  |                         R = R + 2;  |      2  |   748  |    176  |  2  |  144  |  [118,110,176,160,4]  |
  4164  |                         j = j + 1;  |         |   748  |    176  |  2  |  145  |  [118,110,176,160,4]  |
  4165  |              resetPlaceHolder_2();  |         |   748  |    176  |  2  |  145  |  [118,110,176,160,4]  |
  4171  |                         R = R + 2;  |      2  |   750  |    176  |  2  |  145  |  [118,110,176,160,4]  |
  4175  |                         j = j + 1;  |         |   750  |    176  |  2  |  146  |  [118,110,176,160,4]  |
  4176  |              resetPlaceHolder_2();  |         |   750  |    176  |  2  |  146  |  [118,110,176,160,4]  |
  4182  |                         R = R + 2;  |      2  |   752  |    176  |  2  |  146  |  [118,110,176,160,4]  |
  4186  |                         j = j + 1;  |         |   752  |    176  |  2  |  147  |  [118,110,176,160,4]  |
  4187  |              resetPlaceHolder_2();  |         |   752  |    176  |  2  |  147  |  [118,110,176,160,4]  |
  4193  |                         R = R + 2;  |      2  |   754  |    176  |  2  |  147  |  [118,110,176,160,4]  |
  4197  |                         j = j + 1;  |         |   754  |    176  |  2  |  148  |  [118,110,176,160,4]  |
  4198  |              resetPlaceHolder_2();  |         |   754  |    176  |  2  |  148  |  [118,110,176,160,4]  |
  4204  |                         R = R + 2;  |      2  |   756  |    176  |  2  |  148  |  [118,110,176,160,4]  |
  4208  |                         j = j + 1;  |         |   756  |    176  |  2  |  149  |  [118,110,176,160,4]  |
  4209  |              resetPlaceHolder_2();  |         |   756  |    176  |  2  |  149  |  [118,110,176,160,4]  |
  4215  |                         R = R + 2;  |      2  |   758  |    176  |  2  |  149  |  [118,110,176,160,4]  |
  4219  |                         j = j + 1;  |         |   758  |    176  |  2  |  150  |  [118,110,176,160,4]  |
  4220  |              resetPlaceHolder_2();  |         |   758  |    176  |  2  |  150  |  [118,110,176,160,4]  |
  4226  |                         R = R + 2;  |      2  |   760  |    176  |  2  |  150  |  [118,110,176,160,4]  |
  4230  |                         j = j + 1;  |         |   760  |    176  |  2  |  151  |  [118,110,176,160,4]  |
  4231  |              resetPlaceHolder_2();  |         |   760  |    176  |  2  |  151  |  [118,110,176,160,4]  |
  4237  |                         R = R + 2;  |      2  |   762  |    176  |  2  |  151  |  [118,110,176,160,4]  |
  4241  |                         j = j + 1;  |         |   762  |    176  |  2  |  152  |  [118,110,176,160,4]  |
  4242  |              resetPlaceHolder_2();  |         |   762  |    176  |  2  |  152  |  [118,110,176,160,4]  |
  4248  |                         R = R + 2;  |      2  |   764  |    176  |  2  |  152  |  [118,110,176,160,4]  |
  4252  |                         j = j + 1;  |         |   764  |    176  |  2  |  153  |  [118,110,176,160,4]  |
  4253  |              resetPlaceHolder_2();  |         |   764  |    176  |  2  |  153  |  [118,110,176,160,4]  |
  4259  |                         R = R + 2;  |      2  |   766  |    176  |  2  |  153  |  [118,110,176,160,4]  |
  4263  |                         j = j + 1;  |         |   766  |    176  |  2  |  154  |  [118,110,176,160,4]  |
  4264  |              resetPlaceHolder_2();  |         |   766  |    176  |  2  |  154  |  [118,110,176,160,4]  |
  4270  |                         R = R + 2;  |      2  |   768  |    176  |  2  |  154  |  [118,110,176,160,4]  |
  4274  |                         j = j + 1;  |         |   768  |    176  |  2  |  155  |  [118,110,176,160,4]  |
  4275  |              resetPlaceHolder_2();  |         |   768  |    176  |  2  |  155  |  [118,110,176,160,4]  |
  4281  |                         R = R + 2;  |      2  |   770  |    176  |  2  |  155  |  [118,110,176,160,4]  |
  4285  |                         j = j + 1;  |         |   770  |    176  |  2  |  156  |  [118,110,176,160,4]  |
  4286  |              resetPlaceHolder_2();  |         |   770  |    176  |  2  |  156  |  [118,110,176,160,4]  |
  4292  |                         R = R + 2;  |      2  |   772  |    176  |  2  |  156  |  [118,110,176,160,4]  |
  4296  |                         j = j + 1;  |         |   772  |    176  |  2  |  157  |  [118,110,176,160,4]  |
  4297  |              resetPlaceHolder_2();  |         |   772  |    176  |  2  |  157  |  [118,110,176,160,4]  |
  4303  |                         R = R + 2;  |      2  |   774  |    176  |  2  |  157  |  [118,110,176,160,4]  |
  4307  |                         j = j + 1;  |         |   774  |    176  |  2  |  158  |  [118,110,176,160,4]  |
  4308  |              resetPlaceHolder_2();  |         |   774  |    176  |  2  |  158  |  [118,110,176,160,4]  |
  4314  |                         R = R + 2;  |      2  |   776  |    176  |  2  |  158  |  [118,110,176,160,4]  |
  4318  |                         j = j + 1;  |         |   776  |    176  |  2  |  159  |  [118,110,176,160,4]  |
  4319  |              resetPlaceHolder_2();  |         |   776  |    176  |  2  |  159  |  [118,110,176,160,4]  |
  4325  |                         R = R + 2;  |      2  |   778  |    176  |  2  |  159  |  [118,110,176,160,4]  |
  4329  |                         j = j + 1;  |         |   778  |    176  |  2  |  160  |  [118,110,176,160,4]  |
  4330  |              resetPlaceHolder_2();  |         |   778  |    176  |  2  |  160  |  [118,110,176,160,4]  |
  4336  |                         R = R + 2;  |      2  |   780  |    176  |  2  |  160  |  [118,110,176,160,4]  |
  4340  |                         j = j + 1;  |         |   780  |    176  |  2  |  161  |  [118,110,176,160,4]  |
  4341  |              resetPlaceHolder_2();  |         |   780  |    176  |  2  |  161  |  [118,110,176,160,4]  |
  4347  |                         R = R + 2;  |      2  |   782  |    176  |  2  |  161  |  [118,110,176,160,4]  |
  4351  |                         j = j + 1;  |         |   782  |    176  |  2  |  162  |  [118,110,176,160,4]  |
  4352  |              resetPlaceHolder_2();  |         |   782  |    176  |  2  |  162  |  [118,110,176,160,4]  |
  4358  |                         R = R + 2;  |      2  |   784  |    176  |  2  |  162  |  [118,110,176,160,4]  |
  4362  |                         j = j + 1;  |         |   784  |    176  |  2  |  163  |  [118,110,176,160,4]  |
  4363  |              resetPlaceHolder_2();  |         |   784  |    176  |  2  |  163  |  [118,110,176,160,4]  |
  4369  |                         R = R + 2;  |      2  |   786  |    176  |  2  |  163  |  [118,110,176,160,4]  |
  4373  |                         j = j + 1;  |         |   786  |    176  |  2  |  164  |  [118,110,176,160,4]  |
  4374  |              resetPlaceHolder_2();  |         |   786  |    176  |  2  |  164  |  [118,110,176,160,4]  |
  4380  |                         R = R + 2;  |      2  |   788  |    176  |  2  |  164  |  [118,110,176,160,4]  |
  4384  |                         j = j + 1;  |         |   788  |    176  |  2  |  165  |  [118,110,176,160,4]  |
  4385  |              resetPlaceHolder_2();  |         |   788  |    176  |  2  |  165  |  [118,110,176,160,4]  |
  4391  |                         R = R + 2;  |      2  |   790  |    176  |  2  |  165  |  [118,110,176,160,4]  |
  4395  |                         j = j + 1;  |         |   790  |    176  |  2  |  166  |  [118,110,176,160,4]  |
  4396  |              resetPlaceHolder_2();  |         |   790  |    176  |  2  |  166  |  [118,110,176,160,4]  |
  4402  |                         R = R + 2;  |      2  |   792  |    176  |  2  |  166  |  [118,110,176,160,4]  |
  4406  |                         j = j + 1;  |         |   792  |    176  |  2  |  167  |  [118,110,176,160,4]  |
  4407  |              resetPlaceHolder_2();  |         |   792  |    176  |  2  |  167  |  [118,110,176,160,4]  |
  4413  |                         R = R + 2;  |      2  |   794  |    176  |  2  |  167  |  [118,110,176,160,4]  |
  4417  |                         j = j + 1;  |         |   794  |    176  |  2  |  168  |  [118,110,176,160,4]  |
  4418  |              resetPlaceHolder_2();  |         |   794  |    176  |  2  |  168  |  [118,110,176,160,4]  |
  4424  |                         R = R + 2;  |      2  |   796  |    176  |  2  |  168  |  [118,110,176,160,4]  |
  4428  |                         j = j + 1;  |         |   796  |    176  |  2  |  169  |  [118,110,176,160,4]  |
  4429  |              resetPlaceHolder_2();  |         |   796  |    176  |  2  |  169  |  [118,110,176,160,4]  |
  4435  |                         R = R + 2;  |      2  |   798  |    176  |  2  |  169  |  [118,110,176,160,4]  |
  4439  |                         j = j + 1;  |         |   798  |    176  |  2  |  170  |  [118,110,176,160,4]  |
  4440  |              resetPlaceHolder_2();  |         |   798  |    176  |  2  |  170  |  [118,110,176,160,4]  |
  4446  |                         R = R + 2;  |      2  |   800  |    176  |  2  |  170  |  [118,110,176,160,4]  |
  4450  |                         j = j + 1;  |         |   800  |    176  |  2  |  171  |  [118,110,176,160,4]  |
  4451  |              resetPlaceHolder_2();  |         |   800  |    176  |  2  |  171  |  [118,110,176,160,4]  |
  4457  |                         R = R + 2;  |      2  |   802  |    176  |  2  |  171  |  [118,110,176,160,4]  |
  4461  |                         j = j + 1;  |         |   802  |    176  |  2  |  172  |  [118,110,176,160,4]  |
  4462  |              resetPlaceHolder_2();  |         |   802  |    176  |  2  |  172  |  [118,110,176,160,4]  |
  4468  |                         R = R + 2;  |      2  |   804  |    176  |  2  |  172  |  [118,110,176,160,4]  |
  4472  |                         j = j + 1;  |         |   804  |    176  |  2  |  173  |  [118,110,176,160,4]  |
  4473  |              resetPlaceHolder_2();  |         |   804  |    176  |  2  |  173  |  [118,110,176,160,4]  |
  4479  |                         R = R + 2;  |      2  |   806  |    176  |  2  |  173  |  [118,110,176,160,4]  |
  4483  |                         j = j + 1;  |         |   806  |    176  |  2  |  174  |  [118,110,176,160,4]  |
  4484  |              resetPlaceHolder_2();  |         |   806  |    176  |  2  |  174  |  [118,110,176,160,4]  |
  4490  |                         R = R + 2;  |      2  |   808  |    176  |  2  |  174  |  [118,110,176,160,4]  |
  4494  |                         j = j + 1;  |         |   808  |    176  |  2  |  175  |  [118,110,176,160,4]  |
  4495  |              resetPlaceHolder_2();  |         |   808  |    176  |  2  |  175  |  [118,110,176,160,4]  |
  4501  |                         R = R + 2;  |      2  |   810  |    176  |  2  |  175  |  [118,110,176,160,4]  |
  4505  |                         j = j + 1;  |         |   810  |    176  |  2  |  176  |  [118,110,176,160,4]  |
  4506  |              resetPlaceHolder_2();  |         |   810  |    176  |  2  |  176  |  [118,110,176,160,4]  |
  4512  |                         R = R + 1;  |      1  |   811  |    176  |  2  |  176  |  [118,110,176,160,4]  |
  4516  |                         i = i + 1;  |         |   811  |    176  |  3  |  176  |  [118,110,176,160,4]  |
  4517  |              resetPlaceHolder_1();  |         |   811  |    176  |  3  |  176  |  [118,110,176,160,4]  |
  4523  |      entry = arrayRead(sorted, i);  |         |   811  |    160  |  3  |  176  |  [118,110,176,160,4]  |
  4525  |                         int j = 0;  |         |   811  |    160  |  3  |    0  |  [118,110,176,160,4]  |
  4531  |                         R = R + 2;  |      2  |   813  |    160  |  3  |    0  |  [118,110,176,160,4]  |
  4535  |                         j = j + 1;  |         |   813  |    160  |  3  |    1  |  [118,110,176,160,4]  |
  4536  |              resetPlaceHolder_2();  |         |   813  |    160  |  3  |    1  |  [118,110,176,160,4]  |
  4542  |                         R = R + 2;  |      2  |   815  |    160  |  3  |    1  |  [118,110,176,160,4]  |
  4546  |                         j = j + 1;  |         |   815  |    160  |  3  |    2  |  [118,110,176,160,4]  |
  4547  |              resetPlaceHolder_2();  |         |   815  |    160  |  3  |    2  |  [118,110,176,160,4]  |
  4553  |                         R = R + 2;  |      2  |   817  |    160  |  3  |    2  |  [118,110,176,160,4]  |
  4557  |                         j = j + 1;  |         |   817  |    160  |  3  |    3  |  [118,110,176,160,4]  |
  4558  |              resetPlaceHolder_2();  |         |   817  |    160  |  3  |    3  |  [118,110,176,160,4]  |
  4564  |                         R = R + 2;  |      2  |   819  |    160  |  3  |    3  |  [118,110,176,160,4]  |
  4568  |                         j = j + 1;  |         |   819  |    160  |  3  |    4  |  [118,110,176,160,4]  |
  4569  |              resetPlaceHolder_2();  |         |   819  |    160  |  3  |    4  |  [118,110,176,160,4]  |
  4575  |                         R = R + 2;  |      2  |   821  |    160  |  3  |    4  |  [118,110,176,160,4]  |
  4579  |                         j = j + 1;  |         |   821  |    160  |  3  |    5  |  [118,110,176,160,4]  |
  4580  |              resetPlaceHolder_2();  |         |   821  |    160  |  3  |    5  |  [118,110,176,160,4]  |
  4586  |                         R = R + 2;  |      2  |   823  |    160  |  3  |    5  |  [118,110,176,160,4]  |
  4590  |                         j = j + 1;  |         |   823  |    160  |  3  |    6  |  [118,110,176,160,4]  |
  4591  |              resetPlaceHolder_2();  |         |   823  |    160  |  3  |    6  |  [118,110,176,160,4]  |
  4597  |                         R = R + 2;  |      2  |   825  |    160  |  3  |    6  |  [118,110,176,160,4]  |
  4601  |                         j = j + 1;  |         |   825  |    160  |  3  |    7  |  [118,110,176,160,4]  |
  4602  |              resetPlaceHolder_2();  |         |   825  |    160  |  3  |    7  |  [118,110,176,160,4]  |
  4608  |                         R = R + 2;  |      2  |   827  |    160  |  3  |    7  |  [118,110,176,160,4]  |
  4612  |                         j = j + 1;  |         |   827  |    160  |  3  |    8  |  [118,110,176,160,4]  |
  4613  |              resetPlaceHolder_2();  |         |   827  |    160  |  3  |    8  |  [118,110,176,160,4]  |
  4619  |                         R = R + 2;  |      2  |   829  |    160  |  3  |    8  |  [118,110,176,160,4]  |
  4623  |                         j = j + 1;  |         |   829  |    160  |  3  |    9  |  [118,110,176,160,4]  |
  4624  |              resetPlaceHolder_2();  |         |   829  |    160  |  3  |    9  |  [118,110,176,160,4]  |
  4630  |                         R = R + 2;  |      2  |   831  |    160  |  3  |    9  |  [118,110,176,160,4]  |
  4634  |                         j = j + 1;  |         |   831  |    160  |  3  |   10  |  [118,110,176,160,4]  |
  4635  |              resetPlaceHolder_2();  |         |   831  |    160  |  3  |   10  |  [118,110,176,160,4]  |
  4641  |                         R = R + 2;  |      2  |   833  |    160  |  3  |   10  |  [118,110,176,160,4]  |
  4645  |                         j = j + 1;  |         |   833  |    160  |  3  |   11  |  [118,110,176,160,4]  |
  4646  |              resetPlaceHolder_2();  |         |   833  |    160  |  3  |   11  |  [118,110,176,160,4]  |
  4652  |                         R = R + 2;  |      2  |   835  |    160  |  3  |   11  |  [118,110,176,160,4]  |
  4656  |                         j = j + 1;  |         |   835  |    160  |  3  |   12  |  [118,110,176,160,4]  |
  4657  |              resetPlaceHolder_2();  |         |   835  |    160  |  3  |   12  |  [118,110,176,160,4]  |
  4663  |                         R = R + 2;  |      2  |   837  |    160  |  3  |   12  |  [118,110,176,160,4]  |
  4667  |                         j = j + 1;  |         |   837  |    160  |  3  |   13  |  [118,110,176,160,4]  |
  4668  |              resetPlaceHolder_2();  |         |   837  |    160  |  3  |   13  |  [118,110,176,160,4]  |
  4674  |                         R = R + 2;  |      2  |   839  |    160  |  3  |   13  |  [118,110,176,160,4]  |
  4678  |                         j = j + 1;  |         |   839  |    160  |  3  |   14  |  [118,110,176,160,4]  |
  4679  |              resetPlaceHolder_2();  |         |   839  |    160  |  3  |   14  |  [118,110,176,160,4]  |
  4685  |                         R = R + 2;  |      2  |   841  |    160  |  3  |   14  |  [118,110,176,160,4]  |
  4689  |                         j = j + 1;  |         |   841  |    160  |  3  |   15  |  [118,110,176,160,4]  |
  4690  |              resetPlaceHolder_2();  |         |   841  |    160  |  3  |   15  |  [118,110,176,160,4]  |
  4696  |                         R = R + 2;  |      2  |   843  |    160  |  3  |   15  |  [118,110,176,160,4]  |
  4700  |                         j = j + 1;  |         |   843  |    160  |  3  |   16  |  [118,110,176,160,4]  |
  4701  |              resetPlaceHolder_2();  |         |   843  |    160  |  3  |   16  |  [118,110,176,160,4]  |
  4707  |                         R = R + 2;  |      2  |   845  |    160  |  3  |   16  |  [118,110,176,160,4]  |
  4711  |                         j = j + 1;  |         |   845  |    160  |  3  |   17  |  [118,110,176,160,4]  |
  4712  |              resetPlaceHolder_2();  |         |   845  |    160  |  3  |   17  |  [118,110,176,160,4]  |
  4718  |                         R = R + 2;  |      2  |   847  |    160  |  3  |   17  |  [118,110,176,160,4]  |
  4722  |                         j = j + 1;  |         |   847  |    160  |  3  |   18  |  [118,110,176,160,4]  |
  4723  |              resetPlaceHolder_2();  |         |   847  |    160  |  3  |   18  |  [118,110,176,160,4]  |
  4729  |                         R = R + 2;  |      2  |   849  |    160  |  3  |   18  |  [118,110,176,160,4]  |
  4733  |                         j = j + 1;  |         |   849  |    160  |  3  |   19  |  [118,110,176,160,4]  |
  4734  |              resetPlaceHolder_2();  |         |   849  |    160  |  3  |   19  |  [118,110,176,160,4]  |
  4740  |                         R = R + 2;  |      2  |   851  |    160  |  3  |   19  |  [118,110,176,160,4]  |
  4744  |                         j = j + 1;  |         |   851  |    160  |  3  |   20  |  [118,110,176,160,4]  |
  4745  |              resetPlaceHolder_2();  |         |   851  |    160  |  3  |   20  |  [118,110,176,160,4]  |
  4751  |                         R = R + 2;  |      2  |   853  |    160  |  3  |   20  |  [118,110,176,160,4]  |
  4755  |                         j = j + 1;  |         |   853  |    160  |  3  |   21  |  [118,110,176,160,4]  |
  4756  |              resetPlaceHolder_2();  |         |   853  |    160  |  3  |   21  |  [118,110,176,160,4]  |
  4762  |                         R = R + 2;  |      2  |   855  |    160  |  3  |   21  |  [118,110,176,160,4]  |
  4766  |                         j = j + 1;  |         |   855  |    160  |  3  |   22  |  [118,110,176,160,4]  |
  4767  |              resetPlaceHolder_2();  |         |   855  |    160  |  3  |   22  |  [118,110,176,160,4]  |
  4773  |                         R = R + 2;  |      2  |   857  |    160  |  3  |   22  |  [118,110,176,160,4]  |
  4777  |                         j = j + 1;  |         |   857  |    160  |  3  |   23  |  [118,110,176,160,4]  |
  4778  |              resetPlaceHolder_2();  |         |   857  |    160  |  3  |   23  |  [118,110,176,160,4]  |
  4784  |                         R = R + 2;  |      2  |   859  |    160  |  3  |   23  |  [118,110,176,160,4]  |
  4788  |                         j = j + 1;  |         |   859  |    160  |  3  |   24  |  [118,110,176,160,4]  |
  4789  |              resetPlaceHolder_2();  |         |   859  |    160  |  3  |   24  |  [118,110,176,160,4]  |
  4795  |                         R = R + 2;  |      2  |   861  |    160  |  3  |   24  |  [118,110,176,160,4]  |
  4799  |                         j = j + 1;  |         |   861  |    160  |  3  |   25  |  [118,110,176,160,4]  |
  4800  |              resetPlaceHolder_2();  |         |   861  |    160  |  3  |   25  |  [118,110,176,160,4]  |
  4806  |                         R = R + 2;  |      2  |   863  |    160  |  3  |   25  |  [118,110,176,160,4]  |
  4810  |                         j = j + 1;  |         |   863  |    160  |  3  |   26  |  [118,110,176,160,4]  |
  4811  |              resetPlaceHolder_2();  |         |   863  |    160  |  3  |   26  |  [118,110,176,160,4]  |
  4817  |                         R = R + 2;  |      2  |   865  |    160  |  3  |   26  |  [118,110,176,160,4]  |
  4821  |                         j = j + 1;  |         |   865  |    160  |  3  |   27  |  [118,110,176,160,4]  |
  4822  |              resetPlaceHolder_2();  |         |   865  |    160  |  3  |   27  |  [118,110,176,160,4]  |
  4828  |                         R = R + 2;  |      2  |   867  |    160  |  3  |   27  |  [118,110,176,160,4]  |
  4832  |                         j = j + 1;  |         |   867  |    160  |  3  |   28  |  [118,110,176,160,4]  |
  4833  |              resetPlaceHolder_2();  |         |   867  |    160  |  3  |   28  |  [118,110,176,160,4]  |
  4839  |                         R = R + 2;  |      2  |   869  |    160  |  3  |   28  |  [118,110,176,160,4]  |
  4843  |                         j = j + 1;  |         |   869  |    160  |  3  |   29  |  [118,110,176,160,4]  |
  4844  |              resetPlaceHolder_2();  |         |   869  |    160  |  3  |   29  |  [118,110,176,160,4]  |
  4850  |                         R = R + 2;  |      2  |   871  |    160  |  3  |   29  |  [118,110,176,160,4]  |
  4854  |                         j = j + 1;  |         |   871  |    160  |  3  |   30  |  [118,110,176,160,4]  |
  4855  |              resetPlaceHolder_2();  |         |   871  |    160  |  3  |   30  |  [118,110,176,160,4]  |
  4861  |                         R = R + 2;  |      2  |   873  |    160  |  3  |   30  |  [118,110,176,160,4]  |
  4865  |                         j = j + 1;  |         |   873  |    160  |  3  |   31  |  [118,110,176,160,4]  |
  4866  |              resetPlaceHolder_2();  |         |   873  |    160  |  3  |   31  |  [118,110,176,160,4]  |
  4872  |                         R = R + 2;  |      2  |   875  |    160  |  3  |   31  |  [118,110,176,160,4]  |
  4876  |                         j = j + 1;  |         |   875  |    160  |  3  |   32  |  [118,110,176,160,4]  |
  4877  |              resetPlaceHolder_2();  |         |   875  |    160  |  3  |   32  |  [118,110,176,160,4]  |
  4883  |                         R = R + 2;  |      2  |   877  |    160  |  3  |   32  |  [118,110,176,160,4]  |
  4887  |                         j = j + 1;  |         |   877  |    160  |  3  |   33  |  [118,110,176,160,4]  |
  4888  |              resetPlaceHolder_2();  |         |   877  |    160  |  3  |   33  |  [118,110,176,160,4]  |
  4894  |                         R = R + 2;  |      2  |   879  |    160  |  3  |   33  |  [118,110,176,160,4]  |
  4898  |                         j = j + 1;  |         |   879  |    160  |  3  |   34  |  [118,110,176,160,4]  |
  4899  |              resetPlaceHolder_2();  |         |   879  |    160  |  3  |   34  |  [118,110,176,160,4]  |
  4905  |                         R = R + 2;  |      2  |   881  |    160  |  3  |   34  |  [118,110,176,160,4]  |
  4909  |                         j = j + 1;  |         |   881  |    160  |  3  |   35  |  [118,110,176,160,4]  |
  4910  |              resetPlaceHolder_2();  |         |   881  |    160  |  3  |   35  |  [118,110,176,160,4]  |
  4916  |                         R = R + 2;  |      2  |   883  |    160  |  3  |   35  |  [118,110,176,160,4]  |
  4920  |                         j = j + 1;  |         |   883  |    160  |  3  |   36  |  [118,110,176,160,4]  |
  4921  |              resetPlaceHolder_2();  |         |   883  |    160  |  3  |   36  |  [118,110,176,160,4]  |
  4927  |                         R = R + 2;  |      2  |   885  |    160  |  3  |   36  |  [118,110,176,160,4]  |
  4931  |                         j = j + 1;  |         |   885  |    160  |  3  |   37  |  [118,110,176,160,4]  |
  4932  |              resetPlaceHolder_2();  |         |   885  |    160  |  3  |   37  |  [118,110,176,160,4]  |
  4938  |                         R = R + 2;  |      2  |   887  |    160  |  3  |   37  |  [118,110,176,160,4]  |
  4942  |                         j = j + 1;  |         |   887  |    160  |  3  |   38  |  [118,110,176,160,4]  |
  4943  |              resetPlaceHolder_2();  |         |   887  |    160  |  3  |   38  |  [118,110,176,160,4]  |
  4949  |                         R = R + 2;  |      2  |   889  |    160  |  3  |   38  |  [118,110,176,160,4]  |
  4953  |                         j = j + 1;  |         |   889  |    160  |  3  |   39  |  [118,110,176,160,4]  |
  4954  |              resetPlaceHolder_2();  |         |   889  |    160  |  3  |   39  |  [118,110,176,160,4]  |
  4960  |                         R = R + 2;  |      2  |   891  |    160  |  3  |   39  |  [118,110,176,160,4]  |
  4964  |                         j = j + 1;  |         |   891  |    160  |  3  |   40  |  [118,110,176,160,4]  |
  4965  |              resetPlaceHolder_2();  |         |   891  |    160  |  3  |   40  |  [118,110,176,160,4]  |
  4971  |                         R = R + 2;  |      2  |   893  |    160  |  3  |   40  |  [118,110,176,160,4]  |
  4975  |                         j = j + 1;  |         |   893  |    160  |  3  |   41  |  [118,110,176,160,4]  |
  4976  |              resetPlaceHolder_2();  |         |   893  |    160  |  3  |   41  |  [118,110,176,160,4]  |
  4982  |                         R = R + 2;  |      2  |   895  |    160  |  3  |   41  |  [118,110,176,160,4]  |
  4986  |                         j = j + 1;  |         |   895  |    160  |  3  |   42  |  [118,110,176,160,4]  |
  4987  |              resetPlaceHolder_2();  |         |   895  |    160  |  3  |   42  |  [118,110,176,160,4]  |
  4993  |                         R = R + 2;  |      2  |   897  |    160  |  3  |   42  |  [118,110,176,160,4]  |
  4997  |                         j = j + 1;  |         |   897  |    160  |  3  |   43  |  [118,110,176,160,4]  |
  4998  |              resetPlaceHolder_2();  |         |   897  |    160  |  3  |   43  |  [118,110,176,160,4]  |
  5004  |                         R = R + 2;  |      2  |   899  |    160  |  3  |   43  |  [118,110,176,160,4]  |
  5008  |                         j = j + 1;  |         |   899  |    160  |  3  |   44  |  [118,110,176,160,4]  |
  5009  |              resetPlaceHolder_2();  |         |   899  |    160  |  3  |   44  |  [118,110,176,160,4]  |
  5015  |                         R = R + 2;  |      2  |   901  |    160  |  3  |   44  |  [118,110,176,160,4]  |
  5019  |                         j = j + 1;  |         |   901  |    160  |  3  |   45  |  [118,110,176,160,4]  |
  5020  |              resetPlaceHolder_2();  |         |   901  |    160  |  3  |   45  |  [118,110,176,160,4]  |
  5026  |                         R = R + 2;  |      2  |   903  |    160  |  3  |   45  |  [118,110,176,160,4]  |
  5030  |                         j = j + 1;  |         |   903  |    160  |  3  |   46  |  [118,110,176,160,4]  |
  5031  |              resetPlaceHolder_2();  |         |   903  |    160  |  3  |   46  |  [118,110,176,160,4]  |
  5037  |                         R = R + 2;  |      2  |   905  |    160  |  3  |   46  |  [118,110,176,160,4]  |
  5041  |                         j = j + 1;  |         |   905  |    160  |  3  |   47  |  [118,110,176,160,4]  |
  5042  |              resetPlaceHolder_2();  |         |   905  |    160  |  3  |   47  |  [118,110,176,160,4]  |
  5048  |                         R = R + 2;  |      2  |   907  |    160  |  3  |   47  |  [118,110,176,160,4]  |
  5052  |                         j = j + 1;  |         |   907  |    160  |  3  |   48  |  [118,110,176,160,4]  |
  5053  |              resetPlaceHolder_2();  |         |   907  |    160  |  3  |   48  |  [118,110,176,160,4]  |
  5059  |                         R = R + 2;  |      2  |   909  |    160  |  3  |   48  |  [118,110,176,160,4]  |
  5063  |                         j = j + 1;  |         |   909  |    160  |  3  |   49  |  [118,110,176,160,4]  |
  5064  |              resetPlaceHolder_2();  |         |   909  |    160  |  3  |   49  |  [118,110,176,160,4]  |
  5070  |                         R = R + 2;  |      2  |   911  |    160  |  3  |   49  |  [118,110,176,160,4]  |
  5074  |                         j = j + 1;  |         |   911  |    160  |  3  |   50  |  [118,110,176,160,4]  |
  5075  |              resetPlaceHolder_2();  |         |   911  |    160  |  3  |   50  |  [118,110,176,160,4]  |
  5081  |                         R = R + 2;  |      2  |   913  |    160  |  3  |   50  |  [118,110,176,160,4]  |
  5085  |                         j = j + 1;  |         |   913  |    160  |  3  |   51  |  [118,110,176,160,4]  |
  5086  |              resetPlaceHolder_2();  |         |   913  |    160  |  3  |   51  |  [118,110,176,160,4]  |
  5092  |                         R = R + 2;  |      2  |   915  |    160  |  3  |   51  |  [118,110,176,160,4]  |
  5096  |                         j = j + 1;  |         |   915  |    160  |  3  |   52  |  [118,110,176,160,4]  |
  5097  |              resetPlaceHolder_2();  |         |   915  |    160  |  3  |   52  |  [118,110,176,160,4]  |
  5103  |                         R = R + 2;  |      2  |   917  |    160  |  3  |   52  |  [118,110,176,160,4]  |
  5107  |                         j = j + 1;  |         |   917  |    160  |  3  |   53  |  [118,110,176,160,4]  |
  5108  |              resetPlaceHolder_2();  |         |   917  |    160  |  3  |   53  |  [118,110,176,160,4]  |
  5114  |                         R = R + 2;  |      2  |   919  |    160  |  3  |   53  |  [118,110,176,160,4]  |
  5118  |                         j = j + 1;  |         |   919  |    160  |  3  |   54  |  [118,110,176,160,4]  |
  5119  |              resetPlaceHolder_2();  |         |   919  |    160  |  3  |   54  |  [118,110,176,160,4]  |
  5125  |                         R = R + 2;  |      2  |   921  |    160  |  3  |   54  |  [118,110,176,160,4]  |
  5129  |                         j = j + 1;  |         |   921  |    160  |  3  |   55  |  [118,110,176,160,4]  |
  5130  |              resetPlaceHolder_2();  |         |   921  |    160  |  3  |   55  |  [118,110,176,160,4]  |
  5136  |                         R = R + 2;  |      2  |   923  |    160  |  3  |   55  |  [118,110,176,160,4]  |
  5140  |                         j = j + 1;  |         |   923  |    160  |  3  |   56  |  [118,110,176,160,4]  |
  5141  |              resetPlaceHolder_2();  |         |   923  |    160  |  3  |   56  |  [118,110,176,160,4]  |
  5147  |                         R = R + 2;  |      2  |   925  |    160  |  3  |   56  |  [118,110,176,160,4]  |
  5151  |                         j = j + 1;  |         |   925  |    160  |  3  |   57  |  [118,110,176,160,4]  |
  5152  |              resetPlaceHolder_2();  |         |   925  |    160  |  3  |   57  |  [118,110,176,160,4]  |
  5158  |                         R = R + 2;  |      2  |   927  |    160  |  3  |   57  |  [118,110,176,160,4]  |
  5162  |                         j = j + 1;  |         |   927  |    160  |  3  |   58  |  [118,110,176,160,4]  |
  5163  |              resetPlaceHolder_2();  |         |   927  |    160  |  3  |   58  |  [118,110,176,160,4]  |
  5169  |                         R = R + 2;  |      2  |   929  |    160  |  3  |   58  |  [118,110,176,160,4]  |
  5173  |                         j = j + 1;  |         |   929  |    160  |  3  |   59  |  [118,110,176,160,4]  |
  5174  |              resetPlaceHolder_2();  |         |   929  |    160  |  3  |   59  |  [118,110,176,160,4]  |
  5180  |                         R = R + 2;  |      2  |   931  |    160  |  3  |   59  |  [118,110,176,160,4]  |
  5184  |                         j = j + 1;  |         |   931  |    160  |  3  |   60  |  [118,110,176,160,4]  |
  5185  |              resetPlaceHolder_2();  |         |   931  |    160  |  3  |   60  |  [118,110,176,160,4]  |
  5191  |                         R = R + 2;  |      2  |   933  |    160  |  3  |   60  |  [118,110,176,160,4]  |
  5195  |                         j = j + 1;  |         |   933  |    160  |  3  |   61  |  [118,110,176,160,4]  |
  5196  |              resetPlaceHolder_2();  |         |   933  |    160  |  3  |   61  |  [118,110,176,160,4]  |
  5202  |                         R = R + 2;  |      2  |   935  |    160  |  3  |   61  |  [118,110,176,160,4]  |
  5206  |                         j = j + 1;  |         |   935  |    160  |  3  |   62  |  [118,110,176,160,4]  |
  5207  |              resetPlaceHolder_2();  |         |   935  |    160  |  3  |   62  |  [118,110,176,160,4]  |
  5213  |                         R = R + 2;  |      2  |   937  |    160  |  3  |   62  |  [118,110,176,160,4]  |
  5217  |                         j = j + 1;  |         |   937  |    160  |  3  |   63  |  [118,110,176,160,4]  |
  5218  |              resetPlaceHolder_2();  |         |   937  |    160  |  3  |   63  |  [118,110,176,160,4]  |
  5224  |                         R = R + 2;  |      2  |   939  |    160  |  3  |   63  |  [118,110,176,160,4]  |
  5228  |                         j = j + 1;  |         |   939  |    160  |  3  |   64  |  [118,110,176,160,4]  |
  5229  |              resetPlaceHolder_2();  |         |   939  |    160  |  3  |   64  |  [118,110,176,160,4]  |
  5235  |                         R = R + 2;  |      2  |   941  |    160  |  3  |   64  |  [118,110,176,160,4]  |
  5239  |                         j = j + 1;  |         |   941  |    160  |  3  |   65  |  [118,110,176,160,4]  |
  5240  |              resetPlaceHolder_2();  |         |   941  |    160  |  3  |   65  |  [118,110,176,160,4]  |
  5246  |                         R = R + 2;  |      2  |   943  |    160  |  3  |   65  |  [118,110,176,160,4]  |
  5250  |                         j = j + 1;  |         |   943  |    160  |  3  |   66  |  [118,110,176,160,4]  |
  5251  |              resetPlaceHolder_2();  |         |   943  |    160  |  3  |   66  |  [118,110,176,160,4]  |
  5257  |                         R = R + 2;  |      2  |   945  |    160  |  3  |   66  |  [118,110,176,160,4]  |
  5261  |                         j = j + 1;  |         |   945  |    160  |  3  |   67  |  [118,110,176,160,4]  |
  5262  |              resetPlaceHolder_2();  |         |   945  |    160  |  3  |   67  |  [118,110,176,160,4]  |
  5268  |                         R = R + 2;  |      2  |   947  |    160  |  3  |   67  |  [118,110,176,160,4]  |
  5272  |                         j = j + 1;  |         |   947  |    160  |  3  |   68  |  [118,110,176,160,4]  |
  5273  |              resetPlaceHolder_2();  |         |   947  |    160  |  3  |   68  |  [118,110,176,160,4]  |
  5279  |                         R = R + 2;  |      2  |   949  |    160  |  3  |   68  |  [118,110,176,160,4]  |
  5283  |                         j = j + 1;  |         |   949  |    160  |  3  |   69  |  [118,110,176,160,4]  |
  5284  |              resetPlaceHolder_2();  |         |   949  |    160  |  3  |   69  |  [118,110,176,160,4]  |
  5290  |                         R = R + 2;  |      2  |   951  |    160  |  3  |   69  |  [118,110,176,160,4]  |
  5294  |                         j = j + 1;  |         |   951  |    160  |  3  |   70  |  [118,110,176,160,4]  |
  5295  |              resetPlaceHolder_2();  |         |   951  |    160  |  3  |   70  |  [118,110,176,160,4]  |
  5301  |                         R = R + 2;  |      2  |   953  |    160  |  3  |   70  |  [118,110,176,160,4]  |
  5305  |                         j = j + 1;  |         |   953  |    160  |  3  |   71  |  [118,110,176,160,4]  |
  5306  |              resetPlaceHolder_2();  |         |   953  |    160  |  3  |   71  |  [118,110,176,160,4]  |
  5312  |                         R = R + 2;  |      2  |   955  |    160  |  3  |   71  |  [118,110,176,160,4]  |
  5316  |                         j = j + 1;  |         |   955  |    160  |  3  |   72  |  [118,110,176,160,4]  |
  5317  |              resetPlaceHolder_2();  |         |   955  |    160  |  3  |   72  |  [118,110,176,160,4]  |
  5323  |                         R = R + 2;  |      2  |   957  |    160  |  3  |   72  |  [118,110,176,160,4]  |
  5327  |                         j = j + 1;  |         |   957  |    160  |  3  |   73  |  [118,110,176,160,4]  |
  5328  |              resetPlaceHolder_2();  |         |   957  |    160  |  3  |   73  |  [118,110,176,160,4]  |
  5334  |                         R = R + 2;  |      2  |   959  |    160  |  3  |   73  |  [118,110,176,160,4]  |
  5338  |                         j = j + 1;  |         |   959  |    160  |  3  |   74  |  [118,110,176,160,4]  |
  5339  |              resetPlaceHolder_2();  |         |   959  |    160  |  3  |   74  |  [118,110,176,160,4]  |
  5345  |                         R = R + 2;  |      2  |   961  |    160  |  3  |   74  |  [118,110,176,160,4]  |
  5349  |                         j = j + 1;  |         |   961  |    160  |  3  |   75  |  [118,110,176,160,4]  |
  5350  |              resetPlaceHolder_2();  |         |   961  |    160  |  3  |   75  |  [118,110,176,160,4]  |
  5356  |                         R = R + 2;  |      2  |   963  |    160  |  3  |   75  |  [118,110,176,160,4]  |
  5360  |                         j = j + 1;  |         |   963  |    160  |  3  |   76  |  [118,110,176,160,4]  |
  5361  |              resetPlaceHolder_2();  |         |   963  |    160  |  3  |   76  |  [118,110,176,160,4]  |
  5367  |                         R = R + 2;  |      2  |   965  |    160  |  3  |   76  |  [118,110,176,160,4]  |
  5371  |                         j = j + 1;  |         |   965  |    160  |  3  |   77  |  [118,110,176,160,4]  |
  5372  |              resetPlaceHolder_2();  |         |   965  |    160  |  3  |   77  |  [118,110,176,160,4]  |
  5378  |                         R = R + 2;  |      2  |   967  |    160  |  3  |   77  |  [118,110,176,160,4]  |
  5382  |                         j = j + 1;  |         |   967  |    160  |  3  |   78  |  [118,110,176,160,4]  |
  5383  |              resetPlaceHolder_2();  |         |   967  |    160  |  3  |   78  |  [118,110,176,160,4]  |
  5389  |                         R = R + 2;  |      2  |   969  |    160  |  3  |   78  |  [118,110,176,160,4]  |
  5393  |                         j = j + 1;  |         |   969  |    160  |  3  |   79  |  [118,110,176,160,4]  |
  5394  |              resetPlaceHolder_2();  |         |   969  |    160  |  3  |   79  |  [118,110,176,160,4]  |
  5400  |                         R = R + 2;  |      2  |   971  |    160  |  3  |   79  |  [118,110,176,160,4]  |
  5404  |                         j = j + 1;  |         |   971  |    160  |  3  |   80  |  [118,110,176,160,4]  |
  5405  |              resetPlaceHolder_2();  |         |   971  |    160  |  3  |   80  |  [118,110,176,160,4]  |
  5411  |                         R = R + 2;  |      2  |   973  |    160  |  3  |   80  |  [118,110,176,160,4]  |
  5415  |                         j = j + 1;  |         |   973  |    160  |  3  |   81  |  [118,110,176,160,4]  |
  5416  |              resetPlaceHolder_2();  |         |   973  |    160  |  3  |   81  |  [118,110,176,160,4]  |
  5422  |                         R = R + 2;  |      2  |   975  |    160  |  3  |   81  |  [118,110,176,160,4]  |
  5426  |                         j = j + 1;  |         |   975  |    160  |  3  |   82  |  [118,110,176,160,4]  |
  5427  |              resetPlaceHolder_2();  |         |   975  |    160  |  3  |   82  |  [118,110,176,160,4]  |
  5433  |                         R = R + 2;  |      2  |   977  |    160  |  3  |   82  |  [118,110,176,160,4]  |
  5437  |                         j = j + 1;  |         |   977  |    160  |  3  |   83  |  [118,110,176,160,4]  |
  5438  |              resetPlaceHolder_2();  |         |   977  |    160  |  3  |   83  |  [118,110,176,160,4]  |
  5444  |                         R = R + 2;  |      2  |   979  |    160  |  3  |   83  |  [118,110,176,160,4]  |
  5448  |                         j = j + 1;  |         |   979  |    160  |  3  |   84  |  [118,110,176,160,4]  |
  5449  |              resetPlaceHolder_2();  |         |   979  |    160  |  3  |   84  |  [118,110,176,160,4]  |
  5455  |                         R = R + 2;  |      2  |   981  |    160  |  3  |   84  |  [118,110,176,160,4]  |
  5459  |                         j = j + 1;  |         |   981  |    160  |  3  |   85  |  [118,110,176,160,4]  |
  5460  |              resetPlaceHolder_2();  |         |   981  |    160  |  3  |   85  |  [118,110,176,160,4]  |
  5466  |                         R = R + 2;  |      2  |   983  |    160  |  3  |   85  |  [118,110,176,160,4]  |
  5470  |                         j = j + 1;  |         |   983  |    160  |  3  |   86  |  [118,110,176,160,4]  |
  5471  |              resetPlaceHolder_2();  |         |   983  |    160  |  3  |   86  |  [118,110,176,160,4]  |
  5477  |                         R = R + 2;  |      2  |   985  |    160  |  3  |   86  |  [118,110,176,160,4]  |
  5481  |                         j = j + 1;  |         |   985  |    160  |  3  |   87  |  [118,110,176,160,4]  |
  5482  |              resetPlaceHolder_2();  |         |   985  |    160  |  3  |   87  |  [118,110,176,160,4]  |
  5488  |                         R = R + 2;  |      2  |   987  |    160  |  3  |   87  |  [118,110,176,160,4]  |
  5492  |                         j = j + 1;  |         |   987  |    160  |  3  |   88  |  [118,110,176,160,4]  |
  5493  |              resetPlaceHolder_2();  |         |   987  |    160  |  3  |   88  |  [118,110,176,160,4]  |
  5499  |                         R = R + 2;  |      2  |   989  |    160  |  3  |   88  |  [118,110,176,160,4]  |
  5503  |                         j = j + 1;  |         |   989  |    160  |  3  |   89  |  [118,110,176,160,4]  |
  5504  |              resetPlaceHolder_2();  |         |   989  |    160  |  3  |   89  |  [118,110,176,160,4]  |
  5510  |                         R = R + 2;  |      2  |   991  |    160  |  3  |   89  |  [118,110,176,160,4]  |
  5514  |                         j = j + 1;  |         |   991  |    160  |  3  |   90  |  [118,110,176,160,4]  |
  5515  |              resetPlaceHolder_2();  |         |   991  |    160  |  3  |   90  |  [118,110,176,160,4]  |
  5521  |                         R = R + 2;  |      2  |   993  |    160  |  3  |   90  |  [118,110,176,160,4]  |
  5525  |                         j = j + 1;  |         |   993  |    160  |  3  |   91  |  [118,110,176,160,4]  |
  5526  |              resetPlaceHolder_2();  |         |   993  |    160  |  3  |   91  |  [118,110,176,160,4]  |
  5532  |                         R = R + 2;  |      2  |   995  |    160  |  3  |   91  |  [118,110,176,160,4]  |
  5536  |                         j = j + 1;  |         |   995  |    160  |  3  |   92  |  [118,110,176,160,4]  |
  5537  |              resetPlaceHolder_2();  |         |   995  |    160  |  3  |   92  |  [118,110,176,160,4]  |
  5543  |                         R = R + 2;  |      2  |   997  |    160  |  3  |   92  |  [118,110,176,160,4]  |
  5547  |                         j = j + 1;  |         |   997  |    160  |  3  |   93  |  [118,110,176,160,4]  |
  5548  |              resetPlaceHolder_2();  |         |   997  |    160  |  3  |   93  |  [118,110,176,160,4]  |
  5554  |                         R = R + 2;  |      2  |   999  |    160  |  3  |   93  |  [118,110,176,160,4]  |
  5558  |                         j = j + 1;  |         |   999  |    160  |  3  |   94  |  [118,110,176,160,4]  |
  5559  |              resetPlaceHolder_2();  |         |   999  |    160  |  3  |   94  |  [118,110,176,160,4]  |
  5565  |                         R = R + 2;  |      2  |  1001  |    160  |  3  |   94  |  [118,110,176,160,4]  |
  5569  |                         j = j + 1;  |         |  1001  |    160  |  3  |   95  |  [118,110,176,160,4]  |
  5570  |              resetPlaceHolder_2();  |         |  1001  |    160  |  3  |   95  |  [118,110,176,160,4]  |
  5576  |                         R = R + 2;  |      2  |  1003  |    160  |  3  |   95  |  [118,110,176,160,4]  |
  5580  |                         j = j + 1;  |         |  1003  |    160  |  3  |   96  |  [118,110,176,160,4]  |
  5581  |              resetPlaceHolder_2();  |         |  1003  |    160  |  3  |   96  |  [118,110,176,160,4]  |
  5587  |                         R = R + 2;  |      2  |  1005  |    160  |  3  |   96  |  [118,110,176,160,4]  |
  5591  |                         j = j + 1;  |         |  1005  |    160  |  3  |   97  |  [118,110,176,160,4]  |
  5592  |              resetPlaceHolder_2();  |         |  1005  |    160  |  3  |   97  |  [118,110,176,160,4]  |
  5598  |                         R = R + 2;  |      2  |  1007  |    160  |  3  |   97  |  [118,110,176,160,4]  |
  5602  |                         j = j + 1;  |         |  1007  |    160  |  3  |   98  |  [118,110,176,160,4]  |
  5603  |              resetPlaceHolder_2();  |         |  1007  |    160  |  3  |   98  |  [118,110,176,160,4]  |
  5609  |                         R = R + 2;  |      2  |  1009  |    160  |  3  |   98  |  [118,110,176,160,4]  |
  5613  |                         j = j + 1;  |         |  1009  |    160  |  3  |   99  |  [118,110,176,160,4]  |
  5614  |              resetPlaceHolder_2();  |         |  1009  |    160  |  3  |   99  |  [118,110,176,160,4]  |
  5620  |                         R = R + 2;  |      2  |  1011  |    160  |  3  |   99  |  [118,110,176,160,4]  |
  5624  |                         j = j + 1;  |         |  1011  |    160  |  3  |  100  |  [118,110,176,160,4]  |
  5625  |              resetPlaceHolder_2();  |         |  1011  |    160  |  3  |  100  |  [118,110,176,160,4]  |
  5631  |                         R = R + 2;  |      2  |  1013  |    160  |  3  |  100  |  [118,110,176,160,4]  |
  5635  |                         j = j + 1;  |         |  1013  |    160  |  3  |  101  |  [118,110,176,160,4]  |
  5636  |              resetPlaceHolder_2();  |         |  1013  |    160  |  3  |  101  |  [118,110,176,160,4]  |
  5642  |                         R = R + 2;  |      2  |  1015  |    160  |  3  |  101  |  [118,110,176,160,4]  |
  5646  |                         j = j + 1;  |         |  1015  |    160  |  3  |  102  |  [118,110,176,160,4]  |
  5647  |              resetPlaceHolder_2();  |         |  1015  |    160  |  3  |  102  |  [118,110,176,160,4]  |
  5653  |                         R = R + 2;  |      2  |  1017  |    160  |  3  |  102  |  [118,110,176,160,4]  |
  5657  |                         j = j + 1;  |         |  1017  |    160  |  3  |  103  |  [118,110,176,160,4]  |
  5658  |              resetPlaceHolder_2();  |         |  1017  |    160  |  3  |  103  |  [118,110,176,160,4]  |
  5664  |                         R = R + 2;  |      2  |  1019  |    160  |  3  |  103  |  [118,110,176,160,4]  |
  5668  |                         j = j + 1;  |         |  1019  |    160  |  3  |  104  |  [118,110,176,160,4]  |
  5669  |              resetPlaceHolder_2();  |         |  1019  |    160  |  3  |  104  |  [118,110,176,160,4]  |
  5675  |                         R = R + 2;  |      2  |  1021  |    160  |  3  |  104  |  [118,110,176,160,4]  |
  5679  |                         j = j + 1;  |         |  1021  |    160  |  3  |  105  |  [118,110,176,160,4]  |
  5680  |              resetPlaceHolder_2();  |         |  1021  |    160  |  3  |  105  |  [118,110,176,160,4]  |
  5686  |                         R = R + 2;  |      2  |  1023  |    160  |  3  |  105  |  [118,110,176,160,4]  |
  5690  |                         j = j + 1;  |         |  1023  |    160  |  3  |  106  |  [118,110,176,160,4]  |
  5691  |              resetPlaceHolder_2();  |         |  1023  |    160  |  3  |  106  |  [118,110,176,160,4]  |
  5697  |                         R = R + 2;  |      2  |  1025  |    160  |  3  |  106  |  [118,110,176,160,4]  |
  5701  |                         j = j + 1;  |         |  1025  |    160  |  3  |  107  |  [118,110,176,160,4]  |
  5702  |              resetPlaceHolder_2();  |         |  1025  |    160  |  3  |  107  |  [118,110,176,160,4]  |
  5708  |                         R = R + 2;  |      2  |  1027  |    160  |  3  |  107  |  [118,110,176,160,4]  |
  5712  |                         j = j + 1;  |         |  1027  |    160  |  3  |  108  |  [118,110,176,160,4]  |
  5713  |              resetPlaceHolder_2();  |         |  1027  |    160  |  3  |  108  |  [118,110,176,160,4]  |
  5719  |                         R = R + 2;  |      2  |  1029  |    160  |  3  |  108  |  [118,110,176,160,4]  |
  5723  |                         j = j + 1;  |         |  1029  |    160  |  3  |  109  |  [118,110,176,160,4]  |
  5724  |              resetPlaceHolder_2();  |         |  1029  |    160  |  3  |  109  |  [118,110,176,160,4]  |
  5730  |                         R = R + 2;  |      2  |  1031  |    160  |  3  |  109  |  [118,110,176,160,4]  |
  5734  |                         j = j + 1;  |         |  1031  |    160  |  3  |  110  |  [118,110,176,160,4]  |
  5735  |              resetPlaceHolder_2();  |         |  1031  |    160  |  3  |  110  |  [118,110,176,160,4]  |
  5741  |                         R = R + 2;  |      2  |  1033  |    160  |  3  |  110  |  [118,110,176,160,4]  |
  5745  |                         j = j + 1;  |         |  1033  |    160  |  3  |  111  |  [118,110,176,160,4]  |
  5746  |              resetPlaceHolder_2();  |         |  1033  |    160  |  3  |  111  |  [118,110,176,160,4]  |
  5752  |                         R = R + 2;  |      2  |  1035  |    160  |  3  |  111  |  [118,110,176,160,4]  |
  5756  |                         j = j + 1;  |         |  1035  |    160  |  3  |  112  |  [118,110,176,160,4]  |
  5757  |              resetPlaceHolder_2();  |         |  1035  |    160  |  3  |  112  |  [118,110,176,160,4]  |
  5763  |                         R = R + 2;  |      2  |  1037  |    160  |  3  |  112  |  [118,110,176,160,4]  |
  5767  |                         j = j + 1;  |         |  1037  |    160  |  3  |  113  |  [118,110,176,160,4]  |
  5768  |              resetPlaceHolder_2();  |         |  1037  |    160  |  3  |  113  |  [118,110,176,160,4]  |
  5774  |                         R = R + 2;  |      2  |  1039  |    160  |  3  |  113  |  [118,110,176,160,4]  |
  5778  |                         j = j + 1;  |         |  1039  |    160  |  3  |  114  |  [118,110,176,160,4]  |
  5779  |              resetPlaceHolder_2();  |         |  1039  |    160  |  3  |  114  |  [118,110,176,160,4]  |
  5785  |                         R = R + 2;  |      2  |  1041  |    160  |  3  |  114  |  [118,110,176,160,4]  |
  5789  |                         j = j + 1;  |         |  1041  |    160  |  3  |  115  |  [118,110,176,160,4]  |
  5790  |              resetPlaceHolder_2();  |         |  1041  |    160  |  3  |  115  |  [118,110,176,160,4]  |
  5796  |                         R = R + 2;  |      2  |  1043  |    160  |  3  |  115  |  [118,110,176,160,4]  |
  5800  |                         j = j + 1;  |         |  1043  |    160  |  3  |  116  |  [118,110,176,160,4]  |
  5801  |              resetPlaceHolder_2();  |         |  1043  |    160  |  3  |  116  |  [118,110,176,160,4]  |
  5807  |                         R = R + 2;  |      2  |  1045  |    160  |  3  |  116  |  [118,110,176,160,4]  |
  5811  |                         j = j + 1;  |         |  1045  |    160  |  3  |  117  |  [118,110,176,160,4]  |
  5812  |              resetPlaceHolder_2();  |         |  1045  |    160  |  3  |  117  |  [118,110,176,160,4]  |
  5818  |                         R = R + 2;  |      2  |  1047  |    160  |  3  |  117  |  [118,110,176,160,4]  |
  5822  |                         j = j + 1;  |         |  1047  |    160  |  3  |  118  |  [118,110,176,160,4]  |
  5823  |              resetPlaceHolder_2();  |         |  1047  |    160  |  3  |  118  |  [118,110,176,160,4]  |
  5829  |                         R = R + 2;  |      2  |  1049  |    160  |  3  |  118  |  [118,110,176,160,4]  |
  5833  |                         j = j + 1;  |         |  1049  |    160  |  3  |  119  |  [118,110,176,160,4]  |
  5834  |              resetPlaceHolder_2();  |         |  1049  |    160  |  3  |  119  |  [118,110,176,160,4]  |
  5840  |                         R = R + 2;  |      2  |  1051  |    160  |  3  |  119  |  [118,110,176,160,4]  |
  5844  |                         j = j + 1;  |         |  1051  |    160  |  3  |  120  |  [118,110,176,160,4]  |
  5845  |              resetPlaceHolder_2();  |         |  1051  |    160  |  3  |  120  |  [118,110,176,160,4]  |
  5851  |                         R = R + 2;  |      2  |  1053  |    160  |  3  |  120  |  [118,110,176,160,4]  |
  5855  |                         j = j + 1;  |         |  1053  |    160  |  3  |  121  |  [118,110,176,160,4]  |
  5856  |              resetPlaceHolder_2();  |         |  1053  |    160  |  3  |  121  |  [118,110,176,160,4]  |
  5862  |                         R = R + 2;  |      2  |  1055  |    160  |  3  |  121  |  [118,110,176,160,4]  |
  5866  |                         j = j + 1;  |         |  1055  |    160  |  3  |  122  |  [118,110,176,160,4]  |
  5867  |              resetPlaceHolder_2();  |         |  1055  |    160  |  3  |  122  |  [118,110,176,160,4]  |
  5873  |                         R = R + 2;  |      2  |  1057  |    160  |  3  |  122  |  [118,110,176,160,4]  |
  5877  |                         j = j + 1;  |         |  1057  |    160  |  3  |  123  |  [118,110,176,160,4]  |
  5878  |              resetPlaceHolder_2();  |         |  1057  |    160  |  3  |  123  |  [118,110,176,160,4]  |
  5884  |                         R = R + 2;  |      2  |  1059  |    160  |  3  |  123  |  [118,110,176,160,4]  |
  5888  |                         j = j + 1;  |         |  1059  |    160  |  3  |  124  |  [118,110,176,160,4]  |
  5889  |              resetPlaceHolder_2();  |         |  1059  |    160  |  3  |  124  |  [118,110,176,160,4]  |
  5895  |                         R = R + 2;  |      2  |  1061  |    160  |  3  |  124  |  [118,110,176,160,4]  |
  5899  |                         j = j + 1;  |         |  1061  |    160  |  3  |  125  |  [118,110,176,160,4]  |
  5900  |              resetPlaceHolder_2();  |         |  1061  |    160  |  3  |  125  |  [118,110,176,160,4]  |
  5906  |                         R = R + 2;  |      2  |  1063  |    160  |  3  |  125  |  [118,110,176,160,4]  |
  5910  |                         j = j + 1;  |         |  1063  |    160  |  3  |  126  |  [118,110,176,160,4]  |
  5911  |              resetPlaceHolder_2();  |         |  1063  |    160  |  3  |  126  |  [118,110,176,160,4]  |
  5917  |                         R = R + 2;  |      2  |  1065  |    160  |  3  |  126  |  [118,110,176,160,4]  |
  5921  |                         j = j + 1;  |         |  1065  |    160  |  3  |  127  |  [118,110,176,160,4]  |
  5922  |              resetPlaceHolder_2();  |         |  1065  |    160  |  3  |  127  |  [118,110,176,160,4]  |
  5928  |                         R = R + 2;  |      2  |  1067  |    160  |  3  |  127  |  [118,110,176,160,4]  |
  5932  |                         j = j + 1;  |         |  1067  |    160  |  3  |  128  |  [118,110,176,160,4]  |
  5933  |              resetPlaceHolder_2();  |         |  1067  |    160  |  3  |  128  |  [118,110,176,160,4]  |
  5939  |                         R = R + 2;  |      2  |  1069  |    160  |  3  |  128  |  [118,110,176,160,4]  |
  5943  |                         j = j + 1;  |         |  1069  |    160  |  3  |  129  |  [118,110,176,160,4]  |
  5944  |              resetPlaceHolder_2();  |         |  1069  |    160  |  3  |  129  |  [118,110,176,160,4]  |
  5950  |                         R = R + 2;  |      2  |  1071  |    160  |  3  |  129  |  [118,110,176,160,4]  |
  5954  |                         j = j + 1;  |         |  1071  |    160  |  3  |  130  |  [118,110,176,160,4]  |
  5955  |              resetPlaceHolder_2();  |         |  1071  |    160  |  3  |  130  |  [118,110,176,160,4]  |
  5961  |                         R = R + 2;  |      2  |  1073  |    160  |  3  |  130  |  [118,110,176,160,4]  |
  5965  |                         j = j + 1;  |         |  1073  |    160  |  3  |  131  |  [118,110,176,160,4]  |
  5966  |              resetPlaceHolder_2();  |         |  1073  |    160  |  3  |  131  |  [118,110,176,160,4]  |
  5972  |                         R = R + 2;  |      2  |  1075  |    160  |  3  |  131  |  [118,110,176,160,4]  |
  5976  |                         j = j + 1;  |         |  1075  |    160  |  3  |  132  |  [118,110,176,160,4]  |
  5977  |              resetPlaceHolder_2();  |         |  1075  |    160  |  3  |  132  |  [118,110,176,160,4]  |
  5983  |                         R = R + 2;  |      2  |  1077  |    160  |  3  |  132  |  [118,110,176,160,4]  |
  5987  |                         j = j + 1;  |         |  1077  |    160  |  3  |  133  |  [118,110,176,160,4]  |
  5988  |              resetPlaceHolder_2();  |         |  1077  |    160  |  3  |  133  |  [118,110,176,160,4]  |
  5994  |                         R = R + 2;  |      2  |  1079  |    160  |  3  |  133  |  [118,110,176,160,4]  |
  5998  |                         j = j + 1;  |         |  1079  |    160  |  3  |  134  |  [118,110,176,160,4]  |
  5999  |              resetPlaceHolder_2();  |         |  1079  |    160  |  3  |  134  |  [118,110,176,160,4]  |
  6005  |                         R = R + 2;  |      2  |  1081  |    160  |  3  |  134  |  [118,110,176,160,4]  |
  6009  |                         j = j + 1;  |         |  1081  |    160  |  3  |  135  |  [118,110,176,160,4]  |
  6010  |              resetPlaceHolder_2();  |         |  1081  |    160  |  3  |  135  |  [118,110,176,160,4]  |
  6016  |                         R = R + 2;  |      2  |  1083  |    160  |  3  |  135  |  [118,110,176,160,4]  |
  6020  |                         j = j + 1;  |         |  1083  |    160  |  3  |  136  |  [118,110,176,160,4]  |
  6021  |              resetPlaceHolder_2();  |         |  1083  |    160  |  3  |  136  |  [118,110,176,160,4]  |
  6027  |                         R = R + 2;  |      2  |  1085  |    160  |  3  |  136  |  [118,110,176,160,4]  |
  6031  |                         j = j + 1;  |         |  1085  |    160  |  3  |  137  |  [118,110,176,160,4]  |
  6032  |              resetPlaceHolder_2();  |         |  1085  |    160  |  3  |  137  |  [118,110,176,160,4]  |
  6038  |                         R = R + 2;  |      2  |  1087  |    160  |  3  |  137  |  [118,110,176,160,4]  |
  6042  |                         j = j + 1;  |         |  1087  |    160  |  3  |  138  |  [118,110,176,160,4]  |
  6043  |              resetPlaceHolder_2();  |         |  1087  |    160  |  3  |  138  |  [118,110,176,160,4]  |
  6049  |                         R = R + 2;  |      2  |  1089  |    160  |  3  |  138  |  [118,110,176,160,4]  |
  6053  |                         j = j + 1;  |         |  1089  |    160  |  3  |  139  |  [118,110,176,160,4]  |
  6054  |              resetPlaceHolder_2();  |         |  1089  |    160  |  3  |  139  |  [118,110,176,160,4]  |
  6060  |                         R = R + 2;  |      2  |  1091  |    160  |  3  |  139  |  [118,110,176,160,4]  |
  6064  |                         j = j + 1;  |         |  1091  |    160  |  3  |  140  |  [118,110,176,160,4]  |
  6065  |              resetPlaceHolder_2();  |         |  1091  |    160  |  3  |  140  |  [118,110,176,160,4]  |
  6071  |                         R = R + 2;  |      2  |  1093  |    160  |  3  |  140  |  [118,110,176,160,4]  |
  6075  |                         j = j + 1;  |         |  1093  |    160  |  3  |  141  |  [118,110,176,160,4]  |
  6076  |              resetPlaceHolder_2();  |         |  1093  |    160  |  3  |  141  |  [118,110,176,160,4]  |
  6082  |                         R = R + 2;  |      2  |  1095  |    160  |  3  |  141  |  [118,110,176,160,4]  |
  6086  |                         j = j + 1;  |         |  1095  |    160  |  3  |  142  |  [118,110,176,160,4]  |
  6087  |              resetPlaceHolder_2();  |         |  1095  |    160  |  3  |  142  |  [118,110,176,160,4]  |
  6093  |                         R = R + 2;  |      2  |  1097  |    160  |  3  |  142  |  [118,110,176,160,4]  |
  6097  |                         j = j + 1;  |         |  1097  |    160  |  3  |  143  |  [118,110,176,160,4]  |
  6098  |              resetPlaceHolder_2();  |         |  1097  |    160  |  3  |  143  |  [118,110,176,160,4]  |
  6104  |                         R = R + 2;  |      2  |  1099  |    160  |  3  |  143  |  [118,110,176,160,4]  |
  6108  |                         j = j + 1;  |         |  1099  |    160  |  3  |  144  |  [118,110,176,160,4]  |
  6109  |              resetPlaceHolder_2();  |         |  1099  |    160  |  3  |  144  |  [118,110,176,160,4]  |
  6115  |                         R = R + 2;  |      2  |  1101  |    160  |  3  |  144  |  [118,110,176,160,4]  |
  6119  |                         j = j + 1;  |         |  1101  |    160  |  3  |  145  |  [118,110,176,160,4]  |
  6120  |              resetPlaceHolder_2();  |         |  1101  |    160  |  3  |  145  |  [118,110,176,160,4]  |
  6126  |                         R = R + 2;  |      2  |  1103  |    160  |  3  |  145  |  [118,110,176,160,4]  |
  6130  |                         j = j + 1;  |         |  1103  |    160  |  3  |  146  |  [118,110,176,160,4]  |
  6131  |              resetPlaceHolder_2();  |         |  1103  |    160  |  3  |  146  |  [118,110,176,160,4]  |
  6137  |                         R = R + 2;  |      2  |  1105  |    160  |  3  |  146  |  [118,110,176,160,4]  |
  6141  |                         j = j + 1;  |         |  1105  |    160  |  3  |  147  |  [118,110,176,160,4]  |
  6142  |              resetPlaceHolder_2();  |         |  1105  |    160  |  3  |  147  |  [118,110,176,160,4]  |
  6148  |                         R = R + 2;  |      2  |  1107  |    160  |  3  |  147  |  [118,110,176,160,4]  |
  6152  |                         j = j + 1;  |         |  1107  |    160  |  3  |  148  |  [118,110,176,160,4]  |
  6153  |              resetPlaceHolder_2();  |         |  1107  |    160  |  3  |  148  |  [118,110,176,160,4]  |
  6159  |                         R = R + 2;  |      2  |  1109  |    160  |  3  |  148  |  [118,110,176,160,4]  |
  6163  |                         j = j + 1;  |         |  1109  |    160  |  3  |  149  |  [118,110,176,160,4]  |
  6164  |              resetPlaceHolder_2();  |         |  1109  |    160  |  3  |  149  |  [118,110,176,160,4]  |
  6170  |                         R = R + 2;  |      2  |  1111  |    160  |  3  |  149  |  [118,110,176,160,4]  |
  6174  |                         j = j + 1;  |         |  1111  |    160  |  3  |  150  |  [118,110,176,160,4]  |
  6175  |              resetPlaceHolder_2();  |         |  1111  |    160  |  3  |  150  |  [118,110,176,160,4]  |
  6181  |                         R = R + 2;  |      2  |  1113  |    160  |  3  |  150  |  [118,110,176,160,4]  |
  6185  |                         j = j + 1;  |         |  1113  |    160  |  3  |  151  |  [118,110,176,160,4]  |
  6186  |              resetPlaceHolder_2();  |         |  1113  |    160  |  3  |  151  |  [118,110,176,160,4]  |
  6192  |                         R = R + 2;  |      2  |  1115  |    160  |  3  |  151  |  [118,110,176,160,4]  |
  6196  |                         j = j + 1;  |         |  1115  |    160  |  3  |  152  |  [118,110,176,160,4]  |
  6197  |              resetPlaceHolder_2();  |         |  1115  |    160  |  3  |  152  |  [118,110,176,160,4]  |
  6203  |                         R = R + 2;  |      2  |  1117  |    160  |  3  |  152  |  [118,110,176,160,4]  |
  6207  |                         j = j + 1;  |         |  1117  |    160  |  3  |  153  |  [118,110,176,160,4]  |
  6208  |              resetPlaceHolder_2();  |         |  1117  |    160  |  3  |  153  |  [118,110,176,160,4]  |
  6214  |                         R = R + 2;  |      2  |  1119  |    160  |  3  |  153  |  [118,110,176,160,4]  |
  6218  |                         j = j + 1;  |         |  1119  |    160  |  3  |  154  |  [118,110,176,160,4]  |
  6219  |              resetPlaceHolder_2();  |         |  1119  |    160  |  3  |  154  |  [118,110,176,160,4]  |
  6225  |                         R = R + 2;  |      2  |  1121  |    160  |  3  |  154  |  [118,110,176,160,4]  |
  6229  |                         j = j + 1;  |         |  1121  |    160  |  3  |  155  |  [118,110,176,160,4]  |
  6230  |              resetPlaceHolder_2();  |         |  1121  |    160  |  3  |  155  |  [118,110,176,160,4]  |
  6236  |                         R = R + 2;  |      2  |  1123  |    160  |  3  |  155  |  [118,110,176,160,4]  |
  6240  |                         j = j + 1;  |         |  1123  |    160  |  3  |  156  |  [118,110,176,160,4]  |
  6241  |              resetPlaceHolder_2();  |         |  1123  |    160  |  3  |  156  |  [118,110,176,160,4]  |
  6247  |                         R = R + 2;  |      2  |  1125  |    160  |  3  |  156  |  [118,110,176,160,4]  |
  6251  |                         j = j + 1;  |         |  1125  |    160  |  3  |  157  |  [118,110,176,160,4]  |
  6252  |              resetPlaceHolder_2();  |         |  1125  |    160  |  3  |  157  |  [118,110,176,160,4]  |
  6258  |                         R = R + 2;  |      2  |  1127  |    160  |  3  |  157  |  [118,110,176,160,4]  |
  6262  |                         j = j + 1;  |         |  1127  |    160  |  3  |  158  |  [118,110,176,160,4]  |
  6263  |              resetPlaceHolder_2();  |         |  1127  |    160  |  3  |  158  |  [118,110,176,160,4]  |
  6269  |                         R = R + 2;  |      2  |  1129  |    160  |  3  |  158  |  [118,110,176,160,4]  |
  6273  |                         j = j + 1;  |         |  1129  |    160  |  3  |  159  |  [118,110,176,160,4]  |
  6274  |              resetPlaceHolder_2();  |         |  1129  |    160  |  3  |  159  |  [118,110,176,160,4]  |
  6280  |                         R = R + 2;  |      2  |  1131  |    160  |  3  |  159  |  [118,110,176,160,4]  |
  6284  |                         j = j + 1;  |         |  1131  |    160  |  3  |  160  |  [118,110,176,160,4]  |
  6285  |              resetPlaceHolder_2();  |         |  1131  |    160  |  3  |  160  |  [118,110,176,160,4]  |
  6291  |                         R = R + 1;  |      1  |  1132  |    160  |  3  |  160  |  [118,110,176,160,4]  |
  6295  |                         i = i + 1;  |         |  1132  |    160  |  4  |  160  |  [118,110,176,160,4]  |
  6296  |              resetPlaceHolder_1();  |         |  1132  |    160  |  4  |  160  |  [118,110,176,160,4]  |
  6302  |      entry = arrayRead(sorted, i);  |         |  1132  |      4  |  4  |  160  |  [118,110,176,160,4]  |
  6304  |                         int j = 0;  |         |  1132  |      4  |  4  |    0  |  [118,110,176,160,4]  |
  6310  |                         R = R + 2;  |      2  |  1134  |      4  |  4  |    0  |  [118,110,176,160,4]  |
  6314  |                         j = j + 1;  |         |  1134  |      4  |  4  |    1  |  [118,110,176,160,4]  |
  6315  |              resetPlaceHolder_2();  |         |  1134  |      4  |  4  |    1  |  [118,110,176,160,4]  |
  6321  |                         R = R + 2;  |      2  |  1136  |      4  |  4  |    1  |  [118,110,176,160,4]  |
  6325  |                         j = j + 1;  |         |  1136  |      4  |  4  |    2  |  [118,110,176,160,4]  |
  6326  |              resetPlaceHolder_2();  |         |  1136  |      4  |  4  |    2  |  [118,110,176,160,4]  |
  6332  |                         R = R + 2;  |      2  |  1138  |      4  |  4  |    2  |  [118,110,176,160,4]  |
  6336  |                         j = j + 1;  |         |  1138  |      4  |  4  |    3  |  [118,110,176,160,4]  |
  6337  |              resetPlaceHolder_2();  |         |  1138  |      4  |  4  |    3  |  [118,110,176,160,4]  |
  6343  |                         R = R + 2;  |      2  |  1140  |      4  |  4  |    3  |  [118,110,176,160,4]  |
  6347  |                         j = j + 1;  |         |  1140  |      4  |  4  |    4  |  [118,110,176,160,4]  |
  6348  |              resetPlaceHolder_2();  |         |  1140  |      4  |  4  |    4  |  [118,110,176,160,4]  |
  6354  |                         R = R + 1;  |      1  |  1141  |      4  |  4  |    4  |  [118,110,176,160,4]  |
  6358  |                         i = i + 1;  |         |  1141  |      4  |  5  |    4  |  [118,110,176,160,4]  |
  6359  |              resetPlaceHolder_1();  |         |  1141  |      4  |  5  |    4  |  [118,110,176,160,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [5686, 1501, 3962, 5422, 4094, 1369, 5136, 1633, 4729, 5950, 3434, 3698, 1031, 3863, 3830, 2480, 3566, 1295, 481, 5444, 2117, 4226, 217, 2381, 2062, 4391, 4960, 5224, 2282, 4215, 6214, 4479, 4105, 5037, 1655, 5565, 3049, 2686, 4575, 5906, 4839, 5257, 4564, 1919, 3313, 5708, 4435, 3577, 4762, 404, 3335, 1196, 6236, 2216, 3236, 2348, 2972, 2491, 2763, 2227, 1391, 4916, 5301, 6291, 52, 1985, 184, 2708, 3148, 3280, 6332, 5279, 6071, 1545, 6049, 2403, 5521, 4358, 6310, 1479, 5323, 1347, 4270, 5851, 5829, 2730, 228, 3951, 448, 316, 1963, 1875, 261, 3258, 2829, 2007, 2950, 4696, 5433, 492, 756, 789, 4072, 591, 2469, 646, 1864, 4050, 3621, 3973, 514, 1020, 3357, 1677, 3093, 2073, 602, 5059, 4718, 4751, 877, 734, 866, 1886, 3808, 1119, 1622, 5246, 3676, 5169, 998, 1600, 4707, 3588, 2392, 74, 2205, 206, 2884, 5961, 3720, 5411, 3984, 3852, 85, 1306, 4531, 5697, 5070, 3995, 5862, 5334, 1163, 910, 6343, 2249, 6247, 778, 1042, 349, 1174, 5455, 1666, 5719, 3610, 3742, 4204, 2150, 2414, 4160, 2873, 3269, 5983, 4608, 3137, 4553, 1457, 2609, 4402, 1787, 6060, 4740, 2741, 3445, 2653, 1402, 3731, 3467, 2840, 5609, 1534, 4512, 5345, 2895, 4248, 1328, 2359, 1064, 2631, 3632, 4883, 5081, 6148, 3060, 4817, 1567, 3775, 5818, 5620, 1075, 1424, 4938, 1842, 5213, 4861, 2172, 1446, 1207, 3643, 3555, 4457, 1644, 679, 547, 96, 393, 5576, 1776, 3654, 701, 3126, 2304, 2598, 1831, 1974, 2851, 173, 3819, 4237, 3390, 129, 4347, 6005, 3115, 569, 3247, 2862, 2697, 4259, 41, 5026, 3005, 371, 503, 2370, 1086, 3225, 2546, 360, 921, 657, 558, 6038, 3841, 5840, 1185, 1996, 888, 1732, 6192, 965, 1251, 4685, 1754, 4380, 4872, 4116, 6203, 1273, 5048, 745, 5928, 4017, 2524, 5400, 5598, 2260, 5488, 118, 5752, 3599, 2161, 382, 4127, 2029, 2326, 2293, 4149, 4171, 4413, 1765, 1897, 2557, 2425, 5158, 3302, 6016, 3170, 1853, 4369, 2642, 2084, 3764, 5103, 3038, 2774, 4828, 2906, 5631, 1589, 6321, 4586, 3500, 5972, 4773, 3456, 5114, 811, 5367, 5202, 3027, 5730, 5994, 4028, 140, 3192, 2785, 4850, 4652, 5466, 1556, 5180, 943, 2664, 4993, 668, 2928, 932, 1952, 1820, 1688, 1699, 2051, 3423, 2620, 2139, 3687, 3159, 3016, 2752, 1435, 2535, 6027, 1413, 3522, 5587, 1809, 426, 162, 6225, 2994, 2271, 5785, 4292, 6170, 5763, 5807, 6115, 4336, 2513, 1798, 525, 712, 580, 855, 690, 63, 4490, 5125, 1611, 1743, 3082, 3214, 327, 5499, 1941, 954, 4641, 3786, 4894, 4971, 4630, 1053, 4314, 5235, 6280, 4905, 3940, 3885, 5015, 6093, 1262, 2337, 2128, 1317, 338, 3544, 5543, 470, 4982, 3412, 6159, 1130, 1218, 2675, 1358, 5147, 5675, 1141, 613, 1284, 2939, 3071, 2807, 4795, 5895, 1240, 250, 3478, 5939, 5873, 2458, 4424, 4138, 3401, 5917, 4325, 2818, 5653, 3533, 976, 6137, 3874, 5510, 2194, 3346, 4006, 844, 5389, 3929, 4061, 1108, 3665, 3797, 1721, 4806, 3709, 4468, 5191, 4542, 3104, 1523, 3368, 6354, 2447, 4182, 3181, 3324, 2796, 5532, 6181, 3896, 2576, 2183, 272, 899, 2095, 4446, 2315, 2917, 4927, 536, 4619, 800, 1908, 3379, 151, 4039, 1512, 1578, 3511, 3291, 3907, 5796, 833, 2983, 2719, 1097, 5004, 2587, 5268, 1229, 30, 5554, 5356, 1380, 5884, 5477, 4663, 4597, 3203, 305, 107, 239, 294, 4303, 5092, 4281, 5290, 195, 437, 4083, 5741, 767, 6258, 2961, 1710, 5378, 635, 5642, 4193, 2040, 283, 6269, 415, 1930, 624, 2502, 987, 1152, 459, 3489, 723, 822, 6082, 5774, 6104, 6126, 4501, 3918, 4674, 3753, 5312, 1009, 4784, 4949, 2018, 2436, 2238, 1490, 5664, 2106, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [5686, 1501, 3962, 5422, 4094, 1369, 5136, 1633, 4729, 5950, 3434, 3698, 1031, 3863, 3830, 2480, 3566, 1295, 481, 5444, 2117, 4226, 217, 2381, 2062, 4391, 4960, 5224, 2282, 4215, 6214, 4479, 4105, 5037, 1655, 5565, 3049, 2686, 4575, 5906, 4839, 5257, 4564, 1919, 3313, 5708, 4435, 3577, 4762, 404, 3335, 1196, 6236, 2216, 3236, 2348, 2972, 2491, 2763, 2227, 1391, 4916, 5301, 6291, 52, 1985, 184, 2708, 3148, 3280, 6332, 5279, 6071, 1545, 6049, 2403, 5521, 4358, 6310, 1479, 5323, 1347, 4270, 5851, 5829, 2730, 228, 3951, 448, 316, 1963, 1875, 261, 3258, 2829, 2007, 2950, 4696, 5433, 492, 756, 789, 4072, 591, 2469, 646, 1864, 4050, 3621, 3973, 514, 1020, 3357, 1677, 3093, 2073, 602, 5059, 4718, 4751, 877, 734, 866, 1886, 3808, 1119, 1622, 5246, 3676, 5169, 998, 1600, 4707, 3588, 2392, 74, 2205, 206, 2884, 5961, 3720, 5411, 3984, 3852, 85, 1306, 4531, 5697, 5070, 3995, 5862, 5334, 1163, 910, 6343, 2249, 6247, 778, 1042, 349, 1174, 5455, 1666, 5719, 3610, 3742, 4204, 2150, 2414, 4160, 2873, 3269, 5983, 4608, 3137, 4553, 1457, 2609, 4402, 1787, 6060, 4740, 2741, 3445, 2653, 1402, 3731, 3467, 2840, 5609, 1534, 4512, 5345, 2895, 4248, 1328, 2359, 1064, 2631, 3632, 4883, 5081, 6148, 3060, 4817, 1567, 3775, 5818, 5620, 1075, 1424, 4938, 1842, 5213, 4861, 2172, 1446, 1207, 3643, 3555, 4457, 1644, 679, 547, 96, 393, 5576, 1776, 3654, 701, 3126, 2304, 2598, 1831, 1974, 2851, 173, 3819, 4237, 3390, 129, 4347, 6005, 3115, 569, 3247, 2862, 2697, 4259, 41, 5026, 3005, 371, 503, 2370, 1086, 3225, 2546, 360, 921, 657, 558, 6038, 3841, 5840, 1185, 1996, 888, 1732, 6192, 965, 1251, 4685, 1754, 4380, 4872, 4116, 6203, 1273, 5048, 745, 5928, 4017, 2524, 5400, 5598, 2260, 5488, 118, 5752, 3599, 2161, 382, 4127, 2029, 2326, 2293, 4149, 4171, 4413, 1765, 1897, 2557, 2425, 5158, 3302, 6016, 3170, 1853, 4369, 2642, 2084, 3764, 5103, 3038, 2774, 4828, 2906, 5631, 1589, 6321, 4586, 3500, 5972, 4773, 3456, 5114, 811, 5367, 5202, 3027, 5730, 5994, 4028, 140, 3192, 2785, 4850, 4652, 5466, 1556, 5180, 943, 2664, 4993, 668, 2928, 932, 1952, 1820, 1688, 1699, 2051, 3423, 2620, 2139, 3687, 3159, 3016, 2752, 1435, 2535, 6027, 1413, 3522, 5587, 1809, 426, 162, 6225, 2994, 2271, 5785, 4292, 6170, 5763, 5807, 6115, 4336, 2513, 1798, 525, 712, 580, 855, 690, 63, 4490, 5125, 1611, 1743, 3082, 3214, 327, 5499, 1941, 954, 4641, 3786, 4894, 4971, 4630, 1053, 4314, 5235, 6280, 4905, 3940, 3885, 5015, 6093, 1262, 2337, 2128, 1317, 338, 3544, 5543, 470, 4982, 3412, 6159, 1130, 1218, 2675, 1358, 5147, 5675, 1141, 613, 1284, 2939, 3071, 2807, 4795, 5895, 1240, 250, 3478, 5939, 5873, 2458, 4424, 4138, 3401, 5917, 4325, 2818, 5653, 3533, 976, 6137, 3874, 5510, 2194, 3346, 4006, 844, 5389, 3929, 4061, 1108, 3665, 3797, 1721, 4806, 3709, 4468, 5191, 4542, 3104, 1523, 3368, 6354, 2447, 4182, 3181, 3324, 2796, 5532, 6181, 3896, 2576, 2183, 272, 899, 2095, 4446, 2315, 2917, 4927, 536, 4619, 800, 1908, 3379, 151, 4039, 1512, 1578, 3511, 3291, 3907, 5796, 833, 2983, 2719, 1097, 5004, 2587, 5268, 1229, 30, 5554, 5356, 1380, 5884, 5477, 4663, 4597, 3203, 305, 107, 239, 294, 4303, 5092, 4281, 5290, 195, 437, 4083, 5741, 767, 6258, 2961, 1710, 5378, 635, 5642, 4193, 2040, 283, 6269, 415, 1930, 624, 2502, 987, 1152, 459, 3489, 723, 822, 6082, 5774, 6104, 6126, 4501, 3918, 4674, 3753, 5312, 1009, 4784, 4949, 2018, 2436, 2238, 1490, 5664, 2106, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [5686, 1501, 3962, 5422, 4094, 1369, 5136, 1633, 4729, 5950, 3434, 3698, 1031, 3863, 3830, 2480, 3566, 1295, 481, 5444, 2117, 4226, 217, 2381, 2062, 4391, 4960, 5224, 2282, 4215, 6214, 4479, 4105, 5037, 1655, 5565, 3049, 2686, 4575, 5906, 4839, 5257, 4564, 1919, 3313, 5708, 4435, 3577, 4762, 404, 3335, 1196, 6236, 2216, 3236, 2348, 2972, 2491, 2763, 2227, 1391, 4916, 5301, 6291, 52, 1985, 184, 2708, 3148, 3280, 6332, 5279, 6071, 1545, 6049, 2403, 5521, 4358, 6310, 1479, 5323, 1347, 4270, 5851, 5829, 2730, 228, 3951, 448, 316, 1963, 1875, 261, 3258, 2829, 2007, 2950, 4696, 5433, 492, 756, 789, 4072, 591, 2469, 646, 1864, 4050, 3621, 3973, 514, 1020, 3357, 1677, 3093, 2073, 602, 5059, 4718, 4751, 877, 734, 866, 1886, 3808, 1119, 1622, 5246, 3676, 5169, 998, 1600, 4707, 3588, 2392, 74, 2205, 206, 2884, 5961, 3720, 5411, 3984, 3852, 85, 1306, 4531, 5697, 5070, 3995, 5862, 5334, 1163, 910, 6343, 2249, 6247, 778, 1042, 349, 1174, 5455, 1666, 5719, 3610, 3742, 4204, 2150, 2414, 4160, 2873, 3269, 5983, 4608, 3137, 4553, 1457, 2609, 4402, 1787, 6060, 4740, 2741, 3445, 2653, 1402, 3731, 3467, 2840, 5609, 1534, 4512, 5345, 2895, 4248, 1328, 2359, 1064, 2631, 3632, 4883, 5081, 6148, 3060, 4817, 1567, 3775, 5818, 5620, 1075, 1424, 4938, 1842, 5213, 4861, 2172, 1446, 1207, 3643, 3555, 4457, 1644, 679, 547, 96, 393, 5576, 1776, 3654, 701, 3126, 2304, 2598, 1831, 1974, 2851, 173, 3819, 4237, 3390, 129, 4347, 6005, 3115, 569, 3247, 2862, 2697, 4259, 41, 5026, 3005, 371, 503, 2370, 1086, 3225, 2546, 360, 921, 657, 558, 6038, 3841, 5840, 1185, 1996, 888, 1732, 6192, 965, 1251, 4685, 1754, 4380, 4872, 4116, 6203, 1273, 5048, 745, 5928, 4017, 2524, 5400, 5598, 2260, 5488, 118, 5752, 3599, 2161, 382, 4127, 2029, 2326, 2293, 4149, 4171, 4413, 1765, 1897, 2557, 2425, 5158, 3302, 6016, 3170, 1853, 4369, 2642, 2084, 3764, 5103, 3038, 2774, 4828, 2906, 5631, 1589, 6321, 4586, 3500, 5972, 4773, 3456, 5114, 811, 5367, 5202, 3027, 5730, 5994, 4028, 140, 3192, 2785, 4850, 4652, 5466, 1556, 5180, 943, 2664, 4993, 668, 2928, 932, 1952, 1820, 1688, 1699, 2051, 3423, 2620, 2139, 3687, 3159, 3016, 2752, 1435, 2535, 6027, 1413, 3522, 5587, 1809, 426, 162, 6225, 2994, 2271, 5785, 4292, 6170, 5763, 5807, 6115, 4336, 2513, 1798, 525, 712, 580, 855, 690, 63, 4490, 5125, 1611, 1743, 3082, 3214, 327, 5499, 1941, 954, 4641, 3786, 4894, 4971, 4630, 1053, 4314, 5235, 6280, 4905, 3940, 3885, 5015, 6093, 1262, 2337, 2128, 1317, 338, 3544, 5543, 470, 4982, 3412, 6159, 1130, 1218, 2675, 1358, 5147, 5675, 1141, 613, 1284, 2939, 3071, 2807, 4795, 5895, 1240, 250, 3478, 5939, 5873, 2458, 4424, 4138, 3401, 5917, 4325, 2818, 5653, 3533, 976, 6137, 3874, 5510, 2194, 3346, 4006, 844, 5389, 3929, 4061, 1108, 3665, 3797, 1721, 4806, 3709, 4468, 5191, 4542, 3104, 1523, 3368, 6354, 2447, 4182, 3181, 3324, 2796, 5532, 6181, 3896, 2576, 2183, 272, 899, 2095, 4446, 2315, 2917, 4927, 536, 4619, 800, 1908, 3379, 151, 4039, 1512, 1578, 3511, 3291, 3907, 5796, 833, 2983, 2719, 1097, 5004, 2587, 5268, 1229, 30, 5554, 5356, 1380, 5884, 5477, 4663, 4597, 3203, 305, 107, 239, 294, 4303, 5092, 4281, 5290, 195, 437, 4083, 5741, 767, 6258, 2961, 1710, 5378, 635, 5642, 4193, 2040, 283, 6269, 415, 1930, 624, 2502, 987, 1152, 459, 3489, 723, 822, 6082, 5774, 6104, 6126, 4501, 3918, 4674, 3753, 5312, 1009, 4784, 4949, 2018, 2436, 2238, 1490, 5664, 2106, 1468]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1020,1031,1042,1053,1064,1075,1086,1097,1108,1119,1130,1141,1152,1163,1174,1185,1196,1207,1218,1229,1240,1251,1262,1273,1284,1295,1306,1317,1328,1347,1358,1369,1380,1391,1402,1413,1424,1435,1446,1457,1468,1479,1490,1501,1512,1523,1534,1545,1556,1567,1578,1589,1600,1611,1622,1633,1644,1655,1666,1677,1688,1699,1710,1721,1732,1743,1754,1765,1776,1787,1798,1809,1820,1831,1842,1853,1864,1875,1886,1897,1908,1919,1930,1941,1952,1963,1974,1985,1996,2007,2018,2029,2040,2051,2062,2073,2084,2095,2106,2117,2128,2139,2150,2161,2172,2183,2194,2205,2216,2227,2238,2249,2260,2271,2282,2293,2304,2315,2326,2337,2348,2359,2370,2381,2392,2403,2414,2425,2436,2447,2458,2469,2480,2491,2502,2513,2524,2535,2546,2557,2576,2587,2598,2609,2620,2631,2642,2653,2664,2675,2686,2697,2708,2719,2730,2741,2752,2763,2774,2785,2796,2807,2818,2829,2840,2851,2862,2873,2884,2895,2906,2917,2928,2939,2950,2961,2972,2983,2994,3005,3016,3027,3038,3049,3060,3071,3082,3093,3104,3115,3126,3137,3148,3159,3170,3181,3192,3203,3214,3225,3236,3247,3258,3269,3280,3291,3302,3313,3324,3335,3346,3357,3368,3379,3390,3401,3412,3423,3434,3445,3456,3467,3478,3489,3500,3511,3522,3533,3544,3555,3566,3577,3588,3599,3610,3621,3632,3643,3654,3665,3676,3687,3698,3709,3720,3731,3742,3753,3764,3775,3786,3797,3808,3819,3830,3841,3852,3863,3874,3885,3896,3907,3918,3929,3940,3951,3962,3973,3984,3995,4006,4017,4028,4039,4050,4061,4072,4083,4094,4105,4116,4127,4138,4149,4160,4171,4182,4193,4204,4215,4226,4237,4248,4259,4270,4281,4292,4303,4314,4325,4336,4347,4358,4369,4380,4391,4402,4413,4424,4435,4446,4457,4468,4479,4490,4501,4512,4531,4542,4553,4564,4575,4586,4597,4608,4619,4630,4641,4652,4663,4674,4685,4696,4707,4718,4729,4740,4751,4762,4773,4784,4795,4806,4817,4828,4839,4850,4861,4872,4883,4894,4905,4916,4927,4938,4949,4960,4971,4982,4993,5004,5015,5026,5037,5048,5059,5070,5081,5092,5103,5114,5125,5136,5147,5158,5169,5180,5191,5202,5213,5224,5235,5246,5257,5268,5279,5290,5301,5312,5323,5334,5345,5356,5367,5378,5389,5400,5411,5422,5433,5444,5455,5466,5477,5488,5499,5510,5521,5532,5543,5554,5565,5576,5587,5598,5609,5620,5631,5642,5653,5664,5675,5686,5697,5708,5719,5730,5741,5752,5763,5774,5785,5796,5807,5818,5829,5840,5851,5862,5873,5884,5895,5906,5917,5928,5939,5950,5961,5972,5983,5994,6005,6016,6027,6038,6049,6060,6071,6082,6093,6104,6115,6126,6137,6148,6159,6170,6181,6192,6203,6214,6225,6236,6247,6258,6269,6280,6291,6310,6321,6332,6343,6354}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 2;  |      2  |                         0  |
  1014  |  resetPlaceHolder_2();  |         |                            |
  1020  |             R = R + 2;  |      2  |                         0  |
  1025  |  resetPlaceHolder_2();  |         |                            |
  1031  |             R = R + 2;  |      2  |                         0  |
  1036  |  resetPlaceHolder_2();  |         |                            |
  1042  |             R = R + 2;  |      2  |                         0  |
  1047  |  resetPlaceHolder_2();  |         |                            |
  1053  |             R = R + 2;  |      2  |                         0  |
  1058  |  resetPlaceHolder_2();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1069  |  resetPlaceHolder_2();  |         |                            |
  1075  |             R = R + 2;  |      2  |                         0  |
  1080  |  resetPlaceHolder_2();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1091  |  resetPlaceHolder_2();  |         |                            |
  1097  |             R = R + 2;  |      2  |                         0  |
  1102  |  resetPlaceHolder_2();  |         |                            |
  1108  |             R = R + 2;  |      2  |                         0  |
  1113  |  resetPlaceHolder_2();  |         |                            |
  1119  |             R = R + 2;  |      2  |                         0  |
  1124  |  resetPlaceHolder_2();  |         |                            |
  1130  |             R = R + 2;  |      2  |                         0  |
  1135  |  resetPlaceHolder_2();  |         |                            |
  1141  |             R = R + 2;  |      2  |                         0  |
  1146  |  resetPlaceHolder_2();  |         |                            |
  1152  |             R = R + 2;  |      2  |                         0  |
  1157  |  resetPlaceHolder_2();  |         |                            |
  1163  |             R = R + 2;  |      2  |                         0  |
  1168  |  resetPlaceHolder_2();  |         |                            |
  1174  |             R = R + 2;  |      2  |                         0  |
  1179  |  resetPlaceHolder_2();  |         |                            |
  1185  |             R = R + 2;  |      2  |                         0  |
  1190  |  resetPlaceHolder_2();  |         |                            |
  1196  |             R = R + 2;  |      2  |                         0  |
  1201  |  resetPlaceHolder_2();  |         |                            |
  1207  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_2();  |         |                            |
  1218  |             R = R + 2;  |      2  |                         0  |
  1223  |  resetPlaceHolder_2();  |         |                            |
  1229  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_2();  |         |                            |
  1240  |             R = R + 2;  |      2  |                         0  |
  1245  |  resetPlaceHolder_2();  |         |                            |
  1251  |             R = R + 2;  |      2  |                         0  |
  1256  |  resetPlaceHolder_2();  |         |                            |
  1262  |             R = R + 2;  |      2  |                         0  |
  1267  |  resetPlaceHolder_2();  |         |                            |
  1273  |             R = R + 2;  |      2  |                         0  |
  1278  |  resetPlaceHolder_2();  |         |                            |
  1284  |             R = R + 2;  |      2  |                         0  |
  1289  |  resetPlaceHolder_2();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1300  |  resetPlaceHolder_2();  |         |                            |
  1306  |             R = R + 2;  |      2  |                         0  |
  1311  |  resetPlaceHolder_2();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1322  |  resetPlaceHolder_2();  |         |                            |
  1328  |             R = R + 1;  |      1  |                         0  |
  1333  |  resetPlaceHolder_1();  |         |                            |
  1347  |             R = R + 2;  |      2  |                         0  |
  1352  |  resetPlaceHolder_2();  |         |                            |
  1358  |             R = R + 2;  |      2  |                         0  |
  1363  |  resetPlaceHolder_2();  |         |                            |
  1369  |             R = R + 2;  |      2  |                         0  |
  1374  |  resetPlaceHolder_2();  |         |                            |
  1380  |             R = R + 2;  |      2  |                         0  |
  1385  |  resetPlaceHolder_2();  |         |                            |
  1391  |             R = R + 2;  |      2  |                         0  |
  1396  |  resetPlaceHolder_2();  |         |                            |
  1402  |             R = R + 2;  |      2  |                         0  |
  1407  |  resetPlaceHolder_2();  |         |                            |
  1413  |             R = R + 2;  |      2  |                         0  |
  1418  |  resetPlaceHolder_2();  |         |                            |
  1424  |             R = R + 2;  |      2  |                         0  |
  1429  |  resetPlaceHolder_2();  |         |                            |
  1435  |             R = R + 2;  |      2  |                         0  |
  1440  |  resetPlaceHolder_2();  |         |                            |
  1446  |             R = R + 2;  |      2  |                         0  |
  1451  |  resetPlaceHolder_2();  |         |                            |
  1457  |             R = R + 2;  |      2  |                         0  |
  1462  |  resetPlaceHolder_2();  |         |                            |
  1468  |             R = R + 2;  |      2  |                         0  |
  1473  |  resetPlaceHolder_2();  |         |                            |
  1479  |             R = R + 2;  |      2  |                         0  |
  1484  |  resetPlaceHolder_2();  |         |                            |
  1490  |             R = R + 2;  |      2  |                         0  |
  1495  |  resetPlaceHolder_2();  |         |                            |
  1501  |             R = R + 2;  |      2  |                         0  |
  1506  |  resetPlaceHolder_2();  |         |                            |
  1512  |             R = R + 2;  |      2  |                         0  |
  1517  |  resetPlaceHolder_2();  |         |                            |
  1523  |             R = R + 2;  |      2  |                         0  |
  1528  |  resetPlaceHolder_2();  |         |                            |
  1534  |             R = R + 2;  |      2  |                         0  |
  1539  |  resetPlaceHolder_2();  |         |                            |
  1545  |             R = R + 2;  |      2  |                         0  |
  1550  |  resetPlaceHolder_2();  |         |                            |
  1556  |             R = R + 2;  |      2  |                         0  |
  1561  |  resetPlaceHolder_2();  |         |                            |
  1567  |             R = R + 2;  |      2  |                         0  |
  1572  |  resetPlaceHolder_2();  |         |                            |
  1578  |             R = R + 2;  |      2  |                         0  |
  1583  |  resetPlaceHolder_2();  |         |                            |
  1589  |             R = R + 2;  |      2  |                         0  |
  1594  |  resetPlaceHolder_2();  |         |                            |
  1600  |             R = R + 2;  |      2  |                         0  |
  1605  |  resetPlaceHolder_2();  |         |                            |
  1611  |             R = R + 2;  |      2  |                         0  |
  1616  |  resetPlaceHolder_2();  |         |                            |
  1622  |             R = R + 2;  |      2  |                         0  |
  1627  |  resetPlaceHolder_2();  |         |                            |
  1633  |             R = R + 2;  |      2  |                         0  |
  1638  |  resetPlaceHolder_2();  |         |                            |
  1644  |             R = R + 2;  |      2  |                         0  |
  1649  |  resetPlaceHolder_2();  |         |                            |
  1655  |             R = R + 2;  |      2  |                         0  |
  1660  |  resetPlaceHolder_2();  |         |                            |
  1666  |             R = R + 2;  |      2  |                         0  |
  1671  |  resetPlaceHolder_2();  |         |                            |
  1677  |             R = R + 2;  |      2  |                         0  |
  1682  |  resetPlaceHolder_2();  |         |                            |
  1688  |             R = R + 2;  |      2  |                         0  |
  1693  |  resetPlaceHolder_2();  |         |                            |
  1699  |             R = R + 2;  |      2  |                         0  |
  1704  |  resetPlaceHolder_2();  |         |                            |
  1710  |             R = R + 2;  |      2  |                         0  |
  1715  |  resetPlaceHolder_2();  |         |                            |
  1721  |             R = R + 2;  |      2  |                         0  |
  1726  |  resetPlaceHolder_2();  |         |                            |
  1732  |             R = R + 2;  |      2  |                         0  |
  1737  |  resetPlaceHolder_2();  |         |                            |
  1743  |             R = R + 2;  |      2  |                         0  |
  1748  |  resetPlaceHolder_2();  |         |                            |
  1754  |             R = R + 2;  |      2  |                         0  |
  1759  |  resetPlaceHolder_2();  |         |                            |
  1765  |             R = R + 2;  |      2  |                         0  |
  1770  |  resetPlaceHolder_2();  |         |                            |
  1776  |             R = R + 2;  |      2  |                         0  |
  1781  |  resetPlaceHolder_2();  |         |                            |
  1787  |             R = R + 2;  |      2  |                         0  |
  1792  |  resetPlaceHolder_2();  |         |                            |
  1798  |             R = R + 2;  |      2  |                         0  |
  1803  |  resetPlaceHolder_2();  |         |                            |
  1809  |             R = R + 2;  |      2  |                         0  |
  1814  |  resetPlaceHolder_2();  |         |                            |
  1820  |             R = R + 2;  |      2  |                         0  |
  1825  |  resetPlaceHolder_2();  |         |                            |
  1831  |             R = R + 2;  |      2  |                         0  |
  1836  |  resetPlaceHolder_2();  |         |                            |
  1842  |             R = R + 2;  |      2  |                         0  |
  1847  |  resetPlaceHolder_2();  |         |                            |
  1853  |             R = R + 2;  |      2  |                         0  |
  1858  |  resetPlaceHolder_2();  |         |                            |
  1864  |             R = R + 2;  |      2  |                         0  |
  1869  |  resetPlaceHolder_2();  |         |                            |
  1875  |             R = R + 2;  |      2  |                         0  |
  1880  |  resetPlaceHolder_2();  |         |                            |
  1886  |             R = R + 2;  |      2  |                         0  |
  1891  |  resetPlaceHolder_2();  |         |                            |
  1897  |             R = R + 2;  |      2  |                         0  |
  1902  |  resetPlaceHolder_2();  |         |                            |
  1908  |             R = R + 2;  |      2  |                         0  |
  1913  |  resetPlaceHolder_2();  |         |                            |
  1919  |             R = R + 2;  |      2  |                         0  |
  1924  |  resetPlaceHolder_2();  |         |                            |
  1930  |             R = R + 2;  |      2  |                         0  |
  1935  |  resetPlaceHolder_2();  |         |                            |
  1941  |             R = R + 2;  |      2  |                         0  |
  1946  |  resetPlaceHolder_2();  |         |                            |
  1952  |             R = R + 2;  |      2  |                         0  |
  1957  |  resetPlaceHolder_2();  |         |                            |
  1963  |             R = R + 2;  |      2  |                         0  |
  1968  |  resetPlaceHolder_2();  |         |                            |
  1974  |             R = R + 2;  |      2  |                         0  |
  1979  |  resetPlaceHolder_2();  |         |                            |
  1985  |             R = R + 2;  |      2  |                         0  |
  1990  |  resetPlaceHolder_2();  |         |                            |
  1996  |             R = R + 2;  |      2  |                         0  |
  2001  |  resetPlaceHolder_2();  |         |                            |
  2007  |             R = R + 2;  |      2  |                         0  |
  2012  |  resetPlaceHolder_2();  |         |                            |
  2018  |             R = R + 2;  |      2  |                         0  |
  2023  |  resetPlaceHolder_2();  |         |                            |
  2029  |             R = R + 2;  |      2  |                         0  |
  2034  |  resetPlaceHolder_2();  |         |                            |
  2040  |             R = R + 2;  |      2  |                         0  |
  2045  |  resetPlaceHolder_2();  |         |                            |
  2051  |             R = R + 2;  |      2  |                         0  |
  2056  |  resetPlaceHolder_2();  |         |                            |
  2062  |             R = R + 2;  |      2  |                         0  |
  2067  |  resetPlaceHolder_2();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2078  |  resetPlaceHolder_2();  |         |                            |
  2084  |             R = R + 2;  |      2  |                         0  |
  2089  |  resetPlaceHolder_2();  |         |                            |
  2095  |             R = R + 2;  |      2  |                         0  |
  2100  |  resetPlaceHolder_2();  |         |                            |
  2106  |             R = R + 2;  |      2  |                         0  |
  2111  |  resetPlaceHolder_2();  |         |                            |
  2117  |             R = R + 2;  |      2  |                         0  |
  2122  |  resetPlaceHolder_2();  |         |                            |
  2128  |             R = R + 2;  |      2  |                         0  |
  2133  |  resetPlaceHolder_2();  |         |                            |
  2139  |             R = R + 2;  |      2  |                         0  |
  2144  |  resetPlaceHolder_2();  |         |                            |
  2150  |             R = R + 2;  |      2  |                         0  |
  2155  |  resetPlaceHolder_2();  |         |                            |
  2161  |             R = R + 2;  |      2  |                         0  |
  2166  |  resetPlaceHolder_2();  |         |                            |
  2172  |             R = R + 2;  |      2  |                         0  |
  2177  |  resetPlaceHolder_2();  |         |                            |
  2183  |             R = R + 2;  |      2  |                         0  |
  2188  |  resetPlaceHolder_2();  |         |                            |
  2194  |             R = R + 2;  |      2  |                         0  |
  2199  |  resetPlaceHolder_2();  |         |                            |
  2205  |             R = R + 2;  |      2  |                         0  |
  2210  |  resetPlaceHolder_2();  |         |                            |
  2216  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_2();  |         |                            |
  2227  |             R = R + 2;  |      2  |                         0  |
  2232  |  resetPlaceHolder_2();  |         |                            |
  2238  |             R = R + 2;  |      2  |                         0  |
  2243  |  resetPlaceHolder_2();  |         |                            |
  2249  |             R = R + 2;  |      2  |                         0  |
  2254  |  resetPlaceHolder_2();  |         |                            |
  2260  |             R = R + 2;  |      2  |                         0  |
  2265  |  resetPlaceHolder_2();  |         |                            |
  2271  |             R = R + 2;  |      2  |                         0  |
  2276  |  resetPlaceHolder_2();  |         |                            |
  2282  |             R = R + 2;  |      2  |                         0  |
  2287  |  resetPlaceHolder_2();  |         |                            |
  2293  |             R = R + 2;  |      2  |                         0  |
  2298  |  resetPlaceHolder_2();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2309  |  resetPlaceHolder_2();  |         |                            |
  2315  |             R = R + 2;  |      2  |                         0  |
  2320  |  resetPlaceHolder_2();  |         |                            |
  2326  |             R = R + 2;  |      2  |                         0  |
  2331  |  resetPlaceHolder_2();  |         |                            |
  2337  |             R = R + 2;  |      2  |                         0  |
  2342  |  resetPlaceHolder_2();  |         |                            |
  2348  |             R = R + 2;  |      2  |                         0  |
  2353  |  resetPlaceHolder_2();  |         |                            |
  2359  |             R = R + 2;  |      2  |                         0  |
  2364  |  resetPlaceHolder_2();  |         |                            |
  2370  |             R = R + 2;  |      2  |                         0  |
  2375  |  resetPlaceHolder_2();  |         |                            |
  2381  |             R = R + 2;  |      2  |                         0  |
  2386  |  resetPlaceHolder_2();  |         |                            |
  2392  |             R = R + 2;  |      2  |                         0  |
  2397  |  resetPlaceHolder_2();  |         |                            |
  2403  |             R = R + 2;  |      2  |                         0  |
  2408  |  resetPlaceHolder_2();  |         |                            |
  2414  |             R = R + 2;  |      2  |                         0  |
  2419  |  resetPlaceHolder_2();  |         |                            |
  2425  |             R = R + 2;  |      2  |                         0  |
  2430  |  resetPlaceHolder_2();  |         |                            |
  2436  |             R = R + 2;  |      2  |                         0  |
  2441  |  resetPlaceHolder_2();  |         |                            |
  2447  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_2();  |         |                            |
  2458  |             R = R + 2;  |      2  |                         0  |
  2463  |  resetPlaceHolder_2();  |         |                            |
  2469  |             R = R + 2;  |      2  |                         0  |
  2474  |  resetPlaceHolder_2();  |         |                            |
  2480  |             R = R + 2;  |      2  |                         0  |
  2485  |  resetPlaceHolder_2();  |         |                            |
  2491  |             R = R + 2;  |      2  |                         0  |
  2496  |  resetPlaceHolder_2();  |         |                            |
  2502  |             R = R + 2;  |      2  |                         0  |
  2507  |  resetPlaceHolder_2();  |         |                            |
  2513  |             R = R + 2;  |      2  |                         0  |
  2518  |  resetPlaceHolder_2();  |         |                            |
  2524  |             R = R + 2;  |      2  |                         0  |
  2529  |  resetPlaceHolder_2();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2540  |  resetPlaceHolder_2();  |         |                            |
  2546  |             R = R + 2;  |      2  |                         0  |
  2551  |  resetPlaceHolder_2();  |         |                            |
  2557  |             R = R + 1;  |      1  |                         0  |
  2562  |  resetPlaceHolder_1();  |         |                            |
  2576  |             R = R + 2;  |      2  |                         0  |
  2581  |  resetPlaceHolder_2();  |         |                            |
  2587  |             R = R + 2;  |      2  |                         0  |
  2592  |  resetPlaceHolder_2();  |         |                            |
  2598  |             R = R + 2;  |      2  |                         0  |
  2603  |  resetPlaceHolder_2();  |         |                            |
  2609  |             R = R + 2;  |      2  |                         0  |
  2614  |  resetPlaceHolder_2();  |         |                            |
  2620  |             R = R + 2;  |      2  |                         0  |
  2625  |  resetPlaceHolder_2();  |         |                            |
  2631  |             R = R + 2;  |      2  |                         0  |
  2636  |  resetPlaceHolder_2();  |         |                            |
  2642  |             R = R + 2;  |      2  |                         0  |
  2647  |  resetPlaceHolder_2();  |         |                            |
  2653  |             R = R + 2;  |      2  |                         0  |
  2658  |  resetPlaceHolder_2();  |         |                            |
  2664  |             R = R + 2;  |      2  |                         0  |
  2669  |  resetPlaceHolder_2();  |         |                            |
  2675  |             R = R + 2;  |      2  |                         0  |
  2680  |  resetPlaceHolder_2();  |         |                            |
  2686  |             R = R + 2;  |      2  |                         0  |
  2691  |  resetPlaceHolder_2();  |         |                            |
  2697  |             R = R + 2;  |      2  |                         0  |
  2702  |  resetPlaceHolder_2();  |         |                            |
  2708  |             R = R + 2;  |      2  |                         0  |
  2713  |  resetPlaceHolder_2();  |         |                            |
  2719  |             R = R + 2;  |      2  |                         0  |
  2724  |  resetPlaceHolder_2();  |         |                            |
  2730  |             R = R + 2;  |      2  |                         0  |
  2735  |  resetPlaceHolder_2();  |         |                            |
  2741  |             R = R + 2;  |      2  |                         0  |
  2746  |  resetPlaceHolder_2();  |         |                            |
  2752  |             R = R + 2;  |      2  |                         0  |
  2757  |  resetPlaceHolder_2();  |         |                            |
  2763  |             R = R + 2;  |      2  |                         0  |
  2768  |  resetPlaceHolder_2();  |         |                            |
  2774  |             R = R + 2;  |      2  |                         0  |
  2779  |  resetPlaceHolder_2();  |         |                            |
  2785  |             R = R + 2;  |      2  |                         0  |
  2790  |  resetPlaceHolder_2();  |         |                            |
  2796  |             R = R + 2;  |      2  |                         0  |
  2801  |  resetPlaceHolder_2();  |         |                            |
  2807  |             R = R + 2;  |      2  |                         0  |
  2812  |  resetPlaceHolder_2();  |         |                            |
  2818  |             R = R + 2;  |      2  |                         0  |
  2823  |  resetPlaceHolder_2();  |         |                            |
  2829  |             R = R + 2;  |      2  |                         0  |
  2834  |  resetPlaceHolder_2();  |         |                            |
  2840  |             R = R + 2;  |      2  |                         0  |
  2845  |  resetPlaceHolder_2();  |         |                            |
  2851  |             R = R + 2;  |      2  |                         0  |
  2856  |  resetPlaceHolder_2();  |         |                            |
  2862  |             R = R + 2;  |      2  |                         0  |
  2867  |  resetPlaceHolder_2();  |         |                            |
  2873  |             R = R + 2;  |      2  |                         0  |
  2878  |  resetPlaceHolder_2();  |         |                            |
  2884  |             R = R + 2;  |      2  |                         0  |
  2889  |  resetPlaceHolder_2();  |         |                            |
  2895  |             R = R + 2;  |      2  |                         0  |
  2900  |  resetPlaceHolder_2();  |         |                            |
  2906  |             R = R + 2;  |      2  |                         0  |
  2911  |  resetPlaceHolder_2();  |         |                            |
  2917  |             R = R + 2;  |      2  |                         0  |
  2922  |  resetPlaceHolder_2();  |         |                            |
  2928  |             R = R + 2;  |      2  |                         0  |
  2933  |  resetPlaceHolder_2();  |         |                            |
  2939  |             R = R + 2;  |      2  |                         0  |
  2944  |  resetPlaceHolder_2();  |         |                            |
  2950  |             R = R + 2;  |      2  |                         0  |
  2955  |  resetPlaceHolder_2();  |         |                            |
  2961  |             R = R + 2;  |      2  |                         0  |
  2966  |  resetPlaceHolder_2();  |         |                            |
  2972  |             R = R + 2;  |      2  |                         0  |
  2977  |  resetPlaceHolder_2();  |         |                            |
  2983  |             R = R + 2;  |      2  |                         0  |
  2988  |  resetPlaceHolder_2();  |         |                            |
  2994  |             R = R + 2;  |      2  |                         0  |
  2999  |  resetPlaceHolder_2();  |         |                            |
  3005  |             R = R + 2;  |      2  |                         0  |
  3010  |  resetPlaceHolder_2();  |         |                            |
  3016  |             R = R + 2;  |      2  |                         0  |
  3021  |  resetPlaceHolder_2();  |         |                            |
  3027  |             R = R + 2;  |      2  |                         0  |
  3032  |  resetPlaceHolder_2();  |         |                            |
  3038  |             R = R + 2;  |      2  |                         0  |
  3043  |  resetPlaceHolder_2();  |         |                            |
  3049  |             R = R + 2;  |      2  |                         0  |
  3054  |  resetPlaceHolder_2();  |         |                            |
  3060  |             R = R + 2;  |      2  |                         0  |
  3065  |  resetPlaceHolder_2();  |         |                            |
  3071  |             R = R + 2;  |      2  |                         0  |
  3076  |  resetPlaceHolder_2();  |         |                            |
  3082  |             R = R + 2;  |      2  |                         0  |
  3087  |  resetPlaceHolder_2();  |         |                            |
  3093  |             R = R + 2;  |      2  |                         0  |
  3098  |  resetPlaceHolder_2();  |         |                            |
  3104  |             R = R + 2;  |      2  |                         0  |
  3109  |  resetPlaceHolder_2();  |         |                            |
  3115  |             R = R + 2;  |      2  |                         0  |
  3120  |  resetPlaceHolder_2();  |         |                            |
  3126  |             R = R + 2;  |      2  |                         0  |
  3131  |  resetPlaceHolder_2();  |         |                            |
  3137  |             R = R + 2;  |      2  |                         0  |
  3142  |  resetPlaceHolder_2();  |         |                            |
  3148  |             R = R + 2;  |      2  |                         0  |
  3153  |  resetPlaceHolder_2();  |         |                            |
  3159  |             R = R + 2;  |      2  |                         0  |
  3164  |  resetPlaceHolder_2();  |         |                            |
  3170  |             R = R + 2;  |      2  |                         0  |
  3175  |  resetPlaceHolder_2();  |         |                            |
  3181  |             R = R + 2;  |      2  |                         0  |
  3186  |  resetPlaceHolder_2();  |         |                            |
  3192  |             R = R + 2;  |      2  |                         0  |
  3197  |  resetPlaceHolder_2();  |         |                            |
  3203  |             R = R + 2;  |      2  |                         0  |
  3208  |  resetPlaceHolder_2();  |         |                            |
  3214  |             R = R + 2;  |      2  |                         0  |
  3219  |  resetPlaceHolder_2();  |         |                            |
  3225  |             R = R + 2;  |      2  |                         0  |
  3230  |  resetPlaceHolder_2();  |         |                            |
  3236  |             R = R + 2;  |      2  |                         0  |
  3241  |  resetPlaceHolder_2();  |         |                            |
  3247  |             R = R + 2;  |      2  |                         0  |
  3252  |  resetPlaceHolder_2();  |         |                            |
  3258  |             R = R + 2;  |      2  |                         0  |
  3263  |  resetPlaceHolder_2();  |         |                            |
  3269  |             R = R + 2;  |      2  |                         0  |
  3274  |  resetPlaceHolder_2();  |         |                            |
  3280  |             R = R + 2;  |      2  |                         0  |
  3285  |  resetPlaceHolder_2();  |         |                            |
  3291  |             R = R + 2;  |      2  |                         0  |
  3296  |  resetPlaceHolder_2();  |         |                            |
  3302  |             R = R + 2;  |      2  |                         0  |
  3307  |  resetPlaceHolder_2();  |         |                            |
  3313  |             R = R + 2;  |      2  |                         0  |
  3318  |  resetPlaceHolder_2();  |         |                            |
  3324  |             R = R + 2;  |      2  |                         0  |
  3329  |  resetPlaceHolder_2();  |         |                            |
  3335  |             R = R + 2;  |      2  |                         0  |
  3340  |  resetPlaceHolder_2();  |         |                            |
  3346  |             R = R + 2;  |      2  |                         0  |
  3351  |  resetPlaceHolder_2();  |         |                            |
  3357  |             R = R + 2;  |      2  |                         0  |
  3362  |  resetPlaceHolder_2();  |         |                            |
  3368  |             R = R + 2;  |      2  |                         0  |
  3373  |  resetPlaceHolder_2();  |         |                            |
  3379  |             R = R + 2;  |      2  |                         0  |
  3384  |  resetPlaceHolder_2();  |         |                            |
  3390  |             R = R + 2;  |      2  |                         0  |
  3395  |  resetPlaceHolder_2();  |         |                            |
  3401  |             R = R + 2;  |      2  |                         0  |
  3406  |  resetPlaceHolder_2();  |         |                            |
  3412  |             R = R + 2;  |      2  |                         0  |
  3417  |  resetPlaceHolder_2();  |         |                            |
  3423  |             R = R + 2;  |      2  |                         0  |
  3428  |  resetPlaceHolder_2();  |         |                            |
  3434  |             R = R + 2;  |      2  |                         0  |
  3439  |  resetPlaceHolder_2();  |         |                            |
  3445  |             R = R + 2;  |      2  |                         0  |
  3450  |  resetPlaceHolder_2();  |         |                            |
  3456  |             R = R + 2;  |      2  |                         0  |
  3461  |  resetPlaceHolder_2();  |         |                            |
  3467  |             R = R + 2;  |      2  |                         0  |
  3472  |  resetPlaceHolder_2();  |         |                            |
  3478  |             R = R + 2;  |      2  |                         0  |
  3483  |  resetPlaceHolder_2();  |         |                            |
  3489  |             R = R + 2;  |      2  |                         0  |
  3494  |  resetPlaceHolder_2();  |         |                            |
  3500  |             R = R + 2;  |      2  |                         0  |
  3505  |  resetPlaceHolder_2();  |         |                            |
  3511  |             R = R + 2;  |      2  |                         0  |
  3516  |  resetPlaceHolder_2();  |         |                            |
  3522  |             R = R + 2;  |      2  |                         0  |
  3527  |  resetPlaceHolder_2();  |         |                            |
  3533  |             R = R + 2;  |      2  |                         0  |
  3538  |  resetPlaceHolder_2();  |         |                            |
  3544  |             R = R + 2;  |      2  |                         0  |
  3549  |  resetPlaceHolder_2();  |         |                            |
  3555  |             R = R + 2;  |      2  |                         0  |
  3560  |  resetPlaceHolder_2();  |         |                            |
  3566  |             R = R + 2;  |      2  |                         0  |
  3571  |  resetPlaceHolder_2();  |         |                            |
  3577  |             R = R + 2;  |      2  |                         0  |
  3582  |  resetPlaceHolder_2();  |         |                            |
  3588  |             R = R + 2;  |      2  |                         0  |
  3593  |  resetPlaceHolder_2();  |         |                            |
  3599  |             R = R + 2;  |      2  |                         0  |
  3604  |  resetPlaceHolder_2();  |         |                            |
  3610  |             R = R + 2;  |      2  |                         0  |
  3615  |  resetPlaceHolder_2();  |         |                            |
  3621  |             R = R + 2;  |      2  |                         0  |
  3626  |  resetPlaceHolder_2();  |         |                            |
  3632  |             R = R + 2;  |      2  |                         0  |
  3637  |  resetPlaceHolder_2();  |         |                            |
  3643  |             R = R + 2;  |      2  |                         0  |
  3648  |  resetPlaceHolder_2();  |         |                            |
  3654  |             R = R + 2;  |      2  |                         0  |
  3659  |  resetPlaceHolder_2();  |         |                            |
  3665  |             R = R + 2;  |      2  |                         0  |
  3670  |  resetPlaceHolder_2();  |         |                            |
  3676  |             R = R + 2;  |      2  |                         0  |
  3681  |  resetPlaceHolder_2();  |         |                            |
  3687  |             R = R + 2;  |      2  |                         0  |
  3692  |  resetPlaceHolder_2();  |         |                            |
  3698  |             R = R + 2;  |      2  |                         0  |
  3703  |  resetPlaceHolder_2();  |         |                            |
  3709  |             R = R + 2;  |      2  |                         0  |
  3714  |  resetPlaceHolder_2();  |         |                            |
  3720  |             R = R + 2;  |      2  |                         0  |
  3725  |  resetPlaceHolder_2();  |         |                            |
  3731  |             R = R + 2;  |      2  |                         0  |
  3736  |  resetPlaceHolder_2();  |         |                            |
  3742  |             R = R + 2;  |      2  |                         0  |
  3747  |  resetPlaceHolder_2();  |         |                            |
  3753  |             R = R + 2;  |      2  |                         0  |
  3758  |  resetPlaceHolder_2();  |         |                            |
  3764  |             R = R + 2;  |      2  |                         0  |
  3769  |  resetPlaceHolder_2();  |         |                            |
  3775  |             R = R + 2;  |      2  |                         0  |
  3780  |  resetPlaceHolder_2();  |         |                            |
  3786  |             R = R + 2;  |      2  |                         0  |
  3791  |  resetPlaceHolder_2();  |         |                            |
  3797  |             R = R + 2;  |      2  |                         0  |
  3802  |  resetPlaceHolder_2();  |         |                            |
  3808  |             R = R + 2;  |      2  |                         0  |
  3813  |  resetPlaceHolder_2();  |         |                            |
  3819  |             R = R + 2;  |      2  |                         0  |
  3824  |  resetPlaceHolder_2();  |         |                            |
  3830  |             R = R + 2;  |      2  |                         0  |
  3835  |  resetPlaceHolder_2();  |         |                            |
  3841  |             R = R + 2;  |      2  |                         0  |
  3846  |  resetPlaceHolder_2();  |         |                            |
  3852  |             R = R + 2;  |      2  |                         0  |
  3857  |  resetPlaceHolder_2();  |         |                            |
  3863  |             R = R + 2;  |      2  |                         0  |
  3868  |  resetPlaceHolder_2();  |         |                            |
  3874  |             R = R + 2;  |      2  |                         0  |
  3879  |  resetPlaceHolder_2();  |         |                            |
  3885  |             R = R + 2;  |      2  |                         0  |
  3890  |  resetPlaceHolder_2();  |         |                            |
  3896  |             R = R + 2;  |      2  |                         0  |
  3901  |  resetPlaceHolder_2();  |         |                            |
  3907  |             R = R + 2;  |      2  |                         0  |
  3912  |  resetPlaceHolder_2();  |         |                            |
  3918  |             R = R + 2;  |      2  |                         0  |
  3923  |  resetPlaceHolder_2();  |         |                            |
  3929  |             R = R + 2;  |      2  |                         0  |
  3934  |  resetPlaceHolder_2();  |         |                            |
  3940  |             R = R + 2;  |      2  |                         0  |
  3945  |  resetPlaceHolder_2();  |         |                            |
  3951  |             R = R + 2;  |      2  |                         0  |
  3956  |  resetPlaceHolder_2();  |         |                            |
  3962  |             R = R + 2;  |      2  |                         0  |
  3967  |  resetPlaceHolder_2();  |         |                            |
  3973  |             R = R + 2;  |      2  |                         0  |
  3978  |  resetPlaceHolder_2();  |         |                            |
  3984  |             R = R + 2;  |      2  |                         0  |
  3989  |  resetPlaceHolder_2();  |         |                            |
  3995  |             R = R + 2;  |      2  |                         0  |
  4000  |  resetPlaceHolder_2();  |         |                            |
  4006  |             R = R + 2;  |      2  |                         0  |
  4011  |  resetPlaceHolder_2();  |         |                            |
  4017  |             R = R + 2;  |      2  |                         0  |
  4022  |  resetPlaceHolder_2();  |         |                            |
  4028  |             R = R + 2;  |      2  |                         0  |
  4033  |  resetPlaceHolder_2();  |         |                            |
  4039  |             R = R + 2;  |      2  |                         0  |
  4044  |  resetPlaceHolder_2();  |         |                            |
  4050  |             R = R + 2;  |      2  |                         0  |
  4055  |  resetPlaceHolder_2();  |         |                            |
  4061  |             R = R + 2;  |      2  |                         0  |
  4066  |  resetPlaceHolder_2();  |         |                            |
  4072  |             R = R + 2;  |      2  |                         0  |
  4077  |  resetPlaceHolder_2();  |         |                            |
  4083  |             R = R + 2;  |      2  |                         0  |
  4088  |  resetPlaceHolder_2();  |         |                            |
  4094  |             R = R + 2;  |      2  |                         0  |
  4099  |  resetPlaceHolder_2();  |         |                            |
  4105  |             R = R + 2;  |      2  |                         0  |
  4110  |  resetPlaceHolder_2();  |         |                            |
  4116  |             R = R + 2;  |      2  |                         0  |
  4121  |  resetPlaceHolder_2();  |         |                            |
  4127  |             R = R + 2;  |      2  |                         0  |
  4132  |  resetPlaceHolder_2();  |         |                            |
  4138  |             R = R + 2;  |      2  |                         0  |
  4143  |  resetPlaceHolder_2();  |         |                            |
  4149  |             R = R + 2;  |      2  |                         0  |
  4154  |  resetPlaceHolder_2();  |         |                            |
  4160  |             R = R + 2;  |      2  |                         0  |
  4165  |  resetPlaceHolder_2();  |         |                            |
  4171  |             R = R + 2;  |      2  |                         0  |
  4176  |  resetPlaceHolder_2();  |         |                            |
  4182  |             R = R + 2;  |      2  |                         0  |
  4187  |  resetPlaceHolder_2();  |         |                            |
  4193  |             R = R + 2;  |      2  |                         0  |
  4198  |  resetPlaceHolder_2();  |         |                            |
  4204  |             R = R + 2;  |      2  |                         0  |
  4209  |  resetPlaceHolder_2();  |         |                            |
  4215  |             R = R + 2;  |      2  |                         0  |
  4220  |  resetPlaceHolder_2();  |         |                            |
  4226  |             R = R + 2;  |      2  |                         0  |
  4231  |  resetPlaceHolder_2();  |         |                            |
  4237  |             R = R + 2;  |      2  |                         0  |
  4242  |  resetPlaceHolder_2();  |         |                            |
  4248  |             R = R + 2;  |      2  |                         0  |
  4253  |  resetPlaceHolder_2();  |         |                            |
  4259  |             R = R + 2;  |      2  |                         0  |
  4264  |  resetPlaceHolder_2();  |         |                            |
  4270  |             R = R + 2;  |      2  |                         0  |
  4275  |  resetPlaceHolder_2();  |         |                            |
  4281  |             R = R + 2;  |      2  |                         0  |
  4286  |  resetPlaceHolder_2();  |         |                            |
  4292  |             R = R + 2;  |      2  |                         0  |
  4297  |  resetPlaceHolder_2();  |         |                            |
  4303  |             R = R + 2;  |      2  |                         0  |
  4308  |  resetPlaceHolder_2();  |         |                            |
  4314  |             R = R + 2;  |      2  |                         0  |
  4319  |  resetPlaceHolder_2();  |         |                            |
  4325  |             R = R + 2;  |      2  |                         0  |
  4330  |  resetPlaceHolder_2();  |         |                            |
  4336  |             R = R + 2;  |      2  |                         0  |
  4341  |  resetPlaceHolder_2();  |         |                            |
  4347  |             R = R + 2;  |      2  |                         0  |
  4352  |  resetPlaceHolder_2();  |         |                            |
  4358  |             R = R + 2;  |      2  |                         0  |
  4363  |  resetPlaceHolder_2();  |         |                            |
  4369  |             R = R + 2;  |      2  |                         0  |
  4374  |  resetPlaceHolder_2();  |         |                            |
  4380  |             R = R + 2;  |      2  |                         0  |
  4385  |  resetPlaceHolder_2();  |         |                            |
  4391  |             R = R + 2;  |      2  |                         0  |
  4396  |  resetPlaceHolder_2();  |         |                            |
  4402  |             R = R + 2;  |      2  |                         0  |
  4407  |  resetPlaceHolder_2();  |         |                            |
  4413  |             R = R + 2;  |      2  |                         0  |
  4418  |  resetPlaceHolder_2();  |         |                            |
  4424  |             R = R + 2;  |      2  |                         0  |
  4429  |  resetPlaceHolder_2();  |         |                            |
  4435  |             R = R + 2;  |      2  |                         0  |
  4440  |  resetPlaceHolder_2();  |         |                            |
  4446  |             R = R + 2;  |      2  |                         0  |
  4451  |  resetPlaceHolder_2();  |         |                            |
  4457  |             R = R + 2;  |      2  |                         0  |
  4462  |  resetPlaceHolder_2();  |         |                            |
  4468  |             R = R + 2;  |      2  |                         0  |
  4473  |  resetPlaceHolder_2();  |         |                            |
  4479  |             R = R + 2;  |      2  |                         0  |
  4484  |  resetPlaceHolder_2();  |         |                            |
  4490  |             R = R + 2;  |      2  |                         0  |
  4495  |  resetPlaceHolder_2();  |         |                            |
  4501  |             R = R + 2;  |      2  |                         0  |
  4506  |  resetPlaceHolder_2();  |         |                            |
  4512  |             R = R + 1;  |      1  |                         0  |
  4517  |  resetPlaceHolder_1();  |         |                            |
  4531  |             R = R + 2;  |      2  |                         0  |
  4536  |  resetPlaceHolder_2();  |         |                            |
  4542  |             R = R + 2;  |      2  |                         0  |
  4547  |  resetPlaceHolder_2();  |         |                            |
  4553  |             R = R + 2;  |      2  |                         0  |
  4558  |  resetPlaceHolder_2();  |         |                            |
  4564  |             R = R + 2;  |      2  |                         0  |
  4569  |  resetPlaceHolder_2();  |         |                            |
  4575  |             R = R + 2;  |      2  |                         0  |
  4580  |  resetPlaceHolder_2();  |         |                            |
  4586  |             R = R + 2;  |      2  |                         0  |
  4591  |  resetPlaceHolder_2();  |         |                            |
  4597  |             R = R + 2;  |      2  |                         0  |
  4602  |  resetPlaceHolder_2();  |         |                            |
  4608  |             R = R + 2;  |      2  |                         0  |
  4613  |  resetPlaceHolder_2();  |         |                            |
  4619  |             R = R + 2;  |      2  |                         0  |
  4624  |  resetPlaceHolder_2();  |         |                            |
  4630  |             R = R + 2;  |      2  |                         0  |
  4635  |  resetPlaceHolder_2();  |         |                            |
  4641  |             R = R + 2;  |      2  |                         0  |
  4646  |  resetPlaceHolder_2();  |         |                            |
  4652  |             R = R + 2;  |      2  |                         0  |
  4657  |  resetPlaceHolder_2();  |         |                            |
  4663  |             R = R + 2;  |      2  |                         0  |
  4668  |  resetPlaceHolder_2();  |         |                            |
  4674  |             R = R + 2;  |      2  |                         0  |
  4679  |  resetPlaceHolder_2();  |         |                            |
  4685  |             R = R + 2;  |      2  |                         0  |
  4690  |  resetPlaceHolder_2();  |         |                            |
  4696  |             R = R + 2;  |      2  |                         0  |
  4701  |  resetPlaceHolder_2();  |         |                            |
  4707  |             R = R + 2;  |      2  |                         0  |
  4712  |  resetPlaceHolder_2();  |         |                            |
  4718  |             R = R + 2;  |      2  |                         0  |
  4723  |  resetPlaceHolder_2();  |         |                            |
  4729  |             R = R + 2;  |      2  |                         0  |
  4734  |  resetPlaceHolder_2();  |         |                            |
  4740  |             R = R + 2;  |      2  |                         0  |
  4745  |  resetPlaceHolder_2();  |         |                            |
  4751  |             R = R + 2;  |      2  |                         0  |
  4756  |  resetPlaceHolder_2();  |         |                            |
  4762  |             R = R + 2;  |      2  |                         0  |
  4767  |  resetPlaceHolder_2();  |         |                            |
  4773  |             R = R + 2;  |      2  |                         0  |
  4778  |  resetPlaceHolder_2();  |         |                            |
  4784  |             R = R + 2;  |      2  |                         0  |
  4789  |  resetPlaceHolder_2();  |         |                            |
  4795  |             R = R + 2;  |      2  |                         0  |
  4800  |  resetPlaceHolder_2();  |         |                            |
  4806  |             R = R + 2;  |      2  |                         0  |
  4811  |  resetPlaceHolder_2();  |         |                            |
  4817  |             R = R + 2;  |      2  |                         0  |
  4822  |  resetPlaceHolder_2();  |         |                            |
  4828  |             R = R + 2;  |      2  |                         0  |
  4833  |  resetPlaceHolder_2();  |         |                            |
  4839  |             R = R + 2;  |      2  |                         0  |
  4844  |  resetPlaceHolder_2();  |         |                            |
  4850  |             R = R + 2;  |      2  |                         0  |
  4855  |  resetPlaceHolder_2();  |         |                            |
  4861  |             R = R + 2;  |      2  |                         0  |
  4866  |  resetPlaceHolder_2();  |         |                            |
  4872  |             R = R + 2;  |      2  |                         0  |
  4877  |  resetPlaceHolder_2();  |         |                            |
  4883  |             R = R + 2;  |      2  |                         0  |
  4888  |  resetPlaceHolder_2();  |         |                            |
  4894  |             R = R + 2;  |      2  |                         0  |
  4899  |  resetPlaceHolder_2();  |         |                            |
  4905  |             R = R + 2;  |      2  |                         0  |
  4910  |  resetPlaceHolder_2();  |         |                            |
  4916  |             R = R + 2;  |      2  |                         0  |
  4921  |  resetPlaceHolder_2();  |         |                            |
  4927  |             R = R + 2;  |      2  |                         0  |
  4932  |  resetPlaceHolder_2();  |         |                            |
  4938  |             R = R + 2;  |      2  |                         0  |
  4943  |  resetPlaceHolder_2();  |         |                            |
  4949  |             R = R + 2;  |      2  |                         0  |
  4954  |  resetPlaceHolder_2();  |         |                            |
  4960  |             R = R + 2;  |      2  |                         0  |
  4965  |  resetPlaceHolder_2();  |         |                            |
  4971  |             R = R + 2;  |      2  |                         0  |
  4976  |  resetPlaceHolder_2();  |         |                            |
  4982  |             R = R + 2;  |      2  |                         0  |
  4987  |  resetPlaceHolder_2();  |         |                            |
  4993  |             R = R + 2;  |      2  |                         0  |
  4998  |  resetPlaceHolder_2();  |         |                            |
  5004  |             R = R + 2;  |      2  |                         0  |
  5009  |  resetPlaceHolder_2();  |         |                            |
  5015  |             R = R + 2;  |      2  |                         0  |
  5020  |  resetPlaceHolder_2();  |         |                            |
  5026  |             R = R + 2;  |      2  |                         0  |
  5031  |  resetPlaceHolder_2();  |         |                            |
  5037  |             R = R + 2;  |      2  |                         0  |
  5042  |  resetPlaceHolder_2();  |         |                            |
  5048  |             R = R + 2;  |      2  |                         0  |
  5053  |  resetPlaceHolder_2();  |         |                            |
  5059  |             R = R + 2;  |      2  |                         0  |
  5064  |  resetPlaceHolder_2();  |         |                            |
  5070  |             R = R + 2;  |      2  |                         0  |
  5075  |  resetPlaceHolder_2();  |         |                            |
  5081  |             R = R + 2;  |      2  |                         0  |
  5086  |  resetPlaceHolder_2();  |         |                            |
  5092  |             R = R + 2;  |      2  |                         0  |
  5097  |  resetPlaceHolder_2();  |         |                            |
  5103  |             R = R + 2;  |      2  |                         0  |
  5108  |  resetPlaceHolder_2();  |         |                            |
  5114  |             R = R + 2;  |      2  |                         0  |
  5119  |  resetPlaceHolder_2();  |         |                            |
  5125  |             R = R + 2;  |      2  |                         0  |
  5130  |  resetPlaceHolder_2();  |         |                            |
  5136  |             R = R + 2;  |      2  |                         0  |
  5141  |  resetPlaceHolder_2();  |         |                            |
  5147  |             R = R + 2;  |      2  |                         0  |
  5152  |  resetPlaceHolder_2();  |         |                            |
  5158  |             R = R + 2;  |      2  |                         0  |
  5163  |  resetPlaceHolder_2();  |         |                            |
  5169  |             R = R + 2;  |      2  |                         0  |
  5174  |  resetPlaceHolder_2();  |         |                            |
  5180  |             R = R + 2;  |      2  |                         0  |
  5185  |  resetPlaceHolder_2();  |         |                            |
  5191  |             R = R + 2;  |      2  |                         0  |
  5196  |  resetPlaceHolder_2();  |         |                            |
  5202  |             R = R + 2;  |      2  |                         0  |
  5207  |  resetPlaceHolder_2();  |         |                            |
  5213  |             R = R + 2;  |      2  |                         0  |
  5218  |  resetPlaceHolder_2();  |         |                            |
  5224  |             R = R + 2;  |      2  |                         0  |
  5229  |  resetPlaceHolder_2();  |         |                            |
  5235  |             R = R + 2;  |      2  |                         0  |
  5240  |  resetPlaceHolder_2();  |         |                            |
  5246  |             R = R + 2;  |      2  |                         0  |
  5251  |  resetPlaceHolder_2();  |         |                            |
  5257  |             R = R + 2;  |      2  |                         0  |
  5262  |  resetPlaceHolder_2();  |         |                            |
  5268  |             R = R + 2;  |      2  |                         0  |
  5273  |  resetPlaceHolder_2();  |         |                            |
  5279  |             R = R + 2;  |      2  |                         0  |
  5284  |  resetPlaceHolder_2();  |         |                            |
  5290  |             R = R + 2;  |      2  |                         0  |
  5295  |  resetPlaceHolder_2();  |         |                            |
  5301  |             R = R + 2;  |      2  |                         0  |
  5306  |  resetPlaceHolder_2();  |         |                            |
  5312  |             R = R + 2;  |      2  |                         0  |
  5317  |  resetPlaceHolder_2();  |         |                            |
  5323  |             R = R + 2;  |      2  |                         0  |
  5328  |  resetPlaceHolder_2();  |         |                            |
  5334  |             R = R + 2;  |      2  |                         0  |
  5339  |  resetPlaceHolder_2();  |         |                            |
  5345  |             R = R + 2;  |      2  |                         0  |
  5350  |  resetPlaceHolder_2();  |         |                            |
  5356  |             R = R + 2;  |      2  |                         0  |
  5361  |  resetPlaceHolder_2();  |         |                            |
  5367  |             R = R + 2;  |      2  |                         0  |
  5372  |  resetPlaceHolder_2();  |         |                            |
  5378  |             R = R + 2;  |      2  |                         0  |
  5383  |  resetPlaceHolder_2();  |         |                            |
  5389  |             R = R + 2;  |      2  |                         0  |
  5394  |  resetPlaceHolder_2();  |         |                            |
  5400  |             R = R + 2;  |      2  |                         0  |
  5405  |  resetPlaceHolder_2();  |         |                            |
  5411  |             R = R + 2;  |      2  |                         0  |
  5416  |  resetPlaceHolder_2();  |         |                            |
  5422  |             R = R + 2;  |      2  |                         0  |
  5427  |  resetPlaceHolder_2();  |         |                            |
  5433  |             R = R + 2;  |      2  |                         0  |
  5438  |  resetPlaceHolder_2();  |         |                            |
  5444  |             R = R + 2;  |      2  |                         0  |
  5449  |  resetPlaceHolder_2();  |         |                            |
  5455  |             R = R + 2;  |      2  |                         0  |
  5460  |  resetPlaceHolder_2();  |         |                            |
  5466  |             R = R + 2;  |      2  |                         0  |
  5471  |  resetPlaceHolder_2();  |         |                            |
  5477  |             R = R + 2;  |      2  |                         0  |
  5482  |  resetPlaceHolder_2();  |         |                            |
  5488  |             R = R + 2;  |      2  |                         0  |
  5493  |  resetPlaceHolder_2();  |         |                            |
  5499  |             R = R + 2;  |      2  |                         0  |
  5504  |  resetPlaceHolder_2();  |         |                            |
  5510  |             R = R + 2;  |      2  |                         0  |
  5515  |  resetPlaceHolder_2();  |         |                            |
  5521  |             R = R + 2;  |      2  |                         0  |
  5526  |  resetPlaceHolder_2();  |         |                            |
  5532  |             R = R + 2;  |      2  |                         0  |
  5537  |  resetPlaceHolder_2();  |         |                            |
  5543  |             R = R + 2;  |      2  |                         0  |
  5548  |  resetPlaceHolder_2();  |         |                            |
  5554  |             R = R + 2;  |      2  |                         0  |
  5559  |  resetPlaceHolder_2();  |         |                            |
  5565  |             R = R + 2;  |      2  |                         0  |
  5570  |  resetPlaceHolder_2();  |         |                            |
  5576  |             R = R + 2;  |      2  |                         0  |
  5581  |  resetPlaceHolder_2();  |         |                            |
  5587  |             R = R + 2;  |      2  |                         0  |
  5592  |  resetPlaceHolder_2();  |         |                            |
  5598  |             R = R + 2;  |      2  |                         0  |
  5603  |  resetPlaceHolder_2();  |         |                            |
  5609  |             R = R + 2;  |      2  |                         0  |
  5614  |  resetPlaceHolder_2();  |         |                            |
  5620  |             R = R + 2;  |      2  |                         0  |
  5625  |  resetPlaceHolder_2();  |         |                            |
  5631  |             R = R + 2;  |      2  |                         0  |
  5636  |  resetPlaceHolder_2();  |         |                            |
  5642  |             R = R + 2;  |      2  |                         0  |
  5647  |  resetPlaceHolder_2();  |         |                            |
  5653  |             R = R + 2;  |      2  |                         0  |
  5658  |  resetPlaceHolder_2();  |         |                            |
  5664  |             R = R + 2;  |      2  |                         0  |
  5669  |  resetPlaceHolder_2();  |         |                            |
  5675  |             R = R + 2;  |      2  |                         0  |
  5680  |  resetPlaceHolder_2();  |         |                            |
  5686  |             R = R + 2;  |      2  |                         0  |
  5691  |  resetPlaceHolder_2();  |         |                            |
  5697  |             R = R + 2;  |      2  |                         0  |
  5702  |  resetPlaceHolder_2();  |         |                            |
  5708  |             R = R + 2;  |      2  |                         0  |
  5713  |  resetPlaceHolder_2();  |         |                            |
  5719  |             R = R + 2;  |      2  |                         0  |
  5724  |  resetPlaceHolder_2();  |         |                            |
  5730  |             R = R + 2;  |      2  |                         0  |
  5735  |  resetPlaceHolder_2();  |         |                            |
  5741  |             R = R + 2;  |      2  |                         0  |
  5746  |  resetPlaceHolder_2();  |         |                            |
  5752  |             R = R + 2;  |      2  |                         0  |
  5757  |  resetPlaceHolder_2();  |         |                            |
  5763  |             R = R + 2;  |      2  |                         0  |
  5768  |  resetPlaceHolder_2();  |         |                            |
  5774  |             R = R + 2;  |      2  |                         0  |
  5779  |  resetPlaceHolder_2();  |         |                            |
  5785  |             R = R + 2;  |      2  |                         0  |
  5790  |  resetPlaceHolder_2();  |         |                            |
  5796  |             R = R + 2;  |      2  |                         0  |
  5801  |  resetPlaceHolder_2();  |         |                            |
  5807  |             R = R + 2;  |      2  |                         0  |
  5812  |  resetPlaceHolder_2();  |         |                            |
  5818  |             R = R + 2;  |      2  |                         0  |
  5823  |  resetPlaceHolder_2();  |         |                            |
  5829  |             R = R + 2;  |      2  |                         0  |
  5834  |  resetPlaceHolder_2();  |         |                            |
  5840  |             R = R + 2;  |      2  |                         0  |
  5845  |  resetPlaceHolder_2();  |         |                            |
  5851  |             R = R + 2;  |      2  |                         0  |
  5856  |  resetPlaceHolder_2();  |         |                            |
  5862  |             R = R + 2;  |      2  |                         0  |
  5867  |  resetPlaceHolder_2();  |         |                            |
  5873  |             R = R + 2;  |      2  |                         0  |
  5878  |  resetPlaceHolder_2();  |         |                            |
  5884  |             R = R + 2;  |      2  |                         0  |
  5889  |  resetPlaceHolder_2();  |         |                            |
  5895  |             R = R + 2;  |      2  |                         0  |
  5900  |  resetPlaceHolder_2();  |         |                            |
  5906  |             R = R + 2;  |      2  |                         0  |
  5911  |  resetPlaceHolder_2();  |         |                            |
  5917  |             R = R + 2;  |      2  |                         0  |
  5922  |  resetPlaceHolder_2();  |         |                            |
  5928  |             R = R + 2;  |      2  |                         0  |
  5933  |  resetPlaceHolder_2();  |         |                            |
  5939  |             R = R + 2;  |      2  |                         0  |
  5944  |  resetPlaceHolder_2();  |         |                            |
  5950  |             R = R + 2;  |      2  |                         0  |
  5955  |  resetPlaceHolder_2();  |         |                            |
  5961  |             R = R + 2;  |      2  |                         0  |
  5966  |  resetPlaceHolder_2();  |         |                            |
  5972  |             R = R + 2;  |      2  |                         0  |
  5977  |  resetPlaceHolder_2();  |         |                            |
  5983  |             R = R + 2;  |      2  |                         0  |
  5988  |  resetPlaceHolder_2();  |         |                            |
  5994  |             R = R + 2;  |      2  |                         0  |
  5999  |  resetPlaceHolder_2();  |         |                            |
  6005  |             R = R + 2;  |      2  |                         0  |
  6010  |  resetPlaceHolder_2();  |         |                            |
  6016  |             R = R + 2;  |      2  |                         0  |
  6021  |  resetPlaceHolder_2();  |         |                            |
  6027  |             R = R + 2;  |      2  |                         0  |
  6032  |  resetPlaceHolder_2();  |         |                            |
  6038  |             R = R + 2;  |      2  |                         0  |
  6043  |  resetPlaceHolder_2();  |         |                            |
  6049  |             R = R + 2;  |      2  |                         0  |
  6054  |  resetPlaceHolder_2();  |         |                            |
  6060  |             R = R + 2;  |      2  |                         0  |
  6065  |  resetPlaceHolder_2();  |         |                            |
  6071  |             R = R + 2;  |      2  |                         0  |
  6076  |  resetPlaceHolder_2();  |         |                            |
  6082  |             R = R + 2;  |      2  |                         0  |
  6087  |  resetPlaceHolder_2();  |         |                            |
  6093  |             R = R + 2;  |      2  |                         0  |
  6098  |  resetPlaceHolder_2();  |         |                            |
  6104  |             R = R + 2;  |      2  |                         0  |
  6109  |  resetPlaceHolder_2();  |         |                            |
  6115  |             R = R + 2;  |      2  |                         0  |
  6120  |  resetPlaceHolder_2();  |         |                            |
  6126  |             R = R + 2;  |      2  |                         0  |
  6131  |  resetPlaceHolder_2();  |         |                            |
  6137  |             R = R + 2;  |      2  |                         0  |
  6142  |  resetPlaceHolder_2();  |         |                            |
  6148  |             R = R + 2;  |      2  |                         0  |
  6153  |  resetPlaceHolder_2();  |         |                            |
  6159  |             R = R + 2;  |      2  |                         0  |
  6164  |  resetPlaceHolder_2();  |         |                            |
  6170  |             R = R + 2;  |      2  |                         0  |
  6175  |  resetPlaceHolder_2();  |         |                            |
  6181  |             R = R + 2;  |      2  |                         0  |
  6186  |  resetPlaceHolder_2();  |         |                            |
  6192  |             R = R + 2;  |      2  |                         0  |
  6197  |  resetPlaceHolder_2();  |         |                            |
  6203  |             R = R + 2;  |      2  |                         0  |
  6208  |  resetPlaceHolder_2();  |         |                            |
  6214  |             R = R + 2;  |      2  |                         0  |
  6219  |  resetPlaceHolder_2();  |         |                            |
  6225  |             R = R + 2;  |      2  |                         0  |
  6230  |  resetPlaceHolder_2();  |         |                            |
  6236  |             R = R + 2;  |      2  |                         0  |
  6241  |  resetPlaceHolder_2();  |         |                            |
  6247  |             R = R + 2;  |      2  |                         0  |
  6252  |  resetPlaceHolder_2();  |         |                            |
  6258  |             R = R + 2;  |      2  |                         0  |
  6263  |  resetPlaceHolder_2();  |         |                            |
  6269  |             R = R + 2;  |      2  |                         0  |
  6274  |  resetPlaceHolder_2();  |         |                            |
  6280  |             R = R + 2;  |      2  |                         0  |
  6285  |  resetPlaceHolder_2();  |         |                            |
  6291  |             R = R + 1;  |      1  |                         0  |
  6296  |  resetPlaceHolder_1();  |         |                            |
  6310  |             R = R + 2;  |      2  |                         0  |
  6315  |  resetPlaceHolder_2();  |         |                            |
  6321  |             R = R + 2;  |      2  |                         0  |
  6326  |  resetPlaceHolder_2();  |         |                            |
  6332  |             R = R + 2;  |      2  |                         0  |
  6337  |  resetPlaceHolder_2();  |         |                            |
  6343  |             R = R + 2;  |      2  |                         0  |
  6348  |  resetPlaceHolder_2();  |         |                            |
  6354  |             R = R + 1;  |      1  |                         0  |
  6359  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
resetPlaceHolder_2(); -> // reset R0
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	2m19.214s
user	2m37.103s
sys	0m2.349s

2023-01-23 20:19:53,344 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:20:06,600 INFO     Done. Execution time: 13.255100727081299 seconds
2023-01-23 20:20:06,600 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `10.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2019-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2019-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.248s
user	0m29.390s
sys	0m2.652s

2023-01-23 20:20:06,600 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-23 20:20:06,600 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:20:08,832 INFO     Done. Execution time: 2.2316462993621826 seconds
2023-01-23 20:20:08,832 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`

real	0m2.225s
user	0m4.186s
sys	0m0.234s

2023-01-23 20:20:08,832 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-23 20:20:08,832 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-23 20:20:08,834 INFO     Done. Execution time: 0.0015981197357177734 seconds
2023-01-23 20:20:08,834 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java': No such file or directory

2023-01-23 20:20:08,834 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-23 20:20:10,781 INFO     Done. Execution time: 1.9464068412780762 seconds
2023-01-23 20:20:10,781 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.939s
user	0m3.718s
sys	0m0.245s

2023-01-23 20:20:10,781 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:20:11,885 INFO     Done. Execution time: 1.1044294834136963 seconds
2023-01-23 20:20:11,886 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.098s
user	0m1.882s
sys	0m0.119s

2023-01-23 20:20:11,886 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-23 20:20:11,886 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:21:18,339 INFO     Done. Execution time: 66.45326709747314 seconds
2023-01-23 20:21:18,339 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz2732227767284289827/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2732227767284289827/bin -o /tmp/qfuzz2732227767284289827/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2732227767284289827/bin
Found file /tmp/qfuzz2732227767284289827/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz2732227767284289827/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2732227767284289827/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2732227767284289827/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2732227767284289827/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2732227767284289827/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 38, exec speed = 131835 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m38 to 38 bits (average: 38.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2732227767284289827/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [53.00]
2; /tmp/qfuzz2732227767284289827/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [0.00]
4; /tmp/qfuzz2732227767284289827/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2732227767284289827/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz2732227767284289827/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz2732227767284289827/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2732227767284289827/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(173, 114, 160, 71, 79, 19, 61, 36, 75, 176, 13, 48, 75, 75, 176, 58, 75, 72, 60, 145, 133, 75, 133, 55, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2732227767284289827/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 37, 110, 173, 153, 68, 66, 33, 115, 67, 50, 153, 132, 16, 187, 111, 88, 16, 50, 135, 79, 16, 42, 139, 139, 139, 139, 139, 139, 139, 139, 150, 63, 50, 170, 93, 16, 7, 191, 14, 64, 167, 50, 174)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2732227767284289827/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [114,160,71,79,19]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [37,110,173,153,68]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [110,33,153,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.447s
user	0m27.078s
sys	0m2.053s

2023-01-23 20:21:18,340 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-23 20:21:18,340 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-23 20:21:18,341 INFO     Done. Execution time: 0.0013959407806396484 seconds
2023-01-23 20:21:18,341 INFO     Output: 
2023-01-23 20:21:18,341 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-23 20:21:21,589 INFO     Done. Execution time: 3.247518539428711 seconds
2023-01-23 20:21:21,589 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [114,160,71,79,19])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [37,110,173,153,68])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [110,33,153,67,50])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 62):
                                                                                                                                                               
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |      stopIndex       |
---------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [114,160,71,79,19]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [114,160,71,79,19]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [114,160,71,79,19]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [114,160,71,79,19]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [114,160,71,79,19]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [114,160,71,79,19]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [114,160,71,79,19]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [114,160,71,79,19]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [114,160,71,79,19]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [114,160,71,79,19]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |     160  |  1  |         1  |        2  |    1  |      1  |  [114,160,71,79,19]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |     160  |  1  |         1  |        2  |    2  |      1  |  [114,160,71,79,19]  |
    57  |                         i = i + 1;  |         |  0  |         0  |     160  |  2  |         1  |        2  |    2  |      1  |  [114,160,71,79,19]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |     160  |  2  |         1  |        2  |    2  |      1  |  [114,160,71,79,19]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m3.242s
user	0m6.115s
sys	0m0.320s

2023-01-23 20:21:21,589 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:21:23,798 INFO     Done. Execution time: 2.2091691493988037 seconds
2023-01-23 20:21:23,799 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2021-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2021-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.203s
user	0m4.000s
sys	0m0.231s

2023-01-23 20:21:23,799 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-23 20:21:23,799 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:22:30,042 INFO     Done. Execution time: 66.24302268028259 seconds
2023-01-23 20:22:30,042 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz6762738939220917220/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6762738939220917220/bin -o /tmp/qfuzz6762738939220917220/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6762738939220917220/bin
Found file /tmp/qfuzz6762738939220917220/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz6762738939220917220/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6762738939220917220/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6762738939220917220/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6762738939220917220/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6762738939220917220/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 132654 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6762738939220917220/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6762738939220917220/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6762738939220917220/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2, 33
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.236s
user	0m25.923s
sys	0m2.009s

2023-01-23 20:22:30,042 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-23 20:22:30,042 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-23 20:22:30,044 INFO     Done. Execution time: 0.001741647720336914 seconds
2023-01-23 20:22:30,044 INFO     Output: 
2023-01-23 20:22:30,044 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-23 20:22:32,962 INFO     Done. Execution time: 2.9172537326812744 seconds
2023-01-23 20:22:32,962 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                          
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |  d   |  recursiveTypeIndexes  |
------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            187  |  33  |                     2  |
    32  |     return;  |         |  0  |            187  |  33  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m2.911s
user	0m5.548s
sys	0m0.308s

2023-01-23 20:22:32,962 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:22:35,480 INFO     Done. Execution time: 2.5176589488983154 seconds
2023-01-23 20:22:35,480 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2022-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2022-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.511s
user	0m4.376s
sys	0m0.282s

2023-01-23 20:22:35,480 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-23 20:22:35,480 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:23:42,297 INFO     Done. Execution time: 66.81640148162842 seconds
2023-01-23 20:23:42,297 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz3073376824805836052/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3073376824805836052/bin -o /tmp/qfuzz3073376824805836052/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3073376824805836052/bin
Found file /tmp/qfuzz3073376824805836052/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz3073376824805836052/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3073376824805836052/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3073376824805836052/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3073376824805836052/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3073376824805836052/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 127399 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m127k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3073376824805836052/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz3073376824805836052/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3073376824805836052/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz3073376824805836052/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3073376824805836052/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 176, 68, 68, 111, 4, 105, 67, 15, 93, 16, 68, 68, 111, 4, 105, 67, 15, 89, 170, 38, 70, 54, 110, 33, 153, 67, 70, 170, 93, 56, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3073376824805836052/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.810s
user	0m28.360s
sys	0m2.043s

2023-01-23 20:23:42,297 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-23 20:23:42,297 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-23 20:23:42,299 INFO     Done. Execution time: 0.0017085075378417969 seconds
2023-01-23 20:23:42,299 INFO     Output: 
2023-01-23 20:23:42,300 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-23 20:23:49,107 INFO     Done. Execution time: 6.807273864746094 seconds
2023-01-23 20:23:49,107 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m6.800s
user	0m12.013s
sys	0m2.049s

2023-01-23 20:23:49,107 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:23:57,629 INFO     Done. Execution time: 8.521332263946533 seconds
2023-01-23 20:23:57,629 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2023-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2023-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.515s
user	0m18.532s
sys	0m2.541s

2023-01-23 20:23:57,629 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-23 20:23:57,629 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:25:04,003 INFO     Done. Execution time: 66.37358570098877 seconds
2023-01-23 20:25:04,003 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz6987844880597570448/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6987844880597570448/bin -o /tmp/qfuzz6987844880597570448/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6987844880597570448/bin
Found file /tmp/qfuzz6987844880597570448/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz6987844880597570448/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6987844880597570448/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6987844880597570448/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6987844880597570448/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6987844880597570448/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 32, exec speed = 139412 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m139k to 139k us (average: 139k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 680.00; [675.00,1355.00,2215.00,3075.00,3766.00]
2; /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 4; 11.00; [95.00,106.00,215.00,815.00]
3; /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 2; 429.00; [3286.00,3715.00]
6; /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 5; 449.00; [226.00,675.00,1355.00,2215.00,3075.00]
13; /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 5; 300.00; [675.00,1355.00,1655.00,3235.00,3766.00]
23; /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 5; 691.00; [575.00,1355.00,2215.00,3075.00,3766.00]
28; /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 5; 80.00; [95.00,1255.00,1335.00,2315.00,2706.00]
32; /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta; 5; 700.00; [115.00,1215.00,2075.00,2775.00,3766.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 103, 5, 70, 138, 60, 130, 18, 37, 46, 156, 4, 123, 116, 172, 138, 36, 175, 138, 4, 31, 4, 132, 67, 167, 170, 138, 80, 31, 132, 38, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(134, 4, 62, 115, 66, 42, 45, 66, 100, 139, 100, 4, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 28, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 74, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 82, 33, 161, 67, 50, 20, 57, 57, 57, 57, 83, 132, 4, 57, 57, 57, 57, 57, 57, 57, 83, 57, 147, 5, 58, 52, 67, 50, 170, 61, 142, 33, 153, 67, 50, 170, 5, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 84, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(163, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 185, 129, 170, 92, 16, 187, 112, 153, 67, 50, 170, 66, 68, 187, 4, 160, 132, 52, 50, 185, 185, 170, 72, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 40, 4, 10, 51, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6987844880597570448/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,103,5,70,138]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [134,4,62,115,66]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,28,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,82,33,161,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [163,185,185,185,185]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,40,4,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.367s
user	0m28.567s
sys	0m2.114s

2023-01-23 20:25:04,003 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-23 20:25:04,003 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-23 20:25:04,005 INFO     Done. Execution time: 0.0017631053924560547 seconds
2023-01-23 20:25:04,005 INFO     Output: 
2023-01-23 20:25:04,005 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-23 20:25:12,527 INFO     Done. Execution time: 8.52155590057373 seconds
2023-01-23 20:25:12,527 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,103,5,70,138])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([134,4,62,115,66])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,28,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,82,33,161,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([163,185,185,185,185])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,40,4,10])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  chunk  |         diff         |  i  |  lhsBuilder  |  rhsBuilder  |
--------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [187,103,5,70,138]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [187,103,5,70,138]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [187,103,5,70,138]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [187,103,5,70,138]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [187,103,5,70,138]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [187,103,5,70,138]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [187,103,5,70,138]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [187,103,5,70,138]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |    187  |  [187,103,5,70,138]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |    187  |  187  |    187  |  [187,103,5,70,138]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |  187  |    187  |  [187,103,5,70,138]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |  187  |    187  |  [187,103,5,70,138]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |  187  |    103  |  [187,103,5,70,138]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |    103  |  290  |    103  |  [187,103,5,70,138]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  290  |    103  |  [187,103,5,70,138]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  290  |    103  |  [187,103,5,70,138]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  290  |      5  |  [187,103,5,70,138]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |      5  |  295  |      5  |  [187,103,5,70,138]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  295  |      5  |  [187,103,5,70,138]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  295  |      5  |  [187,103,5,70,138]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  295  |     70  |  [187,103,5,70,138]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |     70  |  365  |     70  |  [187,103,5,70,138]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  365  |     70  |  [187,103,5,70,138]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  365  |     70  |  [187,103,5,70,138]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  365  |    138  |  [187,103,5,70,138]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |    138  |  503  |    138  |  [187,103,5,70,138]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  503  |    138  |  [187,103,5,70,138]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  503  |    138  |  [187,103,5,70,138]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,43,57,71,85}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |    187  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |    103  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |      5  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |     70  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |    138  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m8.514s
user	0m13.678s
sys	0m3.426s

2023-01-23 20:25:12,527 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:25:21,891 INFO     Done. Execution time: 9.36301326751709 seconds
2023-01-23 20:25:21,891 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `7.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2025-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2025-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.357s
user	0m21.047s
sys	0m2.766s

2023-01-23 20:25:21,891 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-23 20:25:21,891 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:26:28,305 INFO     Done. Execution time: 66.41351103782654 seconds
2023-01-23 20:26:28,305 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz4509362625446206829/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4509362625446206829/bin -o /tmp/qfuzz4509362625446206829/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4509362625446206829/bin
Found file /tmp/qfuzz4509362625446206829/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz4509362625446206829/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4509362625446206829/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4509362625446206829/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4509362625446206829/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4509362625446206829/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 154636 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m154k to 154k us (average: 154k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000000,orig:example.txt; 7; 333.00; [675.00,1008.00,1355.00,2215.00,3075.00,3408.00,3764.00]
2; /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 7; 333.00; [328.00,675.00,1008.00,1355.00,2215.00,3075.00,3764.00]
4; /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 7; 16.00; [675.00,1008.00,1355.00,2215.00,3075.00,3748.00,3764.00]
7; /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 7; 127.00; [88.00,215.00,355.00,1268.00,1555.00,3015.00,3764.00]
19; /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 4; 7.00; [915.00,2144.00,2888.00,2895.00]
30; /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta; 7; 347.00; [328.00,675.00,1435.00,1868.00,2215.00,3075.00,3764.00]
37; /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 7; 240.00; [435.00,675.00,1008.00,2215.00,3075.00,3408.00,3764.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 21, 50, 170, 93, 16, 56, 110, 50, 153, 67, 50, 170, 171, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 6, 4, 122, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 71, 93, 16, 187, 110, 170, 93, 43, 33, 153, 67, 50, 170, 93, 16, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(106, 144, 45, 144, 144, 144, 144, 144, 144, 144, 144, 144)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 77, 10, 150, 17, 63, 4, 69, 63, 58, 153, 67, 50, 170, 93)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 187, 110, 33, 16, 67, 53, 152, 71, 4, 101, 93, 16, 4, 4, 33, 153, 66, 65, 170, 93, 16, 187, 110, 45, 153, 67, 126, 57, 93, 16, 191, 110, 17, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 27, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4509362625446206829/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,21], 50, 170
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,71], 93, 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [106,144,45,144,144], 144, 144
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,77,10,150,17], 63, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 187
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 170
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.407s
user	0m31.537s
sys	0m1.777s

2023-01-23 20:26:28,305 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-23 20:26:28,305 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-23 20:26:28,306 INFO     Done. Execution time: 0.0012247562408447266 seconds
2023-01-23 20:26:28,306 INFO     Output: 
2023-01-23 20:26:28,307 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-23 20:26:39,297 INFO     Done. Execution time: 10.990254402160645 seconds
2023-01-23 20:26:39,297 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,21], 50, 170)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,71], 93, 16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,77,10,150,17], 63, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([106,144,45,144,144], 144, 144)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 187)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 170)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 136):
                                                                                                                               
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |        tokens         |  years  |
-------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     170  |  [187,110,33,153,21]  |     50  |
    26  |                      // int R = 0;  |         |     0  |         |     |     170  |  [187,110,33,153,21]  |     50  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |     170  |  [187,110,33,153,21]  |     50  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     170  |  [187,110,33,153,21]  |     50  |
    30  |                     int chunk = 0;  |         |     0  |      0  |     |     170  |  [187,110,33,153,21]  |     50  |
    32  |                         int i = 0;  |         |     0  |      0  |  0  |     170  |  [187,110,33,153,21]  |     50  |
    38  |      chunk = arrayRead(tokens, i);  |         |     0  |    187  |  0  |     170  |  [187,110,33,153,21]  |     50  |
    41  |                     R = R + chunk;  |    187  |   187  |    187  |  0  |     170  |  [187,110,33,153,21]  |     50  |
    44  |                     R = R + years;  |     50  |   237  |    187  |  0  |     170  |  [187,110,33,153,21]  |     50  |
    47  |                    R = R + months;  |    170  |   407  |    187  |  0  |     170  |  [187,110,33,153,21]  |     50  |
    51  |                         i = i + 1;  |         |   407  |    187  |  1  |     170  |  [187,110,33,153,21]  |     50  |
    52  |              resetPlaceHolder_1();  |         |   407  |    187  |  1  |     170  |  [187,110,33,153,21]  |     50  |
    58  |      chunk = arrayRead(tokens, i);  |         |   407  |    110  |  1  |     170  |  [187,110,33,153,21]  |     50  |
    61  |                     R = R + chunk;  |    110  |   517  |    110  |  1  |     170  |  [187,110,33,153,21]  |     50  |
    64  |                     R = R + years;  |     50  |   567  |    110  |  1  |     170  |  [187,110,33,153,21]  |     50  |
    67  |                    R = R + months;  |    170  |   737  |    110  |  1  |     170  |  [187,110,33,153,21]  |     50  |
    71  |                         i = i + 1;  |         |   737  |    110  |  2  |     170  |  [187,110,33,153,21]  |     50  |
    72  |              resetPlaceHolder_1();  |         |   737  |    110  |  2  |     170  |  [187,110,33,153,21]  |     50  |
    78  |      chunk = arrayRead(tokens, i);  |         |   737  |     33  |  2  |     170  |  [187,110,33,153,21]  |     50  |
    81  |                     R = R + chunk;  |     33  |   770  |     33  |  2  |     170  |  [187,110,33,153,21]  |     50  |
    84  |                     R = R + years;  |     50  |   820  |     33  |  2  |     170  |  [187,110,33,153,21]  |     50  |
    87  |                    R = R + months;  |    170  |   990  |     33  |  2  |     170  |  [187,110,33,153,21]  |     50  |
    91  |                         i = i + 1;  |         |   990  |     33  |  3  |     170  |  [187,110,33,153,21]  |     50  |
    92  |              resetPlaceHolder_1();  |         |   990  |     33  |  3  |     170  |  [187,110,33,153,21]  |     50  |
    98  |      chunk = arrayRead(tokens, i);  |         |   990  |    153  |  3  |     170  |  [187,110,33,153,21]  |     50  |
   101  |                     R = R + chunk;  |    153  |  1143  |    153  |  3  |     170  |  [187,110,33,153,21]  |     50  |
   104  |                     R = R + years;  |     50  |  1193  |    153  |  3  |     170  |  [187,110,33,153,21]  |     50  |
   107  |                    R = R + months;  |    170  |  1363  |    153  |  3  |     170  |  [187,110,33,153,21]  |     50  |
   111  |                         i = i + 1;  |         |  1363  |    153  |  4  |     170  |  [187,110,33,153,21]  |     50  |
   112  |              resetPlaceHolder_1();  |         |  1363  |    153  |  4  |     170  |  [187,110,33,153,21]  |     50  |
   118  |      chunk = arrayRead(tokens, i);  |         |  1363  |     21  |  4  |     170  |  [187,110,33,153,21]  |     50  |
   121  |                     R = R + chunk;  |     21  |  1384  |     21  |  4  |     170  |  [187,110,33,153,21]  |     50  |
   124  |                     R = R + years;  |     50  |  1434  |     21  |  4  |     170  |  [187,110,33,153,21]  |     50  |
   127  |                    R = R + months;  |    170  |  1604  |     21  |  4  |     170  |  [187,110,33,153,21]  |     50  |
   131  |                         i = i + 1;  |         |  1604  |     21  |  5  |     170  |  [187,110,33,153,21]  |     50  |
   132  |              resetPlaceHolder_1();  |         |  1604  |     21  |  5  |     170  |  [187,110,33,153,21]  |     50  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {104}; {124}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    187  |                            |
    44  |         R = R + years;  |     50  |                         0  |
    47  |        R = R + months;  |    170  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |    110  |                            |
    64  |         R = R + years;  |     50  |                         1  |
    67  |        R = R + months;  |    170  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     33  |                            |
    84  |         R = R + years;  |     50  |                         2  |
    87  |        R = R + months;  |    170  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    153  |                            |
   104  |         R = R + years;  |     50  |                         3  |
   107  |        R = R + months;  |    170  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     21  |                            |
   124  |         R = R + years;  |     50  |                         4  |
   127  |        R = R + months;  |    170  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {107}; {127}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    187  |                            |
    44  |         R = R + years;  |     50  |                            |
    47  |        R = R + months;  |    170  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |    110  |                            |
    64  |         R = R + years;  |     50  |                            |
    67  |        R = R + months;  |    170  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     33  |                            |
    84  |         R = R + years;  |     50  |                            |
    87  |        R = R + months;  |    170  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    153  |                            |
   104  |         R = R + years;  |     50  |                            |
   107  |        R = R + months;  |    170  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     21  |                            |
   124  |         R = R + years;  |     50  |                            |
   127  |        R = R + months;  |    170  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}; {124}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {47}; {67}; {87}
GroupID(2): {41,61,81,101,121}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    44  |         R = R + years;  |     50  |                         0  |                            |                            |
    47  |        R = R + months;  |    170  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |    110  |                            |                            |                         0  |
    64  |         R = R + years;  |     50  |                         1  |                            |                            |
    67  |        R = R + months;  |    170  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |     33  |                            |                            |                         0  |
    84  |         R = R + years;  |     50  |                         2  |                            |                            |
    87  |        R = R + months;  |    170  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |    153  |                            |                            |                         0  |
   104  |         R = R + years;  |     50  |                         3  |                            |                            |
   107  |        R = R + months;  |    170  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     21  |                            |                            |                         0  |
   124  |         R = R + years;  |     50  |                         4  |                            |                            |
   127  |        R = R + months;  |    170  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set(52, 72, 92, 112)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R months -> R1 = R1 + months;
use R years -> R0 = R0 + years;
use R chunk -> R2 = R2 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m10.984s
user	0m19.159s
sys	0m4.692s

2023-01-23 20:26:39,297 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:27:47,354 INFO     Done. Execution time: 68.05695009231567 seconds
2023-01-23 20:27:47,355 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `65.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2026-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2026-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m8.051s
user	3m31.880s
sys	0m19.687s

2023-01-23 20:27:47,355 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-23 20:27:47,355 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:28:54,052 INFO     Done. Execution time: 66.69727492332458 seconds
2023-01-23 20:28:54,052 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz4030912898879810292/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4030912898879810292/bin -o /tmp/qfuzz4030912898879810292/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4030912898879810292/bin
Found file /tmp/qfuzz4030912898879810292/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz4030912898879810292/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4030912898879810292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4030912898879810292/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4030912898879810292/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4030912898879810292/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 22, exec speed = 126008 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4030912898879810292/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz4030912898879810292/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4030912898879810292/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz4030912898879810292/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4030912898879810292/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 50, 170, 93, 6, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 96, 13, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4030912898879810292/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.691s
user	0m27.026s
sys	0m1.947s

2023-01-23 20:28:54,053 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-23 20:28:54,053 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-23 20:28:54,054 INFO     Done. Execution time: 0.0014617443084716797 seconds
2023-01-23 20:28:54,054 INFO     Output: 
2023-01-23 20:28:54,054 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-23 20:28:59,685 INFO     Done. Execution time: 5.630150079727173 seconds
2023-01-23 20:28:59,685 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m5.623s
user	0m10.124s
sys	0m1.882s

2023-01-23 20:28:59,685 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:29:08,615 INFO     Done. Execution time: 8.929385662078857 seconds
2023-01-23 20:29:08,615 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `7.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2029-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2029-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.923s
user	0m19.963s
sys	0m2.748s

2023-01-23 20:29:08,615 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-23 20:29:08,615 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:30:15,178 INFO     Done. Execution time: 66.56281113624573 seconds
2023-01-23 20:30:15,178 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz5287792809628132722/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5287792809628132722/bin -o /tmp/qfuzz5287792809628132722/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5287792809628132722/bin
Found file /tmp/qfuzz5287792809628132722/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz5287792809628132722/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5287792809628132722/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5287792809628132722/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5287792809628132722/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5287792809628132722/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 94, exec speed = 142839 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m142k to 142k us (average: 142k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000000,orig:example.txt; 9; 1.00; [28.00,32.00,35.50,37.00,668.00,1348.00,2208.00,3068.00,3748.00]
2; /tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 8; 1.00; [28.00,32.00,35.50,37.00,88.00,148.00,408.00,1708.00]
3; /tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 8; 1.00; [28.00,32.00,35.50,37.00,1508.00,2208.00,3428.00,3748.00]
8; /tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 9; 1.00; [28.00,32.00,35.50,37.00,228.00,1128.00,1368.00,2328.00,3748.00]
12; /tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 9; 1.00; [28.00,32.00,35.50,37.00,328.00,668.00,1868.00,2208.00,3748.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 16, 187, 110, 33, 10, 67, 56, 187, 110, 33, 153, 67, 51, 33, 153, 67, 56, 187, 110, 33, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 116, 11, 56, 68, 5, 154, 67, 69, 86, 50, 170, 76, 62, 75, 194, 190, 145, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 75, 75, 171, 75, 75, 75, 75, 75, 75, 75, 74, 67, 50, 170, 105, 16, 187, 110, 71, 153, 74, 67, 50, 170, 94, 74)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 7, 4, 4, 85, 50, 170, 92, 153, 118, 50, 170, 118, 16, 187, 59, 58, 153, 67, 56, 125, 170, 93, 4, 4, 78, 16, 187, 110, 8, 153, 75, 110, 69, 4, 5, 33, 153, 137, 50, 170, 118, 16, 187, 59, 58, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5287792809628132722/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,16,187,110,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,116,11,56,68]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,75,75,171]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20,7,4,4,85]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.555s
user	0m29.407s
sys	0m2.222s

2023-01-23 20:30:15,178 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-23 20:30:15,178 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-23 20:30:15,181 INFO     Done. Execution time: 0.0020825862884521484 seconds
2023-01-23 20:30:15,181 INFO     Output: 
2023-01-23 20:30:15,181 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-23 20:30:28,115 INFO     Done. Execution time: 12.934198141098022 seconds
2023-01-23 20:30:28,116 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,16,187,110,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,116,11,56,68])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20,7,4,4,85])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,75,75,171])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 191):
                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |     baseMessage      |  buffer  |  chunk  |  i  |
-------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [93,16,187,110,33]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [93,16,187,110,33]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [93,16,187,110,33]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [93,16,187,110,33]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [93,16,187,110,33]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [93,16,187,110,33]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [93,16,187,110,33]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [93,16,187,110,33]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [93,16,187,110,33]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [93,16,187,110,33]  |       0  |     93  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [93,16,187,110,33]  |       0  |     93  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [93,16,187,110,33]  |       0  |     93  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [93,16,187,110,33]  |       0  |     93  |  0  |
    42  |                     R = R + chunk;  |     93  |   98  |  [93,16,187,110,33]  |       0  |     93  |  0  |
    45  |                         R = R + 1;  |      1  |   99  |  [93,16,187,110,33]  |       0  |     93  |  0  |
    48  |                         R = R + 1;  |      1  |  100  |  [93,16,187,110,33]  |       0  |     93  |  0  |
    51  |                         R = R + 1;  |      1  |  101  |  [93,16,187,110,33]  |       0  |     93  |  0  |
    55  |                         i = i + 1;  |         |  101  |  [93,16,187,110,33]  |       0  |     93  |  1  |
    56  |              resetPlaceHolder_1();  |         |  101  |  [93,16,187,110,33]  |       0  |     93  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |  101  |  [93,16,187,110,33]  |       0  |     16  |  1  |
    65  |                         R = R + 1;  |      1  |  102  |  [93,16,187,110,33]  |       0  |     16  |  1  |
    68  |                         R = R + 1;  |      1  |  103  |  [93,16,187,110,33]  |       0  |     16  |  1  |
    71  |                         R = R + 1;  |      1  |  104  |  [93,16,187,110,33]  |       0  |     16  |  1  |
    74  |                     R = R + chunk;  |     16  |  120  |  [93,16,187,110,33]  |       0  |     16  |  1  |
    77  |                         R = R + 1;  |      1  |  121  |  [93,16,187,110,33]  |       0  |     16  |  1  |
    80  |                         R = R + 1;  |      1  |  122  |  [93,16,187,110,33]  |       0  |     16  |  1  |
    83  |                         R = R + 1;  |      1  |  123  |  [93,16,187,110,33]  |       0  |     16  |  1  |
    87  |                         i = i + 1;  |         |  123  |  [93,16,187,110,33]  |       0  |     16  |  2  |
    88  |              resetPlaceHolder_1();  |         |  123  |  [93,16,187,110,33]  |       0  |     16  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |  123  |  [93,16,187,110,33]  |       0  |    187  |  2  |
    97  |                         R = R + 1;  |      1  |  124  |  [93,16,187,110,33]  |       0  |    187  |  2  |
   100  |                         R = R + 1;  |      1  |  125  |  [93,16,187,110,33]  |       0  |    187  |  2  |
   103  |                         R = R + 1;  |      1  |  126  |  [93,16,187,110,33]  |       0  |    187  |  2  |
   106  |                     R = R + chunk;  |    187  |  313  |  [93,16,187,110,33]  |       0  |    187  |  2  |
   109  |                         R = R + 1;  |      1  |  314  |  [93,16,187,110,33]  |       0  |    187  |  2  |
   112  |                         R = R + 1;  |      1  |  315  |  [93,16,187,110,33]  |       0  |    187  |  2  |
   115  |                         R = R + 1;  |      1  |  316  |  [93,16,187,110,33]  |       0  |    187  |  2  |
   119  |                         i = i + 1;  |         |  316  |  [93,16,187,110,33]  |       0  |    187  |  3  |
   120  |              resetPlaceHolder_1();  |         |  316  |  [93,16,187,110,33]  |       0  |    187  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  316  |  [93,16,187,110,33]  |       0  |    110  |  3  |
   129  |                         R = R + 1;  |      1  |  317  |  [93,16,187,110,33]  |       0  |    110  |  3  |
   132  |                         R = R + 1;  |      1  |  318  |  [93,16,187,110,33]  |       0  |    110  |  3  |
   135  |                         R = R + 1;  |      1  |  319  |  [93,16,187,110,33]  |       0  |    110  |  3  |
   138  |                     R = R + chunk;  |    110  |  429  |  [93,16,187,110,33]  |       0  |    110  |  3  |
   141  |                         R = R + 1;  |      1  |  430  |  [93,16,187,110,33]  |       0  |    110  |  3  |
   144  |                         R = R + 1;  |      1  |  431  |  [93,16,187,110,33]  |       0  |    110  |  3  |
   147  |                         R = R + 1;  |      1  |  432  |  [93,16,187,110,33]  |       0  |    110  |  3  |
   151  |                         i = i + 1;  |         |  432  |  [93,16,187,110,33]  |       0  |    110  |  4  |
   152  |              resetPlaceHolder_1();  |         |  432  |  [93,16,187,110,33]  |       0  |    110  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  432  |  [93,16,187,110,33]  |       0  |     33  |  4  |
   161  |                         R = R + 1;  |      1  |  433  |  [93,16,187,110,33]  |       0  |     33  |  4  |
   164  |                         R = R + 1;  |      1  |  434  |  [93,16,187,110,33]  |       0  |     33  |  4  |
   167  |                         R = R + 1;  |      1  |  435  |  [93,16,187,110,33]  |       0  |     33  |  4  |
   170  |                     R = R + chunk;  |     33  |  468  |  [93,16,187,110,33]  |       0  |     33  |  4  |
   173  |                         R = R + 1;  |      1  |  469  |  [93,16,187,110,33]  |       0  |     33  |  4  |
   176  |                         R = R + 1;  |      1  |  470  |  [93,16,187,110,33]  |       0  |     33  |  4  |
   179  |                         R = R + 1;  |      1  |  471  |  [93,16,187,110,33]  |       0  |     33  |  4  |
   183  |                         i = i + 1;  |         |  471  |  [93,16,187,110,33]  |       0  |     33  |  5  |
   184  |              resetPlaceHolder_1();  |         |  471  |  [93,16,187,110,33]  |       0  |     33  |  5  |
   190  |                         R = R + 1;  |      1  |  472  |  [93,16,187,110,33]  |       0  |     33  |  5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [138, 170, 115, 42, 20, 164, 179, 106, 147, 132, 74, 33, 65, 97, 141, 109, 77, 173, 129, 45, 161, 17, 176, 71, 144, 39, 103, 135, 80, 167, 112, 48, 36, 51, 190, 68, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {190}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |     93  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |     16  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |    187  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |    110  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |     33  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                        32  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {42,138}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,106}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {42,170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,138}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {42,106,170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,106,138}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {42,138,170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {74,106,170}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 2 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {42,74,106,138,170}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 189])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |     93  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |     16  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    187  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    110  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     33  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m12.926s
user	0m28.642s
sys	0m6.100s

2023-01-23 20:30:28,116 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:30:41,768 INFO     Done. Execution time: 13.651647090911865 seconds
2023-01-23 20:30:41,768 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!4 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       (or a!3 (= D1p 0))
       (<= D0p 0)
       (or a!4 (= D0p 0)))))
(assert (let ((a!1 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D1 0)) (or a!2 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    2)  (define-fun D0 () Int    16)  (define-fun baseMessage () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `11.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2030-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2030-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.645s
user	0m39.986s
sys	0m4.821s

2023-01-23 20:30:41,769 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-23 20:30:41,769 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:31:48,317 INFO     Done. Execution time: 66.54794359207153 seconds
2023-01-23 20:31:48,317 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz715449212318939036/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz715449212318939036/bin -o /tmp/qfuzz715449212318939036/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz715449212318939036/bin
Found file /tmp/qfuzz715449212318939036/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz715449212318939036/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz715449212318939036/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz715449212318939036/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz715449212318939036/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz715449212318939036/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz715449212318939036/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz715449212318939036/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 148622 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m148k to 148k us (average: 148k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
4; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
6; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
7; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
8; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
9; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
11; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
13; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
15; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
17; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
19; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
33; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
41; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
47; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
59; /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 110, 33, 153, 67, 50, 170, 126, 16, 187, 110, 33, 153, 67, 50, 137, 93, 16, 187, 110, 33, 19, 123, 50, 170, 89, 16, 187, 110, 104, 153, 67, 50, 170, 93, 16, 187, 110, 33, 157)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 85, 52, 46, 122)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(145)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195, 148, 114, 137, 138, 59, 152, 152, 20, 187, 93)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 4, 70, 110, 33, 153, 67, 50, 168, 170, 93, 16, 187, 110, 33, 149, 33, 153, 93, 15, 67, 50, 131, 127, 187, 110, 33, 150, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(33, 153, 183, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 110, 170, 93, 16, 187, 110, 33, 151, 153, 67, 51, 170, 138, 4, 54, 86, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 4, 190, 115, 63, 148, 82, 39, 39, 39, 39, 39, 39, 39, 85, 78, 32, 11, 76, 19, 11, 62, 68)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 28, 135, 161, 155, 72, 86, 89, 142, 119, 61, 155, 46, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 110, 33, 153, 67, 51, 33, 153, 67, 50, 170, 61, 16, 187, 110, 70, 170, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(135, 124, 4, 80, 124, 170, 124, 71, 60, 83, 124, 124, 124, 5, 124, 142, 178)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 193, 4, 63, 62, 63, 4, 83, 5, 160, 12, 5, 66, 193, 62, 63, 4, 4, 18, 4, 63, 52)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz715449212318939036/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 151
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 145
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 195
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 23
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 12
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 135
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.541s
user	0m28.323s
sys	0m2.550s

2023-01-23 20:31:48,317 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-23 20:31:48,318 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-23 20:31:48,319 INFO     Done. Execution time: 0.001730203628540039 seconds
2023-01-23 20:31:48,320 INFO     Output: 
2023-01-23 20:31:48,320 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-23 20:31:55,631 INFO     Done. Execution time: 7.310727596282959 seconds
2023-01-23 20:31:55,631 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(70)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 13 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(151)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(145)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(195)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(23)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(33)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(70)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(12)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 13 (61.54%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(19)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(135)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 13)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 13 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 1496):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |               |         70  |              |
    11  |               int arrayPrefix = 0;  |         |    0  |            0  |         70  |              |
    12  |                      // int R = 0;  |         |    0  |            0  |         70  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |         70  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |         70  |              |
    16  |        int className_ = className;  |         |    0  |            0  |         70  |          70  |
    29  |       className_ = className_ - 1;  |         |    0  |            0  |         70  |          69  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |         70  |          69  |
    36  |                         R = R + 2;  |      2  |    2  |            2  |         70  |          69  |
    37  |              resetPlaceHolder_1();  |         |    2  |            2  |         70  |          69  |
    50  |       className_ = className_ - 1;  |         |    2  |            2  |         70  |          68  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |         70  |          68  |
    57  |                         R = R + 2;  |      2  |    4  |            4  |         70  |          68  |
    58  |              resetPlaceHolder_1();  |         |    4  |            4  |         70  |          68  |
    71  |       className_ = className_ - 1;  |         |    4  |            4  |         70  |          67  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |         70  |          67  |
    78  |                         R = R + 2;  |      2  |    6  |            6  |         70  |          67  |
    79  |              resetPlaceHolder_1();  |         |    6  |            6  |         70  |          67  |
    92  |       className_ = className_ - 1;  |         |    6  |            6  |         70  |          66  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |         70  |          66  |
    99  |                         R = R + 2;  |      2  |    8  |            8  |         70  |          66  |
   100  |              resetPlaceHolder_1();  |         |    8  |            8  |         70  |          66  |
   113  |       className_ = className_ - 1;  |         |    8  |            8  |         70  |          65  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |         70  |          65  |
   120  |                         R = R + 2;  |      2  |   10  |           10  |         70  |          65  |
   121  |              resetPlaceHolder_1();  |         |   10  |           10  |         70  |          65  |
   134  |       className_ = className_ - 1;  |         |   10  |           10  |         70  |          64  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |         70  |          64  |
   141  |                         R = R + 2;  |      2  |   12  |           12  |         70  |          64  |
   142  |              resetPlaceHolder_1();  |         |   12  |           12  |         70  |          64  |
   155  |       className_ = className_ - 1;  |         |   12  |           12  |         70  |          63  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |         70  |          63  |
   162  |                         R = R + 2;  |      2  |   14  |           14  |         70  |          63  |
   163  |              resetPlaceHolder_1();  |         |   14  |           14  |         70  |          63  |
   176  |       className_ = className_ - 1;  |         |   14  |           14  |         70  |          62  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |         70  |          62  |
   183  |                         R = R + 2;  |      2  |   16  |           16  |         70  |          62  |
   184  |              resetPlaceHolder_1();  |         |   16  |           16  |         70  |          62  |
   197  |       className_ = className_ - 1;  |         |   16  |           16  |         70  |          61  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |         70  |          61  |
   204  |                         R = R + 2;  |      2  |   18  |           18  |         70  |          61  |
   205  |              resetPlaceHolder_1();  |         |   18  |           18  |         70  |          61  |
   218  |       className_ = className_ - 1;  |         |   18  |           18  |         70  |          60  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |         70  |          60  |
   225  |                         R = R + 2;  |      2  |   20  |           20  |         70  |          60  |
   226  |              resetPlaceHolder_1();  |         |   20  |           20  |         70  |          60  |
   239  |       className_ = className_ - 1;  |         |   20  |           20  |         70  |          59  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |         70  |          59  |
   246  |                         R = R + 2;  |      2  |   22  |           22  |         70  |          59  |
   247  |              resetPlaceHolder_1();  |         |   22  |           22  |         70  |          59  |
   260  |       className_ = className_ - 1;  |         |   22  |           22  |         70  |          58  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |         70  |          58  |
   267  |                         R = R + 2;  |      2  |   24  |           24  |         70  |          58  |
   268  |              resetPlaceHolder_1();  |         |   24  |           24  |         70  |          58  |
   281  |       className_ = className_ - 1;  |         |   24  |           24  |         70  |          57  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |         70  |          57  |
   288  |                         R = R + 2;  |      2  |   26  |           26  |         70  |          57  |
   289  |              resetPlaceHolder_1();  |         |   26  |           26  |         70  |          57  |
   302  |       className_ = className_ - 1;  |         |   26  |           26  |         70  |          56  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |         70  |          56  |
   309  |                         R = R + 2;  |      2  |   28  |           28  |         70  |          56  |
   310  |              resetPlaceHolder_1();  |         |   28  |           28  |         70  |          56  |
   323  |       className_ = className_ - 1;  |         |   28  |           28  |         70  |          55  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |         70  |          55  |
   330  |                         R = R + 2;  |      2  |   30  |           30  |         70  |          55  |
   331  |              resetPlaceHolder_1();  |         |   30  |           30  |         70  |          55  |
   344  |       className_ = className_ - 1;  |         |   30  |           30  |         70  |          54  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |         70  |          54  |
   351  |                         R = R + 2;  |      2  |   32  |           32  |         70  |          54  |
   352  |              resetPlaceHolder_1();  |         |   32  |           32  |         70  |          54  |
   365  |       className_ = className_ - 1;  |         |   32  |           32  |         70  |          53  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |         70  |          53  |
   372  |                         R = R + 2;  |      2  |   34  |           34  |         70  |          53  |
   373  |              resetPlaceHolder_1();  |         |   34  |           34  |         70  |          53  |
   386  |       className_ = className_ - 1;  |         |   34  |           34  |         70  |          52  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |         70  |          52  |
   393  |                         R = R + 2;  |      2  |   36  |           36  |         70  |          52  |
   394  |              resetPlaceHolder_1();  |         |   36  |           36  |         70  |          52  |
   407  |       className_ = className_ - 1;  |         |   36  |           36  |         70  |          51  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |         70  |          51  |
   414  |                         R = R + 2;  |      2  |   38  |           38  |         70  |          51  |
   415  |              resetPlaceHolder_1();  |         |   38  |           38  |         70  |          51  |
   428  |       className_ = className_ - 1;  |         |   38  |           38  |         70  |          50  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |         70  |          50  |
   435  |                         R = R + 2;  |      2  |   40  |           40  |         70  |          50  |
   436  |              resetPlaceHolder_1();  |         |   40  |           40  |         70  |          50  |
   449  |       className_ = className_ - 1;  |         |   40  |           40  |         70  |          49  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |         70  |          49  |
   456  |                         R = R + 2;  |      2  |   42  |           42  |         70  |          49  |
   457  |              resetPlaceHolder_1();  |         |   42  |           42  |         70  |          49  |
   470  |       className_ = className_ - 1;  |         |   42  |           42  |         70  |          48  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |         70  |          48  |
   477  |                         R = R + 2;  |      2  |   44  |           44  |         70  |          48  |
   478  |              resetPlaceHolder_1();  |         |   44  |           44  |         70  |          48  |
   491  |       className_ = className_ - 1;  |         |   44  |           44  |         70  |          47  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |         70  |          47  |
   498  |                         R = R + 2;  |      2  |   46  |           46  |         70  |          47  |
   499  |              resetPlaceHolder_1();  |         |   46  |           46  |         70  |          47  |
   512  |       className_ = className_ - 1;  |         |   46  |           46  |         70  |          46  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |         70  |          46  |
   519  |                         R = R + 2;  |      2  |   48  |           48  |         70  |          46  |
   520  |              resetPlaceHolder_1();  |         |   48  |           48  |         70  |          46  |
   533  |       className_ = className_ - 1;  |         |   48  |           48  |         70  |          45  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |         70  |          45  |
   540  |                         R = R + 2;  |      2  |   50  |           50  |         70  |          45  |
   541  |              resetPlaceHolder_1();  |         |   50  |           50  |         70  |          45  |
   554  |       className_ = className_ - 1;  |         |   50  |           50  |         70  |          44  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |         70  |          44  |
   561  |                         R = R + 2;  |      2  |   52  |           52  |         70  |          44  |
   562  |              resetPlaceHolder_1();  |         |   52  |           52  |         70  |          44  |
   575  |       className_ = className_ - 1;  |         |   52  |           52  |         70  |          43  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |         70  |          43  |
   582  |                         R = R + 2;  |      2  |   54  |           54  |         70  |          43  |
   583  |              resetPlaceHolder_1();  |         |   54  |           54  |         70  |          43  |
   596  |       className_ = className_ - 1;  |         |   54  |           54  |         70  |          42  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |         70  |          42  |
   603  |                         R = R + 2;  |      2  |   56  |           56  |         70  |          42  |
   604  |              resetPlaceHolder_1();  |         |   56  |           56  |         70  |          42  |
   617  |       className_ = className_ - 1;  |         |   56  |           56  |         70  |          41  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |         70  |          41  |
   624  |                         R = R + 2;  |      2  |   58  |           58  |         70  |          41  |
   625  |              resetPlaceHolder_1();  |         |   58  |           58  |         70  |          41  |
   638  |       className_ = className_ - 1;  |         |   58  |           58  |         70  |          40  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |         70  |          40  |
   645  |                         R = R + 2;  |      2  |   60  |           60  |         70  |          40  |
   646  |              resetPlaceHolder_1();  |         |   60  |           60  |         70  |          40  |
   659  |       className_ = className_ - 1;  |         |   60  |           60  |         70  |          39  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |         70  |          39  |
   666  |                         R = R + 2;  |      2  |   62  |           62  |         70  |          39  |
   667  |              resetPlaceHolder_1();  |         |   62  |           62  |         70  |          39  |
   680  |       className_ = className_ - 1;  |         |   62  |           62  |         70  |          38  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |         70  |          38  |
   687  |                         R = R + 2;  |      2  |   64  |           64  |         70  |          38  |
   688  |              resetPlaceHolder_1();  |         |   64  |           64  |         70  |          38  |
   701  |       className_ = className_ - 1;  |         |   64  |           64  |         70  |          37  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |         70  |          37  |
   708  |                         R = R + 2;  |      2  |   66  |           66  |         70  |          37  |
   709  |              resetPlaceHolder_1();  |         |   66  |           66  |         70  |          37  |
   722  |       className_ = className_ - 1;  |         |   66  |           66  |         70  |          36  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |         70  |          36  |
   729  |                         R = R + 2;  |      2  |   68  |           68  |         70  |          36  |
   730  |              resetPlaceHolder_1();  |         |   68  |           68  |         70  |          36  |
   743  |       className_ = className_ - 1;  |         |   68  |           68  |         70  |          35  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |         70  |          35  |
   750  |                         R = R + 2;  |      2  |   70  |           70  |         70  |          35  |
   751  |              resetPlaceHolder_1();  |         |   70  |           70  |         70  |          35  |
   764  |       className_ = className_ - 1;  |         |   70  |           70  |         70  |          34  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |         70  |          34  |
   771  |                         R = R + 2;  |      2  |   72  |           72  |         70  |          34  |
   772  |              resetPlaceHolder_1();  |         |   72  |           72  |         70  |          34  |
   785  |       className_ = className_ - 1;  |         |   72  |           72  |         70  |          33  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |         70  |          33  |
   792  |                         R = R + 2;  |      2  |   74  |           74  |         70  |          33  |
   793  |              resetPlaceHolder_1();  |         |   74  |           74  |         70  |          33  |
   806  |       className_ = className_ - 1;  |         |   74  |           74  |         70  |          32  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |         70  |          32  |
   813  |                         R = R + 2;  |      2  |   76  |           76  |         70  |          32  |
   814  |              resetPlaceHolder_1();  |         |   76  |           76  |         70  |          32  |
   827  |       className_ = className_ - 1;  |         |   76  |           76  |         70  |          31  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |         70  |          31  |
   834  |                         R = R + 2;  |      2  |   78  |           78  |         70  |          31  |
   835  |              resetPlaceHolder_1();  |         |   78  |           78  |         70  |          31  |
   848  |       className_ = className_ - 1;  |         |   78  |           78  |         70  |          30  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |         70  |          30  |
   855  |                         R = R + 2;  |      2  |   80  |           80  |         70  |          30  |
   856  |              resetPlaceHolder_1();  |         |   80  |           80  |         70  |          30  |
   869  |       className_ = className_ - 1;  |         |   80  |           80  |         70  |          29  |
   873  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |         70  |          29  |
   876  |                         R = R + 2;  |      2  |   82  |           82  |         70  |          29  |
   877  |              resetPlaceHolder_1();  |         |   82  |           82  |         70  |          29  |
   890  |       className_ = className_ - 1;  |         |   82  |           82  |         70  |          28  |
   894  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |         70  |          28  |
   897  |                         R = R + 2;  |      2  |   84  |           84  |         70  |          28  |
   898  |              resetPlaceHolder_1();  |         |   84  |           84  |         70  |          28  |
   911  |       className_ = className_ - 1;  |         |   84  |           84  |         70  |          27  |
   915  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |         70  |          27  |
   918  |                         R = R + 2;  |      2  |   86  |           86  |         70  |          27  |
   919  |              resetPlaceHolder_1();  |         |   86  |           86  |         70  |          27  |
   932  |       className_ = className_ - 1;  |         |   86  |           86  |         70  |          26  |
   936  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |         70  |          26  |
   939  |                         R = R + 2;  |      2  |   88  |           88  |         70  |          26  |
   940  |              resetPlaceHolder_1();  |         |   88  |           88  |         70  |          26  |
   953  |       className_ = className_ - 1;  |         |   88  |           88  |         70  |          25  |
   957  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |         70  |          25  |
   960  |                         R = R + 2;  |      2  |   90  |           90  |         70  |          25  |
   961  |              resetPlaceHolder_1();  |         |   90  |           90  |         70  |          25  |
   974  |       className_ = className_ - 1;  |         |   90  |           90  |         70  |          24  |
   978  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |         70  |          24  |
   981  |                         R = R + 2;  |      2  |   92  |           92  |         70  |          24  |
   982  |              resetPlaceHolder_1();  |         |   92  |           92  |         70  |          24  |
   995  |       className_ = className_ - 1;  |         |   92  |           92  |         70  |          23  |
   999  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |         70  |          23  |
  1002  |                         R = R + 2;  |      2  |   94  |           94  |         70  |          23  |
  1003  |              resetPlaceHolder_1();  |         |   94  |           94  |         70  |          23  |
  1016  |       className_ = className_ - 1;  |         |   94  |           94  |         70  |          22  |
  1020  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |         70  |          22  |
  1023  |                         R = R + 2;  |      2  |   96  |           96  |         70  |          22  |
  1024  |              resetPlaceHolder_1();  |         |   96  |           96  |         70  |          22  |
  1037  |       className_ = className_ - 1;  |         |   96  |           96  |         70  |          21  |
  1041  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |         70  |          21  |
  1044  |                         R = R + 2;  |      2  |   98  |           98  |         70  |          21  |
  1045  |              resetPlaceHolder_1();  |         |   98  |           98  |         70  |          21  |
  1058  |       className_ = className_ - 1;  |         |   98  |           98  |         70  |          20  |
  1062  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |         70  |          20  |
  1065  |                         R = R + 2;  |      2  |  100  |          100  |         70  |          20  |
  1066  |              resetPlaceHolder_1();  |         |  100  |          100  |         70  |          20  |
  1079  |       className_ = className_ - 1;  |         |  100  |          100  |         70  |          19  |
  1083  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |         70  |          19  |
  1086  |                         R = R + 2;  |      2  |  102  |          102  |         70  |          19  |
  1087  |              resetPlaceHolder_1();  |         |  102  |          102  |         70  |          19  |
  1100  |       className_ = className_ - 1;  |         |  102  |          102  |         70  |          18  |
  1104  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |         70  |          18  |
  1107  |                         R = R + 2;  |      2  |  104  |          104  |         70  |          18  |
  1108  |              resetPlaceHolder_1();  |         |  104  |          104  |         70  |          18  |
  1121  |       className_ = className_ - 1;  |         |  104  |          104  |         70  |          17  |
  1125  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |         70  |          17  |
  1128  |                         R = R + 2;  |      2  |  106  |          106  |         70  |          17  |
  1129  |              resetPlaceHolder_1();  |         |  106  |          106  |         70  |          17  |
  1142  |       className_ = className_ - 1;  |         |  106  |          106  |         70  |          16  |
  1146  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |         70  |          16  |
  1149  |                         R = R + 2;  |      2  |  108  |          108  |         70  |          16  |
  1150  |              resetPlaceHolder_1();  |         |  108  |          108  |         70  |          16  |
  1163  |       className_ = className_ - 1;  |         |  108  |          108  |         70  |          15  |
  1167  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |         70  |          15  |
  1170  |                         R = R + 2;  |      2  |  110  |          110  |         70  |          15  |
  1171  |              resetPlaceHolder_1();  |         |  110  |          110  |         70  |          15  |
  1184  |       className_ = className_ - 1;  |         |  110  |          110  |         70  |          14  |
  1188  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |         70  |          14  |
  1191  |                         R = R + 2;  |      2  |  112  |          112  |         70  |          14  |
  1192  |              resetPlaceHolder_1();  |         |  112  |          112  |         70  |          14  |
  1205  |       className_ = className_ - 1;  |         |  112  |          112  |         70  |          13  |
  1209  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |         70  |          13  |
  1212  |                         R = R + 2;  |      2  |  114  |          114  |         70  |          13  |
  1213  |              resetPlaceHolder_1();  |         |  114  |          114  |         70  |          13  |
  1226  |       className_ = className_ - 1;  |         |  114  |          114  |         70  |          12  |
  1230  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |         70  |          12  |
  1233  |                         R = R + 2;  |      2  |  116  |          116  |         70  |          12  |
  1234  |              resetPlaceHolder_1();  |         |  116  |          116  |         70  |          12  |
  1247  |       className_ = className_ - 1;  |         |  116  |          116  |         70  |          11  |
  1251  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |         70  |          11  |
  1254  |                         R = R + 2;  |      2  |  118  |          118  |         70  |          11  |
  1255  |              resetPlaceHolder_1();  |         |  118  |          118  |         70  |          11  |
  1268  |       className_ = className_ - 1;  |         |  118  |          118  |         70  |          10  |
  1272  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |         70  |          10  |
  1275  |                         R = R + 2;  |      2  |  120  |          120  |         70  |          10  |
  1276  |              resetPlaceHolder_1();  |         |  120  |          120  |         70  |          10  |
  1289  |       className_ = className_ - 1;  |         |  120  |          120  |         70  |           9  |
  1293  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |         70  |           9  |
  1296  |                         R = R + 2;  |      2  |  122  |          122  |         70  |           9  |
  1297  |              resetPlaceHolder_1();  |         |  122  |          122  |         70  |           9  |
  1310  |       className_ = className_ - 1;  |         |  122  |          122  |         70  |           8  |
  1314  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |         70  |           8  |
  1317  |                         R = R + 2;  |      2  |  124  |          124  |         70  |           8  |
  1318  |              resetPlaceHolder_1();  |         |  124  |          124  |         70  |           8  |
  1331  |       className_ = className_ - 1;  |         |  124  |          124  |         70  |           7  |
  1335  |     arrayPrefix = arrayPrefix + 2;  |         |  124  |          126  |         70  |           7  |
  1338  |                         R = R + 2;  |      2  |  126  |          126  |         70  |           7  |
  1339  |              resetPlaceHolder_1();  |         |  126  |          126  |         70  |           7  |
  1352  |       className_ = className_ - 1;  |         |  126  |          126  |         70  |           6  |
  1356  |     arrayPrefix = arrayPrefix + 2;  |         |  126  |          128  |         70  |           6  |
  1359  |                         R = R + 2;  |      2  |  128  |          128  |         70  |           6  |
  1360  |              resetPlaceHolder_1();  |         |  128  |          128  |         70  |           6  |
  1373  |       className_ = className_ - 1;  |         |  128  |          128  |         70  |           5  |
  1377  |     arrayPrefix = arrayPrefix + 2;  |         |  128  |          130  |         70  |           5  |
  1380  |                         R = R + 2;  |      2  |  130  |          130  |         70  |           5  |
  1381  |              resetPlaceHolder_1();  |         |  130  |          130  |         70  |           5  |
  1394  |       className_ = className_ - 1;  |         |  130  |          130  |         70  |           4  |
  1398  |     arrayPrefix = arrayPrefix + 2;  |         |  130  |          132  |         70  |           4  |
  1401  |                         R = R + 2;  |      2  |  132  |          132  |         70  |           4  |
  1402  |              resetPlaceHolder_1();  |         |  132  |          132  |         70  |           4  |
  1415  |       className_ = className_ - 1;  |         |  132  |          132  |         70  |           3  |
  1419  |     arrayPrefix = arrayPrefix + 2;  |         |  132  |          134  |         70  |           3  |
  1422  |                         R = R + 2;  |      2  |  134  |          134  |         70  |           3  |
  1423  |              resetPlaceHolder_1();  |         |  134  |          134  |         70  |           3  |
  1436  |       className_ = className_ - 1;  |         |  134  |          134  |         70  |           2  |
  1440  |     arrayPrefix = arrayPrefix + 2;  |         |  134  |          136  |         70  |           2  |
  1443  |                         R = R + 2;  |      2  |  136  |          136  |         70  |           2  |
  1444  |              resetPlaceHolder_1();  |         |  136  |          136  |         70  |           2  |
  1457  |       className_ = className_ - 1;  |         |  136  |          136  |         70  |           1  |
  1461  |     arrayPrefix = arrayPrefix + 2;  |         |  136  |          138  |         70  |           1  |
  1464  |                         R = R + 2;  |      2  |  138  |          138  |         70  |           1  |
  1465  |              resetPlaceHolder_1();  |         |  138  |          138  |         70  |           1  |
  1478  |       className_ = className_ - 1;  |         |  138  |          138  |         70  |           0  |
  1482  |     arrayPrefix = arrayPrefix + 2;  |         |  138  |          140  |         70  |           0  |
  1485  |                         R = R + 2;  |      2  |  140  |          140  |         70  |           0  |
  1486  |              resetPlaceHolder_1();  |         |  140  |          140  |         70  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 666, 582, 1443, 1401, 1422, 120, 1275, 1233, 288, 1359, 1254, 372, 1191, 57, 78, 834, 981, 687, 1338, 561, 729, 435, 1296, 1128, 456, 519, 141, 225, 393, 1002, 792, 1086, 1170, 750, 204, 498, 1107, 1464, 540, 477, 1149, 330, 1044, 267, 162, 939, 855, 414, 1317, 1023, 1485, 876, 99, 771, 813, 351, 246, 1212, 36, 1380, 183, 603, 918, 897, 960, 1065, 624, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {1002}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {1023}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {1044}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {1065}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {1086}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {1107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {1128}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {1149}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {1170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {1191}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {1212}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {1233}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {1254}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {1275}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {1296}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {1317}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {1338}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {1359}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {1380}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {1401}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {1422}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {1443}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {1464}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {1485}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 44: {519}
INFO  brbo.backend2.learning.SegmentClustering - Segment 45: {540}
INFO  brbo.backend2.learning.SegmentClustering - Segment 46: {561}
INFO  brbo.backend2.learning.SegmentClustering - Segment 47: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 48: {582}
INFO  brbo.backend2.learning.SegmentClustering - Segment 49: {603}
INFO  brbo.backend2.learning.SegmentClustering - Segment 50: {624}
INFO  brbo.backend2.learning.SegmentClustering - Segment 51: {645}
INFO  brbo.backend2.learning.SegmentClustering - Segment 52: {666}
INFO  brbo.backend2.learning.SegmentClustering - Segment 53: {687}
INFO  brbo.backend2.learning.SegmentClustering - Segment 54: {708}
INFO  brbo.backend2.learning.SegmentClustering - Segment 55: {729}
INFO  brbo.backend2.learning.SegmentClustering - Segment 56: {750}
INFO  brbo.backend2.learning.SegmentClustering - Segment 57: {771}
INFO  brbo.backend2.learning.SegmentClustering - Segment 58: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 59: {792}
INFO  brbo.backend2.learning.SegmentClustering - Segment 60: {813}
INFO  brbo.backend2.learning.SegmentClustering - Segment 61: {834}
INFO  brbo.backend2.learning.SegmentClustering - Segment 62: {855}
INFO  brbo.backend2.learning.SegmentClustering - Segment 63: {876}
INFO  brbo.backend2.learning.SegmentClustering - Segment 64: {897}
INFO  brbo.backend2.learning.SegmentClustering - Segment 65: {918}
INFO  brbo.backend2.learning.SegmentClustering - Segment 66: {939}
INFO  brbo.backend2.learning.SegmentClustering - Segment 67: {960}
INFO  brbo.backend2.learning.SegmentClustering - Segment 68: {981}
INFO  brbo.backend2.learning.SegmentClustering - Segment 69: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                        44  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                        45  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                        46  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                        47  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                        48  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                        49  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                        50  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                        51  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                        52  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                        53  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                        54  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                        55  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                        56  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                        57  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                        58  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                        59  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                        60  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                        61  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                        62  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                        63  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                        64  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                        65  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                        66  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                        67  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                        68  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                        69  |
  1486  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {1002}; {1023}; {1044}; {1065}; {1086}; {1107}; {1128}; {1149}; {1170}; {1191}; {120}; {1212}; {1233}; {1254}; {1275}; {1296}; {1317}; {1338}; {1359}; {1380}; {1401}; {141}; {1422}; {1443}; {1464}; {1485}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {960}; {981}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                        44  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                        45  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                        46  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                        47  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                        48  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                        49  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                        50  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                        51  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                        52  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                        53  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                        54  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                        55  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                        56  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                        57  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                        58  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                        59  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                        60  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                        61  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                        62  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                        63  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                        64  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                        65  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                        66  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                        67  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                        68  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                        69  |
  1486  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(1024, 352, 730, 247, 142, 814, 898, 709, 436, 37, 184, 751, 1087, 289, 1465, 646, 121, 877, 793, 1255, 1423, 625, 583, 1402, 1360, 1234, 499, 1150, 1297, 1192, 457, 1318, 205, 541, 856, 562, 772, 919, 604, 1339, 520, 1381, 1171, 1213, 1066, 394, 226, 1003, 310, 331, 688, 1108, 1276, 961, 58, 667, 478, 1444, 1045, 835, 373, 268, 79, 415, 1129, 163, 982, 940, 100)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m7.303s
user	0m14.077s
sys	0m2.174s

2023-01-23 20:31:55,631 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:32:04,319 INFO     Done. Execution time: 8.687838554382324 seconds
2023-01-23 20:32:04,319 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `6.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2031-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2031-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.682s
user	0m18.598s
sys	0m2.294s

2023-01-23 20:32:04,320 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-23 20:32:04,320 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:33:10,440 INFO     Done. Execution time: 66.12051606178284 seconds
2023-01-23 20:33:10,440 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz8975797525099103931/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8975797525099103931/bin -o /tmp/qfuzz8975797525099103931/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8975797525099103931/bin
Found file /tmp/qfuzz8975797525099103931/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz8975797525099103931/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8975797525099103931/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8975797525099103931/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8975797525099103931/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8975797525099103931/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 39, exec speed = 133918 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8975797525099103931/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 15.00; [18.00,33.50]
2; /tmp/qfuzz8975797525099103931/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta; 2; 16.00; [18.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8975797525099103931/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz8975797525099103931/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8975797525099103931/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(170, 91, 16, 187, 174, 93, 16, 187, 87, 169, 115, 169, 79, 185, 169, 169, 169, 169, 169, 169, 169, 169, 169, 146, 158, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8975797525099103931/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.113s
user	0m25.484s
sys	0m1.877s

2023-01-23 20:33:10,441 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-23 20:33:10,441 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-23 20:33:10,443 INFO     Done. Execution time: 0.0017361640930175781 seconds
2023-01-23 20:33:10,443 INFO     Output: 
2023-01-23 20:33:10,443 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-23 20:33:16,335 INFO     Done. Execution time: 5.892226934432983 seconds
2023-01-23 20:33:16,336 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m5.885s
user	0m11.590s
sys	0m1.721s

2023-01-23 20:33:16,336 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:33:25,017 INFO     Done. Execution time: 8.680908918380737 seconds
2023-01-23 20:33:25,017 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2033-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2033-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.676s
user	0m19.506s
sys	0m2.449s

2023-01-23 20:33:25,017 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-23 20:33:25,017 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:34:31,042 INFO     Done. Execution time: 66.02482557296753 seconds
2023-01-23 20:34:31,042 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz808630704593044282/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz808630704593044282/bin -o /tmp/qfuzz808630704593044282/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz808630704593044282/bin
Found file /tmp/qfuzz808630704593044282/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz808630704593044282/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz808630704593044282/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz808630704593044282/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz808630704593044282/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz808630704593044282/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz808630704593044282/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz808630704593044282/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 28, exec speed = 132414 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz808630704593044282/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 10.00; [31.00,41.00]
2; /tmp/qfuzz808630704593044282/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 1; 0.00; [41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz808630704593044282/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz808630704593044282/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz808630704593044282/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 87, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 114, 16, 88, 110, 33, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz808630704593044282/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.018s
user	0m26.192s
sys	0m1.929s

2023-01-23 20:34:31,042 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-23 20:34:31,042 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-23 20:34:31,044 INFO     Done. Execution time: 0.001476287841796875 seconds
2023-01-23 20:34:31,044 INFO     Output: 
2023-01-23 20:34:31,044 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-23 20:34:35,732 INFO     Done. Execution time: 4.687201499938965 seconds
2023-01-23 20:34:35,732 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

real	0m4.681s
user	0m9.022s
sys	0m1.000s

2023-01-23 20:34:35,732 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:34:42,750 INFO     Done. Execution time: 7.018338680267334 seconds
2023-01-23 20:34:42,750 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `5.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2034-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2034-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.013s
user	0m15.708s
sys	0m2.072s

2023-01-23 20:34:42,751 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-23 20:34:42,751 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:35:48,856 INFO     Done. Execution time: 66.10502409934998 seconds
2023-01-23 20:35:48,856 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz6619387879716635371/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6619387879716635371/bin -o /tmp/qfuzz6619387879716635371/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6619387879716635371/bin
Found file /tmp/qfuzz6619387879716635371/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz6619387879716635371/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6619387879716635371/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6619387879716635371/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6619387879716635371/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6619387879716635371/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 133424 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6619387879716635371/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz6619387879716635371/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6619387879716635371/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz6619387879716635371/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6619387879716635371/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(74, 4, 100, 187, 110, 33, 153, 52, 49, 132, 93, 23, 187, 110, 33, 171, 187, 110, 33, 153, 18, 114, 112, 93, 16, 13, 110, 33, 153, 67, 50, 57, 196, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6619387879716635371/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.099s
user	0m25.863s
sys	0m1.887s

2023-01-23 20:35:48,856 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-23 20:35:48,856 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-23 20:35:48,858 INFO     Done. Execution time: 0.0012433528900146484 seconds
2023-01-23 20:35:48,858 INFO     Output: 
2023-01-23 20:35:48,858 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-23 20:35:54,476 INFO     Done. Execution time: 5.618144989013672 seconds
2023-01-23 20:35:54,476 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m5.611s
user	0m10.239s
sys	0m1.776s

2023-01-23 20:35:54,476 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:36:03,221 INFO     Done. Execution time: 8.744427680969238 seconds
2023-01-23 20:36:03,221 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `6.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2035-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2035-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.739s
user	0m18.725s
sys	0m2.380s

2023-01-23 20:36:03,221 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-23 20:36:03,221 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:37:09,764 INFO     Done. Execution time: 66.54284048080444 seconds
2023-01-23 20:37:09,764 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz615579467132791690/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz615579467132791690/bin -o /tmp/qfuzz615579467132791690/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz615579467132791690/bin
Found file /tmp/qfuzz615579467132791690/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz615579467132791690/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz615579467132791690/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz615579467132791690/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz615579467132791690/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz615579467132791690/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz615579467132791690/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz615579467132791690/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 129521 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz615579467132791690/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz615579467132791690/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz615579467132791690/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz615579467132791690/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz615579467132791690/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 50, 142, 178, 16, 187, 110, 24, 97, 67, 50, 170, 93, 16, 187, 110, 17, 146, 50, 187, 110, 17, 146, 50, 30, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz615579467132791690/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.535s
user	0m26.323s
sys	0m1.883s

2023-01-23 20:37:09,765 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-23 20:37:09,765 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-23 20:37:09,767 INFO     Done. Execution time: 0.0018720626831054688 seconds
2023-01-23 20:37:09,767 INFO     Output: 
2023-01-23 20:37:09,767 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-23 20:37:15,919 INFO     Done. Execution time: 6.151893138885498 seconds
2023-01-23 20:37:15,919 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m6.146s
user	0m10.581s
sys	0m1.995s

2023-01-23 20:37:15,919 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:37:24,568 INFO     Done. Execution time: 8.648733139038086 seconds
2023-01-23 20:37:24,568 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2037-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2037-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.643s
user	0m18.325s
sys	0m2.406s

2023-01-23 20:37:24,568 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-23 20:37:24,569 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:38:30,699 INFO     Done. Execution time: 66.12999248504639 seconds
2023-01-23 20:38:30,699 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz381557364268478820/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz381557364268478820/bin -o /tmp/qfuzz381557364268478820/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz381557364268478820/bin
Found file /tmp/qfuzz381557364268478820/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz381557364268478820/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz381557364268478820/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz381557364268478820/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz381557364268478820/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz381557364268478820/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz381557364268478820/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz381557364268478820/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 21, exec speed = 131010 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m21 to 21 bits (average: 21.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz381557364268478820/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [34.00]
2; /tmp/qfuzz381557364268478820/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz381557364268478820/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
/tmp/qfuzz381557364268478820/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz381557364268478820/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 60, 67, 50, 170, 93, 16, 187, 110, 128, 153, 67, 50, 170, 94, 67, 50, 188, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 128, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz381557364268478820/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.123s
user	0m26.164s
sys	0m1.843s

2023-01-23 20:38:30,699 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-23 20:38:30,699 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-23 20:38:30,701 INFO     Done. Execution time: 0.0015957355499267578 seconds
2023-01-23 20:38:30,701 INFO     Output: 
2023-01-23 20:38:30,701 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-23 20:38:33,845 INFO     Done. Execution time: 3.1434645652770996 seconds
2023-01-23 20:38:33,845 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m3.137s
user	0m6.353s
sys	0m0.256s

2023-01-23 20:38:33,845 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:38:36,241 INFO     Done. Execution time: 2.395879030227661 seconds
2023-01-23 20:38:36,241 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2038-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2038-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.389s
user	0m4.331s
sys	0m0.230s

2023-01-23 20:38:36,241 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-23 20:38:36,241 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:39:42,467 INFO     Done. Execution time: 66.22498893737793 seconds
2023-01-23 20:39:42,467 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz1310033288998873342/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1310033288998873342/bin -o /tmp/qfuzz1310033288998873342/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1310033288998873342/bin
Found file /tmp/qfuzz1310033288998873342/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz1310033288998873342/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1310033288998873342/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1310033288998873342/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1310033288998873342/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1310033288998873342/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 32, exec speed = 120350 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1310033288998873342/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 5.00; [31.00,51.00,56.00]
2; /tmp/qfuzz1310033288998873342/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1310033288998873342/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz1310033288998873342/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1310033288998873342/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 50, 170, 93, 16, 187, 110, 35, 67, 50, 170, 93, 63, 4, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1310033288998873342/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.218s
user	0m25.576s
sys	0m1.863s

2023-01-23 20:39:42,467 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-23 20:39:42,468 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-23 20:39:42,469 INFO     Done. Execution time: 0.001725912094116211 seconds
2023-01-23 20:39:42,469 INFO     Output: 
2023-01-23 20:39:42,470 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-23 20:39:49,297 INFO     Done. Execution time: 6.827182292938232 seconds
2023-01-23 20:39:49,297 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R1 = R1 + 1;
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m6.820s
user	0m12.507s
sys	0m2.585s

2023-01-23 20:39:49,297 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:40:01,222 INFO     Done. Execution time: 11.92419958114624 seconds
2023-01-23 20:40:01,222 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `9.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2039-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2039-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.917s
user	0m33.165s
sys	0m4.736s

2023-01-23 20:40:01,222 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-23 20:40:01,222 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:41:08,078 INFO     Done. Execution time: 66.85576844215393 seconds
2023-01-23 20:41:08,078 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz6790724582680877029/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6790724582680877029/bin -o /tmp/qfuzz6790724582680877029/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6790724582680877029/bin
Found file /tmp/qfuzz6790724582680877029/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz6790724582680877029/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6790724582680877029/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6790724582680877029/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6790724582680877029/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6790724582680877029/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 118371 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6790724582680877029/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz6790724582680877029/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6790724582680877029/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz6790724582680877029/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6790724582680877029/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 56, 52, 4, 52, 35, 53, 52, 170, 52, 52)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6790724582680877029/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.849s
user	0m27.028s
sys	0m1.859s

2023-01-23 20:41:08,078 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-23 20:41:08,078 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-23 20:41:08,080 INFO     Done. Execution time: 0.0018510818481445312 seconds
2023-01-23 20:41:08,081 INFO     Output: 
2023-01-23 20:41:08,081 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-23 20:41:14,467 INFO     Done. Execution time: 6.38625431060791 seconds
2023-01-23 20:41:14,467 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m6.379s
user	0m11.791s
sys	0m1.948s

2023-01-23 20:41:14,467 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:41:22,996 INFO     Done. Execution time: 8.52826189994812 seconds
2023-01-23 20:41:22,996 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2041-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2041-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.522s
user	0m18.857s
sys	0m2.632s

2023-01-23 20:41:22,996 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-23 20:41:22,996 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:42:29,378 INFO     Done. Execution time: 66.38140392303467 seconds
2023-01-23 20:42:29,378 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz180405577665062292/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz180405577665062292/bin -o /tmp/qfuzz180405577665062292/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz180405577665062292/bin
Found file /tmp/qfuzz180405577665062292/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz180405577665062292/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz180405577665062292/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz180405577665062292/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz180405577665062292/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz180405577665062292/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz180405577665062292/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz180405577665062292/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 144642 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m144k to 144k us (average: 144k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz180405577665062292/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz180405577665062292/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 1; 0.00; [36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz180405577665062292/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz180405577665062292/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz180405577665062292/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(68, 5, 153, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz180405577665062292/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.373s
user	0m26.703s
sys	0m1.815s

2023-01-23 20:42:29,378 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-23 20:42:29,378 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-23 20:42:29,380 INFO     Done. Execution time: 0.0017828941345214844 seconds
2023-01-23 20:42:29,380 INFO     Output: 
2023-01-23 20:42:29,380 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-23 20:42:34,120 INFO     Done. Execution time: 4.7390947341918945 seconds
2023-01-23 20:42:34,120 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m4.733s
user	0m8.206s
sys	0m1.076s

2023-01-23 20:42:34,120 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:42:41,269 INFO     Done. Execution time: 7.148561716079712 seconds
2023-01-23 20:42:41,269 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `5.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2042-transparentAmortize-60s-mostPrecise/lang3-raw-0123-2042-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.142s
user	0m15.666s
sys	0m2.145s

2023-01-23 20:42:41,269 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-23 20:42:41,269 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:43:47,484 INFO     Done. Execution time: 66.21530795097351 seconds
2023-01-23 20:43:47,485 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz2752297857992551271/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2752297857992551271/bin -o /tmp/qfuzz2752297857992551271/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2752297857992551271/bin
Found file /tmp/qfuzz2752297857992551271/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz2752297857992551271/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2752297857992551271/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2752297857992551271/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2752297857992551271/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2752297857992551271/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 32, exec speed = 132239 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 2.00; [41.00,43.00]
2; /tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 1; 0.00; [43.00]
4; /tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta; 2; 8.00; [35.00,43.00]
7; /tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta; 2; 14.00; [35.00,49.00]
10; /tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 2; 8.00; [35.00,43.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 198, 153, 67, 50, 170, 93, 16, 187, 110, 33, 16, 53, 50, 170, 93, 16, 8, 110, 33, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(179, 43, 187, 192, 38, 151, 154, 199, 114, 170, 129, 44, 54, 141, 21)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 189)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(127, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2752297857992551271/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [110,198,153,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [43,187,192,38,151]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [189]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [139]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [110,33,153,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.209s
user	0m27.123s
sys	0m1.873s

2023-01-23 20:43:47,485 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-23 20:43:47,485 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-23 20:43:47,486 INFO     Done. Execution time: 0.0015172958374023438 seconds
2023-01-23 20:43:47,486 INFO     Output: 
2023-01-23 20:43:47,487 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-23 20:43:53,332 INFO     Done. Execution time: 5.845192193984985 seconds
2023-01-23 20:43:53,332 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [110,198,153,67,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [43,187,192,38,151])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [139])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [189])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [110,33,153,67,50])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                                              
 Index  |              Commands               |  Costs  |  R  |  choice  |        choices        |  i  |  str  |  strDigits  |
------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [110,198,153,67,50]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [110,198,153,67,50]  |     |    2  |             |
    15  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [110,198,153,67,50]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [110,198,153,67,50]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [110,198,153,67,50]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [110,198,153,67,50]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [110,198,153,67,50]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |     110  |  [110,198,153,67,50]  |  0  |    2  |          0  |
    41  |         strDigits = strDigits + 1;  |         |  0  |     110  |  [110,198,153,67,50]  |  0  |    2  |          1  |
    44  |                         R = R + 1;  |      1  |  1  |     110  |  [110,198,153,67,50]  |  0  |    2  |          1  |
    48  |                         i = i + 1;  |         |  1  |     110  |  [110,198,153,67,50]  |  1  |    2  |          1  |
    49  |              resetPlaceHolder_1();  |         |  1  |     110  |  [110,198,153,67,50]  |  1  |    2  |          1  |
    55  |  choice = arrayRead(choices, i)...  |         |  1  |     198  |  [110,198,153,67,50]  |  1  |    2  |          1  |
    68  |         strDigits = strDigits + 1;  |         |  1  |     198  |  [110,198,153,67,50]  |  1  |    2  |          2  |
    71  |                         R = R + 1;  |      1  |  2  |     198  |  [110,198,153,67,50]  |  1  |    2  |          2  |
    75  |                         i = i + 1;  |         |  2  |     198  |  [110,198,153,67,50]  |  2  |    2  |          2  |
    76  |              resetPlaceHolder_1();  |         |  2  |     198  |  [110,198,153,67,50]  |  2  |    2  |          2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 71]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {44}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {44}; {71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44}; {71}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(49)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m5.839s
user	0m10.412s
sys	0m1.902s

2023-01-23 20:43:53,332 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:44:30,482 INFO     Done. Execution time: 37.14963889122009 seconds
2023-01-23 20:44:30,482 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 choices)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `35.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2043-transparentAmortize-60s-mostPrecise/stringutils-raw-0123-2043-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m37.143s
user	1m3.939s
sys	0m4.525s

2023-01-23 20:44:30,482 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-23 20:44:30,482 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:45:36,560 INFO     Done. Execution time: 66.07705998420715 seconds
2023-01-23 20:45:36,560 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz2240200338050069805/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2240200338050069805/bin -o /tmp/qfuzz2240200338050069805/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2240200338050069805/bin
Found file /tmp/qfuzz2240200338050069805/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz2240200338050069805/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2240200338050069805/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2240200338050069805/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2240200338050069805/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2240200338050069805/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 9, exec speed = 131005 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2240200338050069805/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2240200338050069805/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2240200338050069805/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.071s
user	0m25.945s
sys	0m1.936s

2023-01-23 20:45:36,560 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-23 20:45:36,560 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-23 20:45:36,562 INFO     Done. Execution time: 0.001341104507446289 seconds
2023-01-23 20:45:36,562 INFO     Output: 
2023-01-23 20:45:36,562 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-23 20:45:39,633 INFO     Done. Execution time: 3.07130765914917 seconds
2023-01-23 20:45:39,633 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                            
 Index  |   Commands   |  Costs  |  R  |         array         |  endIndex  |  startIndex  |
--------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [187,110,33,153,67]  |         2  |          50  |
    48  |     return;  |         |  0  |  [187,110,33,153,67]  |         2  |          50  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m3.065s
user	0m6.122s
sys	0m0.252s

2023-01-23 20:45:39,633 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:45:41,808 INFO     Done. Execution time: 2.173959255218506 seconds
2023-01-23 20:45:41,808 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2045-transparentAmortize-60s-mostPrecise/stringutils-raw-0123-2045-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.167s
user	0m4.023s
sys	0m0.199s

2023-01-23 20:45:41,808 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-23 20:45:41,808 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:46:47,919 INFO     Done. Execution time: 66.11114645004272 seconds
2023-01-23 20:46:47,919 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz5134698837725976792/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5134698837725976792/bin -o /tmp/qfuzz5134698837725976792/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5134698837725976792/bin
Found file /tmp/qfuzz5134698837725976792/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz5134698837725976792/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5134698837725976792/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5134698837725976792/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5134698837725976792/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5134698837725976792/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 47, exec speed = 123660 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000000,orig:example.txt; 6; 639.00; [32.00,671.00,1351.00,2211.00,3071.00,3761.00]
2; /tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 5; 229.00; [32.00,261.00,551.00,1791.00,2791.00]
4; /tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 6; 140.00; [32.00,671.00,1351.00,1491.00,3071.00,3761.00]
8; /tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 6; 60.00; [32.00,131.00,1011.00,1071.00,1351.00,3101.00]
11; /tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 6; 219.00; [32.00,251.00,481.00,751.00,2471.00,2791.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 37, 123, 139, 12, 183, 130, 133, 68, 165, 51, 127, 101, 197, 196, 82, 37, 123, 139, 12, 183, 130, 133, 68, 165, 51, 127, 101, 57, 196, 49, 49, 49, 190, 22, 131, 149, 5, 54, 126, 13, 19, 133, 53, 190, 130, 133, 92, 37)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(154, 6, 67, 50, 53, 45, 40, 197, 7, 11, 69, 151, 181, 67, 151, 17, 40, 40, 40, 14, 139, 23, 104, 70, 19, 184, 172, 147, 56, 127, 82, 77, 147, 56, 186, 82, 62, 40, 40, 103, 128, 74, 101, 147, 46, 99, 49, 49, 64, 70, 68, 67, 33, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 74, 33, 153, 67, 50, 170, 157, 16, 187, 113, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(12, 27, 89, 139, 139, 139, 139, 139, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5134698837725976792/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [23,37,123,139,12]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [154,6,67,50,53]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,74,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [12,27,89,139,139]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.105s
user	0m27.594s
sys	0m1.784s

2023-01-23 20:46:47,920 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-23 20:46:47,920 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-23 20:46:47,922 INFO     Done. Execution time: 0.0020651817321777344 seconds
2023-01-23 20:46:47,922 INFO     Output: 
2023-01-23 20:46:47,922 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-23 20:46:57,487 INFO     Done. Execution time: 9.56523609161377 seconds
2023-01-23 20:46:57,487 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([23,37,123,139,12])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([154,6,67,50,53])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,74,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([12,27,89,139,139])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                        
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects        |
--------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [23,37,123,139,12]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [23,37,123,139,12]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [23,37,123,139,12]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [23,37,123,139,12]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [23,37,123,139,12]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [23,37,123,139,12]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |     23  |  0  |  [23,37,123,139,12]  |
    22  |                     R = R + chunk;  |     23  |   23  |     23  |  0  |  [23,37,123,139,12]  |
    26  |                         i = i + 1;  |         |   23  |     23  |  1  |  [23,37,123,139,12]  |
    32  |                         R = R + 1;  |      1  |   24  |     23  |  1  |  [23,37,123,139,12]  |
    35  |     chunk = arrayRead(objects, i);  |         |   24  |     37  |  1  |  [23,37,123,139,12]  |
    38  |                     R = R + chunk;  |     37  |   61  |     37  |  1  |  [23,37,123,139,12]  |
    42  |                         i = i + 1;  |         |   61  |     37  |  2  |  [23,37,123,139,12]  |
    43  |              resetPlaceHolder_1();  |         |   61  |     37  |  2  |  [23,37,123,139,12]  |
    49  |                         R = R + 1;  |      1  |   62  |     37  |  2  |  [23,37,123,139,12]  |
    52  |     chunk = arrayRead(objects, i);  |         |   62  |    123  |  2  |  [23,37,123,139,12]  |
    55  |                     R = R + chunk;  |    123  |  185  |    123  |  2  |  [23,37,123,139,12]  |
    59  |                         i = i + 1;  |         |  185  |    123  |  3  |  [23,37,123,139,12]  |
    60  |              resetPlaceHolder_1();  |         |  185  |    123  |  3  |  [23,37,123,139,12]  |
    66  |                         R = R + 1;  |      1  |  186  |    123  |  3  |  [23,37,123,139,12]  |
    69  |     chunk = arrayRead(objects, i);  |         |  186  |    139  |  3  |  [23,37,123,139,12]  |
    72  |                     R = R + chunk;  |    139  |  325  |    139  |  3  |  [23,37,123,139,12]  |
    76  |                         i = i + 1;  |         |  325  |    139  |  4  |  [23,37,123,139,12]  |
    77  |              resetPlaceHolder_1();  |         |  325  |    139  |  4  |  [23,37,123,139,12]  |
    83  |                         R = R + 1;  |      1  |  326  |    139  |  4  |  [23,37,123,139,12]  |
    86  |     chunk = arrayRead(objects, i);  |         |  326  |     12  |  4  |  [23,37,123,139,12]  |
    89  |                     R = R + chunk;  |     12  |  338  |     12  |  4  |  [23,37,123,139,12]  |
    93  |                         i = i + 1;  |         |  338  |     12  |  5  |  [23,37,123,139,12]  |
    94  |              resetPlaceHolder_1();  |         |  338  |     12  |  5  |  [23,37,123,139,12]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |     23  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |     37  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |    123  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |    139  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |     12  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |     23  |                            |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |                            |
    38  |         R = R + chunk;  |     37  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |
    55  |         R = R + chunk;  |    123  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |
    72  |         R = R + chunk;  |    139  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |
    89  |         R = R + chunk;  |     12  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m9.558s
user	0m17.329s
sys	0m3.987s

2023-01-23 20:46:57,488 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:47:13,102 INFO     Done. Execution time: 15.61458969116211 seconds
2023-01-23 20:47:13,102 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `13.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2046-transparentAmortize-60s-mostPrecise/stringutils-raw-0123-2046-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.609s
user	0m47.228s
sys	0m5.249s

2023-01-23 20:47:13,103 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-23 20:47:13,103 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:48:19,401 INFO     Done. Execution time: 66.29870271682739 seconds
2023-01-23 20:48:19,402 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz2042076392209565663/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2042076392209565663/bin -o /tmp/qfuzz2042076392209565663/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2042076392209565663/bin
Found file /tmp/qfuzz2042076392209565663/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz2042076392209565663/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2042076392209565663/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2042076392209565663/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2042076392209565663/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2042076392209565663/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 47, exec speed = 131356 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m131k to 131k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000000,orig:example.txt; 6; 339.00; [671.00,1012.00,1351.00,2211.00,3071.00,3761.00]
2; /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 6; 70.00; [101.00,171.00,931.00,1271.00,1351.00,2532.00]
3; /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 6; 280.00; [391.00,671.00,1872.00,2211.00,3071.00,3401.00]
8; /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 6; 61.00; [671.00,732.00,2211.00,2311.00,3761.00,3891.00]
14; /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 6; 20.00; [91.00,111.00,1081.00,2451.00,3752.00,3831.00]
15; /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta; 6; 401.00; [91.00,791.00,2211.00,2671.00,3072.00,3761.00]
29; /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta; 6; 490.00; [131.00,671.00,1881.00,2371.00,3072.00,3751.00]
36; /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta; 6; 499.00; [172.00,671.00,1351.00,2211.00,3071.00,3761.00]
55; /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 6; 541.00; [211.00,752.00,1351.00,2211.00,3071.00,3761.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 10, 153, 67, 37, 161, 138, 68, 67, 45, 116, 167, 16, 193, 67, 50, 170, 12, 5, 14, 127, 176, 59, 68, 74, 50, 116, 86, 16, 193, 76, 5, 10, 60, 7)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 8, 170, 91, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 118, 187, 6, 33, 153, 120, 35, 16, 13, 110, 133, 153, 191, 4, 57, 96, 175, 33, 183, 147, 115, 28, 36, 124, 5, 197, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 133, 4, 39, 153, 153, 153, 82, 153, 153, 187, 110, 33, 153, 67, 50, 170, 93, 120, 195, 195, 163, 132, 40, 195, 195, 144, 186, 144, 186, 186, 168, 186, 189, 186, 195, 195, 195, 195, 162, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 188, 110, 56, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(53, 5, 191, 4, 122, 187, 167, 5, 5, 4, 73, 17, 67, 5, 5, 5, 5, 4, 4, 5, 5, 5, 5, 10, 82, 58, 186, 110, 33, 121)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 115, 194, 110, 33, 36, 73, 16, 187, 108, 110, 106, 152, 155, 67, 50, 67, 50, 50, 170, 66, 152, 6, 187, 41, 85, 153, 67, 81, 170, 15, 170, 59, 102, 5, 157, 152, 97, 110, 33, 110, 106, 152, 152, 153, 67, 50, 88, 119, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(169, 110, 33, 153, 19, 93, 16, 84, 104, 29, 18, 93, 193, 50, 83, 127, 170, 68, 103, 191, 88, 105, 47, 160, 42, 198, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 46, 63, 8, 67, 126, 10, 67, 50, 6, 93, 16, 137, 62, 79, 67, 50, 6, 93, 16, 110, 33, 57, 24, 194)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2042076392209565663/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,10,153,67], 37
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 8
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [93,118,187,6,33], 153
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,133,4,39], 153
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [53,5,191,4,122], 187
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,115,194,110,33], 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [169,110,33,153,19], 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,46,63,8,67], 126
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.292s
user	0m28.906s
sys	0m1.796s

2023-01-23 20:48:19,402 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-23 20:48:19,402 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-23 20:48:19,404 INFO     Done. Execution time: 0.0016622543334960938 seconds
2023-01-23 20:48:19,404 INFO     Output: 
2023-01-23 20:48:19,404 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-23 20:48:28,704 INFO     Done. Execution time: 9.299802541732788 seconds
2023-01-23 20:48:28,704 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,10,153,67], 37)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 8)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([93,118,187,6,33], 153)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,133,4,39], 153)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,115,194,110,33], 36)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([53,5,191,4,122], 187)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([169,110,33,153,19], 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,46,63,8,67], 126)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects        |  separator  |
-----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [187,110,10,153,67]  |         37  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [187,110,10,153,67]  |         37  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [187,110,10,153,67]  |         37  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [187,110,10,153,67]  |         37  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [187,110,10,153,67]  |         37  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [187,110,10,153,67]  |         37  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    187  |  0  |  [187,110,10,153,67]  |         37  |
    22  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |  [187,110,10,153,67]  |         37  |
    26  |                         i = i + 1;  |         |  187  |    187  |  1  |  [187,110,10,153,67]  |         37  |
    32  |                 R = R + separator;  |     37  |  224  |    187  |  1  |  [187,110,10,153,67]  |         37  |
    35  |     chunk = arrayRead(objects, i);  |         |  224  |    110  |  1  |  [187,110,10,153,67]  |         37  |
    38  |                     R = R + chunk;  |    110  |  334  |    110  |  1  |  [187,110,10,153,67]  |         37  |
    42  |                         i = i + 1;  |         |  334  |    110  |  2  |  [187,110,10,153,67]  |         37  |
    43  |              resetPlaceHolder_1();  |         |  334  |    110  |  2  |  [187,110,10,153,67]  |         37  |
    49  |                 R = R + separator;  |     37  |  371  |    110  |  2  |  [187,110,10,153,67]  |         37  |
    52  |     chunk = arrayRead(objects, i);  |         |  371  |     10  |  2  |  [187,110,10,153,67]  |         37  |
    55  |                     R = R + chunk;  |     10  |  381  |     10  |  2  |  [187,110,10,153,67]  |         37  |
    59  |                         i = i + 1;  |         |  381  |     10  |  3  |  [187,110,10,153,67]  |         37  |
    60  |              resetPlaceHolder_1();  |         |  381  |     10  |  3  |  [187,110,10,153,67]  |         37  |
    66  |                 R = R + separator;  |     37  |  418  |     10  |  3  |  [187,110,10,153,67]  |         37  |
    69  |     chunk = arrayRead(objects, i);  |         |  418  |    153  |  3  |  [187,110,10,153,67]  |         37  |
    72  |                     R = R + chunk;  |    153  |  571  |    153  |  3  |  [187,110,10,153,67]  |         37  |
    76  |                         i = i + 1;  |         |  571  |    153  |  4  |  [187,110,10,153,67]  |         37  |
    77  |              resetPlaceHolder_1();  |         |  571  |    153  |  4  |  [187,110,10,153,67]  |         37  |
    83  |                 R = R + separator;  |     37  |  608  |    153  |  4  |  [187,110,10,153,67]  |         37  |
    86  |     chunk = arrayRead(objects, i);  |         |  608  |     67  |  4  |  [187,110,10,153,67]  |         37  |
    89  |                     R = R + chunk;  |     67  |  675  |     67  |  4  |  [187,110,10,153,67]  |         37  |
    93  |                         i = i + 1;  |         |  675  |     67  |  5  |  [187,110,10,153,67]  |         37  |
    94  |              resetPlaceHolder_1();  |         |  675  |     67  |  5  |  [187,110,10,153,67]  |         37  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    187  |                            |
    32  |     R = R + separator;  |     37  |                         0  |
    38  |         R = R + chunk;  |    110  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     37  |                         1  |
    55  |         R = R + chunk;  |     10  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     37  |                         2  |
    72  |         R = R + chunk;  |    153  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     37  |                         3  |
    89  |         R = R + chunk;  |     67  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    187  |                            |                         0  |
    32  |     R = R + separator;  |     37  |                         0  |                            |
    38  |         R = R + chunk;  |    110  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     37  |                         1  |                            |
    55  |         R = R + chunk;  |     10  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     37  |                         2  |                            |
    72  |         R = R + chunk;  |    153  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     37  |                         3  |                            |
    89  |         R = R + chunk;  |     67  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m9.293s
user	0m16.508s
sys	0m4.211s

2023-01-23 20:48:28,704 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:48:37,813 INFO     Done. Execution time: 9.108612060546875 seconds
2023-01-23 20:48:37,813 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `7.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2048-transparentAmortize-60s-mostPrecise/stringutils-raw-0123-2048-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.103s
user	0m19.028s
sys	0m1.904s

2023-01-23 20:48:37,813 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-23 20:48:37,813 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:49:44,018 INFO     Done. Execution time: 66.20468616485596 seconds
2023-01-23 20:49:44,018 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz1646344509023792846/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1646344509023792846/bin -o /tmp/qfuzz1646344509023792846/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1646344509023792846/bin
Found file /tmp/qfuzz1646344509023792846/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz1646344509023792846/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1646344509023792846/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1646344509023792846/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1646344509023792846/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1646344509023792846/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 39, exec speed = 135828 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m135k to 135k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 356.00; [678.00,3408.00,3764.00]
2; /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 3; 6.00; [98.00,104.00,588.00]
4; /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 3; 830.00; [124.00,1268.00,2098.00]
5; /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta; 3; 1130.00; [128.00,1258.00,3924.00]
7; /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta; 3; 1516.00; [678.00,2248.00,3764.00]
9; /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 3; 6.00; [1908.00,3038.00,3044.00]
14; /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 3; 570.00; [108.00,678.00,3764.00]
21; /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta; 3; 1530.00; [678.00,2208.00,3764.00]
23; /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta; 3; 1536.00; [678.00,2228.00,3764.00]
33; /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta; 3; 1730.00; [104.00,2208.00,3938.00]
52; /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta; 3; 1816.00; [98.00,1948.00,3764.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 6, 4, 5, 133, 170, 97, 16, 187, 110, 33, 119, 67, 50, 172, 93, 11, 8, 153, 187, 110, 33, 170, 93, 16, 187, 110, 33, 153, 170, 93, 16, 188, 170, 93, 16, 187, 110, 33, 147, 49, 49, 49, 49, 16, 187, 90, 33, 153, 165, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 89, 196, 43, 19, 9, 110, 116, 93, 17, 16, 106, 196, 4, 19, 127, 110, 132, 116)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 180, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 40, 16, 187, 98, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 196, 16, 187, 110, 58, 153, 67, 50, 170, 93, 8, 50, 170, 63, 4, 16, 187, 110, 37, 188, 14, 50, 17, 92, 153, 69, 170, 93, 16, 187, 110, 6, 153, 67, 50, 170, 93, 16, 187, 110, 37, 187, 110, 31, 33, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 157, 33, 153, 67, 50, 5, 93, 93, 16, 187, 110, 148, 153, 167, 55, 67, 50, 170, 93, 16, 60, 49, 54, 16, 187, 110, 43, 50, 158, 89, 170, 93, 93, 179, 187, 110, 46, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 124, 151, 151, 78, 151, 95, 121, 68, 135, 174, 61, 43, 8, 71, 151, 177, 43, 151, 189, 151)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 112, 93, 16, 187, 110, 33, 153, 67, 50, 170, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195, 104, 62, 167, 102, 102, 6, 197, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 4, 104, 98, 51, 193, 63, 55, 51, 23, 63, 4, 94, 152, 162, 152, 178, 156, 52, 122, 4, 4, 139, 152, 70, 4, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 173, 4, 43, 4, 194, 29, 135, 30, 78, 7, 15, 50, 119, 75, 187, 61, 100, 58)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1646344509023792846/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,6,4,5,133], 170, 97, 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,89,196,43,19], 9, 110, 116
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 180, 111, 111
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,196,16], 187, 110, 58
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,157,33,153,67], 50, 5, 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [151,124,151,151,78], 151, 95, 121
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 112, 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [195,104,62,167,102], 102, 6, 197
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,4,104,98,51], 193, 63, 55
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,173,4,43,4], 194, 29, 135
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.198s
user	0m27.873s
sys	0m1.892s

2023-01-23 20:49:44,019 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-23 20:49:44,019 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-23 20:49:44,021 INFO     Done. Execution time: 0.0018076896667480469 seconds
2023-01-23 20:49:44,021 INFO     Output: 
2023-01-23 20:49:44,021 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-23 20:49:51,011 INFO     Done. Execution time: 6.989804267883301 seconds
2023-01-23 20:49:51,011 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,6,4,5,133], 170, 97, 16)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,89,196,43,19], 9, 110, 116)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 180, 111, 111)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,196,16], 187, 110, 58)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,157,33,153,67], 50, 5, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([151,124,151,151,78], 151, 95, 121)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 112, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([195,104,62,167,102], 102, 6, 197)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,4,104,98,51], 193, 63, 55)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,173,4,43,4], 194, 29, 135)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 170, 93)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |       text        |
----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |   16  |           97  |           170  |  [187,6,4,5,133]  |
    34  |                      // int R = 0;  |         |    0  |         |     |   16  |           97  |           170  |  [187,6,4,5,133]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |   16  |           97  |           170  |  [187,6,4,5,133]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |   16  |           97  |           170  |  [187,6,4,5,133]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |   16  |           97  |           170  |  [187,6,4,5,133]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    51  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    54  |               R = R + replacement;  |     97  |  284  |    187  |  0  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  284  |      6  |  0  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    63  |                         i = i + 2;  |         |  284  |      6  |  2  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    64  |              resetPlaceHolder_1();  |         |  284  |      6  |  2  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    72  |        chunk = arrayRead(text, i);  |         |  284  |      4  |  2  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    75  |                     R = R + chunk;  |      4  |  288  |      4  |  2  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    78  |               R = R + replacement;  |     97  |  385  |      4  |  2  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  385  |      5  |  2  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    87  |                         i = i + 2;  |         |  385  |      5  |  4  |   16  |           97  |           170  |  [187,6,4,5,133]  |
    88  |              resetPlaceHolder_1();  |         |  385  |      5  |  4  |   16  |           97  |           170  |  [187,6,4,5,133]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [51, 54, 75, 78]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |    187  |                            |
    54  |   R = R + replacement;  |     97  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |      4  |                            |
    78  |   R = R + replacement;  |     97  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [51, 75]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}; {78}
GroupID(1): {51,75}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |    187  |                            |                         0  |
    54  |   R = R + replacement;  |     97  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |      4  |                            |                         0  |
    78  |   R = R + replacement;  |     97  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R replacement -> R0 = R0 + replacement;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m6.983s
user	0m12.870s
sys	0m2.671s

2023-01-23 20:49:51,011 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:51:25,925 INFO     Done. Execution time: 94.91407203674316 seconds
2023-01-23 20:51:25,926 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `92.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2049-transparentAmortize-60s-mostPrecise/stringutils-raw-0123-2049-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m34.908s
user	3m42.558s
sys	0m18.436s

2023-01-23 20:51:25,926 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-23 20:51:25,926 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:52:31,876 INFO     Done. Execution time: 65.94956159591675 seconds
2023-01-23 20:52:31,876 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz5300755618377552237/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5300755618377552237/bin -o /tmp/qfuzz5300755618377552237/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5300755618377552237/bin
Found file /tmp/qfuzz5300755618377552237/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz5300755618377552237/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5300755618377552237/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5300755618377552237/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5300755618377552237/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5300755618377552237/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 37, exec speed = 133969 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5300755618377552237/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 8.00; [32.00,40.00]
2; /tmp/qfuzz5300755618377552237/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5300755618377552237/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz5300755618377552237/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5300755618377552237/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 50, 170, 93, 175, 187, 110, 189, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 176, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5300755618377552237/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 110
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.943s
user	0m24.904s
sys	0m1.801s

2023-01-23 20:52:31,876 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-23 20:52:31,876 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-23 20:52:31,878 INFO     Done. Execution time: 0.0014424324035644531 seconds
2023-01-23 20:52:31,878 INFO     Output: 
2023-01-23 20:52:31,878 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-23 20:52:37,831 INFO     Done. Execution time: 5.953301668167114 seconds
2023-01-23 20:52:37,832 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 110)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             4  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |             4  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             4  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             4  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |             4  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |             4  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |             4  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |             4  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |             4  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |             4  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |             4  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |             4  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m5.947s
user	0m11.931s
sys	0m1.880s

2023-01-23 20:52:37,832 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:53:00,572 INFO     Done. Execution time: 22.740469455718994 seconds
2023-01-23 20:53:00,572 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `20.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2052-transparentAmortize-60s-mostPrecise/stringutils-raw-0123-2052-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m22.735s
user	0m43.170s
sys	0m4.235s

2023-01-23 20:53:00,573 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-23 20:53:00,573 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:54:06,945 INFO     Done. Execution time: 66.37215161323547 seconds
2023-01-23 20:54:06,945 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz2812089446542935304/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2812089446542935304/bin -o /tmp/qfuzz2812089446542935304/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2812089446542935304/bin
Found file /tmp/qfuzz2812089446542935304/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz2812089446542935304/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2812089446542935304/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2812089446542935304/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2812089446542935304/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2812089446542935304/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 9, exec speed = 132973 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
24; /tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov; 1; 0.00; [1010.00]
29; /tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 1; 0.00; [1410.00]
33; /tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 1; 0.00; [3770.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
/tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 18, 4, 33, 93, 16, 31, 110, 33, 153, 67, 50, 29, 60, 16, 86, 110, 33, 94, 90, 50, 170, 90, 33, 153, 18, 4, 33, 93, 153, 195, 50, 170, 93, 16, 187, 110, 108, 97, 112, 50, 170, 38, 169)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(69, 153, 160, 186, 7, 4, 20, 59, 30, 168, 49, 49, 49, 49, 49, 23, 9, 6, 124, 109, 169, 5, 189, 161, 59, 25, 5, 64, 4, 158, 4, 20, 110, 161, 151, 54, 60, 64, 63, 143, 170, 110, 5, 47, 175)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 4, 4, 4, 4, 4, 4, 5, 90)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2812089446542935304/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,18], 4, 33
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [69,153,160,186,7], 4, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [49,4,4,4,4], 4, 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 50, 170
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.366s
user	0m26.244s
sys	0m1.893s

2023-01-23 20:54:06,945 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-23 20:54:06,945 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-23 20:54:06,947 INFO     Done. Execution time: 0.0017476081848144531 seconds
2023-01-23 20:54:06,947 INFO     Output: 
2023-01-23 20:54:06,947 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-23 20:54:11,499 INFO     Done. Execution time: 4.551018238067627 seconds
2023-01-23 20:54:11,499 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,18], 4, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([69,153,160,186,7], 4, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([49,4,4,4,4], 4, 4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 50, 170)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 151):
                                                                                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |          str          |
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |            4  |                    |   33  |                   |  [187,110,33,153,18]  |
    28  |                      // int R = 0;  |         |    0  |         |     |            4  |                    |   33  |                   |  [187,110,33,153,18]  |
    29  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |            4  |                    |   33  |                   |  [187,110,33,153,18]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |            4  |                    |   33  |                   |  [187,110,33,153,18]  |
    32  |           int numberOfStrings = 0;  |         |    0  |         |     |            4  |                    |   33  |                0  |  [187,110,33,153,18]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |     |            4  |                    |   33  |                0  |  [187,110,33,153,18]  |
    36  |          int isSeparatorChunk = 0;  |         |    0  |      0  |     |            4  |                 0  |   33  |                0  |  [187,110,33,153,18]  |
    38  |                         int i = 0;  |         |    0  |      0  |  0  |            4  |                 0  |   33  |                0  |  [187,110,33,153,18]  |
    44  |         chunk = arrayRead(str, i);  |         |    0  |    187  |  0  |            4  |                 0  |   33  |                0  |  [187,110,33,153,18]  |
    54  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |            4  |                 0  |   33  |                0  |  [187,110,33,153,18]  |
    58  |                         i = i + 1;  |         |  187  |    187  |  1  |            4  |                 0  |   33  |                0  |  [187,110,33,153,18]  |
    59  |              resetPlaceHolder_1();  |         |  187  |    187  |  1  |            4  |                 0  |   33  |                0  |  [187,110,33,153,18]  |
    65  |         chunk = arrayRead(str, i);  |         |  187  |    110  |  1  |            4  |                 0  |   33  |                0  |  [187,110,33,153,18]  |
    76  |  numberOfStrings = numberOfStri...  |         |  187  |    110  |  1  |            4  |                 0  |   33  |                1  |  [187,110,33,153,18]  |
    80  |                         i = i + 1;  |         |  187  |    110  |  2  |            4  |                 0  |   33  |                1  |  [187,110,33,153,18]  |
    81  |              resetPlaceHolder_1();  |         |  187  |    110  |  2  |            4  |                 0  |   33  |                1  |  [187,110,33,153,18]  |
    87  |         chunk = arrayRead(str, i);  |         |  187  |     33  |  2  |            4  |                 0  |   33  |                1  |  [187,110,33,153,18]  |
    98  |  numberOfStrings = numberOfStri...  |         |  187  |     33  |  2  |            4  |                 0  |   33  |                2  |  [187,110,33,153,18]  |
   102  |                         i = i + 1;  |         |  187  |     33  |  3  |            4  |                 0  |   33  |                2  |  [187,110,33,153,18]  |
   103  |              resetPlaceHolder_1();  |         |  187  |     33  |  3  |            4  |                 0  |   33  |                2  |  [187,110,33,153,18]  |
   109  |         chunk = arrayRead(str, i);  |         |  187  |    153  |  3  |            4  |                 0  |   33  |                2  |  [187,110,33,153,18]  |
   120  |  numberOfStrings = numberOfStri...  |         |  187  |    153  |  3  |            4  |                 0  |   33  |                3  |  [187,110,33,153,18]  |
   124  |                         i = i + 1;  |         |  187  |    153  |  4  |            4  |                 0  |   33  |                3  |  [187,110,33,153,18]  |
   125  |              resetPlaceHolder_1();  |         |  187  |    153  |  4  |            4  |                 0  |   33  |                3  |  [187,110,33,153,18]  |
   131  |         chunk = arrayRead(str, i);  |         |  187  |     18  |  4  |            4  |                 0  |   33  |                3  |  [187,110,33,153,18]  |
   142  |  numberOfStrings = numberOfStri...  |         |  187  |     18  |  4  |            4  |                 0  |   33  |                4  |  [187,110,33,153,18]  |
   146  |                         i = i + 1;  |         |  187  |     18  |  5  |            4  |                 0  |   33  |                4  |  [187,110,33,153,18]  |
   147  |              resetPlaceHolder_1();  |         |  187  |     18  |  5  |            4  |                 0  |   33  |                4  |  [187,110,33,153,18]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |    187  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m4.545s
user	0m8.132s
sys	0m1.025s

2023-01-23 20:54:11,499 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:54:13,268 INFO     Done. Execution time: 1.768644094467163 seconds
2023-01-23 20:54:13,268 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
        ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
            ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.763s
user	0m3.295s
sys	0m0.172s

2023-01-23 20:54:13,268 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-23 20:54:13,268 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:55:19,976 INFO     Done. Execution time: 66.70836091041565 seconds
2023-01-23 20:55:19,978 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz3981413620635569350/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3981413620635569350/bin -o /tmp/qfuzz3981413620635569350/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3981413620635569350/bin
Found file /tmp/qfuzz3981413620635569350/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz3981413620635569350/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3981413620635569350/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3981413620635569350/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3981413620635569350/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3981413620635569350/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 43, exec speed = 134226 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3981413620635569350/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [76.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3981413620635569350/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3981413620635569350/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.701s
user	0m27.062s
sys	0m2.034s

2023-01-23 20:55:19,978 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-23 20:55:19,978 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-23 20:55:19,980 INFO     Done. Execution time: 0.0016705989837646484 seconds
2023-01-23 20:55:19,980 INFO     Output: 
2023-01-23 20:55:19,980 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-23 20:55:23,371 INFO     Done. Execution time: 3.39079213142395 seconds
2023-01-23 20:55:23,371 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

real	0m3.384s
user	0m6.855s
sys	0m0.347s

2023-01-23 20:55:23,371 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:55:26,011 INFO     Done. Execution time: 2.6397860050201416 seconds
2023-01-23 20:55:26,012 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2055-transparentAmortize-60s-mostPrecise/stringutils-raw-0123-2055-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.633s
user	0m4.783s
sys	0m0.265s

2023-01-23 20:55:26,012 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-23 20:55:26,012 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:56:32,368 INFO     Done. Execution time: 66.35593485832214 seconds
2023-01-23 20:56:32,368 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz7842232772966044677/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7842232772966044677/bin -o /tmp/qfuzz7842232772966044677/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7842232772966044677/bin
Found file /tmp/qfuzz7842232772966044677/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz7842232772966044677/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7842232772966044677/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7842232772966044677/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7842232772966044677/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7842232772966044677/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 130022 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7842232772966044677/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7842232772966044677/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7842232772966044677/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 110, 33, false, 67
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.349s
user	0m26.079s
sys	0m1.980s

2023-01-23 20:56:32,368 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-23 20:56:32,368 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-23 20:56:32,370 INFO     Done. Execution time: 0.0015115737915039062 seconds
2023-01-23 20:56:32,370 INFO     Output: 
2023-01-23 20:56:32,370 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-23 20:56:35,685 INFO     Done. Execution time: 3.315047025680542 seconds
2023-01-23 20:56:35,686 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 110, 33, false, 67)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      67  |   33  |              false  |             110  |    2  |
    32  |     return;  |         |  0  |      67  |   33  |              false  |             110  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m3.308s
user	0m6.802s
sys	0m0.346s

2023-01-23 20:56:35,686 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:56:38,332 INFO     Done. Execution time: 2.645754098892212 seconds
2023-01-23 20:56:38,332 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2056-transparentAmortize-60s-mostPrecise/stringutils-raw-0123-2056-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.640s
user	0m4.938s
sys	0m0.246s

2023-01-23 20:56:38,332 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-23 20:56:38,332 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:57:44,675 INFO     Done. Execution time: 66.34309148788452 seconds
2023-01-23 20:57:44,676 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz2159428234691099507/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2159428234691099507/bin -o /tmp/qfuzz2159428234691099507/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2159428234691099507/bin
Found file /tmp/qfuzz2159428234691099507/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz2159428234691099507/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2159428234691099507/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2159428234691099507/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2159428234691099507/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2159428234691099507/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 23, exec speed = 133725 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2159428234691099507/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz2159428234691099507/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2159428234691099507/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz2159428234691099507/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2159428234691099507/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(184, 110, 33, 153, 67, 50, 170, 93, 16, 31, 110, 198, 153, 67, 50, 170, 93, 9, 110, 33, 153, 67, 50, 170, 93, 14, 16, 187, 110, 33, 98, 53, 50, 170, 93, 16, 187, 90, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2159428234691099507/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.336s
user	0m26.079s
sys	0m1.885s

2023-01-23 20:57:44,676 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-23 20:57:44,676 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-23 20:57:44,679 INFO     Done. Execution time: 0.002672433853149414 seconds
2023-01-23 20:57:44,679 INFO     Output: 
2023-01-23 20:57:44,679 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-23 20:57:48,176 INFO     Done. Execution time: 3.4967703819274902 seconds
2023-01-23 20:57:48,176 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

real	0m3.490s
user	0m6.820s
sys	0m0.324s

2023-01-23 20:57:48,176 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:57:50,804 INFO     Done. Execution time: 2.626918077468872 seconds
2023-01-23 20:57:50,804 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2057-transparentAmortize-60s-mostPrecise/stringutils-raw-0123-2057-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.619s
user	0m4.575s
sys	0m0.302s

2023-01-23 20:57:50,804 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-23 20:57:50,804 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 20:58:57,315 INFO     Done. Execution time: 66.51099419593811 seconds
2023-01-23 20:58:57,315 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz7094427968408575505/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7094427968408575505/bin -o /tmp/qfuzz7094427968408575505/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7094427968408575505/bin
Found file /tmp/qfuzz7094427968408575505/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz7094427968408575505/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7094427968408575505/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7094427968408575505/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7094427968408575505/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7094427968408575505/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 134868 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 680.00; [678.00,1358.00,3762.00]
2; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 3; 200.00; [102.00,3398.00,3598.00]
4; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta; 3; 1124.00; [678.00,2638.00,3762.00]
7; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 3; 1180.00; [178.00,1358.00,3762.00]
9; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 3; 80.00; [1278.00,1358.00,3762.00]
10; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128,+delta; 3; 1224.00; [398.00,2318.00,3542.00]
13; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta; 3; 1244.00; [278.00,2658.00,3902.00]
14; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64; 2; 4.00; [318.00,322.00]
16; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 3; 1376.00; [578.00,2042.00,3418.00]
24; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta; 3; 1704.00; [338.00,2218.00,3922.00]
42; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128; 3; 376.00; [1318.00,2062.00,2438.00]
50; /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16; 3; 1100.00; [138.00,1238.00,3762.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 91, 61, 5, 6, 50, 117, 4, 68, 24, 190, 5, 69, 67, 51, 116, 93, 16, 107, 110, 33, 155, 4, 55, 170, 93, 16, 108, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(102, 63, 65, 154, 121, 13, 5, 55, 100, 53, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195, 106, 16, 188, 110, 33, 153, 60, 50, 168, 109, 109, 116, 109, 109, 109, 109, 109, 109, 109, 109, 199, 187, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(101, 129, 28, 50, 170, 107, 16, 171, 43, 200, 60, 6, 187, 110, 106, 106, 133, 50, 73, 170, 69, 196, 61, 75, 4, 93, 15, 8, 173, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(15, 15, 15, 15, 15, 15, 15, 15, 168, 168, 168, 168, 168, 168, 168, 168, 189, 49, 65, 67, 49, 15, 4, 54, 33, 19, 5, 10, 152, 152, 148, 150, 32, 89, 32, 32, 32, 172, 32, 32, 32, 32, 31, 33, 104, 26, 50, 170, 49, 49, 65, 49, 111, 170, 49, 49, 65, 49, 49, 49, 180, 49, 151, 49, 49, 90, 88, 49, 97, 187, 33, 104, 168, 168, 168, 168, 167, 24, 15, 15, 15, 123, 168, 168, 168, 26, 49, 146, 168, 131, 25, 25, 109, 109, 109, 109, 109, 109, 25, 25, 55, 15, 15, 15, 15, 15, 15, 188, 49, 146, 168, 131, 25, 25, 42, 168, 168, 168, 26, 49, 146, 168, 131, 25, 25, 25, 25, 49, 65, 49, 49, 49, 180, 49, 151, 108, 49, 98, 12, 5, 31, 118, 67, 127, 170, 93, 174)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(194, 186, 13, 60, 132, 60, 135, 60, 60, 60, 60, 142, 60, 60, 60, 60, 48, 50, 170, 93, 16, 187, 110, 104, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(176, 5, 115, 139, 19, 156, 122, 110)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 63, 4, 67, 50, 170, 34, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 89, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 170, 93, 16, 107, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 8, 4, 67, 50, 170, 93, 16, 187, 153, 67, 50, 170, 93, 16, 187, 110, 33, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 131, 50, 160, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 153, 67, 50, 170, 93, 114, 187, 110, 33, 153, 67, 55, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 169, 179, 169, 169, 169, 169, 169, 28, 169, 169, 169, 169, 169, 169, 169, 130, 169, 4, 169, 169, 169, 171, 169, 169, 169, 169, 169)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7094427968408575505/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,91,61,5,6], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [102,63,65,154,121], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [195,106,16,188,110], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [101,129,28,50,170], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [15,15,15,15,15], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [194,186,13,60,132], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [176,5,115,139,19], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,63,4,67], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,8,4,67], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,131], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,169,179,169,169], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.505s
user	0m27.515s
sys	0m1.919s

2023-01-23 20:58:57,315 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-23 20:58:57,316 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-23 20:58:57,317 INFO     Done. Execution time: 0.001749277114868164 seconds
2023-01-23 20:58:57,318 INFO     Output: 
2023-01-23 20:58:57,318 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-23 20:59:05,075 INFO     Done. Execution time: 7.756985187530518 seconds
2023-01-23 20:59:05,075 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,91,61,5,6], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 12 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([102,63,65,154,121], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([195,106,16,188,110], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([101,129,28,50,170], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([15,15,15,15,15], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([194,186,13,60,132], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([176,5,115,139,19], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,63,4,67], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,8,4,67], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 12 (66.67%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,131], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,169,179,169,169], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 12)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 12 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 87):
                                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |     template      |
----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [187,91,61,5,6]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [187,91,61,5,6]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [187,91,61,5,6]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [187,91,61,5,6]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [187,91,61,5,6]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [187,91,61,5,6]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [187,91,61,5,6]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |    187  |  0  |          0  |  [187,91,61,5,6]  |
    32  |                     R = R + chunk;  |    187  |  187  |     2  |    187  |  0  |          0  |  [187,91,61,5,6]  |
    36  |                         i = i + 1;  |         |  187  |     2  |    187  |  1  |          0  |  [187,91,61,5,6]  |
    44  |  separator = arrayRead(template...  |         |  187  |     2  |    187  |  1  |         91  |  [187,91,61,5,6]  |
    49  |  chunk = arrayRead(template, (i...  |         |  187  |     2  |     61  |  1  |         91  |  [187,91,61,5,6]  |
    52  |                     R = R + chunk;  |     61  |  248  |     2  |     61  |  1  |         91  |  [187,91,61,5,6]  |
    56  |                         i = i + 2;  |         |  248  |     2  |     61  |  3  |         91  |  [187,91,61,5,6]  |
    57  |              resetPlaceHolder_1();  |         |  248  |     2  |     61  |  3  |         91  |  [187,91,61,5,6]  |
    65  |  separator = arrayRead(template...  |         |  248  |     2  |     61  |  3  |          5  |  [187,91,61,5,6]  |
    70  |  chunk = arrayRead(template, (i...  |         |  248  |     2  |      6  |  3  |          5  |  [187,91,61,5,6]  |
    73  |                     R = R + chunk;  |      6  |  254  |     2  |      6  |  3  |          5  |  [187,91,61,5,6]  |
    77  |                         i = i + 2;  |         |  254  |     2  |      6  |  5  |          5  |  [187,91,61,5,6]  |
    78  |              resetPlaceHolder_1();  |         |  254  |     2  |      6  |  5  |          5  |  [187,91,61,5,6]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [32, 52, 73]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32,52,73}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |    187  |                         0  |
    52  |         R = R + chunk;  |     61  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |      6  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m7.750s
user	0m14.208s
sys	0m2.720s

2023-01-23 20:59:05,075 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 20:59:06,842 INFO     Done. Execution time: 1.7671761512756348 seconds
2023-01-23 20:59:06,843 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.761s
user	0m3.193s
sys	0m0.200s

2023-01-23 20:59:06,843 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-23 20:59:06,843 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 21:00:13,147 INFO     Done. Execution time: 66.3037326335907 seconds
2023-01-23 21:00:13,147 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz6506504559180837982/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6506504559180837982/bin -o /tmp/qfuzz6506504559180837982/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6506504559180837982/bin
Found file /tmp/qfuzz6506504559180837982/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz6506504559180837982/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6506504559180837982/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6506504559180837982/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6506504559180837982/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6506504559180837982/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 22, exec speed = 129024 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m129k to 129k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6506504559180837982/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [3754.00]
2; /tmp/qfuzz6506504559180837982/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 1; 0.00; [94.00]
4; /tmp/qfuzz6506504559180837982/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 1; 0.00; [994.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6506504559180837982/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz6506504559180837982/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz6506504559180837982/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6506504559180837982/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(49, 80, 5, 5, 69, 123, 74, 58)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6506504559180837982/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 50, 138, 93, 8, 16, 44, 110, 176, 5, 68, 110, 150, 168, 67, 53, 168, 67, 50, 170, 93, 16, 187, 103, 161, 32)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6506504559180837982/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 49, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.297s
user	0m29.384s
sys	0m1.976s

2023-01-23 21:00:13,147 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-23 21:00:13,147 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-23 21:00:13,149 INFO     Done. Execution time: 0.0019419193267822266 seconds
2023-01-23 21:00:13,149 INFO     Output: 
2023-01-23 21:00:13,150 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-23 21:00:18,460 INFO     Done. Execution time: 5.310604810714722 seconds
2023-01-23 21:00:18,461 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(49, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                                       
 Index  |              Commands               |  Costs  |  R   |  i   |  minLength  |  sb  |  string  |
-------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |      |          2  |      |      49  |
    19  |                        int sb = 0;  |         |   0  |      |          2  |   0  |      49  |
    20  |                      // int R = 0;  |         |   0  |      |          2  |   0  |      49  |
    21  |  // mostPreciseBound(R <= minLe...  |         |   0  |      |          2  |   0  |      49  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |      |          2  |   0  |      49  |
    26  |                  sb = sb + string;  |         |   0  |      |          2  |  49  |      49  |
    29  |                    R = R + string;  |     49  |  49  |      |          2  |  49  |      49  |
    31  |                    int i = string;  |         |  49  |  49  |          2  |  49  |      49  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |     49  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m5.303s
user	0m9.001s
sys	0m1.088s

2023-01-23 21:00:18,461 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 21:00:20,653 INFO     Done. Execution time: 2.1924264430999756 seconds
2023-01-23 21:00:20,653 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m2.186s
user	0m3.973s
sys	0m0.197s

2023-01-23 21:00:20,654 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-23 21:00:20,654 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-23 21:01:27,499 INFO     Done. Execution time: 66.8450198173523 seconds
2023-01-23 21:01:27,499 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz3290918032958199682/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3290918032958199682/bin -o /tmp/qfuzz3290918032958199682/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3290918032958199682/bin
Found file /tmp/qfuzz3290918032958199682/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz3290918032958199682/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3290918032958199682/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3290918032958199682/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3290918032958199682/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3290918032958199682/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 7, exec speed = 101870 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m101k to 101k us (average: 101k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3290918032958199682/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3290918032958199682/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3290918032958199682/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.837s
user	0m29.017s
sys	0m2.144s

2023-01-23 21:01:27,499 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-23 21:01:27,499 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-23 21:01:27,501 INFO     Done. Execution time: 0.0014643669128417969 seconds
2023-01-23 21:01:27,501 INFO     Output: 
2023-01-23 21:01:27,501 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-23 21:01:30,714 INFO     Done. Execution time: 3.2125089168548584 seconds
2023-01-23 21:01:30,714 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |     187  |
    22  |     return;  |         |  0  |          2  |     187  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

real	0m3.207s
user	0m6.304s
sys	0m0.342s

2023-01-23 21:01:30,714 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-23 21:01:33,101 INFO     Done. Execution time: 2.386314630508423 seconds
2023-01-23 21:01:33,101 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0123-2101-transparentAmortize-60s-mostPrecise/guava-raw-0123-2101-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.381s
user	0m4.194s
sys	0m0.236s

2023-01-23 21:01:33,102 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    66.79862761497498,
    7.0311102867126465,
    9.562837362289429
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    66.3035032749176,
    10.8641357421875,
    111.25883340835571
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    66.65909838676453,
    12.870996952056885,
    317.1528971195221
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    67.00588750839233,
    9.951184272766113,
    8.396699666976929
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    66.43439364433289,
    6.224950790405273,
    18.403835773468018
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    66.72927117347717,
    6.146027565002441,
    9.005832433700562
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    67.06089758872986,
    139.22080516815186,
    13.255100727081299
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    2.2316462993621826,
    1.9464068412780762,
    1.1044294834136963
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    66.45326709747314,
    3.247518539428711,
    2.2091691493988037
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    66.24302268028259,
    2.9172537326812744,
    2.5176589488983154
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    66.81640148162842,
    6.807273864746094,
    8.521332263946533
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    66.37358570098877,
    8.52155590057373,
    9.36301326751709
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    66.41351103782654,
    10.990254402160645,
    68.05695009231567
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    66.69727492332458,
    5.630150079727173,
    8.929385662078857
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    66.56281113624573,
    12.934198141098022,
    13.651647090911865
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    66.54794359207153,
    7.310727596282959,
    8.687838554382324
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    66.12051606178284,
    5.892226934432983,
    8.680908918380737
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    66.02482557296753,
    4.687201499938965,
    7.018338680267334
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    66.10502409934998,
    5.618144989013672,
    8.744427680969238
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    66.54284048080444,
    6.151893138885498,
    8.648733139038086
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    66.12999248504639,
    3.1434645652770996,
    2.395879030227661
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    66.22498893737793,
    6.827182292938232,
    11.92419958114624
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    66.85576844215393,
    6.38625431060791,
    8.52826189994812
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    66.38140392303467,
    4.7390947341918945,
    7.148561716079712
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    66.21530795097351,
    5.845192193984985,
    37.14963889122009
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    66.07705998420715,
    3.07130765914917,
    2.173959255218506
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    66.11114645004272,
    9.56523609161377,
    15.61458969116211
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    66.29870271682739,
    9.299802541732788,
    9.108612060546875
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    66.20468616485596,
    6.989804267883301,
    94.91407203674316
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    65.94956159591675,
    5.953301668167114,
    22.740469455718994
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    66.37215161323547,
    4.551018238067627,
    1.768644094467163
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    66.70836091041565,
    3.39079213142395,
    2.6397860050201416
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    66.35593485832214,
    3.315047025680542,
    2.645754098892212
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    66.34309148788452,
    3.4967703819274902,
    2.626918077468872
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    66.51099419593811,
    7.756985187530518,
    1.7671761512756348
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    66.3037326335907,
    5.310604810714722,
    2.1924264430999756
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    66.8450198173523,
    3.2125089168548584,
    2.386314630508423
  ]
}
2023-01-23 21:01:33,102 INFO     Total time elapsed: 3632.725769519806 seconds
2023-01-23 21:01:33,102 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-23 21:01:33,102 INFO     Number of verified programs: {
  "stac": 3,
  "lang3": 16,
  "stringutils": 8,
  "guava": 1
}
2023-01-23 21:01:33,102 INFO     Number of not verified programs: {
  "stac": 1,
  "lang3": 3,
  "stringutils": 1
}
2023-01-23 21:01:33,102 INFO     Number of unknown programs: {
  "lang3": 1,
  "stringutils": 1,
  "guava": 2
}
2023-01-23 21:01:33,103 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/timeout/20230123_20-00-48/timeout60_000.json

2023-01-25 02:09:18,496 INFO     Arguments:
2023-01-25 02:09:18,497 INFO     timeout	60
2023-01-25 02:09:18,497 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-25 02:09:18,497 INFO     samples	0
2023-01-25 02:09:18,497 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-25 02:09:18,497 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-25 02:09:18,497 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-25 02:09:18,497 INFO     dry	False
2023-01-25 02:09:18,497 INFO     log	/root/Documents/workspace/brbo2-impl/logs/timeout/20230125_00-23-27/timeout60_00.txt
2023-01-25 02:09:18,497 INFO     mode	qfuzz
2023-01-25 02:09:18,497 INFO     version	master
2023-01-25 02:09:18,497 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-25 02:09:18,503 INFO     Done. Execution time: 0.005655527114868164 seconds
2023-01-25 02:09:18,504 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "77cd40dfab71381a3463ed47466ed3ba89d3f449"`
2023-01-25 02:09:18,509 INFO     Done. Execution time: 0.005384922027587891 seconds
2023-01-25 02:09:18,509 INFO     Build a new version: "77cd40dfab71381a3463ed47466ed3ba89d3f449"
2023-01-25 02:09:18,509 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-25 02:09:29,144 INFO     Done. Execution time: 10.63447904586792 seconds
2023-01-25 02:09:29,144 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[success] Total time: 2 s, completed Jan 25, 2023 2:09:28 AM

2023-01-25 02:09:29,148 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 02:09:29,148 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:10:35,521 INFO     Done. Execution time: 66.37327098846436 seconds
2023-01-25 02:10:35,522 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz6442890135661434165/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6442890135661434165/bin -o /tmp/qfuzz6442890135661434165/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6442890135661434165/bin
Found file /tmp/qfuzz6442890135661434165/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz6442890135661434165/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6442890135661434165/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6442890135661434165/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6442890135661434165/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6442890135661434165/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 44, exec speed = 120810 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 680.00; [679.00,1359.00,3762.00]
2; /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4; 3; 337.00; [1542.00,1879.00,3759.00]
3; /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 3; 100.00; [1259.00,1359.00,3762.00]
4; /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 2; 3123.00; [19.00,3142.00]
6; /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 3; 920.00; [1022.00,2759.00,3679.00]
8; /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta; 3; 1543.00; [239.00,2219.00,3762.00]
9; /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 3; 720.00; [1359.00,2079.00,3762.00]
17; /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta; 3; 1663.00; [299.00,2099.00,3762.00]
33; /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 3; 323.00; [2659.00,3399.00,3722.00]
45; /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta; 3; 1743.00; [119.00,2099.00,3842.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
/tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(191, 4, 104, 49, 5, 5, 192, 40, 55, 27, 176, 91, 16, 187, 9, 153, 67, 186, 186, 186, 186, 186, 186, 186, 186, 188, 187, 74, 115, 153, 110, 33, 166)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(185, 78, 132, 169, 169, 33, 33, 33, 33, 33, 33, 33, 33, 33, 144, 169, 187, 169, 174, 187, 160, 58, 15)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 14, 107, 104, 31, 5, 62, 18, 54, 110, 14, 107, 104, 31, 5, 62, 18, 63, 54, 110, 14, 107)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 29, 103, 139, 67, 50, 11, 93, 16, 187, 110, 192, 153, 67, 51, 170, 60, 16, 31, 110, 33, 153, 71, 50, 170, 93, 121, 187, 110, 33, 153, 4, 35, 12, 93, 193, 187, 110, 15, 15, 15, 15, 15, 12, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 110, 70, 11, 60, 67, 77, 170, 93, 97, 28, 13, 153, 67, 188, 142, 153, 67, 37, 145, 119, 50, 170, 153, 179, 145, 119, 16, 187, 25, 24, 170, 93, 18)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 187, 183, 33, 137, 67, 50, 170, 110, 33, 188, 188, 188, 183, 188, 188, 23, 176, 94, 111, 111, 93, 8, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 62, 153, 67, 50, 170, 95, 187, 110, 33, 153, 67)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(76, 170, 93, 16, 187, 110, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 68, 33, 153, 67, 50, 170, 93, 16, 145, 110, 33, 153, 67, 50, 170, 104, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6442890135661434165/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [191,4,104,49,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [185,78,132,169,169]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,14,107,104]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,29,103,139,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,110,70,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [50,187,183,33,137]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,62,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [76,170,93,16,187]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.362s
user	0m31.241s
sys	0m1.991s

2023-01-25 02:10:35,522 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-25 02:10:35,522 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-25 02:10:35,527 INFO     Done. Execution time: 0.004722118377685547 seconds
2023-01-25 02:10:35,527 INFO     Output: 
2023-01-25 02:10:35,528 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-25 02:10:43,513 INFO     Done. Execution time: 7.9853456020355225 seconds
2023-01-25 02:10:43,513 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([191,4,104,49,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([185,78,132,169,169])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,14,107,104])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,29,103,139,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,110,70,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([50,187,183,33,137])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,62,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([76,170,93,16,187])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |        text        |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [191,4,104,49,5]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [191,4,104,49,5]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [191,4,104,49,5]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [191,4,104,49,5]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [191,4,104,49,5]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [191,4,104,49,5]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [191,4,104,49,5]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    191  |  0  |    0  |  [191,4,104,49,5]  |
    24  |                     R = R + chunk;  |    191  |  191  |    191  |  0  |    0  |  [191,4,104,49,5]  |
    28  |                         i = i + 1;  |         |  191  |    191  |  1  |    0  |  [191,4,104,49,5]  |
    36  |          tag = arrayRead(text, i);  |         |  191  |    191  |  1  |    4  |  [191,4,104,49,5]  |
    40  |                         i = i + 1;  |         |  191  |    191  |  2  |    4  |  [191,4,104,49,5]  |
    43  |        chunk = arrayRead(text, i);  |         |  191  |    104  |  2  |    4  |  [191,4,104,49,5]  |
    46  |                     R = R + chunk;  |    104  |  295  |    104  |  2  |    4  |  [191,4,104,49,5]  |
    50  |                         i = i + 1;  |         |  295  |    104  |  3  |    4  |  [191,4,104,49,5]  |
    51  |              resetPlaceHolder_1();  |         |  295  |    104  |  3  |    4  |  [191,4,104,49,5]  |
    59  |          tag = arrayRead(text, i);  |         |  295  |    104  |  3  |   49  |  [191,4,104,49,5]  |
    63  |                         i = i + 1;  |         |  295  |    104  |  4  |   49  |  [191,4,104,49,5]  |
    66  |        chunk = arrayRead(text, i);  |         |  295  |      5  |  4  |   49  |  [191,4,104,49,5]  |
    69  |                     R = R + chunk;  |      5  |  300  |      5  |  4  |   49  |  [191,4,104,49,5]  |
    73  |                         i = i + 1;  |         |  300  |      5  |  5  |   49  |  [191,4,104,49,5]  |
    74  |              resetPlaceHolder_1();  |         |  300  |      5  |  5  |   49  |  [191,4,104,49,5]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 46, 69]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,46,69}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    191  |                         0  |
    46  |         R = R + chunk;  |    104  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
    69  |         R = R + chunk;  |      5  |                         0  |
    74  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m7.976s
user	0m14.683s
sys	0m2.811s

2023-01-25 02:10:43,514 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:10:53,468 INFO     Done. Execution time: 9.954049825668335 seconds
2023-01-25 02:10:53,468 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `7.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0210-transparentAmortize-60s-mostPrecise/stac-raw-0125-0210-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.946s
user	0m22.894s
sys	0m2.596s

2023-01-25 02:10:53,468 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 02:10:53,468 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:11:59,969 INFO     Done. Execution time: 66.50066471099854 seconds
2023-01-25 02:11:59,970 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz1911863937787235362/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1911863937787235362/bin -o /tmp/qfuzz1911863937787235362/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1911863937787235362/bin
Found file /tmp/qfuzz1911863937787235362/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz1911863937787235362/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1911863937787235362/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1911863937787235362/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1911863937787235362/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1911863937787235362/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 56, exec speed = 151267 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m56 to 56 bits (average: 56.00 bits)
[1;90m        Exec timing : [0m151k to 151k us (average: 151k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 12.00; [679.00,1359.00,3413.00,3753.00,3765.00]
2; /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 5; 12.00; [93.00,105.00,319.00,1413.00,2399.00]
6; /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 5; 12.00; [339.00,1153.00,3119.00,3753.00,3765.00]
11; /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 5; 12.00; [119.00,2473.00,3759.00,3793.00,3805.00]
12; /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 3; 6.00; [713.00,719.00,725.00]
48; /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 5; 12.00; [1839.00,3299.00,3413.00,3753.00,3765.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 58, 91, 153, 164, 25, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 149, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(189, 112, 187, 103, 5, 60, 123, 83, 170, 93, 49, 169, 63, 19, 149, 187, 55, 153, 69, 42, 63, 47, 187, 185, 4, 131, 132, 56, 169, 169, 169, 169, 169, 169, 169, 169, 170, 54, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 76, 155, 67, 16, 146, 57, 16, 11, 28, 33, 153, 46, 50, 170, 131, 16, 187, 110, 33, 138, 138, 138, 138, 138, 138, 138, 138, 138, 138, 93, 156, 13, 40, 84, 55, 50, 170, 95, 16, 187, 11, 66, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 132, 15, 33, 119, 67, 70, 170, 86, 92, 113, 194, 71, 181, 40, 66, 143, 19, 4, 4, 75, 50, 134, 93, 9, 6, 15, 33, 119, 67, 50, 170, 86, 71, 113, 194, 71, 181, 40, 66, 143, 66, 66, 71, 33)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1911863937787235362/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,58,91,153,164], 2, 170
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [35,35,35,35,35], 2, 35
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [189,112,187,103,5], 2, 123
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,76,155,67,16], 2, 57
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,132,15,33,119], 2, 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2, 170
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.491s
user	0m32.082s
sys	0m2.048s

2023-01-25 02:11:59,970 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-25 02:11:59,970 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-25 02:11:59,975 INFO     Done. Execution time: 0.00445246696472168 seconds
2023-01-25 02:11:59,975 INFO     Output: 
2023-01-25 02:11:59,975 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-25 02:12:12,045 INFO     Done. Execution time: 12.070180416107178 seconds
2023-01-25 02:12:12,046 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,58,91,153,164], 2, 170)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([35,35,35,35,35], 2, 35)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([189,112,187,103,5], 2, 123)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,76,155,67,16], 2, 57)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,132,15,33,119], 2, 70)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2, 170)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                     
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |         text          |
-----------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |        170  |       |           2  |  [187,58,91,153,164]  |
    26  |                      // int R = 0;  |         |     0  |         |     |     |        170  |       |           2  |  [187,58,91,153,164]  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |     |        170  |       |           2  |  [187,58,91,153,164]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |        170  |       |           2  |  [187,58,91,153,164]  |
    30  |                         int i = 0;  |         |     0  |         |  0  |     |        170  |       |           2  |  [187,58,91,153,164]  |
    32  |                         int j = 0;  |         |     0  |         |  0  |  0  |        170  |       |           2  |  [187,58,91,153,164]  |
    34  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |        170  |       |           2  |  [187,58,91,153,164]  |
    36  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |        170  |    0  |           2  |  [187,58,91,153,164]  |
    41  |                             j = 0;  |         |     0  |      0  |  0  |  0  |        170  |    0  |           2  |  [187,58,91,153,164]  |
    44  |        chunk = arrayRead(text, j);  |         |     0  |    187  |  0  |  0  |        170  |    0  |           2  |  [187,58,91,153,164]  |
    47  |                     R = R + chunk;  |    187  |   187  |    187  |  0  |  0  |        170  |    0  |           2  |  [187,58,91,153,164]  |
    51  |                         j = j + 1;  |         |   187  |    187  |  0  |  1  |        170  |    0  |           2  |  [187,58,91,153,164]  |
    59  |          tag = arrayRead(text, j);  |         |   187  |    187  |  0  |  1  |        170  |   58  |           2  |  [187,58,91,153,164]  |
    63  |                         j = j + 1;  |         |   187  |    187  |  0  |  2  |        170  |   58  |           2  |  [187,58,91,153,164]  |
    66  |        chunk = arrayRead(text, j);  |         |   187  |     91  |  0  |  2  |        170  |   58  |           2  |  [187,58,91,153,164]  |
    69  |                     R = R + chunk;  |     91  |   278  |     91  |  0  |  2  |        170  |   58  |           2  |  [187,58,91,153,164]  |
    73  |                         j = j + 1;  |         |   278  |     91  |  0  |  3  |        170  |   58  |           2  |  [187,58,91,153,164]  |
    74  |              resetPlaceHolder_2();  |         |   278  |     91  |  0  |  3  |        170  |   58  |           2  |  [187,58,91,153,164]  |
    82  |          tag = arrayRead(text, j);  |         |   278  |     91  |  0  |  3  |        170  |  153  |           2  |  [187,58,91,153,164]  |
    86  |                         j = j + 1;  |         |   278  |     91  |  0  |  4  |        170  |  153  |           2  |  [187,58,91,153,164]  |
    89  |        chunk = arrayRead(text, j);  |         |   278  |    164  |  0  |  4  |        170  |  153  |           2  |  [187,58,91,153,164]  |
    92  |                     R = R + chunk;  |    164  |   442  |    164  |  0  |  4  |        170  |  153  |           2  |  [187,58,91,153,164]  |
    96  |                         j = j + 1;  |         |   442  |    164  |  0  |  5  |        170  |  153  |           2  |  [187,58,91,153,164]  |
    97  |              resetPlaceHolder_2();  |         |   442  |    164  |  0  |  5  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   106  |                         i = i + 1;  |         |   442  |    164  |  1  |  5  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   109  |                 R = R + separator;  |    170  |   612  |    164  |  1  |  5  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   110  |              resetPlaceHolder_1();  |         |   612  |    164  |  1  |  5  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   115  |                             j = 0;  |         |   612  |    164  |  1  |  0  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   118  |        chunk = arrayRead(text, j);  |         |   612  |    187  |  1  |  0  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   121  |                     R = R + chunk;  |    187  |   799  |    187  |  1  |  0  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   125  |                         j = j + 1;  |         |   799  |    187  |  1  |  1  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   133  |          tag = arrayRead(text, j);  |         |   799  |    187  |  1  |  1  |        170  |   58  |           2  |  [187,58,91,153,164]  |
   137  |                         j = j + 1;  |         |   799  |    187  |  1  |  2  |        170  |   58  |           2  |  [187,58,91,153,164]  |
   140  |        chunk = arrayRead(text, j);  |         |   799  |     91  |  1  |  2  |        170  |   58  |           2  |  [187,58,91,153,164]  |
   143  |                     R = R + chunk;  |     91  |   890  |     91  |  1  |  2  |        170  |   58  |           2  |  [187,58,91,153,164]  |
   147  |                         j = j + 1;  |         |   890  |     91  |  1  |  3  |        170  |   58  |           2  |  [187,58,91,153,164]  |
   148  |              resetPlaceHolder_2();  |         |   890  |     91  |  1  |  3  |        170  |   58  |           2  |  [187,58,91,153,164]  |
   156  |          tag = arrayRead(text, j);  |         |   890  |     91  |  1  |  3  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   160  |                         j = j + 1;  |         |   890  |     91  |  1  |  4  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   163  |        chunk = arrayRead(text, j);  |         |   890  |    164  |  1  |  4  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   166  |                     R = R + chunk;  |    164  |  1054  |    164  |  1  |  4  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   170  |                         j = j + 1;  |         |  1054  |    164  |  1  |  5  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   171  |              resetPlaceHolder_2();  |         |  1054  |    164  |  1  |  5  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   180  |                         i = i + 1;  |         |  1054  |    164  |  2  |  5  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   183  |                 R = R + separator;  |    170  |  1224  |    164  |  2  |  5  |        170  |  153  |           2  |  [187,58,91,153,164]  |
   184  |              resetPlaceHolder_1();  |         |  1224  |    164  |  2  |  5  |        170  |  153  |           2  |  [187,58,91,153,164]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {183} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    187  |                            |
    69  |         R = R + chunk;  |     91  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |    164  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    170  |                         0  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    187  |                            |
   143  |         R = R + chunk;  |     91  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |    164  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    170  |                         1  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {69,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47,92,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {69,121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {69,92,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {92,121,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {121,143,166}; {47,69,92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    187  |                         0  |
    69  |         R = R + chunk;  |     91  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |    164  |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    170  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    187  |                         1  |
   143  |         R = R + chunk;  |     91  |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |    164  |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    170  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {183}
GroupID(1): {121,143,166}; {47,69,92}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |    187  |                            |                         0  |
    69  |         R = R + chunk;  |     91  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |    164  |                            |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |    170  |                         0  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    187  |                            |                         1  |
   143  |         R = R + chunk;  |     91  |                            |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |    164  |                            |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |    170  |                         1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(110)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
use R separator -> R0 = R0 + separator;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m12.061s
user	0m23.350s
sys	0m4.962s

2023-01-25 02:12:12,046 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:13:47,581 INFO     Done. Execution time: 95.53468871116638 seconds
2023-01-25 02:13:47,581 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 templateds)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `93.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0212-transparentAmortize-60s-mostPrecise/stac-raw-0125-0212-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m35.526s
user	4m6.648s
sys	0m15.891s

2023-01-25 02:13:47,582 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 02:13:47,582 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:14:54,349 INFO     Done. Execution time: 66.76760339736938 seconds
2023-01-25 02:14:54,350 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz8526627482526489197/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8526627482526489197/bin -o /tmp/qfuzz8526627482526489197/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8526627482526489197/bin
Found file /tmp/qfuzz8526627482526489197/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz8526627482526489197/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8526627482526489197/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8526627482526489197/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8526627482526489197/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8526627482526489197/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 63, exec speed = 153645 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m63 to 63 bits (average: 63.00 bits)
[1;90m        Exec timing : [0m153k to 153k us (average: 153k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000000,orig:example.txt; 6; 12.00; [679.00,1359.00,1868.00,3413.00,3753.00,3765.00]
2; /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 6; 6.00; [93.00,99.00,105.00,1359.00,1868.00,3413.00]
4; /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 6; 12.00; [108.00,1019.00,1079.00,1393.00,3753.00,3765.00]
6; /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 6; 9.00; [679.00,1353.00,1419.00,1428.00,3753.00,3765.00]
9; /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 6; 12.00; [93.00,105.00,133.00,239.00,779.00,1388.00]
27; /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 6; 5.00; [1279.00,2753.00,2765.00,3748.00,3753.00,3759.00]
35; /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 6; 12.00; [679.00,2388.00,2959.00,3413.00,3753.00,3765.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 149, 33, 153, 147, 50, 170, 119, 16, 187, 82, 51, 153, 67, 50, 170, 93, 16, 11, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 59, 63, 124, 187, 187, 187, 187, 187, 187, 187, 13, 187, 46, 187, 187, 58, 187, 187, 187, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 81, 38, 138, 11, 21, 6, 69, 31, 4, 52, 161, 57, 185, 139, 40, 135, 135, 135, 135, 135, 135, 135, 135, 135, 71, 73, 73, 73, 73, 73, 48, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 50, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 73, 113, 185, 147, 22, 11, 124, 159)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 70, 129, 67, 71, 170, 93, 16, 187, 110, 110, 33, 153, 67, 50, 89, 93, 16, 187, 127, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 50, 113, 53, 127, 69, 5, 16, 187, 83, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 57, 62, 89, 177, 93, 16, 137, 70, 58, 97)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 67, 50, 170, 93, 16, 187, 110, 197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 116, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8526627482526489197/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,149,33,153,147], 2, 170, 119
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,59,63,124,187], 2, 187, 187
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,81,38,138,11], 2, 6, 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,70], 2, 67, 71
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,50,113,53], 2, 69, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,67], 2, 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67], 2, 170, 93
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.758s
user	0m33.382s
sys	0m2.144s

2023-01-25 02:14:54,350 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-25 02:14:54,350 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-25 02:14:54,353 INFO     Done. Execution time: 0.003120899200439453 seconds
2023-01-25 02:14:54,353 INFO     Output: 
2023-01-25 02:14:54,353 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-25 02:15:08,656 INFO     Done. Execution time: 14.30202579498291 seconds
2023-01-25 02:15:08,656 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,149,33,153,147], 2, 170, 119)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137,59,63,124,187], 2, 187, 187)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,81,38,138,11], 2, 6, 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,70], 2, 67, 71)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,50,113,53], 2, 69, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,67], 2, 170, 93)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67], 2, 170, 93)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                                
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |          text          |  ts  |
------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |  119  |  170  |       |  [187,149,33,153,147]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |  119  |  170  |       |  [187,149,33,153,147]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |  119  |  170  |       |  [187,149,33,153,147]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |  119  |  170  |       |  [187,149,33,153,147]  |   2  |
    38  |                         int i = 0;  |         |     0  |         |  0  |     |  119  |  170  |       |  [187,149,33,153,147]  |   2  |
    40  |                         int j = 0;  |         |     0  |         |  0  |  0  |  119  |  170  |       |  [187,149,33,153,147]  |   2  |
    42  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |  119  |  170  |       |  [187,149,33,153,147]  |   2  |
    44  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |  119  |  170  |    0  |  [187,149,33,153,147]  |   2  |
    49  |                             j = 0;  |         |     0  |      0  |  0  |  0  |  119  |  170  |    0  |  [187,149,33,153,147]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |     0  |    187  |  0  |  0  |  119  |  170  |    0  |  [187,149,33,153,147]  |   2  |
    55  |                     R = R + chunk;  |    187  |   187  |    187  |  0  |  0  |  119  |  170  |    0  |  [187,149,33,153,147]  |   2  |
    59  |                         j = j + 1;  |         |   187  |    187  |  0  |  1  |  119  |  170  |    0  |  [187,149,33,153,147]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |   187  |    187  |  0  |  1  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
    71  |                         j = j + 1;  |         |   187  |    187  |  0  |  2  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |   187  |     33  |  0  |  2  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
    77  |                     R = R + chunk;  |     33  |   220  |     33  |  0  |  2  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
    80  |                       R = R + rep;  |    119  |   339  |     33  |  0  |  2  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
    84  |                         j = j + 1;  |         |   339  |     33  |  0  |  3  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
    85  |              resetPlaceHolder_2();  |         |   339  |     33  |  0  |  3  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |   339  |     33  |  0  |  3  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
    97  |                         j = j + 1;  |         |   339  |     33  |  0  |  4  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |   339  |    147  |  0  |  4  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   103  |                     R = R + chunk;  |    147  |   486  |    147  |  0  |  4  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   106  |                       R = R + rep;  |    119  |   605  |    147  |  0  |  4  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   110  |                         j = j + 1;  |         |   605  |    147  |  0  |  5  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   111  |              resetPlaceHolder_2();  |         |   605  |    147  |  0  |  5  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   120  |                         i = i + 1;  |         |   605  |    147  |  1  |  5  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   123  |                       R = R + sep;  |    170  |   775  |    147  |  1  |  5  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   124  |              resetPlaceHolder_1();  |         |   775  |    147  |  1  |  5  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   129  |                             j = 0;  |         |   775  |    147  |  1  |  0  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |   775  |    187  |  1  |  0  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   135  |                     R = R + chunk;  |    187  |   962  |    187  |  1  |  0  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   139  |                         j = j + 1;  |         |   962  |    187  |  1  |  1  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |   962  |    187  |  1  |  1  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
   151  |                         j = j + 1;  |         |   962  |    187  |  1  |  2  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |   962  |     33  |  1  |  2  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
   157  |                     R = R + chunk;  |     33  |   995  |     33  |  1  |  2  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
   160  |                       R = R + rep;  |    119  |  1114  |     33  |  1  |  2  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
   164  |                         j = j + 1;  |         |  1114  |     33  |  1  |  3  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
   165  |              resetPlaceHolder_2();  |         |  1114  |     33  |  1  |  3  |  119  |  170  |  149  |  [187,149,33,153,147]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |  1114  |     33  |  1  |  3  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   177  |                         j = j + 1;  |         |  1114  |     33  |  1  |  4  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |  1114  |    147  |  1  |  4  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   183  |                     R = R + chunk;  |    147  |  1261  |    147  |  1  |  4  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   186  |                       R = R + rep;  |    119  |  1380  |    147  |  1  |  4  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   190  |                         j = j + 1;  |         |  1380  |    147  |  1  |  5  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   191  |              resetPlaceHolder_2();  |         |  1380  |    147  |  1  |  5  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   200  |                         i = i + 1;  |         |  1380  |    147  |  2  |  5  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   203  |                       R = R + sep;  |    170  |  1550  |    147  |  2  |  5  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  1550  |    147  |  2  |  5  |  119  |  170  |  153  |  [187,149,33,153,147]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {160}; {186}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {160}; {186}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |
    77  |         R = R + chunk;  |     33  |                            |
    80  |           R = R + rep;  |    119  |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    147  |                            |
   106  |           R = R + rep;  |    119  |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    170  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    187  |                            |
   157  |         R = R + chunk;  |     33  |                            |
   160  |           R = R + rep;  |    119  |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    147  |                            |
   186  |           R = R + rep;  |    119  |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    170  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {123}; {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {123}; {203} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |
    77  |         R = R + chunk;  |     33  |                            |
    80  |           R = R + rep;  |    119  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    147  |                            |
   106  |           R = R + rep;  |    119  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    170  |                         0  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    187  |                            |
   157  |         R = R + chunk;  |     33  |                            |
   160  |           R = R + rep;  |    119  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    147  |                            |
   186  |           R = R + rep;  |    119  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    170  |                         1  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,135}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {55,77,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {77,103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {77,135,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {135,157,183}; {55,77,103} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                         0  |
    77  |         R = R + chunk;  |     33  |                         0  |
    80  |           R = R + rep;  |    119  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    147  |                         0  |
   106  |           R = R + rep;  |    119  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    170  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    187  |                         1  |
   157  |         R = R + chunk;  |     33  |                         1  |
   160  |           R = R + rep;  |    119  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    147  |                         1  |
   186  |           R = R + rep;  |    119  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    170  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {106}; {160}; {186}; {80}
GroupID(1): {123}; {203}
GroupID(2): {135,157,183}; {55,77,103}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    187  |                            |                            |                         0  |
    77  |         R = R + chunk;  |     33  |                            |                            |                         0  |
    80  |           R = R + rep;  |    119  |                         0  |                            |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |    147  |                            |                            |                         0  |
   106  |           R = R + rep;  |    119  |                         1  |                            |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    170  |                            |                         0  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |    187  |                            |                            |                         1  |
   157  |         R = R + chunk;  |     33  |                            |                            |                         1  |
   160  |           R = R + rep;  |    119  |                         2  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |    147  |                            |                            |                         1  |
   186  |           R = R + rep;  |    119  |                         3  |                            |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    170  |                            |                         1  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(85, 111, 165)
GroupID(1): Set(124)
GroupID(2): Set(124)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R2 = R2 + chunk;
use R chunk -> R2 = R2 + chunk;
use R rep -> R0 = R0 + rep;
use R sep -> R1 = R1 + sep;
resetPlaceHolder_2(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_1(); -> {
  if (S2 < R2)
  {
    S2 = R2;
  }
  else
  {
    ;
  }
  R2 = 0;
  C2 = C2 + 1;
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m14.294s
user	0m27.935s
sys	0m6.772s

2023-01-25 02:15:08,656 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:20:44,425 INFO     Done. Execution time: 335.76873087882996 seconds
2023-01-25 02:20:44,426 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4606654779925237135.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 sep)))` for variable `D1`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1426918832311702021.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 rep)))` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7645253872054727436.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 rep)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 sep)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p (+ 0 (* 1 1 text)))` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 (+ 0 (* 1 1 ts)))` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
FATAL brbo.common.Z3Solver - Z3 timed out after `10 seconds`!
FATAL brbo.common.Z3Solver - Error when running Z3. Exit code: `143`
ERROR brbo.common.Z3Solver - Z3 output:

INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `333.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0215-transparentAmortize-60s-mostPrecise/stac-raw-0125-0215-transparentAmortize-60s-mostPrecise-000-099.csv`

real	5m35.760s
user	18m9.762s
sys	0m43.711s

2023-01-25 02:20:44,426 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 02:20:44,426 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:21:51,206 INFO     Done. Execution time: 66.77930283546448 seconds
2023-01-25 02:21:51,206 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz7796462863096972352/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7796462863096972352/bin -o /tmp/qfuzz7796462863096972352/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7796462863096972352/bin
Found file /tmp/qfuzz7796462863096972352/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz7796462863096972352/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7796462863096972352/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7796462863096972352/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7796462863096972352/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7796462863096972352/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 41, exec speed = 152455 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m152k to 152k us (average: 152k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 680.00; [675.00,1355.00,2215.00,3075.00,3762.00]
2; /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 5; 7.00; [95.00,102.00,1135.00,3075.00,3695.00]
4; /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 5; 360.00; [675.00,2215.00,2575.00,3075.00,3762.00]
11; /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 5; 40.00; [415.00,455.00,1035.00,1075.00,3622.00]
16; /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 5; 40.00; [1455.00,1635.00,2755.00,2795.00,3762.00]
21; /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 5; 247.00; [455.00,755.00,1815.00,3215.00,3462.00]
24; /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta; 5; 687.00; [675.00,1435.00,2215.00,3075.00,3762.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 71, 93, 16, 4, 130, 187, 5, 133, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(172, 37, 90, 22, 160, 76, 171, 76, 98)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 81, 72, 139, 137, 107, 4, 59, 11, 145, 186)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(180, 51, 22, 20, 53, 36, 179, 64, 59)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 128, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 92, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 184, 153, 56, 190, 153, 65, 19, 5, 99, 33, 56, 50, 177, 4, 62, 85, 67, 50, 63, 75, 13, 162, 110, 172, 93, 10, 62, 34, 34, 34, 34, 34, 34, 34, 160, 113, 87, 131, 93, 5, 5, 34, 34, 34, 12, 5, 34, 163, 67, 78, 172, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7796462863096972352/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,71]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [172,37,90,22,160]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,81,72,139,137]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [180,51,22,20,53]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,128]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,184,153,56]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.770s
user	0m33.535s
sys	0m2.373s

2023-01-25 02:21:51,206 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-25 02:21:51,206 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-25 02:21:51,210 INFO     Done. Execution time: 0.003463268280029297 seconds
2023-01-25 02:21:51,210 INFO     Output: 
2023-01-25 02:21:51,211 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-25 02:22:01,287 INFO     Done. Execution time: 10.076293468475342 seconds
2023-01-25 02:22:01,287 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,71])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([172,37,90,22,160])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,81,72,139,137])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([180,51,22,20,53])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,128])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,184,153,56])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 88):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text          |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [187,110,33,153,71]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [187,110,33,153,71]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [187,110,33,153,71]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [187,110,33,153,71]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [187,110,33,153,71]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [187,110,33,153,71]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [187,110,33,153,71]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |    0  |  [187,110,33,153,71]  |
    24  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |    0  |  [187,110,33,153,71]  |
    28  |                         i = i + 1;  |         |  187  |    187  |  1  |    0  |  [187,110,33,153,71]  |
    34  |        chunk = arrayRead(text, i);  |         |  187  |    110  |  1  |    0  |  [187,110,33,153,71]  |
    37  |                     R = R + chunk;  |    110  |  297  |    110  |  1  |    0  |  [187,110,33,153,71]  |
    41  |                         i = i + 1;  |         |  297  |    110  |  2  |    0  |  [187,110,33,153,71]  |
    42  |              resetPlaceHolder_1();  |         |  297  |    110  |  2  |    0  |  [187,110,33,153,71]  |
    48  |        chunk = arrayRead(text, i);  |         |  297  |     33  |  2  |    0  |  [187,110,33,153,71]  |
    51  |                     R = R + chunk;  |     33  |  330  |     33  |  2  |    0  |  [187,110,33,153,71]  |
    55  |                         i = i + 1;  |         |  330  |     33  |  3  |    0  |  [187,110,33,153,71]  |
    56  |              resetPlaceHolder_1();  |         |  330  |     33  |  3  |    0  |  [187,110,33,153,71]  |
    62  |        chunk = arrayRead(text, i);  |         |  330  |    153  |  3  |    0  |  [187,110,33,153,71]  |
    65  |                     R = R + chunk;  |    153  |  483  |    153  |  3  |    0  |  [187,110,33,153,71]  |
    69  |                         i = i + 1;  |         |  483  |    153  |  4  |    0  |  [187,110,33,153,71]  |
    70  |              resetPlaceHolder_1();  |         |  483  |    153  |  4  |    0  |  [187,110,33,153,71]  |
    76  |        chunk = arrayRead(text, i);  |         |  483  |     71  |  4  |    0  |  [187,110,33,153,71]  |
    79  |                     R = R + chunk;  |     71  |  554  |     71  |  4  |    0  |  [187,110,33,153,71]  |
    83  |                         i = i + 1;  |         |  554  |     71  |  5  |    0  |  [187,110,33,153,71]  |
    84  |              resetPlaceHolder_1();  |         |  554  |     71  |  5  |    0  |  [187,110,33,153,71]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,37,51,65,79}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    187  |                         0  |
    37  |         R = R + chunk;  |    110  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |     33  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |    153  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     71  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m10.067s
user	0m17.170s
sys	0m3.631s

2023-01-25 02:22:01,288 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:22:12,631 INFO     Done. Execution time: 11.342795848846436 seconds
2023-01-25 02:22:12,631 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `8.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0222-transparentAmortize-60s-mostPrecise/stac-raw-0125-0222-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.333s
user	0m25.369s
sys	0m3.200s

2023-01-25 02:22:12,631 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 02:22:12,631 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:23:19,510 INFO     Done. Execution time: 66.8785834312439 seconds
2023-01-25 02:23:19,511 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz1961024993246924340/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1961024993246924340/bin -o /tmp/qfuzz1961024993246924340/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1961024993246924340/bin
Found file /tmp/qfuzz1961024993246924340/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz1961024993246924340/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1961024993246924340/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1961024993246924340/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1961024993246924340/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1961024993246924340/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 40, exec speed = 133041 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m133k to 133k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 5.00; [29.00,34.00,3751.00]
2; /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,1691.00]
4; /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 3; 5.00; [29.00,34.00,1771.00]
5; /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,3911.00]
8; /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 3; 5.00; [29.00,34.00,3411.00]
23; /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 3; 5.00; [29.00,34.00,3811.00]
35; /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,3391.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(169, 186, 59, 4, 160, 78, 117, 139, 4, 5, 58, 12, 57, 79, 101, 169, 188, 63, 166, 5, 21, 111, 12, 5, 123, 126, 169, 188, 122, 70, 129, 6, 5, 5, 186, 48, 29, 24, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 181, 33, 153, 177, 113, 113, 93, 84, 110, 11, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(170, 172, 16, 26, 114, 18, 8, 164, 93, 16, 189, 33, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195, 110, 33, 152, 113, 126, 152, 5, 27, 158, 150, 51, 150, 37, 69, 5, 23, 37, 32, 16, 125, 152, 80, 68, 148, 98, 152, 128, 52, 37, 69, 5, 122, 164, 32, 54, 110, 53, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(88, 110, 33, 153, 67, 38, 152, 152, 147, 110, 33, 153, 100, 50, 76, 93, 4, 93, 16, 190, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(84, 93, 168, 30, 7, 19, 4, 16, 199, 160, 61, 86, 5, 43, 7, 31, 160, 102, 16, 141, 110, 53, 161, 58, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1961024993246924340/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 169, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 190, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 170, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 195, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 88, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 84, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.867s
user	0m31.927s
sys	0m2.299s

2023-01-25 02:23:19,511 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-25 02:23:19,511 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-25 02:23:19,516 INFO     Done. Execution time: 0.005032777786254883 seconds
2023-01-25 02:23:19,517 INFO     Output: 
2023-01-25 02:23:19,517 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-25 02:23:26,914 INFO     Done. Execution time: 7.396845817565918 seconds
2023-01-25 02:23:26,914 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(169, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(190, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(170, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(195, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(88, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(84, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  builder  |  i  |  sep  |  types  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |           |     |  169  |      2  |
    19  |                   int builder = 0;  |         |    0  |        0  |     |  169  |      2  |
    20  |                      // int R = 0;  |         |    0  |        0  |     |  169  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |    0  |        0  |     |  169  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |    0  |        0  |     |  169  |      2  |
    26  |             builder = builder + 1;  |         |    0  |        1  |     |  169  |      2  |
    29  |                         R = R + 1;  |      1  |    1  |        1  |     |  169  |      2  |
    31  |                         int i = 1;  |         |    1  |        1  |  1  |  169  |      2  |
    38  |           builder = builder + sep;  |         |    1  |      170  |  1  |  169  |      2  |
    41  |                       R = R + sep;  |    169  |  170  |      170  |  1  |  169  |      2  |
    45  |             builder = builder + 1;  |         |  170  |      171  |  1  |  169  |      2  |
    48  |                         R = R + 1;  |      1  |  171  |      171  |  1  |  169  |      2  |
    52  |                         i = i + 1;  |         |  171  |      171  |  2  |  169  |      2  |
    53  |              resetPlaceHolder_1();  |         |  171  |      171  |  2  |  169  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |    169  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    169  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    169  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m7.386s
user	0m13.790s
sys	0m2.187s

2023-01-25 02:23:26,914 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:23:46,313 INFO     Done. Execution time: 19.399051904678345 seconds
2023-01-25 02:23:46,314 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `16.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0223-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0223-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m19.390s
user	0m51.203s
sys	0m7.196s

2023-01-25 02:23:46,314 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 02:23:46,314 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:24:53,331 INFO     Done. Execution time: 67.01673197746277 seconds
2023-01-25 02:24:53,331 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz1746627707125167128/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1746627707125167128/bin -o /tmp/qfuzz1746627707125167128/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1746627707125167128/bin
Found file /tmp/qfuzz1746627707125167128/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz1746627707125167128/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1746627707125167128/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1746627707125167128/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1746627707125167128/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1746627707125167128/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 34, exec speed = 128420 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1746627707125167128/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz1746627707125167128/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1746627707125167128/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz1746627707125167128/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1746627707125167128/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 62, 5, 188, 67, 50, 170, 93, 156, 180, 75, 33, 153, 36, 50, 198, 93, 110, 29, 110, 160, 4, 7, 93, 156)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1746627707125167128/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.006s
user	0m35.520s
sys	0m2.670s

2023-01-25 02:24:53,332 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-25 02:24:53,332 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-25 02:24:53,336 INFO     Done. Execution time: 0.004008293151855469 seconds
2023-01-25 02:24:53,336 INFO     Output: 
2023-01-25 02:24:53,336 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-25 02:25:00,496 INFO     Done. Execution time: 7.159661054611206 seconds
2023-01-25 02:25:00,496 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m7.149s
user	0m13.797s
sys	0m2.241s

2023-01-25 02:25:00,497 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:25:13,534 INFO     Done. Execution time: 13.037166118621826 seconds
2023-01-25 02:25:13,534 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `9.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0225-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0225-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.027s
user	0m28.095s
sys	0m4.010s

2023-01-25 02:25:13,535 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 02:25:13,535 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:26:21,446 INFO     Done. Execution time: 67.91096687316895 seconds
2023-01-25 02:26:21,446 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz9054144444926493010/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9054144444926493010/bin -o /tmp/qfuzz9054144444926493010/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9054144444926493010/bin
Found file /tmp/qfuzz9054144444926493010/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz9054144444926493010/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9054144444926493010/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9054144444926493010/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9054144444926493010/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz9054144444926493010/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 42, exec speed = 183453 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m183k to 183k us (average: 183k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
4; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
5; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
7; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
8; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
10; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
11; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
13; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
14; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
17; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
18; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
20; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
22; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
24; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
25; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
27; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
28; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
29; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
31; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
33; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
35; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
36; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,50.00,58.00,66.00]
38; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
40; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
42; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
44; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
46; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
48; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
52; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
55; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
58; /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:16
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:16
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:16
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:8
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:16
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:64
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:128
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:8
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:16
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:16
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:64
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:32
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:2
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(172, 113, 33, 153, 7, 50, 175, 22, 68, 187, 110, 101, 101, 101, 101, 101, 101, 101, 78, 101, 21, 102, 4, 21, 72, 101, 65, 93, 16, 187, 110, 152, 153, 67, 50, 131, 93, 16, 187, 110, 33, 153, 106, 50, 134, 33, 153, 67, 50, 162, 93, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 116, 29, 110, 33, 153, 67, 50, 172, 16, 187, 110, 93, 154, 154, 154, 33, 150, 93, 110, 33, 153, 67, 8, 170, 93, 16, 187, 110, 33, 153, 50, 50, 172, 16, 187, 110, 33, 33, 77, 154, 154, 81, 93, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 115, 38, 117, 117, 125, 103)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(34, 53, 85, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 33, 147, 110, 33, 153, 70, 33, 115, 67, 50, 71, 16, 16, 9, 67, 50, 166, 55, 67, 50, 71, 16, 80, 9, 149, 33, 168)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(171, 140, 115, 153, 67, 132, 170, 38, 23, 187, 110, 18, 153, 67, 50, 170, 4, 104, 187, 110, 33, 194, 67, 50, 170, 73, 39, 16, 145, 114)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 115, 153, 67, 50, 170, 93, 16, 187, 110, 4, 131, 67, 50, 170, 38, 61, 187, 110, 33, 153, 187, 109, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 122, 33, 153, 67, 19, 67, 154, 37, 4, 16, 187, 110, 33, 155, 11, 54, 145, 170, 93, 16, 152, 152, 152, 152, 152, 148, 151, 92, 16, 187, 110, 66, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 18, 4, 57, 93, 16, 187, 110, 33, 153, 67, 18, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 8, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(72, 135, 98, 70, 157, 15, 76, 108, 132, 149, 33, 175, 12, 19, 20, 4, 163, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 110, 33, 153, 67, 50, 170, 186, 186, 186, 186, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 67, 62, 14, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 172, 66, 51, 200, 56, 35, 35, 167, 187, 136, 35, 137, 153, 174, 137, 153, 67, 137, 154, 67, 191, 170, 83, 16, 156, 110, 33, 153, 170, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 127, 33, 4, 167, 153, 77, 142, 170, 93, 16, 187, 76, 33, 148, 16, 187, 73, 33, 153, 67, 50, 170, 93, 113, 161, 37, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 133, 93, 16, 187, 78, 107, 107, 107)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 37, 140, 73, 152, 152, 152, 152, 148, 152, 106, 152, 152, 152, 187, 110, 33, 153, 198, 132, 109, 93, 49, 187, 110, 30, 170, 93, 155, 187, 110, 64, 152, 152, 152, 11, 50, 170, 93, 16, 187, 93, 16, 187, 55, 19, 67, 50, 170, 115, 16, 187, 115, 33, 153, 67, 131, 51, 93, 58)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(155, 132, 142, 177, 6, 98, 152, 97, 70, 20, 4, 20, 161, 161, 57, 161, 161, 161, 104, 125, 177, 54, 146, 161, 161, 161, 145, 144, 59, 180, 17)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(68, 110, 162, 188, 188, 188, 188, 188, 191, 4, 188, 107, 188, 188, 188, 188, 188, 188, 173, 6, 69, 34, 5, 171, 169, 196, 29, 188, 173, 64, 188, 5, 169, 169, 169, 110, 168)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195, 63, 104, 95, 16, 4, 110, 33, 147, 109, 111, 50, 53, 126, 155, 93, 33, 74, 67, 10, 80, 93, 55, 188, 4, 144, 39, 39, 86)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 67, 50, 67, 50, 170, 93, 16, 187, 110, 67, 50, 67, 50, 170, 93, 16, 187, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(192, 8, 50, 170, 93, 93, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 114, 67, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(108, 103, 103, 5, 103, 103, 103, 103, 103, 103, 103, 103, 103, 103, 16, 190, 93, 16, 187, 110, 33, 153, 67, 50, 116, 93, 16, 187, 110, 33, 153, 67, 50, 170, 38, 76, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(185, 123, 33, 153, 67, 83, 170, 93, 17, 66, 9, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(57)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(169, 110, 27, 181, 103, 170, 200, 72, 5, 91, 187, 157, 190, 11, 190, 190, 190, 103, 189, 181, 160, 101, 132, 94, 190, 191, 167, 184)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 114, 102, 161, 4, 200, 76, 95, 63, 20, 103, 7, 4, 43, 16, 102, 161, 4, 160, 8, 102, 161)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(29, 110, 33, 155, 67, 50, 72, 155, 52, 50, 170, 93, 191, 67, 30, 170, 93, 161, 77, 154, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137, 115, 33, 153, 67, 46, 170, 93, 189, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 145, 67, 50, 67, 50, 170, 93, 75, 187, 110, 33, 173, 67, 50, 89, 93, 16, 191, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 120, 16, 186, 43, 43, 162, 110, 169, 4, 33, 170, 85, 43, 160, 58, 43, 24, 43, 43, 173, 43, 157, 135, 70, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(11, 4, 35, 198, 176, 4, 53, 73, 131, 38, 183, 192, 4, 4, 166, 176, 4, 53, 39, 106, 33, 156)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9054144444926493010/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [172,113,33,153,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,116,29,110,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,115,38,117]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [34,53,85,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,33]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [171,140,115,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,115,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,122,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,18]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [72,135,98,70,157]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,172,66]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,127,33,4,167]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,133,93,16,187]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,37,140,73]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [155,132,142,177,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [68,110,162,188,188]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [195,63,104,95,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,67,50,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [192,8,50,170,93]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [108,103,103,5,103]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [185,123,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [57]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [169,110,27,181,103]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,114,102,161,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [29,110,33,155,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137,115,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [190,120,16,186,43]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [11,4,35,198,176]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.899s
user	0m40.041s
sys	0m5.024s

2023-01-25 02:26:21,447 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-25 02:26:21,447 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-25 02:26:21,455 INFO     Done. Execution time: 0.00857686996459961 seconds
2023-01-25 02:26:21,456 INFO     Output: 
2023-01-25 02:26:21,456 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-25 02:28:09,661 INFO     Done. Execution time: 108.20448088645935 seconds
2023-01-25 02:28:09,661 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([172,113,33,153,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 32 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,116,29,110,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,115,38,117])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([34,53,85,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,33])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([171,140,115,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,115,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,122,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,18])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 32 (25.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([72,135,98,70,157])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,172,66])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,127,33,4,167])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,133,93,16,187])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,37,140,73])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([155,132,142,177,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 32 (50.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([68,110,162,188,188])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([195,63,104,95,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,67,50,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([192,8,50,170,93])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([108,103,103,5,103])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([185,123,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([57])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([169,110,27,181,103])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,114,102,161,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([29,110,33,155,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137,115,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([190,120,16,186,43])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([11,4,35,198,176])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 32)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 32 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 5373):
                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |   j   |        sorted        |
----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [172,113,33,153,7]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [172,113,33,153,7]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [172,113,33,153,7]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [172,113,33,153,7]  |
    14  |                     int entry = 0;  |         |    0  |      0  |     |       |  [172,113,33,153,7]  |
    16  |                         int i = 0;  |         |    0  |      0  |  0  |       |  [172,113,33,153,7]  |
    22  |      entry = arrayRead(sorted, i);  |         |    0  |    172  |  0  |       |  [172,113,33,153,7]  |
    24  |                         int j = 0;  |         |    0  |    172  |  0  |    0  |  [172,113,33,153,7]  |
    30  |                         R = R + 2;  |      2  |    2  |    172  |  0  |    0  |  [172,113,33,153,7]  |
    34  |                         j = j + 1;  |         |    2  |    172  |  0  |    1  |  [172,113,33,153,7]  |
    35  |              resetPlaceHolder_2();  |         |    2  |    172  |  0  |    1  |  [172,113,33,153,7]  |
    41  |                         R = R + 2;  |      2  |    4  |    172  |  0  |    1  |  [172,113,33,153,7]  |
    45  |                         j = j + 1;  |         |    4  |    172  |  0  |    2  |  [172,113,33,153,7]  |
    46  |              resetPlaceHolder_2();  |         |    4  |    172  |  0  |    2  |  [172,113,33,153,7]  |
    52  |                         R = R + 2;  |      2  |    6  |    172  |  0  |    2  |  [172,113,33,153,7]  |
    56  |                         j = j + 1;  |         |    6  |    172  |  0  |    3  |  [172,113,33,153,7]  |
    57  |              resetPlaceHolder_2();  |         |    6  |    172  |  0  |    3  |  [172,113,33,153,7]  |
    63  |                         R = R + 2;  |      2  |    8  |    172  |  0  |    3  |  [172,113,33,153,7]  |
    67  |                         j = j + 1;  |         |    8  |    172  |  0  |    4  |  [172,113,33,153,7]  |
    68  |              resetPlaceHolder_2();  |         |    8  |    172  |  0  |    4  |  [172,113,33,153,7]  |
    74  |                         R = R + 2;  |      2  |   10  |    172  |  0  |    4  |  [172,113,33,153,7]  |
    78  |                         j = j + 1;  |         |   10  |    172  |  0  |    5  |  [172,113,33,153,7]  |
    79  |              resetPlaceHolder_2();  |         |   10  |    172  |  0  |    5  |  [172,113,33,153,7]  |
    85  |                         R = R + 2;  |      2  |   12  |    172  |  0  |    5  |  [172,113,33,153,7]  |
    89  |                         j = j + 1;  |         |   12  |    172  |  0  |    6  |  [172,113,33,153,7]  |
    90  |              resetPlaceHolder_2();  |         |   12  |    172  |  0  |    6  |  [172,113,33,153,7]  |
    96  |                         R = R + 2;  |      2  |   14  |    172  |  0  |    6  |  [172,113,33,153,7]  |
   100  |                         j = j + 1;  |         |   14  |    172  |  0  |    7  |  [172,113,33,153,7]  |
   101  |              resetPlaceHolder_2();  |         |   14  |    172  |  0  |    7  |  [172,113,33,153,7]  |
   107  |                         R = R + 2;  |      2  |   16  |    172  |  0  |    7  |  [172,113,33,153,7]  |
   111  |                         j = j + 1;  |         |   16  |    172  |  0  |    8  |  [172,113,33,153,7]  |
   112  |              resetPlaceHolder_2();  |         |   16  |    172  |  0  |    8  |  [172,113,33,153,7]  |
   118  |                         R = R + 2;  |      2  |   18  |    172  |  0  |    8  |  [172,113,33,153,7]  |
   122  |                         j = j + 1;  |         |   18  |    172  |  0  |    9  |  [172,113,33,153,7]  |
   123  |              resetPlaceHolder_2();  |         |   18  |    172  |  0  |    9  |  [172,113,33,153,7]  |
   129  |                         R = R + 2;  |      2  |   20  |    172  |  0  |    9  |  [172,113,33,153,7]  |
   133  |                         j = j + 1;  |         |   20  |    172  |  0  |   10  |  [172,113,33,153,7]  |
   134  |              resetPlaceHolder_2();  |         |   20  |    172  |  0  |   10  |  [172,113,33,153,7]  |
   140  |                         R = R + 2;  |      2  |   22  |    172  |  0  |   10  |  [172,113,33,153,7]  |
   144  |                         j = j + 1;  |         |   22  |    172  |  0  |   11  |  [172,113,33,153,7]  |
   145  |              resetPlaceHolder_2();  |         |   22  |    172  |  0  |   11  |  [172,113,33,153,7]  |
   151  |                         R = R + 2;  |      2  |   24  |    172  |  0  |   11  |  [172,113,33,153,7]  |
   155  |                         j = j + 1;  |         |   24  |    172  |  0  |   12  |  [172,113,33,153,7]  |
   156  |              resetPlaceHolder_2();  |         |   24  |    172  |  0  |   12  |  [172,113,33,153,7]  |
   162  |                         R = R + 2;  |      2  |   26  |    172  |  0  |   12  |  [172,113,33,153,7]  |
   166  |                         j = j + 1;  |         |   26  |    172  |  0  |   13  |  [172,113,33,153,7]  |
   167  |              resetPlaceHolder_2();  |         |   26  |    172  |  0  |   13  |  [172,113,33,153,7]  |
   173  |                         R = R + 2;  |      2  |   28  |    172  |  0  |   13  |  [172,113,33,153,7]  |
   177  |                         j = j + 1;  |         |   28  |    172  |  0  |   14  |  [172,113,33,153,7]  |
   178  |              resetPlaceHolder_2();  |         |   28  |    172  |  0  |   14  |  [172,113,33,153,7]  |
   184  |                         R = R + 2;  |      2  |   30  |    172  |  0  |   14  |  [172,113,33,153,7]  |
   188  |                         j = j + 1;  |         |   30  |    172  |  0  |   15  |  [172,113,33,153,7]  |
   189  |              resetPlaceHolder_2();  |         |   30  |    172  |  0  |   15  |  [172,113,33,153,7]  |
   195  |                         R = R + 2;  |      2  |   32  |    172  |  0  |   15  |  [172,113,33,153,7]  |
   199  |                         j = j + 1;  |         |   32  |    172  |  0  |   16  |  [172,113,33,153,7]  |
   200  |              resetPlaceHolder_2();  |         |   32  |    172  |  0  |   16  |  [172,113,33,153,7]  |
   206  |                         R = R + 2;  |      2  |   34  |    172  |  0  |   16  |  [172,113,33,153,7]  |
   210  |                         j = j + 1;  |         |   34  |    172  |  0  |   17  |  [172,113,33,153,7]  |
   211  |              resetPlaceHolder_2();  |         |   34  |    172  |  0  |   17  |  [172,113,33,153,7]  |
   217  |                         R = R + 2;  |      2  |   36  |    172  |  0  |   17  |  [172,113,33,153,7]  |
   221  |                         j = j + 1;  |         |   36  |    172  |  0  |   18  |  [172,113,33,153,7]  |
   222  |              resetPlaceHolder_2();  |         |   36  |    172  |  0  |   18  |  [172,113,33,153,7]  |
   228  |                         R = R + 2;  |      2  |   38  |    172  |  0  |   18  |  [172,113,33,153,7]  |
   232  |                         j = j + 1;  |         |   38  |    172  |  0  |   19  |  [172,113,33,153,7]  |
   233  |              resetPlaceHolder_2();  |         |   38  |    172  |  0  |   19  |  [172,113,33,153,7]  |
   239  |                         R = R + 2;  |      2  |   40  |    172  |  0  |   19  |  [172,113,33,153,7]  |
   243  |                         j = j + 1;  |         |   40  |    172  |  0  |   20  |  [172,113,33,153,7]  |
   244  |              resetPlaceHolder_2();  |         |   40  |    172  |  0  |   20  |  [172,113,33,153,7]  |
   250  |                         R = R + 2;  |      2  |   42  |    172  |  0  |   20  |  [172,113,33,153,7]  |
   254  |                         j = j + 1;  |         |   42  |    172  |  0  |   21  |  [172,113,33,153,7]  |
   255  |              resetPlaceHolder_2();  |         |   42  |    172  |  0  |   21  |  [172,113,33,153,7]  |
   261  |                         R = R + 2;  |      2  |   44  |    172  |  0  |   21  |  [172,113,33,153,7]  |
   265  |                         j = j + 1;  |         |   44  |    172  |  0  |   22  |  [172,113,33,153,7]  |
   266  |              resetPlaceHolder_2();  |         |   44  |    172  |  0  |   22  |  [172,113,33,153,7]  |
   272  |                         R = R + 2;  |      2  |   46  |    172  |  0  |   22  |  [172,113,33,153,7]  |
   276  |                         j = j + 1;  |         |   46  |    172  |  0  |   23  |  [172,113,33,153,7]  |
   277  |              resetPlaceHolder_2();  |         |   46  |    172  |  0  |   23  |  [172,113,33,153,7]  |
   283  |                         R = R + 2;  |      2  |   48  |    172  |  0  |   23  |  [172,113,33,153,7]  |
   287  |                         j = j + 1;  |         |   48  |    172  |  0  |   24  |  [172,113,33,153,7]  |
   288  |              resetPlaceHolder_2();  |         |   48  |    172  |  0  |   24  |  [172,113,33,153,7]  |
   294  |                         R = R + 2;  |      2  |   50  |    172  |  0  |   24  |  [172,113,33,153,7]  |
   298  |                         j = j + 1;  |         |   50  |    172  |  0  |   25  |  [172,113,33,153,7]  |
   299  |              resetPlaceHolder_2();  |         |   50  |    172  |  0  |   25  |  [172,113,33,153,7]  |
   305  |                         R = R + 2;  |      2  |   52  |    172  |  0  |   25  |  [172,113,33,153,7]  |
   309  |                         j = j + 1;  |         |   52  |    172  |  0  |   26  |  [172,113,33,153,7]  |
   310  |              resetPlaceHolder_2();  |         |   52  |    172  |  0  |   26  |  [172,113,33,153,7]  |
   316  |                         R = R + 2;  |      2  |   54  |    172  |  0  |   26  |  [172,113,33,153,7]  |
   320  |                         j = j + 1;  |         |   54  |    172  |  0  |   27  |  [172,113,33,153,7]  |
   321  |              resetPlaceHolder_2();  |         |   54  |    172  |  0  |   27  |  [172,113,33,153,7]  |
   327  |                         R = R + 2;  |      2  |   56  |    172  |  0  |   27  |  [172,113,33,153,7]  |
   331  |                         j = j + 1;  |         |   56  |    172  |  0  |   28  |  [172,113,33,153,7]  |
   332  |              resetPlaceHolder_2();  |         |   56  |    172  |  0  |   28  |  [172,113,33,153,7]  |
   338  |                         R = R + 2;  |      2  |   58  |    172  |  0  |   28  |  [172,113,33,153,7]  |
   342  |                         j = j + 1;  |         |   58  |    172  |  0  |   29  |  [172,113,33,153,7]  |
   343  |              resetPlaceHolder_2();  |         |   58  |    172  |  0  |   29  |  [172,113,33,153,7]  |
   349  |                         R = R + 2;  |      2  |   60  |    172  |  0  |   29  |  [172,113,33,153,7]  |
   353  |                         j = j + 1;  |         |   60  |    172  |  0  |   30  |  [172,113,33,153,7]  |
   354  |              resetPlaceHolder_2();  |         |   60  |    172  |  0  |   30  |  [172,113,33,153,7]  |
   360  |                         R = R + 2;  |      2  |   62  |    172  |  0  |   30  |  [172,113,33,153,7]  |
   364  |                         j = j + 1;  |         |   62  |    172  |  0  |   31  |  [172,113,33,153,7]  |
   365  |              resetPlaceHolder_2();  |         |   62  |    172  |  0  |   31  |  [172,113,33,153,7]  |
   371  |                         R = R + 2;  |      2  |   64  |    172  |  0  |   31  |  [172,113,33,153,7]  |
   375  |                         j = j + 1;  |         |   64  |    172  |  0  |   32  |  [172,113,33,153,7]  |
   376  |              resetPlaceHolder_2();  |         |   64  |    172  |  0  |   32  |  [172,113,33,153,7]  |
   382  |                         R = R + 2;  |      2  |   66  |    172  |  0  |   32  |  [172,113,33,153,7]  |
   386  |                         j = j + 1;  |         |   66  |    172  |  0  |   33  |  [172,113,33,153,7]  |
   387  |              resetPlaceHolder_2();  |         |   66  |    172  |  0  |   33  |  [172,113,33,153,7]  |
   393  |                         R = R + 2;  |      2  |   68  |    172  |  0  |   33  |  [172,113,33,153,7]  |
   397  |                         j = j + 1;  |         |   68  |    172  |  0  |   34  |  [172,113,33,153,7]  |
   398  |              resetPlaceHolder_2();  |         |   68  |    172  |  0  |   34  |  [172,113,33,153,7]  |
   404  |                         R = R + 2;  |      2  |   70  |    172  |  0  |   34  |  [172,113,33,153,7]  |
   408  |                         j = j + 1;  |         |   70  |    172  |  0  |   35  |  [172,113,33,153,7]  |
   409  |              resetPlaceHolder_2();  |         |   70  |    172  |  0  |   35  |  [172,113,33,153,7]  |
   415  |                         R = R + 2;  |      2  |   72  |    172  |  0  |   35  |  [172,113,33,153,7]  |
   419  |                         j = j + 1;  |         |   72  |    172  |  0  |   36  |  [172,113,33,153,7]  |
   420  |              resetPlaceHolder_2();  |         |   72  |    172  |  0  |   36  |  [172,113,33,153,7]  |
   426  |                         R = R + 2;  |      2  |   74  |    172  |  0  |   36  |  [172,113,33,153,7]  |
   430  |                         j = j + 1;  |         |   74  |    172  |  0  |   37  |  [172,113,33,153,7]  |
   431  |              resetPlaceHolder_2();  |         |   74  |    172  |  0  |   37  |  [172,113,33,153,7]  |
   437  |                         R = R + 2;  |      2  |   76  |    172  |  0  |   37  |  [172,113,33,153,7]  |
   441  |                         j = j + 1;  |         |   76  |    172  |  0  |   38  |  [172,113,33,153,7]  |
   442  |              resetPlaceHolder_2();  |         |   76  |    172  |  0  |   38  |  [172,113,33,153,7]  |
   448  |                         R = R + 2;  |      2  |   78  |    172  |  0  |   38  |  [172,113,33,153,7]  |
   452  |                         j = j + 1;  |         |   78  |    172  |  0  |   39  |  [172,113,33,153,7]  |
   453  |              resetPlaceHolder_2();  |         |   78  |    172  |  0  |   39  |  [172,113,33,153,7]  |
   459  |                         R = R + 2;  |      2  |   80  |    172  |  0  |   39  |  [172,113,33,153,7]  |
   463  |                         j = j + 1;  |         |   80  |    172  |  0  |   40  |  [172,113,33,153,7]  |
   464  |              resetPlaceHolder_2();  |         |   80  |    172  |  0  |   40  |  [172,113,33,153,7]  |
   470  |                         R = R + 2;  |      2  |   82  |    172  |  0  |   40  |  [172,113,33,153,7]  |
   474  |                         j = j + 1;  |         |   82  |    172  |  0  |   41  |  [172,113,33,153,7]  |
   475  |              resetPlaceHolder_2();  |         |   82  |    172  |  0  |   41  |  [172,113,33,153,7]  |
   481  |                         R = R + 2;  |      2  |   84  |    172  |  0  |   41  |  [172,113,33,153,7]  |
   485  |                         j = j + 1;  |         |   84  |    172  |  0  |   42  |  [172,113,33,153,7]  |
   486  |              resetPlaceHolder_2();  |         |   84  |    172  |  0  |   42  |  [172,113,33,153,7]  |
   492  |                         R = R + 2;  |      2  |   86  |    172  |  0  |   42  |  [172,113,33,153,7]  |
   496  |                         j = j + 1;  |         |   86  |    172  |  0  |   43  |  [172,113,33,153,7]  |
   497  |              resetPlaceHolder_2();  |         |   86  |    172  |  0  |   43  |  [172,113,33,153,7]  |
   503  |                         R = R + 2;  |      2  |   88  |    172  |  0  |   43  |  [172,113,33,153,7]  |
   507  |                         j = j + 1;  |         |   88  |    172  |  0  |   44  |  [172,113,33,153,7]  |
   508  |              resetPlaceHolder_2();  |         |   88  |    172  |  0  |   44  |  [172,113,33,153,7]  |
   514  |                         R = R + 2;  |      2  |   90  |    172  |  0  |   44  |  [172,113,33,153,7]  |
   518  |                         j = j + 1;  |         |   90  |    172  |  0  |   45  |  [172,113,33,153,7]  |
   519  |              resetPlaceHolder_2();  |         |   90  |    172  |  0  |   45  |  [172,113,33,153,7]  |
   525  |                         R = R + 2;  |      2  |   92  |    172  |  0  |   45  |  [172,113,33,153,7]  |
   529  |                         j = j + 1;  |         |   92  |    172  |  0  |   46  |  [172,113,33,153,7]  |
   530  |              resetPlaceHolder_2();  |         |   92  |    172  |  0  |   46  |  [172,113,33,153,7]  |
   536  |                         R = R + 2;  |      2  |   94  |    172  |  0  |   46  |  [172,113,33,153,7]  |
   540  |                         j = j + 1;  |         |   94  |    172  |  0  |   47  |  [172,113,33,153,7]  |
   541  |              resetPlaceHolder_2();  |         |   94  |    172  |  0  |   47  |  [172,113,33,153,7]  |
   547  |                         R = R + 2;  |      2  |   96  |    172  |  0  |   47  |  [172,113,33,153,7]  |
   551  |                         j = j + 1;  |         |   96  |    172  |  0  |   48  |  [172,113,33,153,7]  |
   552  |              resetPlaceHolder_2();  |         |   96  |    172  |  0  |   48  |  [172,113,33,153,7]  |
   558  |                         R = R + 2;  |      2  |   98  |    172  |  0  |   48  |  [172,113,33,153,7]  |
   562  |                         j = j + 1;  |         |   98  |    172  |  0  |   49  |  [172,113,33,153,7]  |
   563  |              resetPlaceHolder_2();  |         |   98  |    172  |  0  |   49  |  [172,113,33,153,7]  |
   569  |                         R = R + 2;  |      2  |  100  |    172  |  0  |   49  |  [172,113,33,153,7]  |
   573  |                         j = j + 1;  |         |  100  |    172  |  0  |   50  |  [172,113,33,153,7]  |
   574  |              resetPlaceHolder_2();  |         |  100  |    172  |  0  |   50  |  [172,113,33,153,7]  |
   580  |                         R = R + 2;  |      2  |  102  |    172  |  0  |   50  |  [172,113,33,153,7]  |
   584  |                         j = j + 1;  |         |  102  |    172  |  0  |   51  |  [172,113,33,153,7]  |
   585  |              resetPlaceHolder_2();  |         |  102  |    172  |  0  |   51  |  [172,113,33,153,7]  |
   591  |                         R = R + 2;  |      2  |  104  |    172  |  0  |   51  |  [172,113,33,153,7]  |
   595  |                         j = j + 1;  |         |  104  |    172  |  0  |   52  |  [172,113,33,153,7]  |
   596  |              resetPlaceHolder_2();  |         |  104  |    172  |  0  |   52  |  [172,113,33,153,7]  |
   602  |                         R = R + 2;  |      2  |  106  |    172  |  0  |   52  |  [172,113,33,153,7]  |
   606  |                         j = j + 1;  |         |  106  |    172  |  0  |   53  |  [172,113,33,153,7]  |
   607  |              resetPlaceHolder_2();  |         |  106  |    172  |  0  |   53  |  [172,113,33,153,7]  |
   613  |                         R = R + 2;  |      2  |  108  |    172  |  0  |   53  |  [172,113,33,153,7]  |
   617  |                         j = j + 1;  |         |  108  |    172  |  0  |   54  |  [172,113,33,153,7]  |
   618  |              resetPlaceHolder_2();  |         |  108  |    172  |  0  |   54  |  [172,113,33,153,7]  |
   624  |                         R = R + 2;  |      2  |  110  |    172  |  0  |   54  |  [172,113,33,153,7]  |
   628  |                         j = j + 1;  |         |  110  |    172  |  0  |   55  |  [172,113,33,153,7]  |
   629  |              resetPlaceHolder_2();  |         |  110  |    172  |  0  |   55  |  [172,113,33,153,7]  |
   635  |                         R = R + 2;  |      2  |  112  |    172  |  0  |   55  |  [172,113,33,153,7]  |
   639  |                         j = j + 1;  |         |  112  |    172  |  0  |   56  |  [172,113,33,153,7]  |
   640  |              resetPlaceHolder_2();  |         |  112  |    172  |  0  |   56  |  [172,113,33,153,7]  |
   646  |                         R = R + 2;  |      2  |  114  |    172  |  0  |   56  |  [172,113,33,153,7]  |
   650  |                         j = j + 1;  |         |  114  |    172  |  0  |   57  |  [172,113,33,153,7]  |
   651  |              resetPlaceHolder_2();  |         |  114  |    172  |  0  |   57  |  [172,113,33,153,7]  |
   657  |                         R = R + 2;  |      2  |  116  |    172  |  0  |   57  |  [172,113,33,153,7]  |
   661  |                         j = j + 1;  |         |  116  |    172  |  0  |   58  |  [172,113,33,153,7]  |
   662  |              resetPlaceHolder_2();  |         |  116  |    172  |  0  |   58  |  [172,113,33,153,7]  |
   668  |                         R = R + 2;  |      2  |  118  |    172  |  0  |   58  |  [172,113,33,153,7]  |
   672  |                         j = j + 1;  |         |  118  |    172  |  0  |   59  |  [172,113,33,153,7]  |
   673  |              resetPlaceHolder_2();  |         |  118  |    172  |  0  |   59  |  [172,113,33,153,7]  |
   679  |                         R = R + 2;  |      2  |  120  |    172  |  0  |   59  |  [172,113,33,153,7]  |
   683  |                         j = j + 1;  |         |  120  |    172  |  0  |   60  |  [172,113,33,153,7]  |
   684  |              resetPlaceHolder_2();  |         |  120  |    172  |  0  |   60  |  [172,113,33,153,7]  |
   690  |                         R = R + 2;  |      2  |  122  |    172  |  0  |   60  |  [172,113,33,153,7]  |
   694  |                         j = j + 1;  |         |  122  |    172  |  0  |   61  |  [172,113,33,153,7]  |
   695  |              resetPlaceHolder_2();  |         |  122  |    172  |  0  |   61  |  [172,113,33,153,7]  |
   701  |                         R = R + 2;  |      2  |  124  |    172  |  0  |   61  |  [172,113,33,153,7]  |
   705  |                         j = j + 1;  |         |  124  |    172  |  0  |   62  |  [172,113,33,153,7]  |
   706  |              resetPlaceHolder_2();  |         |  124  |    172  |  0  |   62  |  [172,113,33,153,7]  |
   712  |                         R = R + 2;  |      2  |  126  |    172  |  0  |   62  |  [172,113,33,153,7]  |
   716  |                         j = j + 1;  |         |  126  |    172  |  0  |   63  |  [172,113,33,153,7]  |
   717  |              resetPlaceHolder_2();  |         |  126  |    172  |  0  |   63  |  [172,113,33,153,7]  |
   723  |                         R = R + 2;  |      2  |  128  |    172  |  0  |   63  |  [172,113,33,153,7]  |
   727  |                         j = j + 1;  |         |  128  |    172  |  0  |   64  |  [172,113,33,153,7]  |
   728  |              resetPlaceHolder_2();  |         |  128  |    172  |  0  |   64  |  [172,113,33,153,7]  |
   734  |                         R = R + 2;  |      2  |  130  |    172  |  0  |   64  |  [172,113,33,153,7]  |
   738  |                         j = j + 1;  |         |  130  |    172  |  0  |   65  |  [172,113,33,153,7]  |
   739  |              resetPlaceHolder_2();  |         |  130  |    172  |  0  |   65  |  [172,113,33,153,7]  |
   745  |                         R = R + 2;  |      2  |  132  |    172  |  0  |   65  |  [172,113,33,153,7]  |
   749  |                         j = j + 1;  |         |  132  |    172  |  0  |   66  |  [172,113,33,153,7]  |
   750  |              resetPlaceHolder_2();  |         |  132  |    172  |  0  |   66  |  [172,113,33,153,7]  |
   756  |                         R = R + 2;  |      2  |  134  |    172  |  0  |   66  |  [172,113,33,153,7]  |
   760  |                         j = j + 1;  |         |  134  |    172  |  0  |   67  |  [172,113,33,153,7]  |
   761  |              resetPlaceHolder_2();  |         |  134  |    172  |  0  |   67  |  [172,113,33,153,7]  |
   767  |                         R = R + 2;  |      2  |  136  |    172  |  0  |   67  |  [172,113,33,153,7]  |
   771  |                         j = j + 1;  |         |  136  |    172  |  0  |   68  |  [172,113,33,153,7]  |
   772  |              resetPlaceHolder_2();  |         |  136  |    172  |  0  |   68  |  [172,113,33,153,7]  |
   778  |                         R = R + 2;  |      2  |  138  |    172  |  0  |   68  |  [172,113,33,153,7]  |
   782  |                         j = j + 1;  |         |  138  |    172  |  0  |   69  |  [172,113,33,153,7]  |
   783  |              resetPlaceHolder_2();  |         |  138  |    172  |  0  |   69  |  [172,113,33,153,7]  |
   789  |                         R = R + 2;  |      2  |  140  |    172  |  0  |   69  |  [172,113,33,153,7]  |
   793  |                         j = j + 1;  |         |  140  |    172  |  0  |   70  |  [172,113,33,153,7]  |
   794  |              resetPlaceHolder_2();  |         |  140  |    172  |  0  |   70  |  [172,113,33,153,7]  |
   800  |                         R = R + 2;  |      2  |  142  |    172  |  0  |   70  |  [172,113,33,153,7]  |
   804  |                         j = j + 1;  |         |  142  |    172  |  0  |   71  |  [172,113,33,153,7]  |
   805  |              resetPlaceHolder_2();  |         |  142  |    172  |  0  |   71  |  [172,113,33,153,7]  |
   811  |                         R = R + 2;  |      2  |  144  |    172  |  0  |   71  |  [172,113,33,153,7]  |
   815  |                         j = j + 1;  |         |  144  |    172  |  0  |   72  |  [172,113,33,153,7]  |
   816  |              resetPlaceHolder_2();  |         |  144  |    172  |  0  |   72  |  [172,113,33,153,7]  |
   822  |                         R = R + 2;  |      2  |  146  |    172  |  0  |   72  |  [172,113,33,153,7]  |
   826  |                         j = j + 1;  |         |  146  |    172  |  0  |   73  |  [172,113,33,153,7]  |
   827  |              resetPlaceHolder_2();  |         |  146  |    172  |  0  |   73  |  [172,113,33,153,7]  |
   833  |                         R = R + 2;  |      2  |  148  |    172  |  0  |   73  |  [172,113,33,153,7]  |
   837  |                         j = j + 1;  |         |  148  |    172  |  0  |   74  |  [172,113,33,153,7]  |
   838  |              resetPlaceHolder_2();  |         |  148  |    172  |  0  |   74  |  [172,113,33,153,7]  |
   844  |                         R = R + 2;  |      2  |  150  |    172  |  0  |   74  |  [172,113,33,153,7]  |
   848  |                         j = j + 1;  |         |  150  |    172  |  0  |   75  |  [172,113,33,153,7]  |
   849  |              resetPlaceHolder_2();  |         |  150  |    172  |  0  |   75  |  [172,113,33,153,7]  |
   855  |                         R = R + 2;  |      2  |  152  |    172  |  0  |   75  |  [172,113,33,153,7]  |
   859  |                         j = j + 1;  |         |  152  |    172  |  0  |   76  |  [172,113,33,153,7]  |
   860  |              resetPlaceHolder_2();  |         |  152  |    172  |  0  |   76  |  [172,113,33,153,7]  |
   866  |                         R = R + 2;  |      2  |  154  |    172  |  0  |   76  |  [172,113,33,153,7]  |
   870  |                         j = j + 1;  |         |  154  |    172  |  0  |   77  |  [172,113,33,153,7]  |
   871  |              resetPlaceHolder_2();  |         |  154  |    172  |  0  |   77  |  [172,113,33,153,7]  |
   877  |                         R = R + 2;  |      2  |  156  |    172  |  0  |   77  |  [172,113,33,153,7]  |
   881  |                         j = j + 1;  |         |  156  |    172  |  0  |   78  |  [172,113,33,153,7]  |
   882  |              resetPlaceHolder_2();  |         |  156  |    172  |  0  |   78  |  [172,113,33,153,7]  |
   888  |                         R = R + 2;  |      2  |  158  |    172  |  0  |   78  |  [172,113,33,153,7]  |
   892  |                         j = j + 1;  |         |  158  |    172  |  0  |   79  |  [172,113,33,153,7]  |
   893  |              resetPlaceHolder_2();  |         |  158  |    172  |  0  |   79  |  [172,113,33,153,7]  |
   899  |                         R = R + 2;  |      2  |  160  |    172  |  0  |   79  |  [172,113,33,153,7]  |
   903  |                         j = j + 1;  |         |  160  |    172  |  0  |   80  |  [172,113,33,153,7]  |
   904  |              resetPlaceHolder_2();  |         |  160  |    172  |  0  |   80  |  [172,113,33,153,7]  |
   910  |                         R = R + 2;  |      2  |  162  |    172  |  0  |   80  |  [172,113,33,153,7]  |
   914  |                         j = j + 1;  |         |  162  |    172  |  0  |   81  |  [172,113,33,153,7]  |
   915  |              resetPlaceHolder_2();  |         |  162  |    172  |  0  |   81  |  [172,113,33,153,7]  |
   921  |                         R = R + 2;  |      2  |  164  |    172  |  0  |   81  |  [172,113,33,153,7]  |
   925  |                         j = j + 1;  |         |  164  |    172  |  0  |   82  |  [172,113,33,153,7]  |
   926  |              resetPlaceHolder_2();  |         |  164  |    172  |  0  |   82  |  [172,113,33,153,7]  |
   932  |                         R = R + 2;  |      2  |  166  |    172  |  0  |   82  |  [172,113,33,153,7]  |
   936  |                         j = j + 1;  |         |  166  |    172  |  0  |   83  |  [172,113,33,153,7]  |
   937  |              resetPlaceHolder_2();  |         |  166  |    172  |  0  |   83  |  [172,113,33,153,7]  |
   943  |                         R = R + 2;  |      2  |  168  |    172  |  0  |   83  |  [172,113,33,153,7]  |
   947  |                         j = j + 1;  |         |  168  |    172  |  0  |   84  |  [172,113,33,153,7]  |
   948  |              resetPlaceHolder_2();  |         |  168  |    172  |  0  |   84  |  [172,113,33,153,7]  |
   954  |                         R = R + 2;  |      2  |  170  |    172  |  0  |   84  |  [172,113,33,153,7]  |
   958  |                         j = j + 1;  |         |  170  |    172  |  0  |   85  |  [172,113,33,153,7]  |
   959  |              resetPlaceHolder_2();  |         |  170  |    172  |  0  |   85  |  [172,113,33,153,7]  |
   965  |                         R = R + 2;  |      2  |  172  |    172  |  0  |   85  |  [172,113,33,153,7]  |
   969  |                         j = j + 1;  |         |  172  |    172  |  0  |   86  |  [172,113,33,153,7]  |
   970  |              resetPlaceHolder_2();  |         |  172  |    172  |  0  |   86  |  [172,113,33,153,7]  |
   976  |                         R = R + 2;  |      2  |  174  |    172  |  0  |   86  |  [172,113,33,153,7]  |
   980  |                         j = j + 1;  |         |  174  |    172  |  0  |   87  |  [172,113,33,153,7]  |
   981  |              resetPlaceHolder_2();  |         |  174  |    172  |  0  |   87  |  [172,113,33,153,7]  |
   987  |                         R = R + 2;  |      2  |  176  |    172  |  0  |   87  |  [172,113,33,153,7]  |
   991  |                         j = j + 1;  |         |  176  |    172  |  0  |   88  |  [172,113,33,153,7]  |
   992  |              resetPlaceHolder_2();  |         |  176  |    172  |  0  |   88  |  [172,113,33,153,7]  |
   998  |                         R = R + 2;  |      2  |  178  |    172  |  0  |   88  |  [172,113,33,153,7]  |
  1002  |                         j = j + 1;  |         |  178  |    172  |  0  |   89  |  [172,113,33,153,7]  |
  1003  |              resetPlaceHolder_2();  |         |  178  |    172  |  0  |   89  |  [172,113,33,153,7]  |
  1009  |                         R = R + 2;  |      2  |  180  |    172  |  0  |   89  |  [172,113,33,153,7]  |
  1013  |                         j = j + 1;  |         |  180  |    172  |  0  |   90  |  [172,113,33,153,7]  |
  1014  |              resetPlaceHolder_2();  |         |  180  |    172  |  0  |   90  |  [172,113,33,153,7]  |
  1020  |                         R = R + 2;  |      2  |  182  |    172  |  0  |   90  |  [172,113,33,153,7]  |
  1024  |                         j = j + 1;  |         |  182  |    172  |  0  |   91  |  [172,113,33,153,7]  |
  1025  |              resetPlaceHolder_2();  |         |  182  |    172  |  0  |   91  |  [172,113,33,153,7]  |
  1031  |                         R = R + 2;  |      2  |  184  |    172  |  0  |   91  |  [172,113,33,153,7]  |
  1035  |                         j = j + 1;  |         |  184  |    172  |  0  |   92  |  [172,113,33,153,7]  |
  1036  |              resetPlaceHolder_2();  |         |  184  |    172  |  0  |   92  |  [172,113,33,153,7]  |
  1042  |                         R = R + 2;  |      2  |  186  |    172  |  0  |   92  |  [172,113,33,153,7]  |
  1046  |                         j = j + 1;  |         |  186  |    172  |  0  |   93  |  [172,113,33,153,7]  |
  1047  |              resetPlaceHolder_2();  |         |  186  |    172  |  0  |   93  |  [172,113,33,153,7]  |
  1053  |                         R = R + 2;  |      2  |  188  |    172  |  0  |   93  |  [172,113,33,153,7]  |
  1057  |                         j = j + 1;  |         |  188  |    172  |  0  |   94  |  [172,113,33,153,7]  |
  1058  |              resetPlaceHolder_2();  |         |  188  |    172  |  0  |   94  |  [172,113,33,153,7]  |
  1064  |                         R = R + 2;  |      2  |  190  |    172  |  0  |   94  |  [172,113,33,153,7]  |
  1068  |                         j = j + 1;  |         |  190  |    172  |  0  |   95  |  [172,113,33,153,7]  |
  1069  |              resetPlaceHolder_2();  |         |  190  |    172  |  0  |   95  |  [172,113,33,153,7]  |
  1075  |                         R = R + 2;  |      2  |  192  |    172  |  0  |   95  |  [172,113,33,153,7]  |
  1079  |                         j = j + 1;  |         |  192  |    172  |  0  |   96  |  [172,113,33,153,7]  |
  1080  |              resetPlaceHolder_2();  |         |  192  |    172  |  0  |   96  |  [172,113,33,153,7]  |
  1086  |                         R = R + 2;  |      2  |  194  |    172  |  0  |   96  |  [172,113,33,153,7]  |
  1090  |                         j = j + 1;  |         |  194  |    172  |  0  |   97  |  [172,113,33,153,7]  |
  1091  |              resetPlaceHolder_2();  |         |  194  |    172  |  0  |   97  |  [172,113,33,153,7]  |
  1097  |                         R = R + 2;  |      2  |  196  |    172  |  0  |   97  |  [172,113,33,153,7]  |
  1101  |                         j = j + 1;  |         |  196  |    172  |  0  |   98  |  [172,113,33,153,7]  |
  1102  |              resetPlaceHolder_2();  |         |  196  |    172  |  0  |   98  |  [172,113,33,153,7]  |
  1108  |                         R = R + 2;  |      2  |  198  |    172  |  0  |   98  |  [172,113,33,153,7]  |
  1112  |                         j = j + 1;  |         |  198  |    172  |  0  |   99  |  [172,113,33,153,7]  |
  1113  |              resetPlaceHolder_2();  |         |  198  |    172  |  0  |   99  |  [172,113,33,153,7]  |
  1119  |                         R = R + 2;  |      2  |  200  |    172  |  0  |   99  |  [172,113,33,153,7]  |
  1123  |                         j = j + 1;  |         |  200  |    172  |  0  |  100  |  [172,113,33,153,7]  |
  1124  |              resetPlaceHolder_2();  |         |  200  |    172  |  0  |  100  |  [172,113,33,153,7]  |
  1130  |                         R = R + 2;  |      2  |  202  |    172  |  0  |  100  |  [172,113,33,153,7]  |
  1134  |                         j = j + 1;  |         |  202  |    172  |  0  |  101  |  [172,113,33,153,7]  |
  1135  |              resetPlaceHolder_2();  |         |  202  |    172  |  0  |  101  |  [172,113,33,153,7]  |
  1141  |                         R = R + 2;  |      2  |  204  |    172  |  0  |  101  |  [172,113,33,153,7]  |
  1145  |                         j = j + 1;  |         |  204  |    172  |  0  |  102  |  [172,113,33,153,7]  |
  1146  |              resetPlaceHolder_2();  |         |  204  |    172  |  0  |  102  |  [172,113,33,153,7]  |
  1152  |                         R = R + 2;  |      2  |  206  |    172  |  0  |  102  |  [172,113,33,153,7]  |
  1156  |                         j = j + 1;  |         |  206  |    172  |  0  |  103  |  [172,113,33,153,7]  |
  1157  |              resetPlaceHolder_2();  |         |  206  |    172  |  0  |  103  |  [172,113,33,153,7]  |
  1163  |                         R = R + 2;  |      2  |  208  |    172  |  0  |  103  |  [172,113,33,153,7]  |
  1167  |                         j = j + 1;  |         |  208  |    172  |  0  |  104  |  [172,113,33,153,7]  |
  1168  |              resetPlaceHolder_2();  |         |  208  |    172  |  0  |  104  |  [172,113,33,153,7]  |
  1174  |                         R = R + 2;  |      2  |  210  |    172  |  0  |  104  |  [172,113,33,153,7]  |
  1178  |                         j = j + 1;  |         |  210  |    172  |  0  |  105  |  [172,113,33,153,7]  |
  1179  |              resetPlaceHolder_2();  |         |  210  |    172  |  0  |  105  |  [172,113,33,153,7]  |
  1185  |                         R = R + 2;  |      2  |  212  |    172  |  0  |  105  |  [172,113,33,153,7]  |
  1189  |                         j = j + 1;  |         |  212  |    172  |  0  |  106  |  [172,113,33,153,7]  |
  1190  |              resetPlaceHolder_2();  |         |  212  |    172  |  0  |  106  |  [172,113,33,153,7]  |
  1196  |                         R = R + 2;  |      2  |  214  |    172  |  0  |  106  |  [172,113,33,153,7]  |
  1200  |                         j = j + 1;  |         |  214  |    172  |  0  |  107  |  [172,113,33,153,7]  |
  1201  |              resetPlaceHolder_2();  |         |  214  |    172  |  0  |  107  |  [172,113,33,153,7]  |
  1207  |                         R = R + 2;  |      2  |  216  |    172  |  0  |  107  |  [172,113,33,153,7]  |
  1211  |                         j = j + 1;  |         |  216  |    172  |  0  |  108  |  [172,113,33,153,7]  |
  1212  |              resetPlaceHolder_2();  |         |  216  |    172  |  0  |  108  |  [172,113,33,153,7]  |
  1218  |                         R = R + 2;  |      2  |  218  |    172  |  0  |  108  |  [172,113,33,153,7]  |
  1222  |                         j = j + 1;  |         |  218  |    172  |  0  |  109  |  [172,113,33,153,7]  |
  1223  |              resetPlaceHolder_2();  |         |  218  |    172  |  0  |  109  |  [172,113,33,153,7]  |
  1229  |                         R = R + 2;  |      2  |  220  |    172  |  0  |  109  |  [172,113,33,153,7]  |
  1233  |                         j = j + 1;  |         |  220  |    172  |  0  |  110  |  [172,113,33,153,7]  |
  1234  |              resetPlaceHolder_2();  |         |  220  |    172  |  0  |  110  |  [172,113,33,153,7]  |
  1240  |                         R = R + 2;  |      2  |  222  |    172  |  0  |  110  |  [172,113,33,153,7]  |
  1244  |                         j = j + 1;  |         |  222  |    172  |  0  |  111  |  [172,113,33,153,7]  |
  1245  |              resetPlaceHolder_2();  |         |  222  |    172  |  0  |  111  |  [172,113,33,153,7]  |
  1251  |                         R = R + 2;  |      2  |  224  |    172  |  0  |  111  |  [172,113,33,153,7]  |
  1255  |                         j = j + 1;  |         |  224  |    172  |  0  |  112  |  [172,113,33,153,7]  |
  1256  |              resetPlaceHolder_2();  |         |  224  |    172  |  0  |  112  |  [172,113,33,153,7]  |
  1262  |                         R = R + 2;  |      2  |  226  |    172  |  0  |  112  |  [172,113,33,153,7]  |
  1266  |                         j = j + 1;  |         |  226  |    172  |  0  |  113  |  [172,113,33,153,7]  |
  1267  |              resetPlaceHolder_2();  |         |  226  |    172  |  0  |  113  |  [172,113,33,153,7]  |
  1273  |                         R = R + 2;  |      2  |  228  |    172  |  0  |  113  |  [172,113,33,153,7]  |
  1277  |                         j = j + 1;  |         |  228  |    172  |  0  |  114  |  [172,113,33,153,7]  |
  1278  |              resetPlaceHolder_2();  |         |  228  |    172  |  0  |  114  |  [172,113,33,153,7]  |
  1284  |                         R = R + 2;  |      2  |  230  |    172  |  0  |  114  |  [172,113,33,153,7]  |
  1288  |                         j = j + 1;  |         |  230  |    172  |  0  |  115  |  [172,113,33,153,7]  |
  1289  |              resetPlaceHolder_2();  |         |  230  |    172  |  0  |  115  |  [172,113,33,153,7]  |
  1295  |                         R = R + 2;  |      2  |  232  |    172  |  0  |  115  |  [172,113,33,153,7]  |
  1299  |                         j = j + 1;  |         |  232  |    172  |  0  |  116  |  [172,113,33,153,7]  |
  1300  |              resetPlaceHolder_2();  |         |  232  |    172  |  0  |  116  |  [172,113,33,153,7]  |
  1306  |                         R = R + 2;  |      2  |  234  |    172  |  0  |  116  |  [172,113,33,153,7]  |
  1310  |                         j = j + 1;  |         |  234  |    172  |  0  |  117  |  [172,113,33,153,7]  |
  1311  |              resetPlaceHolder_2();  |         |  234  |    172  |  0  |  117  |  [172,113,33,153,7]  |
  1317  |                         R = R + 2;  |      2  |  236  |    172  |  0  |  117  |  [172,113,33,153,7]  |
  1321  |                         j = j + 1;  |         |  236  |    172  |  0  |  118  |  [172,113,33,153,7]  |
  1322  |              resetPlaceHolder_2();  |         |  236  |    172  |  0  |  118  |  [172,113,33,153,7]  |
  1328  |                         R = R + 2;  |      2  |  238  |    172  |  0  |  118  |  [172,113,33,153,7]  |
  1332  |                         j = j + 1;  |         |  238  |    172  |  0  |  119  |  [172,113,33,153,7]  |
  1333  |              resetPlaceHolder_2();  |         |  238  |    172  |  0  |  119  |  [172,113,33,153,7]  |
  1339  |                         R = R + 2;  |      2  |  240  |    172  |  0  |  119  |  [172,113,33,153,7]  |
  1343  |                         j = j + 1;  |         |  240  |    172  |  0  |  120  |  [172,113,33,153,7]  |
  1344  |              resetPlaceHolder_2();  |         |  240  |    172  |  0  |  120  |  [172,113,33,153,7]  |
  1350  |                         R = R + 2;  |      2  |  242  |    172  |  0  |  120  |  [172,113,33,153,7]  |
  1354  |                         j = j + 1;  |         |  242  |    172  |  0  |  121  |  [172,113,33,153,7]  |
  1355  |              resetPlaceHolder_2();  |         |  242  |    172  |  0  |  121  |  [172,113,33,153,7]  |
  1361  |                         R = R + 2;  |      2  |  244  |    172  |  0  |  121  |  [172,113,33,153,7]  |
  1365  |                         j = j + 1;  |         |  244  |    172  |  0  |  122  |  [172,113,33,153,7]  |
  1366  |              resetPlaceHolder_2();  |         |  244  |    172  |  0  |  122  |  [172,113,33,153,7]  |
  1372  |                         R = R + 2;  |      2  |  246  |    172  |  0  |  122  |  [172,113,33,153,7]  |
  1376  |                         j = j + 1;  |         |  246  |    172  |  0  |  123  |  [172,113,33,153,7]  |
  1377  |              resetPlaceHolder_2();  |         |  246  |    172  |  0  |  123  |  [172,113,33,153,7]  |
  1383  |                         R = R + 2;  |      2  |  248  |    172  |  0  |  123  |  [172,113,33,153,7]  |
  1387  |                         j = j + 1;  |         |  248  |    172  |  0  |  124  |  [172,113,33,153,7]  |
  1388  |              resetPlaceHolder_2();  |         |  248  |    172  |  0  |  124  |  [172,113,33,153,7]  |
  1394  |                         R = R + 2;  |      2  |  250  |    172  |  0  |  124  |  [172,113,33,153,7]  |
  1398  |                         j = j + 1;  |         |  250  |    172  |  0  |  125  |  [172,113,33,153,7]  |
  1399  |              resetPlaceHolder_2();  |         |  250  |    172  |  0  |  125  |  [172,113,33,153,7]  |
  1405  |                         R = R + 2;  |      2  |  252  |    172  |  0  |  125  |  [172,113,33,153,7]  |
  1409  |                         j = j + 1;  |         |  252  |    172  |  0  |  126  |  [172,113,33,153,7]  |
  1410  |              resetPlaceHolder_2();  |         |  252  |    172  |  0  |  126  |  [172,113,33,153,7]  |
  1416  |                         R = R + 2;  |      2  |  254  |    172  |  0  |  126  |  [172,113,33,153,7]  |
  1420  |                         j = j + 1;  |         |  254  |    172  |  0  |  127  |  [172,113,33,153,7]  |
  1421  |              resetPlaceHolder_2();  |         |  254  |    172  |  0  |  127  |  [172,113,33,153,7]  |
  1427  |                         R = R + 2;  |      2  |  256  |    172  |  0  |  127  |  [172,113,33,153,7]  |
  1431  |                         j = j + 1;  |         |  256  |    172  |  0  |  128  |  [172,113,33,153,7]  |
  1432  |              resetPlaceHolder_2();  |         |  256  |    172  |  0  |  128  |  [172,113,33,153,7]  |
  1438  |                         R = R + 2;  |      2  |  258  |    172  |  0  |  128  |  [172,113,33,153,7]  |
  1442  |                         j = j + 1;  |         |  258  |    172  |  0  |  129  |  [172,113,33,153,7]  |
  1443  |              resetPlaceHolder_2();  |         |  258  |    172  |  0  |  129  |  [172,113,33,153,7]  |
  1449  |                         R = R + 2;  |      2  |  260  |    172  |  0  |  129  |  [172,113,33,153,7]  |
  1453  |                         j = j + 1;  |         |  260  |    172  |  0  |  130  |  [172,113,33,153,7]  |
  1454  |              resetPlaceHolder_2();  |         |  260  |    172  |  0  |  130  |  [172,113,33,153,7]  |
  1460  |                         R = R + 2;  |      2  |  262  |    172  |  0  |  130  |  [172,113,33,153,7]  |
  1464  |                         j = j + 1;  |         |  262  |    172  |  0  |  131  |  [172,113,33,153,7]  |
  1465  |              resetPlaceHolder_2();  |         |  262  |    172  |  0  |  131  |  [172,113,33,153,7]  |
  1471  |                         R = R + 2;  |      2  |  264  |    172  |  0  |  131  |  [172,113,33,153,7]  |
  1475  |                         j = j + 1;  |         |  264  |    172  |  0  |  132  |  [172,113,33,153,7]  |
  1476  |              resetPlaceHolder_2();  |         |  264  |    172  |  0  |  132  |  [172,113,33,153,7]  |
  1482  |                         R = R + 2;  |      2  |  266  |    172  |  0  |  132  |  [172,113,33,153,7]  |
  1486  |                         j = j + 1;  |         |  266  |    172  |  0  |  133  |  [172,113,33,153,7]  |
  1487  |              resetPlaceHolder_2();  |         |  266  |    172  |  0  |  133  |  [172,113,33,153,7]  |
  1493  |                         R = R + 2;  |      2  |  268  |    172  |  0  |  133  |  [172,113,33,153,7]  |
  1497  |                         j = j + 1;  |         |  268  |    172  |  0  |  134  |  [172,113,33,153,7]  |
  1498  |              resetPlaceHolder_2();  |         |  268  |    172  |  0  |  134  |  [172,113,33,153,7]  |
  1504  |                         R = R + 2;  |      2  |  270  |    172  |  0  |  134  |  [172,113,33,153,7]  |
  1508  |                         j = j + 1;  |         |  270  |    172  |  0  |  135  |  [172,113,33,153,7]  |
  1509  |              resetPlaceHolder_2();  |         |  270  |    172  |  0  |  135  |  [172,113,33,153,7]  |
  1515  |                         R = R + 2;  |      2  |  272  |    172  |  0  |  135  |  [172,113,33,153,7]  |
  1519  |                         j = j + 1;  |         |  272  |    172  |  0  |  136  |  [172,113,33,153,7]  |
  1520  |              resetPlaceHolder_2();  |         |  272  |    172  |  0  |  136  |  [172,113,33,153,7]  |
  1526  |                         R = R + 2;  |      2  |  274  |    172  |  0  |  136  |  [172,113,33,153,7]  |
  1530  |                         j = j + 1;  |         |  274  |    172  |  0  |  137  |  [172,113,33,153,7]  |
  1531  |              resetPlaceHolder_2();  |         |  274  |    172  |  0  |  137  |  [172,113,33,153,7]  |
  1537  |                         R = R + 2;  |      2  |  276  |    172  |  0  |  137  |  [172,113,33,153,7]  |
  1541  |                         j = j + 1;  |         |  276  |    172  |  0  |  138  |  [172,113,33,153,7]  |
  1542  |              resetPlaceHolder_2();  |         |  276  |    172  |  0  |  138  |  [172,113,33,153,7]  |
  1548  |                         R = R + 2;  |      2  |  278  |    172  |  0  |  138  |  [172,113,33,153,7]  |
  1552  |                         j = j + 1;  |         |  278  |    172  |  0  |  139  |  [172,113,33,153,7]  |
  1553  |              resetPlaceHolder_2();  |         |  278  |    172  |  0  |  139  |  [172,113,33,153,7]  |
  1559  |                         R = R + 2;  |      2  |  280  |    172  |  0  |  139  |  [172,113,33,153,7]  |
  1563  |                         j = j + 1;  |         |  280  |    172  |  0  |  140  |  [172,113,33,153,7]  |
  1564  |              resetPlaceHolder_2();  |         |  280  |    172  |  0  |  140  |  [172,113,33,153,7]  |
  1570  |                         R = R + 2;  |      2  |  282  |    172  |  0  |  140  |  [172,113,33,153,7]  |
  1574  |                         j = j + 1;  |         |  282  |    172  |  0  |  141  |  [172,113,33,153,7]  |
  1575  |              resetPlaceHolder_2();  |         |  282  |    172  |  0  |  141  |  [172,113,33,153,7]  |
  1581  |                         R = R + 2;  |      2  |  284  |    172  |  0  |  141  |  [172,113,33,153,7]  |
  1585  |                         j = j + 1;  |         |  284  |    172  |  0  |  142  |  [172,113,33,153,7]  |
  1586  |              resetPlaceHolder_2();  |         |  284  |    172  |  0  |  142  |  [172,113,33,153,7]  |
  1592  |                         R = R + 2;  |      2  |  286  |    172  |  0  |  142  |  [172,113,33,153,7]  |
  1596  |                         j = j + 1;  |         |  286  |    172  |  0  |  143  |  [172,113,33,153,7]  |
  1597  |              resetPlaceHolder_2();  |         |  286  |    172  |  0  |  143  |  [172,113,33,153,7]  |
  1603  |                         R = R + 2;  |      2  |  288  |    172  |  0  |  143  |  [172,113,33,153,7]  |
  1607  |                         j = j + 1;  |         |  288  |    172  |  0  |  144  |  [172,113,33,153,7]  |
  1608  |              resetPlaceHolder_2();  |         |  288  |    172  |  0  |  144  |  [172,113,33,153,7]  |
  1614  |                         R = R + 2;  |      2  |  290  |    172  |  0  |  144  |  [172,113,33,153,7]  |
  1618  |                         j = j + 1;  |         |  290  |    172  |  0  |  145  |  [172,113,33,153,7]  |
  1619  |              resetPlaceHolder_2();  |         |  290  |    172  |  0  |  145  |  [172,113,33,153,7]  |
  1625  |                         R = R + 2;  |      2  |  292  |    172  |  0  |  145  |  [172,113,33,153,7]  |
  1629  |                         j = j + 1;  |         |  292  |    172  |  0  |  146  |  [172,113,33,153,7]  |
  1630  |              resetPlaceHolder_2();  |         |  292  |    172  |  0  |  146  |  [172,113,33,153,7]  |
  1636  |                         R = R + 2;  |      2  |  294  |    172  |  0  |  146  |  [172,113,33,153,7]  |
  1640  |                         j = j + 1;  |         |  294  |    172  |  0  |  147  |  [172,113,33,153,7]  |
  1641  |              resetPlaceHolder_2();  |         |  294  |    172  |  0  |  147  |  [172,113,33,153,7]  |
  1647  |                         R = R + 2;  |      2  |  296  |    172  |  0  |  147  |  [172,113,33,153,7]  |
  1651  |                         j = j + 1;  |         |  296  |    172  |  0  |  148  |  [172,113,33,153,7]  |
  1652  |              resetPlaceHolder_2();  |         |  296  |    172  |  0  |  148  |  [172,113,33,153,7]  |
  1658  |                         R = R + 2;  |      2  |  298  |    172  |  0  |  148  |  [172,113,33,153,7]  |
  1662  |                         j = j + 1;  |         |  298  |    172  |  0  |  149  |  [172,113,33,153,7]  |
  1663  |              resetPlaceHolder_2();  |         |  298  |    172  |  0  |  149  |  [172,113,33,153,7]  |
  1669  |                         R = R + 2;  |      2  |  300  |    172  |  0  |  149  |  [172,113,33,153,7]  |
  1673  |                         j = j + 1;  |         |  300  |    172  |  0  |  150  |  [172,113,33,153,7]  |
  1674  |              resetPlaceHolder_2();  |         |  300  |    172  |  0  |  150  |  [172,113,33,153,7]  |
  1680  |                         R = R + 2;  |      2  |  302  |    172  |  0  |  150  |  [172,113,33,153,7]  |
  1684  |                         j = j + 1;  |         |  302  |    172  |  0  |  151  |  [172,113,33,153,7]  |
  1685  |              resetPlaceHolder_2();  |         |  302  |    172  |  0  |  151  |  [172,113,33,153,7]  |
  1691  |                         R = R + 2;  |      2  |  304  |    172  |  0  |  151  |  [172,113,33,153,7]  |
  1695  |                         j = j + 1;  |         |  304  |    172  |  0  |  152  |  [172,113,33,153,7]  |
  1696  |              resetPlaceHolder_2();  |         |  304  |    172  |  0  |  152  |  [172,113,33,153,7]  |
  1702  |                         R = R + 2;  |      2  |  306  |    172  |  0  |  152  |  [172,113,33,153,7]  |
  1706  |                         j = j + 1;  |         |  306  |    172  |  0  |  153  |  [172,113,33,153,7]  |
  1707  |              resetPlaceHolder_2();  |         |  306  |    172  |  0  |  153  |  [172,113,33,153,7]  |
  1713  |                         R = R + 2;  |      2  |  308  |    172  |  0  |  153  |  [172,113,33,153,7]  |
  1717  |                         j = j + 1;  |         |  308  |    172  |  0  |  154  |  [172,113,33,153,7]  |
  1718  |              resetPlaceHolder_2();  |         |  308  |    172  |  0  |  154  |  [172,113,33,153,7]  |
  1724  |                         R = R + 2;  |      2  |  310  |    172  |  0  |  154  |  [172,113,33,153,7]  |
  1728  |                         j = j + 1;  |         |  310  |    172  |  0  |  155  |  [172,113,33,153,7]  |
  1729  |              resetPlaceHolder_2();  |         |  310  |    172  |  0  |  155  |  [172,113,33,153,7]  |
  1735  |                         R = R + 2;  |      2  |  312  |    172  |  0  |  155  |  [172,113,33,153,7]  |
  1739  |                         j = j + 1;  |         |  312  |    172  |  0  |  156  |  [172,113,33,153,7]  |
  1740  |              resetPlaceHolder_2();  |         |  312  |    172  |  0  |  156  |  [172,113,33,153,7]  |
  1746  |                         R = R + 2;  |      2  |  314  |    172  |  0  |  156  |  [172,113,33,153,7]  |
  1750  |                         j = j + 1;  |         |  314  |    172  |  0  |  157  |  [172,113,33,153,7]  |
  1751  |              resetPlaceHolder_2();  |         |  314  |    172  |  0  |  157  |  [172,113,33,153,7]  |
  1757  |                         R = R + 2;  |      2  |  316  |    172  |  0  |  157  |  [172,113,33,153,7]  |
  1761  |                         j = j + 1;  |         |  316  |    172  |  0  |  158  |  [172,113,33,153,7]  |
  1762  |              resetPlaceHolder_2();  |         |  316  |    172  |  0  |  158  |  [172,113,33,153,7]  |
  1768  |                         R = R + 2;  |      2  |  318  |    172  |  0  |  158  |  [172,113,33,153,7]  |
  1772  |                         j = j + 1;  |         |  318  |    172  |  0  |  159  |  [172,113,33,153,7]  |
  1773  |              resetPlaceHolder_2();  |         |  318  |    172  |  0  |  159  |  [172,113,33,153,7]  |
  1779  |                         R = R + 2;  |      2  |  320  |    172  |  0  |  159  |  [172,113,33,153,7]  |
  1783  |                         j = j + 1;  |         |  320  |    172  |  0  |  160  |  [172,113,33,153,7]  |
  1784  |              resetPlaceHolder_2();  |         |  320  |    172  |  0  |  160  |  [172,113,33,153,7]  |
  1790  |                         R = R + 2;  |      2  |  322  |    172  |  0  |  160  |  [172,113,33,153,7]  |
  1794  |                         j = j + 1;  |         |  322  |    172  |  0  |  161  |  [172,113,33,153,7]  |
  1795  |              resetPlaceHolder_2();  |         |  322  |    172  |  0  |  161  |  [172,113,33,153,7]  |
  1801  |                         R = R + 2;  |      2  |  324  |    172  |  0  |  161  |  [172,113,33,153,7]  |
  1805  |                         j = j + 1;  |         |  324  |    172  |  0  |  162  |  [172,113,33,153,7]  |
  1806  |              resetPlaceHolder_2();  |         |  324  |    172  |  0  |  162  |  [172,113,33,153,7]  |
  1812  |                         R = R + 2;  |      2  |  326  |    172  |  0  |  162  |  [172,113,33,153,7]  |
  1816  |                         j = j + 1;  |         |  326  |    172  |  0  |  163  |  [172,113,33,153,7]  |
  1817  |              resetPlaceHolder_2();  |         |  326  |    172  |  0  |  163  |  [172,113,33,153,7]  |
  1823  |                         R = R + 2;  |      2  |  328  |    172  |  0  |  163  |  [172,113,33,153,7]  |
  1827  |                         j = j + 1;  |         |  328  |    172  |  0  |  164  |  [172,113,33,153,7]  |
  1828  |              resetPlaceHolder_2();  |         |  328  |    172  |  0  |  164  |  [172,113,33,153,7]  |
  1834  |                         R = R + 2;  |      2  |  330  |    172  |  0  |  164  |  [172,113,33,153,7]  |
  1838  |                         j = j + 1;  |         |  330  |    172  |  0  |  165  |  [172,113,33,153,7]  |
  1839  |              resetPlaceHolder_2();  |         |  330  |    172  |  0  |  165  |  [172,113,33,153,7]  |
  1845  |                         R = R + 2;  |      2  |  332  |    172  |  0  |  165  |  [172,113,33,153,7]  |
  1849  |                         j = j + 1;  |         |  332  |    172  |  0  |  166  |  [172,113,33,153,7]  |
  1850  |              resetPlaceHolder_2();  |         |  332  |    172  |  0  |  166  |  [172,113,33,153,7]  |
  1856  |                         R = R + 2;  |      2  |  334  |    172  |  0  |  166  |  [172,113,33,153,7]  |
  1860  |                         j = j + 1;  |         |  334  |    172  |  0  |  167  |  [172,113,33,153,7]  |
  1861  |              resetPlaceHolder_2();  |         |  334  |    172  |  0  |  167  |  [172,113,33,153,7]  |
  1867  |                         R = R + 2;  |      2  |  336  |    172  |  0  |  167  |  [172,113,33,153,7]  |
  1871  |                         j = j + 1;  |         |  336  |    172  |  0  |  168  |  [172,113,33,153,7]  |
  1872  |              resetPlaceHolder_2();  |         |  336  |    172  |  0  |  168  |  [172,113,33,153,7]  |
  1878  |                         R = R + 2;  |      2  |  338  |    172  |  0  |  168  |  [172,113,33,153,7]  |
  1882  |                         j = j + 1;  |         |  338  |    172  |  0  |  169  |  [172,113,33,153,7]  |
  1883  |              resetPlaceHolder_2();  |         |  338  |    172  |  0  |  169  |  [172,113,33,153,7]  |
  1889  |                         R = R + 2;  |      2  |  340  |    172  |  0  |  169  |  [172,113,33,153,7]  |
  1893  |                         j = j + 1;  |         |  340  |    172  |  0  |  170  |  [172,113,33,153,7]  |
  1894  |              resetPlaceHolder_2();  |         |  340  |    172  |  0  |  170  |  [172,113,33,153,7]  |
  1900  |                         R = R + 2;  |      2  |  342  |    172  |  0  |  170  |  [172,113,33,153,7]  |
  1904  |                         j = j + 1;  |         |  342  |    172  |  0  |  171  |  [172,113,33,153,7]  |
  1905  |              resetPlaceHolder_2();  |         |  342  |    172  |  0  |  171  |  [172,113,33,153,7]  |
  1911  |                         R = R + 2;  |      2  |  344  |    172  |  0  |  171  |  [172,113,33,153,7]  |
  1915  |                         j = j + 1;  |         |  344  |    172  |  0  |  172  |  [172,113,33,153,7]  |
  1916  |              resetPlaceHolder_2();  |         |  344  |    172  |  0  |  172  |  [172,113,33,153,7]  |
  1922  |                         R = R + 1;  |      1  |  345  |    172  |  0  |  172  |  [172,113,33,153,7]  |
  1926  |                         i = i + 1;  |         |  345  |    172  |  1  |  172  |  [172,113,33,153,7]  |
  1927  |              resetPlaceHolder_1();  |         |  345  |    172  |  1  |  172  |  [172,113,33,153,7]  |
  1933  |      entry = arrayRead(sorted, i);  |         |  345  |    113  |  1  |  172  |  [172,113,33,153,7]  |
  1935  |                         int j = 0;  |         |  345  |    113  |  1  |    0  |  [172,113,33,153,7]  |
  1941  |                         R = R + 2;  |      2  |  347  |    113  |  1  |    0  |  [172,113,33,153,7]  |
  1945  |                         j = j + 1;  |         |  347  |    113  |  1  |    1  |  [172,113,33,153,7]  |
  1946  |              resetPlaceHolder_2();  |         |  347  |    113  |  1  |    1  |  [172,113,33,153,7]  |
  1952  |                         R = R + 2;  |      2  |  349  |    113  |  1  |    1  |  [172,113,33,153,7]  |
  1956  |                         j = j + 1;  |         |  349  |    113  |  1  |    2  |  [172,113,33,153,7]  |
  1957  |              resetPlaceHolder_2();  |         |  349  |    113  |  1  |    2  |  [172,113,33,153,7]  |
  1963  |                         R = R + 2;  |      2  |  351  |    113  |  1  |    2  |  [172,113,33,153,7]  |
  1967  |                         j = j + 1;  |         |  351  |    113  |  1  |    3  |  [172,113,33,153,7]  |
  1968  |              resetPlaceHolder_2();  |         |  351  |    113  |  1  |    3  |  [172,113,33,153,7]  |
  1974  |                         R = R + 2;  |      2  |  353  |    113  |  1  |    3  |  [172,113,33,153,7]  |
  1978  |                         j = j + 1;  |         |  353  |    113  |  1  |    4  |  [172,113,33,153,7]  |
  1979  |              resetPlaceHolder_2();  |         |  353  |    113  |  1  |    4  |  [172,113,33,153,7]  |
  1985  |                         R = R + 2;  |      2  |  355  |    113  |  1  |    4  |  [172,113,33,153,7]  |
  1989  |                         j = j + 1;  |         |  355  |    113  |  1  |    5  |  [172,113,33,153,7]  |
  1990  |              resetPlaceHolder_2();  |         |  355  |    113  |  1  |    5  |  [172,113,33,153,7]  |
  1996  |                         R = R + 2;  |      2  |  357  |    113  |  1  |    5  |  [172,113,33,153,7]  |
  2000  |                         j = j + 1;  |         |  357  |    113  |  1  |    6  |  [172,113,33,153,7]  |
  2001  |              resetPlaceHolder_2();  |         |  357  |    113  |  1  |    6  |  [172,113,33,153,7]  |
  2007  |                         R = R + 2;  |      2  |  359  |    113  |  1  |    6  |  [172,113,33,153,7]  |
  2011  |                         j = j + 1;  |         |  359  |    113  |  1  |    7  |  [172,113,33,153,7]  |
  2012  |              resetPlaceHolder_2();  |         |  359  |    113  |  1  |    7  |  [172,113,33,153,7]  |
  2018  |                         R = R + 2;  |      2  |  361  |    113  |  1  |    7  |  [172,113,33,153,7]  |
  2022  |                         j = j + 1;  |         |  361  |    113  |  1  |    8  |  [172,113,33,153,7]  |
  2023  |              resetPlaceHolder_2();  |         |  361  |    113  |  1  |    8  |  [172,113,33,153,7]  |
  2029  |                         R = R + 2;  |      2  |  363  |    113  |  1  |    8  |  [172,113,33,153,7]  |
  2033  |                         j = j + 1;  |         |  363  |    113  |  1  |    9  |  [172,113,33,153,7]  |
  2034  |              resetPlaceHolder_2();  |         |  363  |    113  |  1  |    9  |  [172,113,33,153,7]  |
  2040  |                         R = R + 2;  |      2  |  365  |    113  |  1  |    9  |  [172,113,33,153,7]  |
  2044  |                         j = j + 1;  |         |  365  |    113  |  1  |   10  |  [172,113,33,153,7]  |
  2045  |              resetPlaceHolder_2();  |         |  365  |    113  |  1  |   10  |  [172,113,33,153,7]  |
  2051  |                         R = R + 2;  |      2  |  367  |    113  |  1  |   10  |  [172,113,33,153,7]  |
  2055  |                         j = j + 1;  |         |  367  |    113  |  1  |   11  |  [172,113,33,153,7]  |
  2056  |              resetPlaceHolder_2();  |         |  367  |    113  |  1  |   11  |  [172,113,33,153,7]  |
  2062  |                         R = R + 2;  |      2  |  369  |    113  |  1  |   11  |  [172,113,33,153,7]  |
  2066  |                         j = j + 1;  |         |  369  |    113  |  1  |   12  |  [172,113,33,153,7]  |
  2067  |              resetPlaceHolder_2();  |         |  369  |    113  |  1  |   12  |  [172,113,33,153,7]  |
  2073  |                         R = R + 2;  |      2  |  371  |    113  |  1  |   12  |  [172,113,33,153,7]  |
  2077  |                         j = j + 1;  |         |  371  |    113  |  1  |   13  |  [172,113,33,153,7]  |
  2078  |              resetPlaceHolder_2();  |         |  371  |    113  |  1  |   13  |  [172,113,33,153,7]  |
  2084  |                         R = R + 2;  |      2  |  373  |    113  |  1  |   13  |  [172,113,33,153,7]  |
  2088  |                         j = j + 1;  |         |  373  |    113  |  1  |   14  |  [172,113,33,153,7]  |
  2089  |              resetPlaceHolder_2();  |         |  373  |    113  |  1  |   14  |  [172,113,33,153,7]  |
  2095  |                         R = R + 2;  |      2  |  375  |    113  |  1  |   14  |  [172,113,33,153,7]  |
  2099  |                         j = j + 1;  |         |  375  |    113  |  1  |   15  |  [172,113,33,153,7]  |
  2100  |              resetPlaceHolder_2();  |         |  375  |    113  |  1  |   15  |  [172,113,33,153,7]  |
  2106  |                         R = R + 2;  |      2  |  377  |    113  |  1  |   15  |  [172,113,33,153,7]  |
  2110  |                         j = j + 1;  |         |  377  |    113  |  1  |   16  |  [172,113,33,153,7]  |
  2111  |              resetPlaceHolder_2();  |         |  377  |    113  |  1  |   16  |  [172,113,33,153,7]  |
  2117  |                         R = R + 2;  |      2  |  379  |    113  |  1  |   16  |  [172,113,33,153,7]  |
  2121  |                         j = j + 1;  |         |  379  |    113  |  1  |   17  |  [172,113,33,153,7]  |
  2122  |              resetPlaceHolder_2();  |         |  379  |    113  |  1  |   17  |  [172,113,33,153,7]  |
  2128  |                         R = R + 2;  |      2  |  381  |    113  |  1  |   17  |  [172,113,33,153,7]  |
  2132  |                         j = j + 1;  |         |  381  |    113  |  1  |   18  |  [172,113,33,153,7]  |
  2133  |              resetPlaceHolder_2();  |         |  381  |    113  |  1  |   18  |  [172,113,33,153,7]  |
  2139  |                         R = R + 2;  |      2  |  383  |    113  |  1  |   18  |  [172,113,33,153,7]  |
  2143  |                         j = j + 1;  |         |  383  |    113  |  1  |   19  |  [172,113,33,153,7]  |
  2144  |              resetPlaceHolder_2();  |         |  383  |    113  |  1  |   19  |  [172,113,33,153,7]  |
  2150  |                         R = R + 2;  |      2  |  385  |    113  |  1  |   19  |  [172,113,33,153,7]  |
  2154  |                         j = j + 1;  |         |  385  |    113  |  1  |   20  |  [172,113,33,153,7]  |
  2155  |              resetPlaceHolder_2();  |         |  385  |    113  |  1  |   20  |  [172,113,33,153,7]  |
  2161  |                         R = R + 2;  |      2  |  387  |    113  |  1  |   20  |  [172,113,33,153,7]  |
  2165  |                         j = j + 1;  |         |  387  |    113  |  1  |   21  |  [172,113,33,153,7]  |
  2166  |              resetPlaceHolder_2();  |         |  387  |    113  |  1  |   21  |  [172,113,33,153,7]  |
  2172  |                         R = R + 2;  |      2  |  389  |    113  |  1  |   21  |  [172,113,33,153,7]  |
  2176  |                         j = j + 1;  |         |  389  |    113  |  1  |   22  |  [172,113,33,153,7]  |
  2177  |              resetPlaceHolder_2();  |         |  389  |    113  |  1  |   22  |  [172,113,33,153,7]  |
  2183  |                         R = R + 2;  |      2  |  391  |    113  |  1  |   22  |  [172,113,33,153,7]  |
  2187  |                         j = j + 1;  |         |  391  |    113  |  1  |   23  |  [172,113,33,153,7]  |
  2188  |              resetPlaceHolder_2();  |         |  391  |    113  |  1  |   23  |  [172,113,33,153,7]  |
  2194  |                         R = R + 2;  |      2  |  393  |    113  |  1  |   23  |  [172,113,33,153,7]  |
  2198  |                         j = j + 1;  |         |  393  |    113  |  1  |   24  |  [172,113,33,153,7]  |
  2199  |              resetPlaceHolder_2();  |         |  393  |    113  |  1  |   24  |  [172,113,33,153,7]  |
  2205  |                         R = R + 2;  |      2  |  395  |    113  |  1  |   24  |  [172,113,33,153,7]  |
  2209  |                         j = j + 1;  |         |  395  |    113  |  1  |   25  |  [172,113,33,153,7]  |
  2210  |              resetPlaceHolder_2();  |         |  395  |    113  |  1  |   25  |  [172,113,33,153,7]  |
  2216  |                         R = R + 2;  |      2  |  397  |    113  |  1  |   25  |  [172,113,33,153,7]  |
  2220  |                         j = j + 1;  |         |  397  |    113  |  1  |   26  |  [172,113,33,153,7]  |
  2221  |              resetPlaceHolder_2();  |         |  397  |    113  |  1  |   26  |  [172,113,33,153,7]  |
  2227  |                         R = R + 2;  |      2  |  399  |    113  |  1  |   26  |  [172,113,33,153,7]  |
  2231  |                         j = j + 1;  |         |  399  |    113  |  1  |   27  |  [172,113,33,153,7]  |
  2232  |              resetPlaceHolder_2();  |         |  399  |    113  |  1  |   27  |  [172,113,33,153,7]  |
  2238  |                         R = R + 2;  |      2  |  401  |    113  |  1  |   27  |  [172,113,33,153,7]  |
  2242  |                         j = j + 1;  |         |  401  |    113  |  1  |   28  |  [172,113,33,153,7]  |
  2243  |              resetPlaceHolder_2();  |         |  401  |    113  |  1  |   28  |  [172,113,33,153,7]  |
  2249  |                         R = R + 2;  |      2  |  403  |    113  |  1  |   28  |  [172,113,33,153,7]  |
  2253  |                         j = j + 1;  |         |  403  |    113  |  1  |   29  |  [172,113,33,153,7]  |
  2254  |              resetPlaceHolder_2();  |         |  403  |    113  |  1  |   29  |  [172,113,33,153,7]  |
  2260  |                         R = R + 2;  |      2  |  405  |    113  |  1  |   29  |  [172,113,33,153,7]  |
  2264  |                         j = j + 1;  |         |  405  |    113  |  1  |   30  |  [172,113,33,153,7]  |
  2265  |              resetPlaceHolder_2();  |         |  405  |    113  |  1  |   30  |  [172,113,33,153,7]  |
  2271  |                         R = R + 2;  |      2  |  407  |    113  |  1  |   30  |  [172,113,33,153,7]  |
  2275  |                         j = j + 1;  |         |  407  |    113  |  1  |   31  |  [172,113,33,153,7]  |
  2276  |              resetPlaceHolder_2();  |         |  407  |    113  |  1  |   31  |  [172,113,33,153,7]  |
  2282  |                         R = R + 2;  |      2  |  409  |    113  |  1  |   31  |  [172,113,33,153,7]  |
  2286  |                         j = j + 1;  |         |  409  |    113  |  1  |   32  |  [172,113,33,153,7]  |
  2287  |              resetPlaceHolder_2();  |         |  409  |    113  |  1  |   32  |  [172,113,33,153,7]  |
  2293  |                         R = R + 2;  |      2  |  411  |    113  |  1  |   32  |  [172,113,33,153,7]  |
  2297  |                         j = j + 1;  |         |  411  |    113  |  1  |   33  |  [172,113,33,153,7]  |
  2298  |              resetPlaceHolder_2();  |         |  411  |    113  |  1  |   33  |  [172,113,33,153,7]  |
  2304  |                         R = R + 2;  |      2  |  413  |    113  |  1  |   33  |  [172,113,33,153,7]  |
  2308  |                         j = j + 1;  |         |  413  |    113  |  1  |   34  |  [172,113,33,153,7]  |
  2309  |              resetPlaceHolder_2();  |         |  413  |    113  |  1  |   34  |  [172,113,33,153,7]  |
  2315  |                         R = R + 2;  |      2  |  415  |    113  |  1  |   34  |  [172,113,33,153,7]  |
  2319  |                         j = j + 1;  |         |  415  |    113  |  1  |   35  |  [172,113,33,153,7]  |
  2320  |              resetPlaceHolder_2();  |         |  415  |    113  |  1  |   35  |  [172,113,33,153,7]  |
  2326  |                         R = R + 2;  |      2  |  417  |    113  |  1  |   35  |  [172,113,33,153,7]  |
  2330  |                         j = j + 1;  |         |  417  |    113  |  1  |   36  |  [172,113,33,153,7]  |
  2331  |              resetPlaceHolder_2();  |         |  417  |    113  |  1  |   36  |  [172,113,33,153,7]  |
  2337  |                         R = R + 2;  |      2  |  419  |    113  |  1  |   36  |  [172,113,33,153,7]  |
  2341  |                         j = j + 1;  |         |  419  |    113  |  1  |   37  |  [172,113,33,153,7]  |
  2342  |              resetPlaceHolder_2();  |         |  419  |    113  |  1  |   37  |  [172,113,33,153,7]  |
  2348  |                         R = R + 2;  |      2  |  421  |    113  |  1  |   37  |  [172,113,33,153,7]  |
  2352  |                         j = j + 1;  |         |  421  |    113  |  1  |   38  |  [172,113,33,153,7]  |
  2353  |              resetPlaceHolder_2();  |         |  421  |    113  |  1  |   38  |  [172,113,33,153,7]  |
  2359  |                         R = R + 2;  |      2  |  423  |    113  |  1  |   38  |  [172,113,33,153,7]  |
  2363  |                         j = j + 1;  |         |  423  |    113  |  1  |   39  |  [172,113,33,153,7]  |
  2364  |              resetPlaceHolder_2();  |         |  423  |    113  |  1  |   39  |  [172,113,33,153,7]  |
  2370  |                         R = R + 2;  |      2  |  425  |    113  |  1  |   39  |  [172,113,33,153,7]  |
  2374  |                         j = j + 1;  |         |  425  |    113  |  1  |   40  |  [172,113,33,153,7]  |
  2375  |              resetPlaceHolder_2();  |         |  425  |    113  |  1  |   40  |  [172,113,33,153,7]  |
  2381  |                         R = R + 2;  |      2  |  427  |    113  |  1  |   40  |  [172,113,33,153,7]  |
  2385  |                         j = j + 1;  |         |  427  |    113  |  1  |   41  |  [172,113,33,153,7]  |
  2386  |              resetPlaceHolder_2();  |         |  427  |    113  |  1  |   41  |  [172,113,33,153,7]  |
  2392  |                         R = R + 2;  |      2  |  429  |    113  |  1  |   41  |  [172,113,33,153,7]  |
  2396  |                         j = j + 1;  |         |  429  |    113  |  1  |   42  |  [172,113,33,153,7]  |
  2397  |              resetPlaceHolder_2();  |         |  429  |    113  |  1  |   42  |  [172,113,33,153,7]  |
  2403  |                         R = R + 2;  |      2  |  431  |    113  |  1  |   42  |  [172,113,33,153,7]  |
  2407  |                         j = j + 1;  |         |  431  |    113  |  1  |   43  |  [172,113,33,153,7]  |
  2408  |              resetPlaceHolder_2();  |         |  431  |    113  |  1  |   43  |  [172,113,33,153,7]  |
  2414  |                         R = R + 2;  |      2  |  433  |    113  |  1  |   43  |  [172,113,33,153,7]  |
  2418  |                         j = j + 1;  |         |  433  |    113  |  1  |   44  |  [172,113,33,153,7]  |
  2419  |              resetPlaceHolder_2();  |         |  433  |    113  |  1  |   44  |  [172,113,33,153,7]  |
  2425  |                         R = R + 2;  |      2  |  435  |    113  |  1  |   44  |  [172,113,33,153,7]  |
  2429  |                         j = j + 1;  |         |  435  |    113  |  1  |   45  |  [172,113,33,153,7]  |
  2430  |              resetPlaceHolder_2();  |         |  435  |    113  |  1  |   45  |  [172,113,33,153,7]  |
  2436  |                         R = R + 2;  |      2  |  437  |    113  |  1  |   45  |  [172,113,33,153,7]  |
  2440  |                         j = j + 1;  |         |  437  |    113  |  1  |   46  |  [172,113,33,153,7]  |
  2441  |              resetPlaceHolder_2();  |         |  437  |    113  |  1  |   46  |  [172,113,33,153,7]  |
  2447  |                         R = R + 2;  |      2  |  439  |    113  |  1  |   46  |  [172,113,33,153,7]  |
  2451  |                         j = j + 1;  |         |  439  |    113  |  1  |   47  |  [172,113,33,153,7]  |
  2452  |              resetPlaceHolder_2();  |         |  439  |    113  |  1  |   47  |  [172,113,33,153,7]  |
  2458  |                         R = R + 2;  |      2  |  441  |    113  |  1  |   47  |  [172,113,33,153,7]  |
  2462  |                         j = j + 1;  |         |  441  |    113  |  1  |   48  |  [172,113,33,153,7]  |
  2463  |              resetPlaceHolder_2();  |         |  441  |    113  |  1  |   48  |  [172,113,33,153,7]  |
  2469  |                         R = R + 2;  |      2  |  443  |    113  |  1  |   48  |  [172,113,33,153,7]  |
  2473  |                         j = j + 1;  |         |  443  |    113  |  1  |   49  |  [172,113,33,153,7]  |
  2474  |              resetPlaceHolder_2();  |         |  443  |    113  |  1  |   49  |  [172,113,33,153,7]  |
  2480  |                         R = R + 2;  |      2  |  445  |    113  |  1  |   49  |  [172,113,33,153,7]  |
  2484  |                         j = j + 1;  |         |  445  |    113  |  1  |   50  |  [172,113,33,153,7]  |
  2485  |              resetPlaceHolder_2();  |         |  445  |    113  |  1  |   50  |  [172,113,33,153,7]  |
  2491  |                         R = R + 2;  |      2  |  447  |    113  |  1  |   50  |  [172,113,33,153,7]  |
  2495  |                         j = j + 1;  |         |  447  |    113  |  1  |   51  |  [172,113,33,153,7]  |
  2496  |              resetPlaceHolder_2();  |         |  447  |    113  |  1  |   51  |  [172,113,33,153,7]  |
  2502  |                         R = R + 2;  |      2  |  449  |    113  |  1  |   51  |  [172,113,33,153,7]  |
  2506  |                         j = j + 1;  |         |  449  |    113  |  1  |   52  |  [172,113,33,153,7]  |
  2507  |              resetPlaceHolder_2();  |         |  449  |    113  |  1  |   52  |  [172,113,33,153,7]  |
  2513  |                         R = R + 2;  |      2  |  451  |    113  |  1  |   52  |  [172,113,33,153,7]  |
  2517  |                         j = j + 1;  |         |  451  |    113  |  1  |   53  |  [172,113,33,153,7]  |
  2518  |              resetPlaceHolder_2();  |         |  451  |    113  |  1  |   53  |  [172,113,33,153,7]  |
  2524  |                         R = R + 2;  |      2  |  453  |    113  |  1  |   53  |  [172,113,33,153,7]  |
  2528  |                         j = j + 1;  |         |  453  |    113  |  1  |   54  |  [172,113,33,153,7]  |
  2529  |              resetPlaceHolder_2();  |         |  453  |    113  |  1  |   54  |  [172,113,33,153,7]  |
  2535  |                         R = R + 2;  |      2  |  455  |    113  |  1  |   54  |  [172,113,33,153,7]  |
  2539  |                         j = j + 1;  |         |  455  |    113  |  1  |   55  |  [172,113,33,153,7]  |
  2540  |              resetPlaceHolder_2();  |         |  455  |    113  |  1  |   55  |  [172,113,33,153,7]  |
  2546  |                         R = R + 2;  |      2  |  457  |    113  |  1  |   55  |  [172,113,33,153,7]  |
  2550  |                         j = j + 1;  |         |  457  |    113  |  1  |   56  |  [172,113,33,153,7]  |
  2551  |              resetPlaceHolder_2();  |         |  457  |    113  |  1  |   56  |  [172,113,33,153,7]  |
  2557  |                         R = R + 2;  |      2  |  459  |    113  |  1  |   56  |  [172,113,33,153,7]  |
  2561  |                         j = j + 1;  |         |  459  |    113  |  1  |   57  |  [172,113,33,153,7]  |
  2562  |              resetPlaceHolder_2();  |         |  459  |    113  |  1  |   57  |  [172,113,33,153,7]  |
  2568  |                         R = R + 2;  |      2  |  461  |    113  |  1  |   57  |  [172,113,33,153,7]  |
  2572  |                         j = j + 1;  |         |  461  |    113  |  1  |   58  |  [172,113,33,153,7]  |
  2573  |              resetPlaceHolder_2();  |         |  461  |    113  |  1  |   58  |  [172,113,33,153,7]  |
  2579  |                         R = R + 2;  |      2  |  463  |    113  |  1  |   58  |  [172,113,33,153,7]  |
  2583  |                         j = j + 1;  |         |  463  |    113  |  1  |   59  |  [172,113,33,153,7]  |
  2584  |              resetPlaceHolder_2();  |         |  463  |    113  |  1  |   59  |  [172,113,33,153,7]  |
  2590  |                         R = R + 2;  |      2  |  465  |    113  |  1  |   59  |  [172,113,33,153,7]  |
  2594  |                         j = j + 1;  |         |  465  |    113  |  1  |   60  |  [172,113,33,153,7]  |
  2595  |              resetPlaceHolder_2();  |         |  465  |    113  |  1  |   60  |  [172,113,33,153,7]  |
  2601  |                         R = R + 2;  |      2  |  467  |    113  |  1  |   60  |  [172,113,33,153,7]  |
  2605  |                         j = j + 1;  |         |  467  |    113  |  1  |   61  |  [172,113,33,153,7]  |
  2606  |              resetPlaceHolder_2();  |         |  467  |    113  |  1  |   61  |  [172,113,33,153,7]  |
  2612  |                         R = R + 2;  |      2  |  469  |    113  |  1  |   61  |  [172,113,33,153,7]  |
  2616  |                         j = j + 1;  |         |  469  |    113  |  1  |   62  |  [172,113,33,153,7]  |
  2617  |              resetPlaceHolder_2();  |         |  469  |    113  |  1  |   62  |  [172,113,33,153,7]  |
  2623  |                         R = R + 2;  |      2  |  471  |    113  |  1  |   62  |  [172,113,33,153,7]  |
  2627  |                         j = j + 1;  |         |  471  |    113  |  1  |   63  |  [172,113,33,153,7]  |
  2628  |              resetPlaceHolder_2();  |         |  471  |    113  |  1  |   63  |  [172,113,33,153,7]  |
  2634  |                         R = R + 2;  |      2  |  473  |    113  |  1  |   63  |  [172,113,33,153,7]  |
  2638  |                         j = j + 1;  |         |  473  |    113  |  1  |   64  |  [172,113,33,153,7]  |
  2639  |              resetPlaceHolder_2();  |         |  473  |    113  |  1  |   64  |  [172,113,33,153,7]  |
  2645  |                         R = R + 2;  |      2  |  475  |    113  |  1  |   64  |  [172,113,33,153,7]  |
  2649  |                         j = j + 1;  |         |  475  |    113  |  1  |   65  |  [172,113,33,153,7]  |
  2650  |              resetPlaceHolder_2();  |         |  475  |    113  |  1  |   65  |  [172,113,33,153,7]  |
  2656  |                         R = R + 2;  |      2  |  477  |    113  |  1  |   65  |  [172,113,33,153,7]  |
  2660  |                         j = j + 1;  |         |  477  |    113  |  1  |   66  |  [172,113,33,153,7]  |
  2661  |              resetPlaceHolder_2();  |         |  477  |    113  |  1  |   66  |  [172,113,33,153,7]  |
  2667  |                         R = R + 2;  |      2  |  479  |    113  |  1  |   66  |  [172,113,33,153,7]  |
  2671  |                         j = j + 1;  |         |  479  |    113  |  1  |   67  |  [172,113,33,153,7]  |
  2672  |              resetPlaceHolder_2();  |         |  479  |    113  |  1  |   67  |  [172,113,33,153,7]  |
  2678  |                         R = R + 2;  |      2  |  481  |    113  |  1  |   67  |  [172,113,33,153,7]  |
  2682  |                         j = j + 1;  |         |  481  |    113  |  1  |   68  |  [172,113,33,153,7]  |
  2683  |              resetPlaceHolder_2();  |         |  481  |    113  |  1  |   68  |  [172,113,33,153,7]  |
  2689  |                         R = R + 2;  |      2  |  483  |    113  |  1  |   68  |  [172,113,33,153,7]  |
  2693  |                         j = j + 1;  |         |  483  |    113  |  1  |   69  |  [172,113,33,153,7]  |
  2694  |              resetPlaceHolder_2();  |         |  483  |    113  |  1  |   69  |  [172,113,33,153,7]  |
  2700  |                         R = R + 2;  |      2  |  485  |    113  |  1  |   69  |  [172,113,33,153,7]  |
  2704  |                         j = j + 1;  |         |  485  |    113  |  1  |   70  |  [172,113,33,153,7]  |
  2705  |              resetPlaceHolder_2();  |         |  485  |    113  |  1  |   70  |  [172,113,33,153,7]  |
  2711  |                         R = R + 2;  |      2  |  487  |    113  |  1  |   70  |  [172,113,33,153,7]  |
  2715  |                         j = j + 1;  |         |  487  |    113  |  1  |   71  |  [172,113,33,153,7]  |
  2716  |              resetPlaceHolder_2();  |         |  487  |    113  |  1  |   71  |  [172,113,33,153,7]  |
  2722  |                         R = R + 2;  |      2  |  489  |    113  |  1  |   71  |  [172,113,33,153,7]  |
  2726  |                         j = j + 1;  |         |  489  |    113  |  1  |   72  |  [172,113,33,153,7]  |
  2727  |              resetPlaceHolder_2();  |         |  489  |    113  |  1  |   72  |  [172,113,33,153,7]  |
  2733  |                         R = R + 2;  |      2  |  491  |    113  |  1  |   72  |  [172,113,33,153,7]  |
  2737  |                         j = j + 1;  |         |  491  |    113  |  1  |   73  |  [172,113,33,153,7]  |
  2738  |              resetPlaceHolder_2();  |         |  491  |    113  |  1  |   73  |  [172,113,33,153,7]  |
  2744  |                         R = R + 2;  |      2  |  493  |    113  |  1  |   73  |  [172,113,33,153,7]  |
  2748  |                         j = j + 1;  |         |  493  |    113  |  1  |   74  |  [172,113,33,153,7]  |
  2749  |              resetPlaceHolder_2();  |         |  493  |    113  |  1  |   74  |  [172,113,33,153,7]  |
  2755  |                         R = R + 2;  |      2  |  495  |    113  |  1  |   74  |  [172,113,33,153,7]  |
  2759  |                         j = j + 1;  |         |  495  |    113  |  1  |   75  |  [172,113,33,153,7]  |
  2760  |              resetPlaceHolder_2();  |         |  495  |    113  |  1  |   75  |  [172,113,33,153,7]  |
  2766  |                         R = R + 2;  |      2  |  497  |    113  |  1  |   75  |  [172,113,33,153,7]  |
  2770  |                         j = j + 1;  |         |  497  |    113  |  1  |   76  |  [172,113,33,153,7]  |
  2771  |              resetPlaceHolder_2();  |         |  497  |    113  |  1  |   76  |  [172,113,33,153,7]  |
  2777  |                         R = R + 2;  |      2  |  499  |    113  |  1  |   76  |  [172,113,33,153,7]  |
  2781  |                         j = j + 1;  |         |  499  |    113  |  1  |   77  |  [172,113,33,153,7]  |
  2782  |              resetPlaceHolder_2();  |         |  499  |    113  |  1  |   77  |  [172,113,33,153,7]  |
  2788  |                         R = R + 2;  |      2  |  501  |    113  |  1  |   77  |  [172,113,33,153,7]  |
  2792  |                         j = j + 1;  |         |  501  |    113  |  1  |   78  |  [172,113,33,153,7]  |
  2793  |              resetPlaceHolder_2();  |         |  501  |    113  |  1  |   78  |  [172,113,33,153,7]  |
  2799  |                         R = R + 2;  |      2  |  503  |    113  |  1  |   78  |  [172,113,33,153,7]  |
  2803  |                         j = j + 1;  |         |  503  |    113  |  1  |   79  |  [172,113,33,153,7]  |
  2804  |              resetPlaceHolder_2();  |         |  503  |    113  |  1  |   79  |  [172,113,33,153,7]  |
  2810  |                         R = R + 2;  |      2  |  505  |    113  |  1  |   79  |  [172,113,33,153,7]  |
  2814  |                         j = j + 1;  |         |  505  |    113  |  1  |   80  |  [172,113,33,153,7]  |
  2815  |              resetPlaceHolder_2();  |         |  505  |    113  |  1  |   80  |  [172,113,33,153,7]  |
  2821  |                         R = R + 2;  |      2  |  507  |    113  |  1  |   80  |  [172,113,33,153,7]  |
  2825  |                         j = j + 1;  |         |  507  |    113  |  1  |   81  |  [172,113,33,153,7]  |
  2826  |              resetPlaceHolder_2();  |         |  507  |    113  |  1  |   81  |  [172,113,33,153,7]  |
  2832  |                         R = R + 2;  |      2  |  509  |    113  |  1  |   81  |  [172,113,33,153,7]  |
  2836  |                         j = j + 1;  |         |  509  |    113  |  1  |   82  |  [172,113,33,153,7]  |
  2837  |              resetPlaceHolder_2();  |         |  509  |    113  |  1  |   82  |  [172,113,33,153,7]  |
  2843  |                         R = R + 2;  |      2  |  511  |    113  |  1  |   82  |  [172,113,33,153,7]  |
  2847  |                         j = j + 1;  |         |  511  |    113  |  1  |   83  |  [172,113,33,153,7]  |
  2848  |              resetPlaceHolder_2();  |         |  511  |    113  |  1  |   83  |  [172,113,33,153,7]  |
  2854  |                         R = R + 2;  |      2  |  513  |    113  |  1  |   83  |  [172,113,33,153,7]  |
  2858  |                         j = j + 1;  |         |  513  |    113  |  1  |   84  |  [172,113,33,153,7]  |
  2859  |              resetPlaceHolder_2();  |         |  513  |    113  |  1  |   84  |  [172,113,33,153,7]  |
  2865  |                         R = R + 2;  |      2  |  515  |    113  |  1  |   84  |  [172,113,33,153,7]  |
  2869  |                         j = j + 1;  |         |  515  |    113  |  1  |   85  |  [172,113,33,153,7]  |
  2870  |              resetPlaceHolder_2();  |         |  515  |    113  |  1  |   85  |  [172,113,33,153,7]  |
  2876  |                         R = R + 2;  |      2  |  517  |    113  |  1  |   85  |  [172,113,33,153,7]  |
  2880  |                         j = j + 1;  |         |  517  |    113  |  1  |   86  |  [172,113,33,153,7]  |
  2881  |              resetPlaceHolder_2();  |         |  517  |    113  |  1  |   86  |  [172,113,33,153,7]  |
  2887  |                         R = R + 2;  |      2  |  519  |    113  |  1  |   86  |  [172,113,33,153,7]  |
  2891  |                         j = j + 1;  |         |  519  |    113  |  1  |   87  |  [172,113,33,153,7]  |
  2892  |              resetPlaceHolder_2();  |         |  519  |    113  |  1  |   87  |  [172,113,33,153,7]  |
  2898  |                         R = R + 2;  |      2  |  521  |    113  |  1  |   87  |  [172,113,33,153,7]  |
  2902  |                         j = j + 1;  |         |  521  |    113  |  1  |   88  |  [172,113,33,153,7]  |
  2903  |              resetPlaceHolder_2();  |         |  521  |    113  |  1  |   88  |  [172,113,33,153,7]  |
  2909  |                         R = R + 2;  |      2  |  523  |    113  |  1  |   88  |  [172,113,33,153,7]  |
  2913  |                         j = j + 1;  |         |  523  |    113  |  1  |   89  |  [172,113,33,153,7]  |
  2914  |              resetPlaceHolder_2();  |         |  523  |    113  |  1  |   89  |  [172,113,33,153,7]  |
  2920  |                         R = R + 2;  |      2  |  525  |    113  |  1  |   89  |  [172,113,33,153,7]  |
  2924  |                         j = j + 1;  |         |  525  |    113  |  1  |   90  |  [172,113,33,153,7]  |
  2925  |              resetPlaceHolder_2();  |         |  525  |    113  |  1  |   90  |  [172,113,33,153,7]  |
  2931  |                         R = R + 2;  |      2  |  527  |    113  |  1  |   90  |  [172,113,33,153,7]  |
  2935  |                         j = j + 1;  |         |  527  |    113  |  1  |   91  |  [172,113,33,153,7]  |
  2936  |              resetPlaceHolder_2();  |         |  527  |    113  |  1  |   91  |  [172,113,33,153,7]  |
  2942  |                         R = R + 2;  |      2  |  529  |    113  |  1  |   91  |  [172,113,33,153,7]  |
  2946  |                         j = j + 1;  |         |  529  |    113  |  1  |   92  |  [172,113,33,153,7]  |
  2947  |              resetPlaceHolder_2();  |         |  529  |    113  |  1  |   92  |  [172,113,33,153,7]  |
  2953  |                         R = R + 2;  |      2  |  531  |    113  |  1  |   92  |  [172,113,33,153,7]  |
  2957  |                         j = j + 1;  |         |  531  |    113  |  1  |   93  |  [172,113,33,153,7]  |
  2958  |              resetPlaceHolder_2();  |         |  531  |    113  |  1  |   93  |  [172,113,33,153,7]  |
  2964  |                         R = R + 2;  |      2  |  533  |    113  |  1  |   93  |  [172,113,33,153,7]  |
  2968  |                         j = j + 1;  |         |  533  |    113  |  1  |   94  |  [172,113,33,153,7]  |
  2969  |              resetPlaceHolder_2();  |         |  533  |    113  |  1  |   94  |  [172,113,33,153,7]  |
  2975  |                         R = R + 2;  |      2  |  535  |    113  |  1  |   94  |  [172,113,33,153,7]  |
  2979  |                         j = j + 1;  |         |  535  |    113  |  1  |   95  |  [172,113,33,153,7]  |
  2980  |              resetPlaceHolder_2();  |         |  535  |    113  |  1  |   95  |  [172,113,33,153,7]  |
  2986  |                         R = R + 2;  |      2  |  537  |    113  |  1  |   95  |  [172,113,33,153,7]  |
  2990  |                         j = j + 1;  |         |  537  |    113  |  1  |   96  |  [172,113,33,153,7]  |
  2991  |              resetPlaceHolder_2();  |         |  537  |    113  |  1  |   96  |  [172,113,33,153,7]  |
  2997  |                         R = R + 2;  |      2  |  539  |    113  |  1  |   96  |  [172,113,33,153,7]  |
  3001  |                         j = j + 1;  |         |  539  |    113  |  1  |   97  |  [172,113,33,153,7]  |
  3002  |              resetPlaceHolder_2();  |         |  539  |    113  |  1  |   97  |  [172,113,33,153,7]  |
  3008  |                         R = R + 2;  |      2  |  541  |    113  |  1  |   97  |  [172,113,33,153,7]  |
  3012  |                         j = j + 1;  |         |  541  |    113  |  1  |   98  |  [172,113,33,153,7]  |
  3013  |              resetPlaceHolder_2();  |         |  541  |    113  |  1  |   98  |  [172,113,33,153,7]  |
  3019  |                         R = R + 2;  |      2  |  543  |    113  |  1  |   98  |  [172,113,33,153,7]  |
  3023  |                         j = j + 1;  |         |  543  |    113  |  1  |   99  |  [172,113,33,153,7]  |
  3024  |              resetPlaceHolder_2();  |         |  543  |    113  |  1  |   99  |  [172,113,33,153,7]  |
  3030  |                         R = R + 2;  |      2  |  545  |    113  |  1  |   99  |  [172,113,33,153,7]  |
  3034  |                         j = j + 1;  |         |  545  |    113  |  1  |  100  |  [172,113,33,153,7]  |
  3035  |              resetPlaceHolder_2();  |         |  545  |    113  |  1  |  100  |  [172,113,33,153,7]  |
  3041  |                         R = R + 2;  |      2  |  547  |    113  |  1  |  100  |  [172,113,33,153,7]  |
  3045  |                         j = j + 1;  |         |  547  |    113  |  1  |  101  |  [172,113,33,153,7]  |
  3046  |              resetPlaceHolder_2();  |         |  547  |    113  |  1  |  101  |  [172,113,33,153,7]  |
  3052  |                         R = R + 2;  |      2  |  549  |    113  |  1  |  101  |  [172,113,33,153,7]  |
  3056  |                         j = j + 1;  |         |  549  |    113  |  1  |  102  |  [172,113,33,153,7]  |
  3057  |              resetPlaceHolder_2();  |         |  549  |    113  |  1  |  102  |  [172,113,33,153,7]  |
  3063  |                         R = R + 2;  |      2  |  551  |    113  |  1  |  102  |  [172,113,33,153,7]  |
  3067  |                         j = j + 1;  |         |  551  |    113  |  1  |  103  |  [172,113,33,153,7]  |
  3068  |              resetPlaceHolder_2();  |         |  551  |    113  |  1  |  103  |  [172,113,33,153,7]  |
  3074  |                         R = R + 2;  |      2  |  553  |    113  |  1  |  103  |  [172,113,33,153,7]  |
  3078  |                         j = j + 1;  |         |  553  |    113  |  1  |  104  |  [172,113,33,153,7]  |
  3079  |              resetPlaceHolder_2();  |         |  553  |    113  |  1  |  104  |  [172,113,33,153,7]  |
  3085  |                         R = R + 2;  |      2  |  555  |    113  |  1  |  104  |  [172,113,33,153,7]  |
  3089  |                         j = j + 1;  |         |  555  |    113  |  1  |  105  |  [172,113,33,153,7]  |
  3090  |              resetPlaceHolder_2();  |         |  555  |    113  |  1  |  105  |  [172,113,33,153,7]  |
  3096  |                         R = R + 2;  |      2  |  557  |    113  |  1  |  105  |  [172,113,33,153,7]  |
  3100  |                         j = j + 1;  |         |  557  |    113  |  1  |  106  |  [172,113,33,153,7]  |
  3101  |              resetPlaceHolder_2();  |         |  557  |    113  |  1  |  106  |  [172,113,33,153,7]  |
  3107  |                         R = R + 2;  |      2  |  559  |    113  |  1  |  106  |  [172,113,33,153,7]  |
  3111  |                         j = j + 1;  |         |  559  |    113  |  1  |  107  |  [172,113,33,153,7]  |
  3112  |              resetPlaceHolder_2();  |         |  559  |    113  |  1  |  107  |  [172,113,33,153,7]  |
  3118  |                         R = R + 2;  |      2  |  561  |    113  |  1  |  107  |  [172,113,33,153,7]  |
  3122  |                         j = j + 1;  |         |  561  |    113  |  1  |  108  |  [172,113,33,153,7]  |
  3123  |              resetPlaceHolder_2();  |         |  561  |    113  |  1  |  108  |  [172,113,33,153,7]  |
  3129  |                         R = R + 2;  |      2  |  563  |    113  |  1  |  108  |  [172,113,33,153,7]  |
  3133  |                         j = j + 1;  |         |  563  |    113  |  1  |  109  |  [172,113,33,153,7]  |
  3134  |              resetPlaceHolder_2();  |         |  563  |    113  |  1  |  109  |  [172,113,33,153,7]  |
  3140  |                         R = R + 2;  |      2  |  565  |    113  |  1  |  109  |  [172,113,33,153,7]  |
  3144  |                         j = j + 1;  |         |  565  |    113  |  1  |  110  |  [172,113,33,153,7]  |
  3145  |              resetPlaceHolder_2();  |         |  565  |    113  |  1  |  110  |  [172,113,33,153,7]  |
  3151  |                         R = R + 2;  |      2  |  567  |    113  |  1  |  110  |  [172,113,33,153,7]  |
  3155  |                         j = j + 1;  |         |  567  |    113  |  1  |  111  |  [172,113,33,153,7]  |
  3156  |              resetPlaceHolder_2();  |         |  567  |    113  |  1  |  111  |  [172,113,33,153,7]  |
  3162  |                         R = R + 2;  |      2  |  569  |    113  |  1  |  111  |  [172,113,33,153,7]  |
  3166  |                         j = j + 1;  |         |  569  |    113  |  1  |  112  |  [172,113,33,153,7]  |
  3167  |              resetPlaceHolder_2();  |         |  569  |    113  |  1  |  112  |  [172,113,33,153,7]  |
  3173  |                         R = R + 2;  |      2  |  571  |    113  |  1  |  112  |  [172,113,33,153,7]  |
  3177  |                         j = j + 1;  |         |  571  |    113  |  1  |  113  |  [172,113,33,153,7]  |
  3178  |              resetPlaceHolder_2();  |         |  571  |    113  |  1  |  113  |  [172,113,33,153,7]  |
  3184  |                         R = R + 1;  |      1  |  572  |    113  |  1  |  113  |  [172,113,33,153,7]  |
  3188  |                         i = i + 1;  |         |  572  |    113  |  2  |  113  |  [172,113,33,153,7]  |
  3189  |              resetPlaceHolder_1();  |         |  572  |    113  |  2  |  113  |  [172,113,33,153,7]  |
  3195  |      entry = arrayRead(sorted, i);  |         |  572  |     33  |  2  |  113  |  [172,113,33,153,7]  |
  3197  |                         int j = 0;  |         |  572  |     33  |  2  |    0  |  [172,113,33,153,7]  |
  3203  |                         R = R + 2;  |      2  |  574  |     33  |  2  |    0  |  [172,113,33,153,7]  |
  3207  |                         j = j + 1;  |         |  574  |     33  |  2  |    1  |  [172,113,33,153,7]  |
  3208  |              resetPlaceHolder_2();  |         |  574  |     33  |  2  |    1  |  [172,113,33,153,7]  |
  3214  |                         R = R + 2;  |      2  |  576  |     33  |  2  |    1  |  [172,113,33,153,7]  |
  3218  |                         j = j + 1;  |         |  576  |     33  |  2  |    2  |  [172,113,33,153,7]  |
  3219  |              resetPlaceHolder_2();  |         |  576  |     33  |  2  |    2  |  [172,113,33,153,7]  |
  3225  |                         R = R + 2;  |      2  |  578  |     33  |  2  |    2  |  [172,113,33,153,7]  |
  3229  |                         j = j + 1;  |         |  578  |     33  |  2  |    3  |  [172,113,33,153,7]  |
  3230  |              resetPlaceHolder_2();  |         |  578  |     33  |  2  |    3  |  [172,113,33,153,7]  |
  3236  |                         R = R + 2;  |      2  |  580  |     33  |  2  |    3  |  [172,113,33,153,7]  |
  3240  |                         j = j + 1;  |         |  580  |     33  |  2  |    4  |  [172,113,33,153,7]  |
  3241  |              resetPlaceHolder_2();  |         |  580  |     33  |  2  |    4  |  [172,113,33,153,7]  |
  3247  |                         R = R + 2;  |      2  |  582  |     33  |  2  |    4  |  [172,113,33,153,7]  |
  3251  |                         j = j + 1;  |         |  582  |     33  |  2  |    5  |  [172,113,33,153,7]  |
  3252  |              resetPlaceHolder_2();  |         |  582  |     33  |  2  |    5  |  [172,113,33,153,7]  |
  3258  |                         R = R + 2;  |      2  |  584  |     33  |  2  |    5  |  [172,113,33,153,7]  |
  3262  |                         j = j + 1;  |         |  584  |     33  |  2  |    6  |  [172,113,33,153,7]  |
  3263  |              resetPlaceHolder_2();  |         |  584  |     33  |  2  |    6  |  [172,113,33,153,7]  |
  3269  |                         R = R + 2;  |      2  |  586  |     33  |  2  |    6  |  [172,113,33,153,7]  |
  3273  |                         j = j + 1;  |         |  586  |     33  |  2  |    7  |  [172,113,33,153,7]  |
  3274  |              resetPlaceHolder_2();  |         |  586  |     33  |  2  |    7  |  [172,113,33,153,7]  |
  3280  |                         R = R + 2;  |      2  |  588  |     33  |  2  |    7  |  [172,113,33,153,7]  |
  3284  |                         j = j + 1;  |         |  588  |     33  |  2  |    8  |  [172,113,33,153,7]  |
  3285  |              resetPlaceHolder_2();  |         |  588  |     33  |  2  |    8  |  [172,113,33,153,7]  |
  3291  |                         R = R + 2;  |      2  |  590  |     33  |  2  |    8  |  [172,113,33,153,7]  |
  3295  |                         j = j + 1;  |         |  590  |     33  |  2  |    9  |  [172,113,33,153,7]  |
  3296  |              resetPlaceHolder_2();  |         |  590  |     33  |  2  |    9  |  [172,113,33,153,7]  |
  3302  |                         R = R + 2;  |      2  |  592  |     33  |  2  |    9  |  [172,113,33,153,7]  |
  3306  |                         j = j + 1;  |         |  592  |     33  |  2  |   10  |  [172,113,33,153,7]  |
  3307  |              resetPlaceHolder_2();  |         |  592  |     33  |  2  |   10  |  [172,113,33,153,7]  |
  3313  |                         R = R + 2;  |      2  |  594  |     33  |  2  |   10  |  [172,113,33,153,7]  |
  3317  |                         j = j + 1;  |         |  594  |     33  |  2  |   11  |  [172,113,33,153,7]  |
  3318  |              resetPlaceHolder_2();  |         |  594  |     33  |  2  |   11  |  [172,113,33,153,7]  |
  3324  |                         R = R + 2;  |      2  |  596  |     33  |  2  |   11  |  [172,113,33,153,7]  |
  3328  |                         j = j + 1;  |         |  596  |     33  |  2  |   12  |  [172,113,33,153,7]  |
  3329  |              resetPlaceHolder_2();  |         |  596  |     33  |  2  |   12  |  [172,113,33,153,7]  |
  3335  |                         R = R + 2;  |      2  |  598  |     33  |  2  |   12  |  [172,113,33,153,7]  |
  3339  |                         j = j + 1;  |         |  598  |     33  |  2  |   13  |  [172,113,33,153,7]  |
  3340  |              resetPlaceHolder_2();  |         |  598  |     33  |  2  |   13  |  [172,113,33,153,7]  |
  3346  |                         R = R + 2;  |      2  |  600  |     33  |  2  |   13  |  [172,113,33,153,7]  |
  3350  |                         j = j + 1;  |         |  600  |     33  |  2  |   14  |  [172,113,33,153,7]  |
  3351  |              resetPlaceHolder_2();  |         |  600  |     33  |  2  |   14  |  [172,113,33,153,7]  |
  3357  |                         R = R + 2;  |      2  |  602  |     33  |  2  |   14  |  [172,113,33,153,7]  |
  3361  |                         j = j + 1;  |         |  602  |     33  |  2  |   15  |  [172,113,33,153,7]  |
  3362  |              resetPlaceHolder_2();  |         |  602  |     33  |  2  |   15  |  [172,113,33,153,7]  |
  3368  |                         R = R + 2;  |      2  |  604  |     33  |  2  |   15  |  [172,113,33,153,7]  |
  3372  |                         j = j + 1;  |         |  604  |     33  |  2  |   16  |  [172,113,33,153,7]  |
  3373  |              resetPlaceHolder_2();  |         |  604  |     33  |  2  |   16  |  [172,113,33,153,7]  |
  3379  |                         R = R + 2;  |      2  |  606  |     33  |  2  |   16  |  [172,113,33,153,7]  |
  3383  |                         j = j + 1;  |         |  606  |     33  |  2  |   17  |  [172,113,33,153,7]  |
  3384  |              resetPlaceHolder_2();  |         |  606  |     33  |  2  |   17  |  [172,113,33,153,7]  |
  3390  |                         R = R + 2;  |      2  |  608  |     33  |  2  |   17  |  [172,113,33,153,7]  |
  3394  |                         j = j + 1;  |         |  608  |     33  |  2  |   18  |  [172,113,33,153,7]  |
  3395  |              resetPlaceHolder_2();  |         |  608  |     33  |  2  |   18  |  [172,113,33,153,7]  |
  3401  |                         R = R + 2;  |      2  |  610  |     33  |  2  |   18  |  [172,113,33,153,7]  |
  3405  |                         j = j + 1;  |         |  610  |     33  |  2  |   19  |  [172,113,33,153,7]  |
  3406  |              resetPlaceHolder_2();  |         |  610  |     33  |  2  |   19  |  [172,113,33,153,7]  |
  3412  |                         R = R + 2;  |      2  |  612  |     33  |  2  |   19  |  [172,113,33,153,7]  |
  3416  |                         j = j + 1;  |         |  612  |     33  |  2  |   20  |  [172,113,33,153,7]  |
  3417  |              resetPlaceHolder_2();  |         |  612  |     33  |  2  |   20  |  [172,113,33,153,7]  |
  3423  |                         R = R + 2;  |      2  |  614  |     33  |  2  |   20  |  [172,113,33,153,7]  |
  3427  |                         j = j + 1;  |         |  614  |     33  |  2  |   21  |  [172,113,33,153,7]  |
  3428  |              resetPlaceHolder_2();  |         |  614  |     33  |  2  |   21  |  [172,113,33,153,7]  |
  3434  |                         R = R + 2;  |      2  |  616  |     33  |  2  |   21  |  [172,113,33,153,7]  |
  3438  |                         j = j + 1;  |         |  616  |     33  |  2  |   22  |  [172,113,33,153,7]  |
  3439  |              resetPlaceHolder_2();  |         |  616  |     33  |  2  |   22  |  [172,113,33,153,7]  |
  3445  |                         R = R + 2;  |      2  |  618  |     33  |  2  |   22  |  [172,113,33,153,7]  |
  3449  |                         j = j + 1;  |         |  618  |     33  |  2  |   23  |  [172,113,33,153,7]  |
  3450  |              resetPlaceHolder_2();  |         |  618  |     33  |  2  |   23  |  [172,113,33,153,7]  |
  3456  |                         R = R + 2;  |      2  |  620  |     33  |  2  |   23  |  [172,113,33,153,7]  |
  3460  |                         j = j + 1;  |         |  620  |     33  |  2  |   24  |  [172,113,33,153,7]  |
  3461  |              resetPlaceHolder_2();  |         |  620  |     33  |  2  |   24  |  [172,113,33,153,7]  |
  3467  |                         R = R + 2;  |      2  |  622  |     33  |  2  |   24  |  [172,113,33,153,7]  |
  3471  |                         j = j + 1;  |         |  622  |     33  |  2  |   25  |  [172,113,33,153,7]  |
  3472  |              resetPlaceHolder_2();  |         |  622  |     33  |  2  |   25  |  [172,113,33,153,7]  |
  3478  |                         R = R + 2;  |      2  |  624  |     33  |  2  |   25  |  [172,113,33,153,7]  |
  3482  |                         j = j + 1;  |         |  624  |     33  |  2  |   26  |  [172,113,33,153,7]  |
  3483  |              resetPlaceHolder_2();  |         |  624  |     33  |  2  |   26  |  [172,113,33,153,7]  |
  3489  |                         R = R + 2;  |      2  |  626  |     33  |  2  |   26  |  [172,113,33,153,7]  |
  3493  |                         j = j + 1;  |         |  626  |     33  |  2  |   27  |  [172,113,33,153,7]  |
  3494  |              resetPlaceHolder_2();  |         |  626  |     33  |  2  |   27  |  [172,113,33,153,7]  |
  3500  |                         R = R + 2;  |      2  |  628  |     33  |  2  |   27  |  [172,113,33,153,7]  |
  3504  |                         j = j + 1;  |         |  628  |     33  |  2  |   28  |  [172,113,33,153,7]  |
  3505  |              resetPlaceHolder_2();  |         |  628  |     33  |  2  |   28  |  [172,113,33,153,7]  |
  3511  |                         R = R + 2;  |      2  |  630  |     33  |  2  |   28  |  [172,113,33,153,7]  |
  3515  |                         j = j + 1;  |         |  630  |     33  |  2  |   29  |  [172,113,33,153,7]  |
  3516  |              resetPlaceHolder_2();  |         |  630  |     33  |  2  |   29  |  [172,113,33,153,7]  |
  3522  |                         R = R + 2;  |      2  |  632  |     33  |  2  |   29  |  [172,113,33,153,7]  |
  3526  |                         j = j + 1;  |         |  632  |     33  |  2  |   30  |  [172,113,33,153,7]  |
  3527  |              resetPlaceHolder_2();  |         |  632  |     33  |  2  |   30  |  [172,113,33,153,7]  |
  3533  |                         R = R + 2;  |      2  |  634  |     33  |  2  |   30  |  [172,113,33,153,7]  |
  3537  |                         j = j + 1;  |         |  634  |     33  |  2  |   31  |  [172,113,33,153,7]  |
  3538  |              resetPlaceHolder_2();  |         |  634  |     33  |  2  |   31  |  [172,113,33,153,7]  |
  3544  |                         R = R + 2;  |      2  |  636  |     33  |  2  |   31  |  [172,113,33,153,7]  |
  3548  |                         j = j + 1;  |         |  636  |     33  |  2  |   32  |  [172,113,33,153,7]  |
  3549  |              resetPlaceHolder_2();  |         |  636  |     33  |  2  |   32  |  [172,113,33,153,7]  |
  3555  |                         R = R + 2;  |      2  |  638  |     33  |  2  |   32  |  [172,113,33,153,7]  |
  3559  |                         j = j + 1;  |         |  638  |     33  |  2  |   33  |  [172,113,33,153,7]  |
  3560  |              resetPlaceHolder_2();  |         |  638  |     33  |  2  |   33  |  [172,113,33,153,7]  |
  3566  |                         R = R + 1;  |      1  |  639  |     33  |  2  |   33  |  [172,113,33,153,7]  |
  3570  |                         i = i + 1;  |         |  639  |     33  |  3  |   33  |  [172,113,33,153,7]  |
  3571  |              resetPlaceHolder_1();  |         |  639  |     33  |  3  |   33  |  [172,113,33,153,7]  |
  3577  |      entry = arrayRead(sorted, i);  |         |  639  |    153  |  3  |   33  |  [172,113,33,153,7]  |
  3579  |                         int j = 0;  |         |  639  |    153  |  3  |    0  |  [172,113,33,153,7]  |
  3585  |                         R = R + 2;  |      2  |  641  |    153  |  3  |    0  |  [172,113,33,153,7]  |
  3589  |                         j = j + 1;  |         |  641  |    153  |  3  |    1  |  [172,113,33,153,7]  |
  3590  |              resetPlaceHolder_2();  |         |  641  |    153  |  3  |    1  |  [172,113,33,153,7]  |
  3596  |                         R = R + 2;  |      2  |  643  |    153  |  3  |    1  |  [172,113,33,153,7]  |
  3600  |                         j = j + 1;  |         |  643  |    153  |  3  |    2  |  [172,113,33,153,7]  |
  3601  |              resetPlaceHolder_2();  |         |  643  |    153  |  3  |    2  |  [172,113,33,153,7]  |
  3607  |                         R = R + 2;  |      2  |  645  |    153  |  3  |    2  |  [172,113,33,153,7]  |
  3611  |                         j = j + 1;  |         |  645  |    153  |  3  |    3  |  [172,113,33,153,7]  |
  3612  |              resetPlaceHolder_2();  |         |  645  |    153  |  3  |    3  |  [172,113,33,153,7]  |
  3618  |                         R = R + 2;  |      2  |  647  |    153  |  3  |    3  |  [172,113,33,153,7]  |
  3622  |                         j = j + 1;  |         |  647  |    153  |  3  |    4  |  [172,113,33,153,7]  |
  3623  |              resetPlaceHolder_2();  |         |  647  |    153  |  3  |    4  |  [172,113,33,153,7]  |
  3629  |                         R = R + 2;  |      2  |  649  |    153  |  3  |    4  |  [172,113,33,153,7]  |
  3633  |                         j = j + 1;  |         |  649  |    153  |  3  |    5  |  [172,113,33,153,7]  |
  3634  |              resetPlaceHolder_2();  |         |  649  |    153  |  3  |    5  |  [172,113,33,153,7]  |
  3640  |                         R = R + 2;  |      2  |  651  |    153  |  3  |    5  |  [172,113,33,153,7]  |
  3644  |                         j = j + 1;  |         |  651  |    153  |  3  |    6  |  [172,113,33,153,7]  |
  3645  |              resetPlaceHolder_2();  |         |  651  |    153  |  3  |    6  |  [172,113,33,153,7]  |
  3651  |                         R = R + 2;  |      2  |  653  |    153  |  3  |    6  |  [172,113,33,153,7]  |
  3655  |                         j = j + 1;  |         |  653  |    153  |  3  |    7  |  [172,113,33,153,7]  |
  3656  |              resetPlaceHolder_2();  |         |  653  |    153  |  3  |    7  |  [172,113,33,153,7]  |
  3662  |                         R = R + 2;  |      2  |  655  |    153  |  3  |    7  |  [172,113,33,153,7]  |
  3666  |                         j = j + 1;  |         |  655  |    153  |  3  |    8  |  [172,113,33,153,7]  |
  3667  |              resetPlaceHolder_2();  |         |  655  |    153  |  3  |    8  |  [172,113,33,153,7]  |
  3673  |                         R = R + 2;  |      2  |  657  |    153  |  3  |    8  |  [172,113,33,153,7]  |
  3677  |                         j = j + 1;  |         |  657  |    153  |  3  |    9  |  [172,113,33,153,7]  |
  3678  |              resetPlaceHolder_2();  |         |  657  |    153  |  3  |    9  |  [172,113,33,153,7]  |
  3684  |                         R = R + 2;  |      2  |  659  |    153  |  3  |    9  |  [172,113,33,153,7]  |
  3688  |                         j = j + 1;  |         |  659  |    153  |  3  |   10  |  [172,113,33,153,7]  |
  3689  |              resetPlaceHolder_2();  |         |  659  |    153  |  3  |   10  |  [172,113,33,153,7]  |
  3695  |                         R = R + 2;  |      2  |  661  |    153  |  3  |   10  |  [172,113,33,153,7]  |
  3699  |                         j = j + 1;  |         |  661  |    153  |  3  |   11  |  [172,113,33,153,7]  |
  3700  |              resetPlaceHolder_2();  |         |  661  |    153  |  3  |   11  |  [172,113,33,153,7]  |
  3706  |                         R = R + 2;  |      2  |  663  |    153  |  3  |   11  |  [172,113,33,153,7]  |
  3710  |                         j = j + 1;  |         |  663  |    153  |  3  |   12  |  [172,113,33,153,7]  |
  3711  |              resetPlaceHolder_2();  |         |  663  |    153  |  3  |   12  |  [172,113,33,153,7]  |
  3717  |                         R = R + 2;  |      2  |  665  |    153  |  3  |   12  |  [172,113,33,153,7]  |
  3721  |                         j = j + 1;  |         |  665  |    153  |  3  |   13  |  [172,113,33,153,7]  |
  3722  |              resetPlaceHolder_2();  |         |  665  |    153  |  3  |   13  |  [172,113,33,153,7]  |
  3728  |                         R = R + 2;  |      2  |  667  |    153  |  3  |   13  |  [172,113,33,153,7]  |
  3732  |                         j = j + 1;  |         |  667  |    153  |  3  |   14  |  [172,113,33,153,7]  |
  3733  |              resetPlaceHolder_2();  |         |  667  |    153  |  3  |   14  |  [172,113,33,153,7]  |
  3739  |                         R = R + 2;  |      2  |  669  |    153  |  3  |   14  |  [172,113,33,153,7]  |
  3743  |                         j = j + 1;  |         |  669  |    153  |  3  |   15  |  [172,113,33,153,7]  |
  3744  |              resetPlaceHolder_2();  |         |  669  |    153  |  3  |   15  |  [172,113,33,153,7]  |
  3750  |                         R = R + 2;  |      2  |  671  |    153  |  3  |   15  |  [172,113,33,153,7]  |
  3754  |                         j = j + 1;  |         |  671  |    153  |  3  |   16  |  [172,113,33,153,7]  |
  3755  |              resetPlaceHolder_2();  |         |  671  |    153  |  3  |   16  |  [172,113,33,153,7]  |
  3761  |                         R = R + 2;  |      2  |  673  |    153  |  3  |   16  |  [172,113,33,153,7]  |
  3765  |                         j = j + 1;  |         |  673  |    153  |  3  |   17  |  [172,113,33,153,7]  |
  3766  |              resetPlaceHolder_2();  |         |  673  |    153  |  3  |   17  |  [172,113,33,153,7]  |
  3772  |                         R = R + 2;  |      2  |  675  |    153  |  3  |   17  |  [172,113,33,153,7]  |
  3776  |                         j = j + 1;  |         |  675  |    153  |  3  |   18  |  [172,113,33,153,7]  |
  3777  |              resetPlaceHolder_2();  |         |  675  |    153  |  3  |   18  |  [172,113,33,153,7]  |
  3783  |                         R = R + 2;  |      2  |  677  |    153  |  3  |   18  |  [172,113,33,153,7]  |
  3787  |                         j = j + 1;  |         |  677  |    153  |  3  |   19  |  [172,113,33,153,7]  |
  3788  |              resetPlaceHolder_2();  |         |  677  |    153  |  3  |   19  |  [172,113,33,153,7]  |
  3794  |                         R = R + 2;  |      2  |  679  |    153  |  3  |   19  |  [172,113,33,153,7]  |
  3798  |                         j = j + 1;  |         |  679  |    153  |  3  |   20  |  [172,113,33,153,7]  |
  3799  |              resetPlaceHolder_2();  |         |  679  |    153  |  3  |   20  |  [172,113,33,153,7]  |
  3805  |                         R = R + 2;  |      2  |  681  |    153  |  3  |   20  |  [172,113,33,153,7]  |
  3809  |                         j = j + 1;  |         |  681  |    153  |  3  |   21  |  [172,113,33,153,7]  |
  3810  |              resetPlaceHolder_2();  |         |  681  |    153  |  3  |   21  |  [172,113,33,153,7]  |
  3816  |                         R = R + 2;  |      2  |  683  |    153  |  3  |   21  |  [172,113,33,153,7]  |
  3820  |                         j = j + 1;  |         |  683  |    153  |  3  |   22  |  [172,113,33,153,7]  |
  3821  |              resetPlaceHolder_2();  |         |  683  |    153  |  3  |   22  |  [172,113,33,153,7]  |
  3827  |                         R = R + 2;  |      2  |  685  |    153  |  3  |   22  |  [172,113,33,153,7]  |
  3831  |                         j = j + 1;  |         |  685  |    153  |  3  |   23  |  [172,113,33,153,7]  |
  3832  |              resetPlaceHolder_2();  |         |  685  |    153  |  3  |   23  |  [172,113,33,153,7]  |
  3838  |                         R = R + 2;  |      2  |  687  |    153  |  3  |   23  |  [172,113,33,153,7]  |
  3842  |                         j = j + 1;  |         |  687  |    153  |  3  |   24  |  [172,113,33,153,7]  |
  3843  |              resetPlaceHolder_2();  |         |  687  |    153  |  3  |   24  |  [172,113,33,153,7]  |
  3849  |                         R = R + 2;  |      2  |  689  |    153  |  3  |   24  |  [172,113,33,153,7]  |
  3853  |                         j = j + 1;  |         |  689  |    153  |  3  |   25  |  [172,113,33,153,7]  |
  3854  |              resetPlaceHolder_2();  |         |  689  |    153  |  3  |   25  |  [172,113,33,153,7]  |
  3860  |                         R = R + 2;  |      2  |  691  |    153  |  3  |   25  |  [172,113,33,153,7]  |
  3864  |                         j = j + 1;  |         |  691  |    153  |  3  |   26  |  [172,113,33,153,7]  |
  3865  |              resetPlaceHolder_2();  |         |  691  |    153  |  3  |   26  |  [172,113,33,153,7]  |
  3871  |                         R = R + 2;  |      2  |  693  |    153  |  3  |   26  |  [172,113,33,153,7]  |
  3875  |                         j = j + 1;  |         |  693  |    153  |  3  |   27  |  [172,113,33,153,7]  |
  3876  |              resetPlaceHolder_2();  |         |  693  |    153  |  3  |   27  |  [172,113,33,153,7]  |
  3882  |                         R = R + 2;  |      2  |  695  |    153  |  3  |   27  |  [172,113,33,153,7]  |
  3886  |                         j = j + 1;  |         |  695  |    153  |  3  |   28  |  [172,113,33,153,7]  |
  3887  |              resetPlaceHolder_2();  |         |  695  |    153  |  3  |   28  |  [172,113,33,153,7]  |
  3893  |                         R = R + 2;  |      2  |  697  |    153  |  3  |   28  |  [172,113,33,153,7]  |
  3897  |                         j = j + 1;  |         |  697  |    153  |  3  |   29  |  [172,113,33,153,7]  |
  3898  |              resetPlaceHolder_2();  |         |  697  |    153  |  3  |   29  |  [172,113,33,153,7]  |
  3904  |                         R = R + 2;  |      2  |  699  |    153  |  3  |   29  |  [172,113,33,153,7]  |
  3908  |                         j = j + 1;  |         |  699  |    153  |  3  |   30  |  [172,113,33,153,7]  |
  3909  |              resetPlaceHolder_2();  |         |  699  |    153  |  3  |   30  |  [172,113,33,153,7]  |
  3915  |                         R = R + 2;  |      2  |  701  |    153  |  3  |   30  |  [172,113,33,153,7]  |
  3919  |                         j = j + 1;  |         |  701  |    153  |  3  |   31  |  [172,113,33,153,7]  |
  3920  |              resetPlaceHolder_2();  |         |  701  |    153  |  3  |   31  |  [172,113,33,153,7]  |
  3926  |                         R = R + 2;  |      2  |  703  |    153  |  3  |   31  |  [172,113,33,153,7]  |
  3930  |                         j = j + 1;  |         |  703  |    153  |  3  |   32  |  [172,113,33,153,7]  |
  3931  |              resetPlaceHolder_2();  |         |  703  |    153  |  3  |   32  |  [172,113,33,153,7]  |
  3937  |                         R = R + 2;  |      2  |  705  |    153  |  3  |   32  |  [172,113,33,153,7]  |
  3941  |                         j = j + 1;  |         |  705  |    153  |  3  |   33  |  [172,113,33,153,7]  |
  3942  |              resetPlaceHolder_2();  |         |  705  |    153  |  3  |   33  |  [172,113,33,153,7]  |
  3948  |                         R = R + 2;  |      2  |  707  |    153  |  3  |   33  |  [172,113,33,153,7]  |
  3952  |                         j = j + 1;  |         |  707  |    153  |  3  |   34  |  [172,113,33,153,7]  |
  3953  |              resetPlaceHolder_2();  |         |  707  |    153  |  3  |   34  |  [172,113,33,153,7]  |
  3959  |                         R = R + 2;  |      2  |  709  |    153  |  3  |   34  |  [172,113,33,153,7]  |
  3963  |                         j = j + 1;  |         |  709  |    153  |  3  |   35  |  [172,113,33,153,7]  |
  3964  |              resetPlaceHolder_2();  |         |  709  |    153  |  3  |   35  |  [172,113,33,153,7]  |
  3970  |                         R = R + 2;  |      2  |  711  |    153  |  3  |   35  |  [172,113,33,153,7]  |
  3974  |                         j = j + 1;  |         |  711  |    153  |  3  |   36  |  [172,113,33,153,7]  |
  3975  |              resetPlaceHolder_2();  |         |  711  |    153  |  3  |   36  |  [172,113,33,153,7]  |
  3981  |                         R = R + 2;  |      2  |  713  |    153  |  3  |   36  |  [172,113,33,153,7]  |
  3985  |                         j = j + 1;  |         |  713  |    153  |  3  |   37  |  [172,113,33,153,7]  |
  3986  |              resetPlaceHolder_2();  |         |  713  |    153  |  3  |   37  |  [172,113,33,153,7]  |
  3992  |                         R = R + 2;  |      2  |  715  |    153  |  3  |   37  |  [172,113,33,153,7]  |
  3996  |                         j = j + 1;  |         |  715  |    153  |  3  |   38  |  [172,113,33,153,7]  |
  3997  |              resetPlaceHolder_2();  |         |  715  |    153  |  3  |   38  |  [172,113,33,153,7]  |
  4003  |                         R = R + 2;  |      2  |  717  |    153  |  3  |   38  |  [172,113,33,153,7]  |
  4007  |                         j = j + 1;  |         |  717  |    153  |  3  |   39  |  [172,113,33,153,7]  |
  4008  |              resetPlaceHolder_2();  |         |  717  |    153  |  3  |   39  |  [172,113,33,153,7]  |
  4014  |                         R = R + 2;  |      2  |  719  |    153  |  3  |   39  |  [172,113,33,153,7]  |
  4018  |                         j = j + 1;  |         |  719  |    153  |  3  |   40  |  [172,113,33,153,7]  |
  4019  |              resetPlaceHolder_2();  |         |  719  |    153  |  3  |   40  |  [172,113,33,153,7]  |
  4025  |                         R = R + 2;  |      2  |  721  |    153  |  3  |   40  |  [172,113,33,153,7]  |
  4029  |                         j = j + 1;  |         |  721  |    153  |  3  |   41  |  [172,113,33,153,7]  |
  4030  |              resetPlaceHolder_2();  |         |  721  |    153  |  3  |   41  |  [172,113,33,153,7]  |
  4036  |                         R = R + 2;  |      2  |  723  |    153  |  3  |   41  |  [172,113,33,153,7]  |
  4040  |                         j = j + 1;  |         |  723  |    153  |  3  |   42  |  [172,113,33,153,7]  |
  4041  |              resetPlaceHolder_2();  |         |  723  |    153  |  3  |   42  |  [172,113,33,153,7]  |
  4047  |                         R = R + 2;  |      2  |  725  |    153  |  3  |   42  |  [172,113,33,153,7]  |
  4051  |                         j = j + 1;  |         |  725  |    153  |  3  |   43  |  [172,113,33,153,7]  |
  4052  |              resetPlaceHolder_2();  |         |  725  |    153  |  3  |   43  |  [172,113,33,153,7]  |
  4058  |                         R = R + 2;  |      2  |  727  |    153  |  3  |   43  |  [172,113,33,153,7]  |
  4062  |                         j = j + 1;  |         |  727  |    153  |  3  |   44  |  [172,113,33,153,7]  |
  4063  |              resetPlaceHolder_2();  |         |  727  |    153  |  3  |   44  |  [172,113,33,153,7]  |
  4069  |                         R = R + 2;  |      2  |  729  |    153  |  3  |   44  |  [172,113,33,153,7]  |
  4073  |                         j = j + 1;  |         |  729  |    153  |  3  |   45  |  [172,113,33,153,7]  |
  4074  |              resetPlaceHolder_2();  |         |  729  |    153  |  3  |   45  |  [172,113,33,153,7]  |
  4080  |                         R = R + 2;  |      2  |  731  |    153  |  3  |   45  |  [172,113,33,153,7]  |
  4084  |                         j = j + 1;  |         |  731  |    153  |  3  |   46  |  [172,113,33,153,7]  |
  4085  |              resetPlaceHolder_2();  |         |  731  |    153  |  3  |   46  |  [172,113,33,153,7]  |
  4091  |                         R = R + 2;  |      2  |  733  |    153  |  3  |   46  |  [172,113,33,153,7]  |
  4095  |                         j = j + 1;  |         |  733  |    153  |  3  |   47  |  [172,113,33,153,7]  |
  4096  |              resetPlaceHolder_2();  |         |  733  |    153  |  3  |   47  |  [172,113,33,153,7]  |
  4102  |                         R = R + 2;  |      2  |  735  |    153  |  3  |   47  |  [172,113,33,153,7]  |
  4106  |                         j = j + 1;  |         |  735  |    153  |  3  |   48  |  [172,113,33,153,7]  |
  4107  |              resetPlaceHolder_2();  |         |  735  |    153  |  3  |   48  |  [172,113,33,153,7]  |
  4113  |                         R = R + 2;  |      2  |  737  |    153  |  3  |   48  |  [172,113,33,153,7]  |
  4117  |                         j = j + 1;  |         |  737  |    153  |  3  |   49  |  [172,113,33,153,7]  |
  4118  |              resetPlaceHolder_2();  |         |  737  |    153  |  3  |   49  |  [172,113,33,153,7]  |
  4124  |                         R = R + 2;  |      2  |  739  |    153  |  3  |   49  |  [172,113,33,153,7]  |
  4128  |                         j = j + 1;  |         |  739  |    153  |  3  |   50  |  [172,113,33,153,7]  |
  4129  |              resetPlaceHolder_2();  |         |  739  |    153  |  3  |   50  |  [172,113,33,153,7]  |
  4135  |                         R = R + 2;  |      2  |  741  |    153  |  3  |   50  |  [172,113,33,153,7]  |
  4139  |                         j = j + 1;  |         |  741  |    153  |  3  |   51  |  [172,113,33,153,7]  |
  4140  |              resetPlaceHolder_2();  |         |  741  |    153  |  3  |   51  |  [172,113,33,153,7]  |
  4146  |                         R = R + 2;  |      2  |  743  |    153  |  3  |   51  |  [172,113,33,153,7]  |
  4150  |                         j = j + 1;  |         |  743  |    153  |  3  |   52  |  [172,113,33,153,7]  |
  4151  |              resetPlaceHolder_2();  |         |  743  |    153  |  3  |   52  |  [172,113,33,153,7]  |
  4157  |                         R = R + 2;  |      2  |  745  |    153  |  3  |   52  |  [172,113,33,153,7]  |
  4161  |                         j = j + 1;  |         |  745  |    153  |  3  |   53  |  [172,113,33,153,7]  |
  4162  |              resetPlaceHolder_2();  |         |  745  |    153  |  3  |   53  |  [172,113,33,153,7]  |
  4168  |                         R = R + 2;  |      2  |  747  |    153  |  3  |   53  |  [172,113,33,153,7]  |
  4172  |                         j = j + 1;  |         |  747  |    153  |  3  |   54  |  [172,113,33,153,7]  |
  4173  |              resetPlaceHolder_2();  |         |  747  |    153  |  3  |   54  |  [172,113,33,153,7]  |
  4179  |                         R = R + 2;  |      2  |  749  |    153  |  3  |   54  |  [172,113,33,153,7]  |
  4183  |                         j = j + 1;  |         |  749  |    153  |  3  |   55  |  [172,113,33,153,7]  |
  4184  |              resetPlaceHolder_2();  |         |  749  |    153  |  3  |   55  |  [172,113,33,153,7]  |
  4190  |                         R = R + 2;  |      2  |  751  |    153  |  3  |   55  |  [172,113,33,153,7]  |
  4194  |                         j = j + 1;  |         |  751  |    153  |  3  |   56  |  [172,113,33,153,7]  |
  4195  |              resetPlaceHolder_2();  |         |  751  |    153  |  3  |   56  |  [172,113,33,153,7]  |
  4201  |                         R = R + 2;  |      2  |  753  |    153  |  3  |   56  |  [172,113,33,153,7]  |
  4205  |                         j = j + 1;  |         |  753  |    153  |  3  |   57  |  [172,113,33,153,7]  |
  4206  |              resetPlaceHolder_2();  |         |  753  |    153  |  3  |   57  |  [172,113,33,153,7]  |
  4212  |                         R = R + 2;  |      2  |  755  |    153  |  3  |   57  |  [172,113,33,153,7]  |
  4216  |                         j = j + 1;  |         |  755  |    153  |  3  |   58  |  [172,113,33,153,7]  |
  4217  |              resetPlaceHolder_2();  |         |  755  |    153  |  3  |   58  |  [172,113,33,153,7]  |
  4223  |                         R = R + 2;  |      2  |  757  |    153  |  3  |   58  |  [172,113,33,153,7]  |
  4227  |                         j = j + 1;  |         |  757  |    153  |  3  |   59  |  [172,113,33,153,7]  |
  4228  |              resetPlaceHolder_2();  |         |  757  |    153  |  3  |   59  |  [172,113,33,153,7]  |
  4234  |                         R = R + 2;  |      2  |  759  |    153  |  3  |   59  |  [172,113,33,153,7]  |
  4238  |                         j = j + 1;  |         |  759  |    153  |  3  |   60  |  [172,113,33,153,7]  |
  4239  |              resetPlaceHolder_2();  |         |  759  |    153  |  3  |   60  |  [172,113,33,153,7]  |
  4245  |                         R = R + 2;  |      2  |  761  |    153  |  3  |   60  |  [172,113,33,153,7]  |
  4249  |                         j = j + 1;  |         |  761  |    153  |  3  |   61  |  [172,113,33,153,7]  |
  4250  |              resetPlaceHolder_2();  |         |  761  |    153  |  3  |   61  |  [172,113,33,153,7]  |
  4256  |                         R = R + 2;  |      2  |  763  |    153  |  3  |   61  |  [172,113,33,153,7]  |
  4260  |                         j = j + 1;  |         |  763  |    153  |  3  |   62  |  [172,113,33,153,7]  |
  4261  |              resetPlaceHolder_2();  |         |  763  |    153  |  3  |   62  |  [172,113,33,153,7]  |
  4267  |                         R = R + 2;  |      2  |  765  |    153  |  3  |   62  |  [172,113,33,153,7]  |
  4271  |                         j = j + 1;  |         |  765  |    153  |  3  |   63  |  [172,113,33,153,7]  |
  4272  |              resetPlaceHolder_2();  |         |  765  |    153  |  3  |   63  |  [172,113,33,153,7]  |
  4278  |                         R = R + 2;  |      2  |  767  |    153  |  3  |   63  |  [172,113,33,153,7]  |
  4282  |                         j = j + 1;  |         |  767  |    153  |  3  |   64  |  [172,113,33,153,7]  |
  4283  |              resetPlaceHolder_2();  |         |  767  |    153  |  3  |   64  |  [172,113,33,153,7]  |
  4289  |                         R = R + 2;  |      2  |  769  |    153  |  3  |   64  |  [172,113,33,153,7]  |
  4293  |                         j = j + 1;  |         |  769  |    153  |  3  |   65  |  [172,113,33,153,7]  |
  4294  |              resetPlaceHolder_2();  |         |  769  |    153  |  3  |   65  |  [172,113,33,153,7]  |
  4300  |                         R = R + 2;  |      2  |  771  |    153  |  3  |   65  |  [172,113,33,153,7]  |
  4304  |                         j = j + 1;  |         |  771  |    153  |  3  |   66  |  [172,113,33,153,7]  |
  4305  |              resetPlaceHolder_2();  |         |  771  |    153  |  3  |   66  |  [172,113,33,153,7]  |
  4311  |                         R = R + 2;  |      2  |  773  |    153  |  3  |   66  |  [172,113,33,153,7]  |
  4315  |                         j = j + 1;  |         |  773  |    153  |  3  |   67  |  [172,113,33,153,7]  |
  4316  |              resetPlaceHolder_2();  |         |  773  |    153  |  3  |   67  |  [172,113,33,153,7]  |
  4322  |                         R = R + 2;  |      2  |  775  |    153  |  3  |   67  |  [172,113,33,153,7]  |
  4326  |                         j = j + 1;  |         |  775  |    153  |  3  |   68  |  [172,113,33,153,7]  |
  4327  |              resetPlaceHolder_2();  |         |  775  |    153  |  3  |   68  |  [172,113,33,153,7]  |
  4333  |                         R = R + 2;  |      2  |  777  |    153  |  3  |   68  |  [172,113,33,153,7]  |
  4337  |                         j = j + 1;  |         |  777  |    153  |  3  |   69  |  [172,113,33,153,7]  |
  4338  |              resetPlaceHolder_2();  |         |  777  |    153  |  3  |   69  |  [172,113,33,153,7]  |
  4344  |                         R = R + 2;  |      2  |  779  |    153  |  3  |   69  |  [172,113,33,153,7]  |
  4348  |                         j = j + 1;  |         |  779  |    153  |  3  |   70  |  [172,113,33,153,7]  |
  4349  |              resetPlaceHolder_2();  |         |  779  |    153  |  3  |   70  |  [172,113,33,153,7]  |
  4355  |                         R = R + 2;  |      2  |  781  |    153  |  3  |   70  |  [172,113,33,153,7]  |
  4359  |                         j = j + 1;  |         |  781  |    153  |  3  |   71  |  [172,113,33,153,7]  |
  4360  |              resetPlaceHolder_2();  |         |  781  |    153  |  3  |   71  |  [172,113,33,153,7]  |
  4366  |                         R = R + 2;  |      2  |  783  |    153  |  3  |   71  |  [172,113,33,153,7]  |
  4370  |                         j = j + 1;  |         |  783  |    153  |  3  |   72  |  [172,113,33,153,7]  |
  4371  |              resetPlaceHolder_2();  |         |  783  |    153  |  3  |   72  |  [172,113,33,153,7]  |
  4377  |                         R = R + 2;  |      2  |  785  |    153  |  3  |   72  |  [172,113,33,153,7]  |
  4381  |                         j = j + 1;  |         |  785  |    153  |  3  |   73  |  [172,113,33,153,7]  |
  4382  |              resetPlaceHolder_2();  |         |  785  |    153  |  3  |   73  |  [172,113,33,153,7]  |
  4388  |                         R = R + 2;  |      2  |  787  |    153  |  3  |   73  |  [172,113,33,153,7]  |
  4392  |                         j = j + 1;  |         |  787  |    153  |  3  |   74  |  [172,113,33,153,7]  |
  4393  |              resetPlaceHolder_2();  |         |  787  |    153  |  3  |   74  |  [172,113,33,153,7]  |
  4399  |                         R = R + 2;  |      2  |  789  |    153  |  3  |   74  |  [172,113,33,153,7]  |
  4403  |                         j = j + 1;  |         |  789  |    153  |  3  |   75  |  [172,113,33,153,7]  |
  4404  |              resetPlaceHolder_2();  |         |  789  |    153  |  3  |   75  |  [172,113,33,153,7]  |
  4410  |                         R = R + 2;  |      2  |  791  |    153  |  3  |   75  |  [172,113,33,153,7]  |
  4414  |                         j = j + 1;  |         |  791  |    153  |  3  |   76  |  [172,113,33,153,7]  |
  4415  |              resetPlaceHolder_2();  |         |  791  |    153  |  3  |   76  |  [172,113,33,153,7]  |
  4421  |                         R = R + 2;  |      2  |  793  |    153  |  3  |   76  |  [172,113,33,153,7]  |
  4425  |                         j = j + 1;  |         |  793  |    153  |  3  |   77  |  [172,113,33,153,7]  |
  4426  |              resetPlaceHolder_2();  |         |  793  |    153  |  3  |   77  |  [172,113,33,153,7]  |
  4432  |                         R = R + 2;  |      2  |  795  |    153  |  3  |   77  |  [172,113,33,153,7]  |
  4436  |                         j = j + 1;  |         |  795  |    153  |  3  |   78  |  [172,113,33,153,7]  |
  4437  |              resetPlaceHolder_2();  |         |  795  |    153  |  3  |   78  |  [172,113,33,153,7]  |
  4443  |                         R = R + 2;  |      2  |  797  |    153  |  3  |   78  |  [172,113,33,153,7]  |
  4447  |                         j = j + 1;  |         |  797  |    153  |  3  |   79  |  [172,113,33,153,7]  |
  4448  |              resetPlaceHolder_2();  |         |  797  |    153  |  3  |   79  |  [172,113,33,153,7]  |
  4454  |                         R = R + 2;  |      2  |  799  |    153  |  3  |   79  |  [172,113,33,153,7]  |
  4458  |                         j = j + 1;  |         |  799  |    153  |  3  |   80  |  [172,113,33,153,7]  |
  4459  |              resetPlaceHolder_2();  |         |  799  |    153  |  3  |   80  |  [172,113,33,153,7]  |
  4465  |                         R = R + 2;  |      2  |  801  |    153  |  3  |   80  |  [172,113,33,153,7]  |
  4469  |                         j = j + 1;  |         |  801  |    153  |  3  |   81  |  [172,113,33,153,7]  |
  4470  |              resetPlaceHolder_2();  |         |  801  |    153  |  3  |   81  |  [172,113,33,153,7]  |
  4476  |                         R = R + 2;  |      2  |  803  |    153  |  3  |   81  |  [172,113,33,153,7]  |
  4480  |                         j = j + 1;  |         |  803  |    153  |  3  |   82  |  [172,113,33,153,7]  |
  4481  |              resetPlaceHolder_2();  |         |  803  |    153  |  3  |   82  |  [172,113,33,153,7]  |
  4487  |                         R = R + 2;  |      2  |  805  |    153  |  3  |   82  |  [172,113,33,153,7]  |
  4491  |                         j = j + 1;  |         |  805  |    153  |  3  |   83  |  [172,113,33,153,7]  |
  4492  |              resetPlaceHolder_2();  |         |  805  |    153  |  3  |   83  |  [172,113,33,153,7]  |
  4498  |                         R = R + 2;  |      2  |  807  |    153  |  3  |   83  |  [172,113,33,153,7]  |
  4502  |                         j = j + 1;  |         |  807  |    153  |  3  |   84  |  [172,113,33,153,7]  |
  4503  |              resetPlaceHolder_2();  |         |  807  |    153  |  3  |   84  |  [172,113,33,153,7]  |
  4509  |                         R = R + 2;  |      2  |  809  |    153  |  3  |   84  |  [172,113,33,153,7]  |
  4513  |                         j = j + 1;  |         |  809  |    153  |  3  |   85  |  [172,113,33,153,7]  |
  4514  |              resetPlaceHolder_2();  |         |  809  |    153  |  3  |   85  |  [172,113,33,153,7]  |
  4520  |                         R = R + 2;  |      2  |  811  |    153  |  3  |   85  |  [172,113,33,153,7]  |
  4524  |                         j = j + 1;  |         |  811  |    153  |  3  |   86  |  [172,113,33,153,7]  |
  4525  |              resetPlaceHolder_2();  |         |  811  |    153  |  3  |   86  |  [172,113,33,153,7]  |
  4531  |                         R = R + 2;  |      2  |  813  |    153  |  3  |   86  |  [172,113,33,153,7]  |
  4535  |                         j = j + 1;  |         |  813  |    153  |  3  |   87  |  [172,113,33,153,7]  |
  4536  |              resetPlaceHolder_2();  |         |  813  |    153  |  3  |   87  |  [172,113,33,153,7]  |
  4542  |                         R = R + 2;  |      2  |  815  |    153  |  3  |   87  |  [172,113,33,153,7]  |
  4546  |                         j = j + 1;  |         |  815  |    153  |  3  |   88  |  [172,113,33,153,7]  |
  4547  |              resetPlaceHolder_2();  |         |  815  |    153  |  3  |   88  |  [172,113,33,153,7]  |
  4553  |                         R = R + 2;  |      2  |  817  |    153  |  3  |   88  |  [172,113,33,153,7]  |
  4557  |                         j = j + 1;  |         |  817  |    153  |  3  |   89  |  [172,113,33,153,7]  |
  4558  |              resetPlaceHolder_2();  |         |  817  |    153  |  3  |   89  |  [172,113,33,153,7]  |
  4564  |                         R = R + 2;  |      2  |  819  |    153  |  3  |   89  |  [172,113,33,153,7]  |
  4568  |                         j = j + 1;  |         |  819  |    153  |  3  |   90  |  [172,113,33,153,7]  |
  4569  |              resetPlaceHolder_2();  |         |  819  |    153  |  3  |   90  |  [172,113,33,153,7]  |
  4575  |                         R = R + 2;  |      2  |  821  |    153  |  3  |   90  |  [172,113,33,153,7]  |
  4579  |                         j = j + 1;  |         |  821  |    153  |  3  |   91  |  [172,113,33,153,7]  |
  4580  |              resetPlaceHolder_2();  |         |  821  |    153  |  3  |   91  |  [172,113,33,153,7]  |
  4586  |                         R = R + 2;  |      2  |  823  |    153  |  3  |   91  |  [172,113,33,153,7]  |
  4590  |                         j = j + 1;  |         |  823  |    153  |  3  |   92  |  [172,113,33,153,7]  |
  4591  |              resetPlaceHolder_2();  |         |  823  |    153  |  3  |   92  |  [172,113,33,153,7]  |
  4597  |                         R = R + 2;  |      2  |  825  |    153  |  3  |   92  |  [172,113,33,153,7]  |
  4601  |                         j = j + 1;  |         |  825  |    153  |  3  |   93  |  [172,113,33,153,7]  |
  4602  |              resetPlaceHolder_2();  |         |  825  |    153  |  3  |   93  |  [172,113,33,153,7]  |
  4608  |                         R = R + 2;  |      2  |  827  |    153  |  3  |   93  |  [172,113,33,153,7]  |
  4612  |                         j = j + 1;  |         |  827  |    153  |  3  |   94  |  [172,113,33,153,7]  |
  4613  |              resetPlaceHolder_2();  |         |  827  |    153  |  3  |   94  |  [172,113,33,153,7]  |
  4619  |                         R = R + 2;  |      2  |  829  |    153  |  3  |   94  |  [172,113,33,153,7]  |
  4623  |                         j = j + 1;  |         |  829  |    153  |  3  |   95  |  [172,113,33,153,7]  |
  4624  |              resetPlaceHolder_2();  |         |  829  |    153  |  3  |   95  |  [172,113,33,153,7]  |
  4630  |                         R = R + 2;  |      2  |  831  |    153  |  3  |   95  |  [172,113,33,153,7]  |
  4634  |                         j = j + 1;  |         |  831  |    153  |  3  |   96  |  [172,113,33,153,7]  |
  4635  |              resetPlaceHolder_2();  |         |  831  |    153  |  3  |   96  |  [172,113,33,153,7]  |
  4641  |                         R = R + 2;  |      2  |  833  |    153  |  3  |   96  |  [172,113,33,153,7]  |
  4645  |                         j = j + 1;  |         |  833  |    153  |  3  |   97  |  [172,113,33,153,7]  |
  4646  |              resetPlaceHolder_2();  |         |  833  |    153  |  3  |   97  |  [172,113,33,153,7]  |
  4652  |                         R = R + 2;  |      2  |  835  |    153  |  3  |   97  |  [172,113,33,153,7]  |
  4656  |                         j = j + 1;  |         |  835  |    153  |  3  |   98  |  [172,113,33,153,7]  |
  4657  |              resetPlaceHolder_2();  |         |  835  |    153  |  3  |   98  |  [172,113,33,153,7]  |
  4663  |                         R = R + 2;  |      2  |  837  |    153  |  3  |   98  |  [172,113,33,153,7]  |
  4667  |                         j = j + 1;  |         |  837  |    153  |  3  |   99  |  [172,113,33,153,7]  |
  4668  |              resetPlaceHolder_2();  |         |  837  |    153  |  3  |   99  |  [172,113,33,153,7]  |
  4674  |                         R = R + 2;  |      2  |  839  |    153  |  3  |   99  |  [172,113,33,153,7]  |
  4678  |                         j = j + 1;  |         |  839  |    153  |  3  |  100  |  [172,113,33,153,7]  |
  4679  |              resetPlaceHolder_2();  |         |  839  |    153  |  3  |  100  |  [172,113,33,153,7]  |
  4685  |                         R = R + 2;  |      2  |  841  |    153  |  3  |  100  |  [172,113,33,153,7]  |
  4689  |                         j = j + 1;  |         |  841  |    153  |  3  |  101  |  [172,113,33,153,7]  |
  4690  |              resetPlaceHolder_2();  |         |  841  |    153  |  3  |  101  |  [172,113,33,153,7]  |
  4696  |                         R = R + 2;  |      2  |  843  |    153  |  3  |  101  |  [172,113,33,153,7]  |
  4700  |                         j = j + 1;  |         |  843  |    153  |  3  |  102  |  [172,113,33,153,7]  |
  4701  |              resetPlaceHolder_2();  |         |  843  |    153  |  3  |  102  |  [172,113,33,153,7]  |
  4707  |                         R = R + 2;  |      2  |  845  |    153  |  3  |  102  |  [172,113,33,153,7]  |
  4711  |                         j = j + 1;  |         |  845  |    153  |  3  |  103  |  [172,113,33,153,7]  |
  4712  |              resetPlaceHolder_2();  |         |  845  |    153  |  3  |  103  |  [172,113,33,153,7]  |
  4718  |                         R = R + 2;  |      2  |  847  |    153  |  3  |  103  |  [172,113,33,153,7]  |
  4722  |                         j = j + 1;  |         |  847  |    153  |  3  |  104  |  [172,113,33,153,7]  |
  4723  |              resetPlaceHolder_2();  |         |  847  |    153  |  3  |  104  |  [172,113,33,153,7]  |
  4729  |                         R = R + 2;  |      2  |  849  |    153  |  3  |  104  |  [172,113,33,153,7]  |
  4733  |                         j = j + 1;  |         |  849  |    153  |  3  |  105  |  [172,113,33,153,7]  |
  4734  |              resetPlaceHolder_2();  |         |  849  |    153  |  3  |  105  |  [172,113,33,153,7]  |
  4740  |                         R = R + 2;  |      2  |  851  |    153  |  3  |  105  |  [172,113,33,153,7]  |
  4744  |                         j = j + 1;  |         |  851  |    153  |  3  |  106  |  [172,113,33,153,7]  |
  4745  |              resetPlaceHolder_2();  |         |  851  |    153  |  3  |  106  |  [172,113,33,153,7]  |
  4751  |                         R = R + 2;  |      2  |  853  |    153  |  3  |  106  |  [172,113,33,153,7]  |
  4755  |                         j = j + 1;  |         |  853  |    153  |  3  |  107  |  [172,113,33,153,7]  |
  4756  |              resetPlaceHolder_2();  |         |  853  |    153  |  3  |  107  |  [172,113,33,153,7]  |
  4762  |                         R = R + 2;  |      2  |  855  |    153  |  3  |  107  |  [172,113,33,153,7]  |
  4766  |                         j = j + 1;  |         |  855  |    153  |  3  |  108  |  [172,113,33,153,7]  |
  4767  |              resetPlaceHolder_2();  |         |  855  |    153  |  3  |  108  |  [172,113,33,153,7]  |
  4773  |                         R = R + 2;  |      2  |  857  |    153  |  3  |  108  |  [172,113,33,153,7]  |
  4777  |                         j = j + 1;  |         |  857  |    153  |  3  |  109  |  [172,113,33,153,7]  |
  4778  |              resetPlaceHolder_2();  |         |  857  |    153  |  3  |  109  |  [172,113,33,153,7]  |
  4784  |                         R = R + 2;  |      2  |  859  |    153  |  3  |  109  |  [172,113,33,153,7]  |
  4788  |                         j = j + 1;  |         |  859  |    153  |  3  |  110  |  [172,113,33,153,7]  |
  4789  |              resetPlaceHolder_2();  |         |  859  |    153  |  3  |  110  |  [172,113,33,153,7]  |
  4795  |                         R = R + 2;  |      2  |  861  |    153  |  3  |  110  |  [172,113,33,153,7]  |
  4799  |                         j = j + 1;  |         |  861  |    153  |  3  |  111  |  [172,113,33,153,7]  |
  4800  |              resetPlaceHolder_2();  |         |  861  |    153  |  3  |  111  |  [172,113,33,153,7]  |
  4806  |                         R = R + 2;  |      2  |  863  |    153  |  3  |  111  |  [172,113,33,153,7]  |
  4810  |                         j = j + 1;  |         |  863  |    153  |  3  |  112  |  [172,113,33,153,7]  |
  4811  |              resetPlaceHolder_2();  |         |  863  |    153  |  3  |  112  |  [172,113,33,153,7]  |
  4817  |                         R = R + 2;  |      2  |  865  |    153  |  3  |  112  |  [172,113,33,153,7]  |
  4821  |                         j = j + 1;  |         |  865  |    153  |  3  |  113  |  [172,113,33,153,7]  |
  4822  |              resetPlaceHolder_2();  |         |  865  |    153  |  3  |  113  |  [172,113,33,153,7]  |
  4828  |                         R = R + 2;  |      2  |  867  |    153  |  3  |  113  |  [172,113,33,153,7]  |
  4832  |                         j = j + 1;  |         |  867  |    153  |  3  |  114  |  [172,113,33,153,7]  |
  4833  |              resetPlaceHolder_2();  |         |  867  |    153  |  3  |  114  |  [172,113,33,153,7]  |
  4839  |                         R = R + 2;  |      2  |  869  |    153  |  3  |  114  |  [172,113,33,153,7]  |
  4843  |                         j = j + 1;  |         |  869  |    153  |  3  |  115  |  [172,113,33,153,7]  |
  4844  |              resetPlaceHolder_2();  |         |  869  |    153  |  3  |  115  |  [172,113,33,153,7]  |
  4850  |                         R = R + 2;  |      2  |  871  |    153  |  3  |  115  |  [172,113,33,153,7]  |
  4854  |                         j = j + 1;  |         |  871  |    153  |  3  |  116  |  [172,113,33,153,7]  |
  4855  |              resetPlaceHolder_2();  |         |  871  |    153  |  3  |  116  |  [172,113,33,153,7]  |
  4861  |                         R = R + 2;  |      2  |  873  |    153  |  3  |  116  |  [172,113,33,153,7]  |
  4865  |                         j = j + 1;  |         |  873  |    153  |  3  |  117  |  [172,113,33,153,7]  |
  4866  |              resetPlaceHolder_2();  |         |  873  |    153  |  3  |  117  |  [172,113,33,153,7]  |
  4872  |                         R = R + 2;  |      2  |  875  |    153  |  3  |  117  |  [172,113,33,153,7]  |
  4876  |                         j = j + 1;  |         |  875  |    153  |  3  |  118  |  [172,113,33,153,7]  |
  4877  |              resetPlaceHolder_2();  |         |  875  |    153  |  3  |  118  |  [172,113,33,153,7]  |
  4883  |                         R = R + 2;  |      2  |  877  |    153  |  3  |  118  |  [172,113,33,153,7]  |
  4887  |                         j = j + 1;  |         |  877  |    153  |  3  |  119  |  [172,113,33,153,7]  |
  4888  |              resetPlaceHolder_2();  |         |  877  |    153  |  3  |  119  |  [172,113,33,153,7]  |
  4894  |                         R = R + 2;  |      2  |  879  |    153  |  3  |  119  |  [172,113,33,153,7]  |
  4898  |                         j = j + 1;  |         |  879  |    153  |  3  |  120  |  [172,113,33,153,7]  |
  4899  |              resetPlaceHolder_2();  |         |  879  |    153  |  3  |  120  |  [172,113,33,153,7]  |
  4905  |                         R = R + 2;  |      2  |  881  |    153  |  3  |  120  |  [172,113,33,153,7]  |
  4909  |                         j = j + 1;  |         |  881  |    153  |  3  |  121  |  [172,113,33,153,7]  |
  4910  |              resetPlaceHolder_2();  |         |  881  |    153  |  3  |  121  |  [172,113,33,153,7]  |
  4916  |                         R = R + 2;  |      2  |  883  |    153  |  3  |  121  |  [172,113,33,153,7]  |
  4920  |                         j = j + 1;  |         |  883  |    153  |  3  |  122  |  [172,113,33,153,7]  |
  4921  |              resetPlaceHolder_2();  |         |  883  |    153  |  3  |  122  |  [172,113,33,153,7]  |
  4927  |                         R = R + 2;  |      2  |  885  |    153  |  3  |  122  |  [172,113,33,153,7]  |
  4931  |                         j = j + 1;  |         |  885  |    153  |  3  |  123  |  [172,113,33,153,7]  |
  4932  |              resetPlaceHolder_2();  |         |  885  |    153  |  3  |  123  |  [172,113,33,153,7]  |
  4938  |                         R = R + 2;  |      2  |  887  |    153  |  3  |  123  |  [172,113,33,153,7]  |
  4942  |                         j = j + 1;  |         |  887  |    153  |  3  |  124  |  [172,113,33,153,7]  |
  4943  |              resetPlaceHolder_2();  |         |  887  |    153  |  3  |  124  |  [172,113,33,153,7]  |
  4949  |                         R = R + 2;  |      2  |  889  |    153  |  3  |  124  |  [172,113,33,153,7]  |
  4953  |                         j = j + 1;  |         |  889  |    153  |  3  |  125  |  [172,113,33,153,7]  |
  4954  |              resetPlaceHolder_2();  |         |  889  |    153  |  3  |  125  |  [172,113,33,153,7]  |
  4960  |                         R = R + 2;  |      2  |  891  |    153  |  3  |  125  |  [172,113,33,153,7]  |
  4964  |                         j = j + 1;  |         |  891  |    153  |  3  |  126  |  [172,113,33,153,7]  |
  4965  |              resetPlaceHolder_2();  |         |  891  |    153  |  3  |  126  |  [172,113,33,153,7]  |
  4971  |                         R = R + 2;  |      2  |  893  |    153  |  3  |  126  |  [172,113,33,153,7]  |
  4975  |                         j = j + 1;  |         |  893  |    153  |  3  |  127  |  [172,113,33,153,7]  |
  4976  |              resetPlaceHolder_2();  |         |  893  |    153  |  3  |  127  |  [172,113,33,153,7]  |
  4982  |                         R = R + 2;  |      2  |  895  |    153  |  3  |  127  |  [172,113,33,153,7]  |
  4986  |                         j = j + 1;  |         |  895  |    153  |  3  |  128  |  [172,113,33,153,7]  |
  4987  |              resetPlaceHolder_2();  |         |  895  |    153  |  3  |  128  |  [172,113,33,153,7]  |
  4993  |                         R = R + 2;  |      2  |  897  |    153  |  3  |  128  |  [172,113,33,153,7]  |
  4997  |                         j = j + 1;  |         |  897  |    153  |  3  |  129  |  [172,113,33,153,7]  |
  4998  |              resetPlaceHolder_2();  |         |  897  |    153  |  3  |  129  |  [172,113,33,153,7]  |
  5004  |                         R = R + 2;  |      2  |  899  |    153  |  3  |  129  |  [172,113,33,153,7]  |
  5008  |                         j = j + 1;  |         |  899  |    153  |  3  |  130  |  [172,113,33,153,7]  |
  5009  |              resetPlaceHolder_2();  |         |  899  |    153  |  3  |  130  |  [172,113,33,153,7]  |
  5015  |                         R = R + 2;  |      2  |  901  |    153  |  3  |  130  |  [172,113,33,153,7]  |
  5019  |                         j = j + 1;  |         |  901  |    153  |  3  |  131  |  [172,113,33,153,7]  |
  5020  |              resetPlaceHolder_2();  |         |  901  |    153  |  3  |  131  |  [172,113,33,153,7]  |
  5026  |                         R = R + 2;  |      2  |  903  |    153  |  3  |  131  |  [172,113,33,153,7]  |
  5030  |                         j = j + 1;  |         |  903  |    153  |  3  |  132  |  [172,113,33,153,7]  |
  5031  |              resetPlaceHolder_2();  |         |  903  |    153  |  3  |  132  |  [172,113,33,153,7]  |
  5037  |                         R = R + 2;  |      2  |  905  |    153  |  3  |  132  |  [172,113,33,153,7]  |
  5041  |                         j = j + 1;  |         |  905  |    153  |  3  |  133  |  [172,113,33,153,7]  |
  5042  |              resetPlaceHolder_2();  |         |  905  |    153  |  3  |  133  |  [172,113,33,153,7]  |
  5048  |                         R = R + 2;  |      2  |  907  |    153  |  3  |  133  |  [172,113,33,153,7]  |
  5052  |                         j = j + 1;  |         |  907  |    153  |  3  |  134  |  [172,113,33,153,7]  |
  5053  |              resetPlaceHolder_2();  |         |  907  |    153  |  3  |  134  |  [172,113,33,153,7]  |
  5059  |                         R = R + 2;  |      2  |  909  |    153  |  3  |  134  |  [172,113,33,153,7]  |
  5063  |                         j = j + 1;  |         |  909  |    153  |  3  |  135  |  [172,113,33,153,7]  |
  5064  |              resetPlaceHolder_2();  |         |  909  |    153  |  3  |  135  |  [172,113,33,153,7]  |
  5070  |                         R = R + 2;  |      2  |  911  |    153  |  3  |  135  |  [172,113,33,153,7]  |
  5074  |                         j = j + 1;  |         |  911  |    153  |  3  |  136  |  [172,113,33,153,7]  |
  5075  |              resetPlaceHolder_2();  |         |  911  |    153  |  3  |  136  |  [172,113,33,153,7]  |
  5081  |                         R = R + 2;  |      2  |  913  |    153  |  3  |  136  |  [172,113,33,153,7]  |
  5085  |                         j = j + 1;  |         |  913  |    153  |  3  |  137  |  [172,113,33,153,7]  |
  5086  |              resetPlaceHolder_2();  |         |  913  |    153  |  3  |  137  |  [172,113,33,153,7]  |
  5092  |                         R = R + 2;  |      2  |  915  |    153  |  3  |  137  |  [172,113,33,153,7]  |
  5096  |                         j = j + 1;  |         |  915  |    153  |  3  |  138  |  [172,113,33,153,7]  |
  5097  |              resetPlaceHolder_2();  |         |  915  |    153  |  3  |  138  |  [172,113,33,153,7]  |
  5103  |                         R = R + 2;  |      2  |  917  |    153  |  3  |  138  |  [172,113,33,153,7]  |
  5107  |                         j = j + 1;  |         |  917  |    153  |  3  |  139  |  [172,113,33,153,7]  |
  5108  |              resetPlaceHolder_2();  |         |  917  |    153  |  3  |  139  |  [172,113,33,153,7]  |
  5114  |                         R = R + 2;  |      2  |  919  |    153  |  3  |  139  |  [172,113,33,153,7]  |
  5118  |                         j = j + 1;  |         |  919  |    153  |  3  |  140  |  [172,113,33,153,7]  |
  5119  |              resetPlaceHolder_2();  |         |  919  |    153  |  3  |  140  |  [172,113,33,153,7]  |
  5125  |                         R = R + 2;  |      2  |  921  |    153  |  3  |  140  |  [172,113,33,153,7]  |
  5129  |                         j = j + 1;  |         |  921  |    153  |  3  |  141  |  [172,113,33,153,7]  |
  5130  |              resetPlaceHolder_2();  |         |  921  |    153  |  3  |  141  |  [172,113,33,153,7]  |
  5136  |                         R = R + 2;  |      2  |  923  |    153  |  3  |  141  |  [172,113,33,153,7]  |
  5140  |                         j = j + 1;  |         |  923  |    153  |  3  |  142  |  [172,113,33,153,7]  |
  5141  |              resetPlaceHolder_2();  |         |  923  |    153  |  3  |  142  |  [172,113,33,153,7]  |
  5147  |                         R = R + 2;  |      2  |  925  |    153  |  3  |  142  |  [172,113,33,153,7]  |
  5151  |                         j = j + 1;  |         |  925  |    153  |  3  |  143  |  [172,113,33,153,7]  |
  5152  |              resetPlaceHolder_2();  |         |  925  |    153  |  3  |  143  |  [172,113,33,153,7]  |
  5158  |                         R = R + 2;  |      2  |  927  |    153  |  3  |  143  |  [172,113,33,153,7]  |
  5162  |                         j = j + 1;  |         |  927  |    153  |  3  |  144  |  [172,113,33,153,7]  |
  5163  |              resetPlaceHolder_2();  |         |  927  |    153  |  3  |  144  |  [172,113,33,153,7]  |
  5169  |                         R = R + 2;  |      2  |  929  |    153  |  3  |  144  |  [172,113,33,153,7]  |
  5173  |                         j = j + 1;  |         |  929  |    153  |  3  |  145  |  [172,113,33,153,7]  |
  5174  |              resetPlaceHolder_2();  |         |  929  |    153  |  3  |  145  |  [172,113,33,153,7]  |
  5180  |                         R = R + 2;  |      2  |  931  |    153  |  3  |  145  |  [172,113,33,153,7]  |
  5184  |                         j = j + 1;  |         |  931  |    153  |  3  |  146  |  [172,113,33,153,7]  |
  5185  |              resetPlaceHolder_2();  |         |  931  |    153  |  3  |  146  |  [172,113,33,153,7]  |
  5191  |                         R = R + 2;  |      2  |  933  |    153  |  3  |  146  |  [172,113,33,153,7]  |
  5195  |                         j = j + 1;  |         |  933  |    153  |  3  |  147  |  [172,113,33,153,7]  |
  5196  |              resetPlaceHolder_2();  |         |  933  |    153  |  3  |  147  |  [172,113,33,153,7]  |
  5202  |                         R = R + 2;  |      2  |  935  |    153  |  3  |  147  |  [172,113,33,153,7]  |
  5206  |                         j = j + 1;  |         |  935  |    153  |  3  |  148  |  [172,113,33,153,7]  |
  5207  |              resetPlaceHolder_2();  |         |  935  |    153  |  3  |  148  |  [172,113,33,153,7]  |
  5213  |                         R = R + 2;  |      2  |  937  |    153  |  3  |  148  |  [172,113,33,153,7]  |
  5217  |                         j = j + 1;  |         |  937  |    153  |  3  |  149  |  [172,113,33,153,7]  |
  5218  |              resetPlaceHolder_2();  |         |  937  |    153  |  3  |  149  |  [172,113,33,153,7]  |
  5224  |                         R = R + 2;  |      2  |  939  |    153  |  3  |  149  |  [172,113,33,153,7]  |
  5228  |                         j = j + 1;  |         |  939  |    153  |  3  |  150  |  [172,113,33,153,7]  |
  5229  |              resetPlaceHolder_2();  |         |  939  |    153  |  3  |  150  |  [172,113,33,153,7]  |
  5235  |                         R = R + 2;  |      2  |  941  |    153  |  3  |  150  |  [172,113,33,153,7]  |
  5239  |                         j = j + 1;  |         |  941  |    153  |  3  |  151  |  [172,113,33,153,7]  |
  5240  |              resetPlaceHolder_2();  |         |  941  |    153  |  3  |  151  |  [172,113,33,153,7]  |
  5246  |                         R = R + 2;  |      2  |  943  |    153  |  3  |  151  |  [172,113,33,153,7]  |
  5250  |                         j = j + 1;  |         |  943  |    153  |  3  |  152  |  [172,113,33,153,7]  |
  5251  |              resetPlaceHolder_2();  |         |  943  |    153  |  3  |  152  |  [172,113,33,153,7]  |
  5257  |                         R = R + 2;  |      2  |  945  |    153  |  3  |  152  |  [172,113,33,153,7]  |
  5261  |                         j = j + 1;  |         |  945  |    153  |  3  |  153  |  [172,113,33,153,7]  |
  5262  |              resetPlaceHolder_2();  |         |  945  |    153  |  3  |  153  |  [172,113,33,153,7]  |
  5268  |                         R = R + 1;  |      1  |  946  |    153  |  3  |  153  |  [172,113,33,153,7]  |
  5272  |                         i = i + 1;  |         |  946  |    153  |  4  |  153  |  [172,113,33,153,7]  |
  5273  |              resetPlaceHolder_1();  |         |  946  |    153  |  4  |  153  |  [172,113,33,153,7]  |
  5279  |      entry = arrayRead(sorted, i);  |         |  946  |      7  |  4  |  153  |  [172,113,33,153,7]  |
  5281  |                         int j = 0;  |         |  946  |      7  |  4  |    0  |  [172,113,33,153,7]  |
  5287  |                         R = R + 2;  |      2  |  948  |      7  |  4  |    0  |  [172,113,33,153,7]  |
  5291  |                         j = j + 1;  |         |  948  |      7  |  4  |    1  |  [172,113,33,153,7]  |
  5292  |              resetPlaceHolder_2();  |         |  948  |      7  |  4  |    1  |  [172,113,33,153,7]  |
  5298  |                         R = R + 2;  |      2  |  950  |      7  |  4  |    1  |  [172,113,33,153,7]  |
  5302  |                         j = j + 1;  |         |  950  |      7  |  4  |    2  |  [172,113,33,153,7]  |
  5303  |              resetPlaceHolder_2();  |         |  950  |      7  |  4  |    2  |  [172,113,33,153,7]  |
  5309  |                         R = R + 2;  |      2  |  952  |      7  |  4  |    2  |  [172,113,33,153,7]  |
  5313  |                         j = j + 1;  |         |  952  |      7  |  4  |    3  |  [172,113,33,153,7]  |
  5314  |              resetPlaceHolder_2();  |         |  952  |      7  |  4  |    3  |  [172,113,33,153,7]  |
  5320  |                         R = R + 2;  |      2  |  954  |      7  |  4  |    3  |  [172,113,33,153,7]  |
  5324  |                         j = j + 1;  |         |  954  |      7  |  4  |    4  |  [172,113,33,153,7]  |
  5325  |              resetPlaceHolder_2();  |         |  954  |      7  |  4  |    4  |  [172,113,33,153,7]  |
  5331  |                         R = R + 2;  |      2  |  956  |      7  |  4  |    4  |  [172,113,33,153,7]  |
  5335  |                         j = j + 1;  |         |  956  |      7  |  4  |    5  |  [172,113,33,153,7]  |
  5336  |              resetPlaceHolder_2();  |         |  956  |      7  |  4  |    5  |  [172,113,33,153,7]  |
  5342  |                         R = R + 2;  |      2  |  958  |      7  |  4  |    5  |  [172,113,33,153,7]  |
  5346  |                         j = j + 1;  |         |  958  |      7  |  4  |    6  |  [172,113,33,153,7]  |
  5347  |              resetPlaceHolder_2();  |         |  958  |      7  |  4  |    6  |  [172,113,33,153,7]  |
  5353  |                         R = R + 2;  |      2  |  960  |      7  |  4  |    6  |  [172,113,33,153,7]  |
  5357  |                         j = j + 1;  |         |  960  |      7  |  4  |    7  |  [172,113,33,153,7]  |
  5358  |              resetPlaceHolder_2();  |         |  960  |      7  |  4  |    7  |  [172,113,33,153,7]  |
  5364  |                         R = R + 1;  |      1  |  961  |      7  |  4  |    7  |  [172,113,33,153,7]  |
  5368  |                         i = i + 1;  |         |  961  |      7  |  5  |    7  |  [172,113,33,153,7]  |
  5369  |              resetPlaceHolder_1();  |         |  961  |      7  |  5  |    7  |  [172,113,33,153,7]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [4201, 2612, 2744, 1823, 3008, 5136, 1559, 4729, 3434, 2876, 5320, 1031, 2480, 3566, 1295, 481, 2117, 217, 4311, 2381, 2062, 2953, 2590, 3959, 4960, 5224, 2282, 2854, 4487, 4234, 5037, 3794, 4575, 4839, 1735, 1867, 5257, 4564, 4058, 3313, 3717, 4762, 404, 3335, 1196, 4047, 1746, 2216, 3236, 3629, 2348, 2491, 3915, 2227, 4124, 4916, 3140, 1724, 4322, 1482, 5342, 52, 1985, 184, 2667, 2755, 3280, 1922, 2403, 4179, 228, 448, 316, 1963, 261, 3258, 4432, 2007, 4696, 492, 756, 789, 4443, 591, 1911, 4454, 2469, 646, 514, 1383, 1020, 3357, 1581, 2777, 2073, 602, 2964, 5059, 4718, 4751, 5353, 3739, 877, 734, 866, 1119, 1394, 5246, 1526, 5169, 998, 2799, 1405, 4707, 2392, 74, 2205, 3184, 206, 5298, 3151, 1691, 1438, 85, 1306, 4531, 5070, 1768, 1636, 1163, 1900, 910, 2601, 3827, 2733, 2249, 778, 1042, 349, 1570, 1174, 4344, 4091, 3816, 2150, 2986, 2414, 3948, 3269, 3618, 4608, 3750, 4553, 4740, 3926, 4080, 3445, 1350, 3467, 1592, 1328, 2359, 1064, 1856, 1878, 4883, 5081, 4817, 1493, 4333, 1361, 3728, 3596, 1075, 4421, 4938, 5213, 4861, 2172, 1207, 1889, 3555, 679, 547, 96, 393, 701, 2304, 1974, 173, 3390, 3937, 129, 569, 3247, 4135, 2766, 41, 3074, 5026, 4069, 371, 3162, 503, 4223, 2370, 2634, 2788, 1086, 3225, 2546, 1779, 360, 4212, 3173, 4476, 921, 657, 558, 1515, 4036, 2645, 1185, 1996, 888, 2909, 965, 1251, 4685, 4872, 1680, 3871, 3607, 1273, 4256, 1548, 5048, 745, 2524, 2260, 2568, 4465, 118, 2161, 1669, 3118, 382, 2029, 2326, 2293, 3651, 3695, 5331, 3783, 2557, 2425, 5158, 3302, 4245, 4498, 2084, 5103, 4828, 1603, 4586, 1801, 3500, 4300, 4773, 4509, 4388, 3456, 5114, 811, 1471, 5202, 1339, 140, 4850, 4652, 1460, 5180, 943, 4993, 668, 932, 1952, 3893, 3838, 2051, 3423, 2139, 2931, 3706, 2535, 3522, 426, 162, 2271, 3981, 4113, 4355, 4168, 3849, 2942, 2513, 1845, 525, 712, 580, 855, 3640, 690, 63, 5125, 4366, 3214, 3904, 327, 1647, 1941, 954, 3129, 2678, 4641, 2821, 4894, 4971, 4377, 4630, 2689, 2656, 3019, 1053, 5235, 4905, 1790, 4190, 3063, 2920, 2700, 5015, 4003, 1262, 2337, 2128, 5309, 1317, 338, 3544, 470, 1658, 4982, 3412, 1130, 1218, 3041, 5147, 3107, 3970, 1141, 1702, 613, 1284, 2975, 2843, 2711, 2579, 1427, 1504, 5364, 2722, 4267, 1372, 4795, 3684, 1240, 2865, 250, 3478, 4289, 4278, 2458, 3401, 1834, 3533, 976, 2194, 2997, 4102, 3346, 844, 1108, 4806, 5191, 4542, 3368, 3662, 3085, 2447, 3324, 3585, 2183, 272, 899, 2095, 2315, 2623, 3761, 4927, 4025, 536, 4619, 5287, 1614, 800, 3992, 3379, 151, 4014, 4399, 3860, 3511, 3291, 833, 1097, 5004, 5268, 1229, 30, 3882, 1625, 1757, 4663, 4597, 3203, 305, 4146, 107, 239, 294, 5092, 195, 437, 4157, 767, 3030, 635, 2040, 3673, 3805, 283, 415, 624, 2502, 987, 2810, 1152, 2898, 1537, 3772, 459, 3489, 723, 4410, 822, 1713, 4674, 4520, 1009, 3096, 4784, 2887, 4949, 2018, 2832, 2436, 2238, 1416, 3052, 1449, 1812, 2106]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [4201, 2612, 2744, 1823, 3008, 5136, 1559, 4729, 3434, 2876, 5320, 1031, 2480, 3566, 1295, 481, 2117, 217, 4311, 2381, 2062, 2953, 2590, 3959, 4960, 5224, 2282, 2854, 4487, 4234, 5037, 3794, 4575, 4839, 1735, 1867, 5257, 4564, 4058, 3313, 3717, 4762, 404, 3335, 1196, 4047, 1746, 2216, 3236, 3629, 2348, 2491, 3915, 2227, 4124, 4916, 3140, 1724, 4322, 1482, 5342, 52, 1985, 184, 2667, 2755, 3280, 1922, 2403, 4179, 228, 448, 316, 1963, 261, 3258, 4432, 2007, 4696, 492, 756, 789, 4443, 591, 1911, 4454, 2469, 646, 514, 1383, 1020, 3357, 1581, 2777, 2073, 602, 2964, 5059, 4718, 4751, 5353, 3739, 877, 734, 866, 1119, 1394, 5246, 1526, 5169, 998, 2799, 1405, 4707, 2392, 74, 2205, 3184, 206, 5298, 3151, 1691, 1438, 85, 1306, 4531, 5070, 1768, 1636, 1163, 1900, 910, 2601, 3827, 2733, 2249, 778, 1042, 349, 1570, 1174, 4344, 4091, 3816, 2150, 2986, 2414, 3948, 3269, 3618, 4608, 3750, 4553, 4740, 3926, 4080, 3445, 1350, 3467, 1592, 1328, 2359, 1064, 1856, 1878, 4883, 5081, 4817, 1493, 4333, 1361, 3728, 3596, 1075, 4421, 4938, 5213, 4861, 2172, 1207, 1889, 3555, 679, 547, 96, 393, 701, 2304, 1974, 173, 3390, 3937, 129, 569, 3247, 4135, 2766, 41, 3074, 5026, 4069, 371, 3162, 503, 4223, 2370, 2634, 2788, 1086, 3225, 2546, 1779, 360, 4212, 3173, 4476, 921, 657, 558, 1515, 4036, 2645, 1185, 1996, 888, 2909, 965, 1251, 4685, 4872, 1680, 3871, 3607, 1273, 4256, 1548, 5048, 745, 2524, 2260, 2568, 4465, 118, 2161, 1669, 3118, 382, 2029, 2326, 2293, 3651, 3695, 5331, 3783, 2557, 2425, 5158, 3302, 4245, 4498, 2084, 5103, 4828, 1603, 4586, 1801, 3500, 4300, 4773, 4509, 4388, 3456, 5114, 811, 1471, 5202, 1339, 140, 4850, 4652, 1460, 5180, 943, 4993, 668, 932, 1952, 3893, 3838, 2051, 3423, 2139, 2931, 3706, 2535, 3522, 426, 162, 2271, 3981, 4113, 4355, 4168, 3849, 2942, 2513, 1845, 525, 712, 580, 855, 3640, 690, 63, 5125, 4366, 3214, 3904, 327, 1647, 1941, 954, 3129, 2678, 4641, 2821, 4894, 4971, 4377, 4630, 2689, 2656, 3019, 1053, 5235, 4905, 1790, 4190, 3063, 2920, 2700, 5015, 4003, 1262, 2337, 2128, 5309, 1317, 338, 3544, 470, 1658, 4982, 3412, 1130, 1218, 3041, 5147, 3107, 3970, 1141, 1702, 613, 1284, 2975, 2843, 2711, 2579, 1427, 1504, 5364, 2722, 4267, 1372, 4795, 3684, 1240, 2865, 250, 3478, 4289, 4278, 2458, 3401, 1834, 3533, 976, 2194, 2997, 4102, 3346, 844, 1108, 4806, 5191, 4542, 3368, 3662, 3085, 2447, 3324, 3585, 2183, 272, 899, 2095, 2315, 2623, 3761, 4927, 4025, 536, 4619, 5287, 1614, 800, 3992, 3379, 151, 4014, 4399, 3860, 3511, 3291, 833, 1097, 5004, 5268, 1229, 30, 3882, 1625, 1757, 4663, 4597, 3203, 305, 4146, 107, 239, 294, 5092, 195, 437, 4157, 767, 3030, 635, 2040, 3673, 3805, 283, 415, 624, 2502, 987, 2810, 1152, 2898, 1537, 3772, 459, 3489, 723, 4410, 822, 1713, 4674, 4520, 1009, 3096, 4784, 2887, 4949, 2018, 2832, 2436, 2238, 1416, 3052, 1449, 1812, 2106]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [4201, 2612, 2744, 1823, 3008, 5136, 1559, 4729, 3434, 2876, 5320, 1031, 2480, 3566, 1295, 481, 2117, 217, 4311, 2381, 2062, 2953, 2590, 3959, 4960, 5224, 2282, 2854, 4487, 4234, 5037, 3794, 4575, 4839, 1735, 1867, 5257, 4564, 4058, 3313, 3717, 4762, 404, 3335, 1196, 4047, 1746, 2216, 3236, 3629, 2348, 2491, 3915, 2227, 4124, 4916, 3140, 1724, 4322, 1482, 5342, 52, 1985, 184, 2667, 2755, 3280, 1922, 2403, 4179, 228, 448, 316, 1963, 261, 3258, 4432, 2007, 4696, 492, 756, 789, 4443, 591, 1911, 4454, 2469, 646, 514, 1383, 1020, 3357, 1581, 2777, 2073, 602, 2964, 5059, 4718, 4751, 5353, 3739, 877, 734, 866, 1119, 1394, 5246, 1526, 5169, 998, 2799, 1405, 4707, 2392, 74, 2205, 3184, 206, 5298, 3151, 1691, 1438, 85, 1306, 4531, 5070, 1768, 1636, 1163, 1900, 910, 2601, 3827, 2733, 2249, 778, 1042, 349, 1570, 1174, 4344, 4091, 3816, 2150, 2986, 2414, 3948, 3269, 3618, 4608, 3750, 4553, 4740, 3926, 4080, 3445, 1350, 3467, 1592, 1328, 2359, 1064, 1856, 1878, 4883, 5081, 4817, 1493, 4333, 1361, 3728, 3596, 1075, 4421, 4938, 5213, 4861, 2172, 1207, 1889, 3555, 679, 547, 96, 393, 701, 2304, 1974, 173, 3390, 3937, 129, 569, 3247, 4135, 2766, 41, 3074, 5026, 4069, 371, 3162, 503, 4223, 2370, 2634, 2788, 1086, 3225, 2546, 1779, 360, 4212, 3173, 4476, 921, 657, 558, 1515, 4036, 2645, 1185, 1996, 888, 2909, 965, 1251, 4685, 4872, 1680, 3871, 3607, 1273, 4256, 1548, 5048, 745, 2524, 2260, 2568, 4465, 118, 2161, 1669, 3118, 382, 2029, 2326, 2293, 3651, 3695, 5331, 3783, 2557, 2425, 5158, 3302, 4245, 4498, 2084, 5103, 4828, 1603, 4586, 1801, 3500, 4300, 4773, 4509, 4388, 3456, 5114, 811, 1471, 5202, 1339, 140, 4850, 4652, 1460, 5180, 943, 4993, 668, 932, 1952, 3893, 3838, 2051, 3423, 2139, 2931, 3706, 2535, 3522, 426, 162, 2271, 3981, 4113, 4355, 4168, 3849, 2942, 2513, 1845, 525, 712, 580, 855, 3640, 690, 63, 5125, 4366, 3214, 3904, 327, 1647, 1941, 954, 3129, 2678, 4641, 2821, 4894, 4971, 4377, 4630, 2689, 2656, 3019, 1053, 5235, 4905, 1790, 4190, 3063, 2920, 2700, 5015, 4003, 1262, 2337, 2128, 5309, 1317, 338, 3544, 470, 1658, 4982, 3412, 1130, 1218, 3041, 5147, 3107, 3970, 1141, 1702, 613, 1284, 2975, 2843, 2711, 2579, 1427, 1504, 5364, 2722, 4267, 1372, 4795, 3684, 1240, 2865, 250, 3478, 4289, 4278, 2458, 3401, 1834, 3533, 976, 2194, 2997, 4102, 3346, 844, 1108, 4806, 5191, 4542, 3368, 3662, 3085, 2447, 3324, 3585, 2183, 272, 899, 2095, 2315, 2623, 3761, 4927, 4025, 536, 4619, 5287, 1614, 800, 3992, 3379, 151, 4014, 4399, 3860, 3511, 3291, 833, 1097, 5004, 5268, 1229, 30, 3882, 1625, 1757, 4663, 4597, 3203, 305, 4146, 107, 239, 294, 5092, 195, 437, 4157, 767, 3030, 635, 2040, 3673, 3805, 283, 415, 624, 2502, 987, 2810, 1152, 2898, 1537, 3772, 459, 3489, 723, 4410, 822, 1713, 4674, 4520, 1009, 3096, 4784, 2887, 4949, 2018, 2832, 2436, 2238, 1416, 3052, 1449, 1812, 2106]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1020,1031,1042,1053,1064,1075,1086,1097,1108,1119,1130,1141,1152,1163,1174,1185,1196,1207,1218,1229,1240,1251,1262,1273,1284,1295,1306,1317,1328,1339,1350,1361,1372,1383,1394,1405,1416,1427,1438,1449,1460,1471,1482,1493,1504,1515,1526,1537,1548,1559,1570,1581,1592,1603,1614,1625,1636,1647,1658,1669,1680,1691,1702,1713,1724,1735,1746,1757,1768,1779,1790,1801,1812,1823,1834,1845,1856,1867,1878,1889,1900,1911,1922,1941,1952,1963,1974,1985,1996,2007,2018,2029,2040,2051,2062,2073,2084,2095,2106,2117,2128,2139,2150,2161,2172,2183,2194,2205,2216,2227,2238,2249,2260,2271,2282,2293,2304,2315,2326,2337,2348,2359,2370,2381,2392,2403,2414,2425,2436,2447,2458,2469,2480,2491,2502,2513,2524,2535,2546,2557,2568,2579,2590,2601,2612,2623,2634,2645,2656,2667,2678,2689,2700,2711,2722,2733,2744,2755,2766,2777,2788,2799,2810,2821,2832,2843,2854,2865,2876,2887,2898,2909,2920,2931,2942,2953,2964,2975,2986,2997,3008,3019,3030,3041,3052,3063,3074,3085,3096,3107,3118,3129,3140,3151,3162,3173,3184,3203,3214,3225,3236,3247,3258,3269,3280,3291,3302,3313,3324,3335,3346,3357,3368,3379,3390,3401,3412,3423,3434,3445,3456,3467,3478,3489,3500,3511,3522,3533,3544,3555,3566,3585,3596,3607,3618,3629,3640,3651,3662,3673,3684,3695,3706,3717,3728,3739,3750,3761,3772,3783,3794,3805,3816,3827,3838,3849,3860,3871,3882,3893,3904,3915,3926,3937,3948,3959,3970,3981,3992,4003,4014,4025,4036,4047,4058,4069,4080,4091,4102,4113,4124,4135,4146,4157,4168,4179,4190,4201,4212,4223,4234,4245,4256,4267,4278,4289,4300,4311,4322,4333,4344,4355,4366,4377,4388,4399,4410,4421,4432,4443,4454,4465,4476,4487,4498,4509,4520,4531,4542,4553,4564,4575,4586,4597,4608,4619,4630,4641,4652,4663,4674,4685,4696,4707,4718,4729,4740,4751,4762,4773,4784,4795,4806,4817,4828,4839,4850,4861,4872,4883,4894,4905,4916,4927,4938,4949,4960,4971,4982,4993,5004,5015,5026,5037,5048,5059,5070,5081,5092,5103,5114,5125,5136,5147,5158,5169,5180,5191,5202,5213,5224,5235,5246,5257,5268,5287,5298,5309,5320,5331,5342,5353,5364}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 2;  |      2  |                         0  |
  1014  |  resetPlaceHolder_2();  |         |                            |
  1020  |             R = R + 2;  |      2  |                         0  |
  1025  |  resetPlaceHolder_2();  |         |                            |
  1031  |             R = R + 2;  |      2  |                         0  |
  1036  |  resetPlaceHolder_2();  |         |                            |
  1042  |             R = R + 2;  |      2  |                         0  |
  1047  |  resetPlaceHolder_2();  |         |                            |
  1053  |             R = R + 2;  |      2  |                         0  |
  1058  |  resetPlaceHolder_2();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1069  |  resetPlaceHolder_2();  |         |                            |
  1075  |             R = R + 2;  |      2  |                         0  |
  1080  |  resetPlaceHolder_2();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1091  |  resetPlaceHolder_2();  |         |                            |
  1097  |             R = R + 2;  |      2  |                         0  |
  1102  |  resetPlaceHolder_2();  |         |                            |
  1108  |             R = R + 2;  |      2  |                         0  |
  1113  |  resetPlaceHolder_2();  |         |                            |
  1119  |             R = R + 2;  |      2  |                         0  |
  1124  |  resetPlaceHolder_2();  |         |                            |
  1130  |             R = R + 2;  |      2  |                         0  |
  1135  |  resetPlaceHolder_2();  |         |                            |
  1141  |             R = R + 2;  |      2  |                         0  |
  1146  |  resetPlaceHolder_2();  |         |                            |
  1152  |             R = R + 2;  |      2  |                         0  |
  1157  |  resetPlaceHolder_2();  |         |                            |
  1163  |             R = R + 2;  |      2  |                         0  |
  1168  |  resetPlaceHolder_2();  |         |                            |
  1174  |             R = R + 2;  |      2  |                         0  |
  1179  |  resetPlaceHolder_2();  |         |                            |
  1185  |             R = R + 2;  |      2  |                         0  |
  1190  |  resetPlaceHolder_2();  |         |                            |
  1196  |             R = R + 2;  |      2  |                         0  |
  1201  |  resetPlaceHolder_2();  |         |                            |
  1207  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_2();  |         |                            |
  1218  |             R = R + 2;  |      2  |                         0  |
  1223  |  resetPlaceHolder_2();  |         |                            |
  1229  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_2();  |         |                            |
  1240  |             R = R + 2;  |      2  |                         0  |
  1245  |  resetPlaceHolder_2();  |         |                            |
  1251  |             R = R + 2;  |      2  |                         0  |
  1256  |  resetPlaceHolder_2();  |         |                            |
  1262  |             R = R + 2;  |      2  |                         0  |
  1267  |  resetPlaceHolder_2();  |         |                            |
  1273  |             R = R + 2;  |      2  |                         0  |
  1278  |  resetPlaceHolder_2();  |         |                            |
  1284  |             R = R + 2;  |      2  |                         0  |
  1289  |  resetPlaceHolder_2();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1300  |  resetPlaceHolder_2();  |         |                            |
  1306  |             R = R + 2;  |      2  |                         0  |
  1311  |  resetPlaceHolder_2();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1322  |  resetPlaceHolder_2();  |         |                            |
  1328  |             R = R + 2;  |      2  |                         0  |
  1333  |  resetPlaceHolder_2();  |         |                            |
  1339  |             R = R + 2;  |      2  |                         0  |
  1344  |  resetPlaceHolder_2();  |         |                            |
  1350  |             R = R + 2;  |      2  |                         0  |
  1355  |  resetPlaceHolder_2();  |         |                            |
  1361  |             R = R + 2;  |      2  |                         0  |
  1366  |  resetPlaceHolder_2();  |         |                            |
  1372  |             R = R + 2;  |      2  |                         0  |
  1377  |  resetPlaceHolder_2();  |         |                            |
  1383  |             R = R + 2;  |      2  |                         0  |
  1388  |  resetPlaceHolder_2();  |         |                            |
  1394  |             R = R + 2;  |      2  |                         0  |
  1399  |  resetPlaceHolder_2();  |         |                            |
  1405  |             R = R + 2;  |      2  |                         0  |
  1410  |  resetPlaceHolder_2();  |         |                            |
  1416  |             R = R + 2;  |      2  |                         0  |
  1421  |  resetPlaceHolder_2();  |         |                            |
  1427  |             R = R + 2;  |      2  |                         0  |
  1432  |  resetPlaceHolder_2();  |         |                            |
  1438  |             R = R + 2;  |      2  |                         0  |
  1443  |  resetPlaceHolder_2();  |         |                            |
  1449  |             R = R + 2;  |      2  |                         0  |
  1454  |  resetPlaceHolder_2();  |         |                            |
  1460  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_2();  |         |                            |
  1471  |             R = R + 2;  |      2  |                         0  |
  1476  |  resetPlaceHolder_2();  |         |                            |
  1482  |             R = R + 2;  |      2  |                         0  |
  1487  |  resetPlaceHolder_2();  |         |                            |
  1493  |             R = R + 2;  |      2  |                         0  |
  1498  |  resetPlaceHolder_2();  |         |                            |
  1504  |             R = R + 2;  |      2  |                         0  |
  1509  |  resetPlaceHolder_2();  |         |                            |
  1515  |             R = R + 2;  |      2  |                         0  |
  1520  |  resetPlaceHolder_2();  |         |                            |
  1526  |             R = R + 2;  |      2  |                         0  |
  1531  |  resetPlaceHolder_2();  |         |                            |
  1537  |             R = R + 2;  |      2  |                         0  |
  1542  |  resetPlaceHolder_2();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1553  |  resetPlaceHolder_2();  |         |                            |
  1559  |             R = R + 2;  |      2  |                         0  |
  1564  |  resetPlaceHolder_2();  |         |                            |
  1570  |             R = R + 2;  |      2  |                         0  |
  1575  |  resetPlaceHolder_2();  |         |                            |
  1581  |             R = R + 2;  |      2  |                         0  |
  1586  |  resetPlaceHolder_2();  |         |                            |
  1592  |             R = R + 2;  |      2  |                         0  |
  1597  |  resetPlaceHolder_2();  |         |                            |
  1603  |             R = R + 2;  |      2  |                         0  |
  1608  |  resetPlaceHolder_2();  |         |                            |
  1614  |             R = R + 2;  |      2  |                         0  |
  1619  |  resetPlaceHolder_2();  |         |                            |
  1625  |             R = R + 2;  |      2  |                         0  |
  1630  |  resetPlaceHolder_2();  |         |                            |
  1636  |             R = R + 2;  |      2  |                         0  |
  1641  |  resetPlaceHolder_2();  |         |                            |
  1647  |             R = R + 2;  |      2  |                         0  |
  1652  |  resetPlaceHolder_2();  |         |                            |
  1658  |             R = R + 2;  |      2  |                         0  |
  1663  |  resetPlaceHolder_2();  |         |                            |
  1669  |             R = R + 2;  |      2  |                         0  |
  1674  |  resetPlaceHolder_2();  |         |                            |
  1680  |             R = R + 2;  |      2  |                         0  |
  1685  |  resetPlaceHolder_2();  |         |                            |
  1691  |             R = R + 2;  |      2  |                         0  |
  1696  |  resetPlaceHolder_2();  |         |                            |
  1702  |             R = R + 2;  |      2  |                         0  |
  1707  |  resetPlaceHolder_2();  |         |                            |
  1713  |             R = R + 2;  |      2  |                         0  |
  1718  |  resetPlaceHolder_2();  |         |                            |
  1724  |             R = R + 2;  |      2  |                         0  |
  1729  |  resetPlaceHolder_2();  |         |                            |
  1735  |             R = R + 2;  |      2  |                         0  |
  1740  |  resetPlaceHolder_2();  |         |                            |
  1746  |             R = R + 2;  |      2  |                         0  |
  1751  |  resetPlaceHolder_2();  |         |                            |
  1757  |             R = R + 2;  |      2  |                         0  |
  1762  |  resetPlaceHolder_2();  |         |                            |
  1768  |             R = R + 2;  |      2  |                         0  |
  1773  |  resetPlaceHolder_2();  |         |                            |
  1779  |             R = R + 2;  |      2  |                         0  |
  1784  |  resetPlaceHolder_2();  |         |                            |
  1790  |             R = R + 2;  |      2  |                         0  |
  1795  |  resetPlaceHolder_2();  |         |                            |
  1801  |             R = R + 2;  |      2  |                         0  |
  1806  |  resetPlaceHolder_2();  |         |                            |
  1812  |             R = R + 2;  |      2  |                         0  |
  1817  |  resetPlaceHolder_2();  |         |                            |
  1823  |             R = R + 2;  |      2  |                         0  |
  1828  |  resetPlaceHolder_2();  |         |                            |
  1834  |             R = R + 2;  |      2  |                         0  |
  1839  |  resetPlaceHolder_2();  |         |                            |
  1845  |             R = R + 2;  |      2  |                         0  |
  1850  |  resetPlaceHolder_2();  |         |                            |
  1856  |             R = R + 2;  |      2  |                         0  |
  1861  |  resetPlaceHolder_2();  |         |                            |
  1867  |             R = R + 2;  |      2  |                         0  |
  1872  |  resetPlaceHolder_2();  |         |                            |
  1878  |             R = R + 2;  |      2  |                         0  |
  1883  |  resetPlaceHolder_2();  |         |                            |
  1889  |             R = R + 2;  |      2  |                         0  |
  1894  |  resetPlaceHolder_2();  |         |                            |
  1900  |             R = R + 2;  |      2  |                         0  |
  1905  |  resetPlaceHolder_2();  |         |                            |
  1911  |             R = R + 2;  |      2  |                         0  |
  1916  |  resetPlaceHolder_2();  |         |                            |
  1922  |             R = R + 1;  |      1  |                         0  |
  1927  |  resetPlaceHolder_1();  |         |                            |
  1941  |             R = R + 2;  |      2  |                         0  |
  1946  |  resetPlaceHolder_2();  |         |                            |
  1952  |             R = R + 2;  |      2  |                         0  |
  1957  |  resetPlaceHolder_2();  |         |                            |
  1963  |             R = R + 2;  |      2  |                         0  |
  1968  |  resetPlaceHolder_2();  |         |                            |
  1974  |             R = R + 2;  |      2  |                         0  |
  1979  |  resetPlaceHolder_2();  |         |                            |
  1985  |             R = R + 2;  |      2  |                         0  |
  1990  |  resetPlaceHolder_2();  |         |                            |
  1996  |             R = R + 2;  |      2  |                         0  |
  2001  |  resetPlaceHolder_2();  |         |                            |
  2007  |             R = R + 2;  |      2  |                         0  |
  2012  |  resetPlaceHolder_2();  |         |                            |
  2018  |             R = R + 2;  |      2  |                         0  |
  2023  |  resetPlaceHolder_2();  |         |                            |
  2029  |             R = R + 2;  |      2  |                         0  |
  2034  |  resetPlaceHolder_2();  |         |                            |
  2040  |             R = R + 2;  |      2  |                         0  |
  2045  |  resetPlaceHolder_2();  |         |                            |
  2051  |             R = R + 2;  |      2  |                         0  |
  2056  |  resetPlaceHolder_2();  |         |                            |
  2062  |             R = R + 2;  |      2  |                         0  |
  2067  |  resetPlaceHolder_2();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2078  |  resetPlaceHolder_2();  |         |                            |
  2084  |             R = R + 2;  |      2  |                         0  |
  2089  |  resetPlaceHolder_2();  |         |                            |
  2095  |             R = R + 2;  |      2  |                         0  |
  2100  |  resetPlaceHolder_2();  |         |                            |
  2106  |             R = R + 2;  |      2  |                         0  |
  2111  |  resetPlaceHolder_2();  |         |                            |
  2117  |             R = R + 2;  |      2  |                         0  |
  2122  |  resetPlaceHolder_2();  |         |                            |
  2128  |             R = R + 2;  |      2  |                         0  |
  2133  |  resetPlaceHolder_2();  |         |                            |
  2139  |             R = R + 2;  |      2  |                         0  |
  2144  |  resetPlaceHolder_2();  |         |                            |
  2150  |             R = R + 2;  |      2  |                         0  |
  2155  |  resetPlaceHolder_2();  |         |                            |
  2161  |             R = R + 2;  |      2  |                         0  |
  2166  |  resetPlaceHolder_2();  |         |                            |
  2172  |             R = R + 2;  |      2  |                         0  |
  2177  |  resetPlaceHolder_2();  |         |                            |
  2183  |             R = R + 2;  |      2  |                         0  |
  2188  |  resetPlaceHolder_2();  |         |                            |
  2194  |             R = R + 2;  |      2  |                         0  |
  2199  |  resetPlaceHolder_2();  |         |                            |
  2205  |             R = R + 2;  |      2  |                         0  |
  2210  |  resetPlaceHolder_2();  |         |                            |
  2216  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_2();  |         |                            |
  2227  |             R = R + 2;  |      2  |                         0  |
  2232  |  resetPlaceHolder_2();  |         |                            |
  2238  |             R = R + 2;  |      2  |                         0  |
  2243  |  resetPlaceHolder_2();  |         |                            |
  2249  |             R = R + 2;  |      2  |                         0  |
  2254  |  resetPlaceHolder_2();  |         |                            |
  2260  |             R = R + 2;  |      2  |                         0  |
  2265  |  resetPlaceHolder_2();  |         |                            |
  2271  |             R = R + 2;  |      2  |                         0  |
  2276  |  resetPlaceHolder_2();  |         |                            |
  2282  |             R = R + 2;  |      2  |                         0  |
  2287  |  resetPlaceHolder_2();  |         |                            |
  2293  |             R = R + 2;  |      2  |                         0  |
  2298  |  resetPlaceHolder_2();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2309  |  resetPlaceHolder_2();  |         |                            |
  2315  |             R = R + 2;  |      2  |                         0  |
  2320  |  resetPlaceHolder_2();  |         |                            |
  2326  |             R = R + 2;  |      2  |                         0  |
  2331  |  resetPlaceHolder_2();  |         |                            |
  2337  |             R = R + 2;  |      2  |                         0  |
  2342  |  resetPlaceHolder_2();  |         |                            |
  2348  |             R = R + 2;  |      2  |                         0  |
  2353  |  resetPlaceHolder_2();  |         |                            |
  2359  |             R = R + 2;  |      2  |                         0  |
  2364  |  resetPlaceHolder_2();  |         |                            |
  2370  |             R = R + 2;  |      2  |                         0  |
  2375  |  resetPlaceHolder_2();  |         |                            |
  2381  |             R = R + 2;  |      2  |                         0  |
  2386  |  resetPlaceHolder_2();  |         |                            |
  2392  |             R = R + 2;  |      2  |                         0  |
  2397  |  resetPlaceHolder_2();  |         |                            |
  2403  |             R = R + 2;  |      2  |                         0  |
  2408  |  resetPlaceHolder_2();  |         |                            |
  2414  |             R = R + 2;  |      2  |                         0  |
  2419  |  resetPlaceHolder_2();  |         |                            |
  2425  |             R = R + 2;  |      2  |                         0  |
  2430  |  resetPlaceHolder_2();  |         |                            |
  2436  |             R = R + 2;  |      2  |                         0  |
  2441  |  resetPlaceHolder_2();  |         |                            |
  2447  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_2();  |         |                            |
  2458  |             R = R + 2;  |      2  |                         0  |
  2463  |  resetPlaceHolder_2();  |         |                            |
  2469  |             R = R + 2;  |      2  |                         0  |
  2474  |  resetPlaceHolder_2();  |         |                            |
  2480  |             R = R + 2;  |      2  |                         0  |
  2485  |  resetPlaceHolder_2();  |         |                            |
  2491  |             R = R + 2;  |      2  |                         0  |
  2496  |  resetPlaceHolder_2();  |         |                            |
  2502  |             R = R + 2;  |      2  |                         0  |
  2507  |  resetPlaceHolder_2();  |         |                            |
  2513  |             R = R + 2;  |      2  |                         0  |
  2518  |  resetPlaceHolder_2();  |         |                            |
  2524  |             R = R + 2;  |      2  |                         0  |
  2529  |  resetPlaceHolder_2();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2540  |  resetPlaceHolder_2();  |         |                            |
  2546  |             R = R + 2;  |      2  |                         0  |
  2551  |  resetPlaceHolder_2();  |         |                            |
  2557  |             R = R + 2;  |      2  |                         0  |
  2562  |  resetPlaceHolder_2();  |         |                            |
  2568  |             R = R + 2;  |      2  |                         0  |
  2573  |  resetPlaceHolder_2();  |         |                            |
  2579  |             R = R + 2;  |      2  |                         0  |
  2584  |  resetPlaceHolder_2();  |         |                            |
  2590  |             R = R + 2;  |      2  |                         0  |
  2595  |  resetPlaceHolder_2();  |         |                            |
  2601  |             R = R + 2;  |      2  |                         0  |
  2606  |  resetPlaceHolder_2();  |         |                            |
  2612  |             R = R + 2;  |      2  |                         0  |
  2617  |  resetPlaceHolder_2();  |         |                            |
  2623  |             R = R + 2;  |      2  |                         0  |
  2628  |  resetPlaceHolder_2();  |         |                            |
  2634  |             R = R + 2;  |      2  |                         0  |
  2639  |  resetPlaceHolder_2();  |         |                            |
  2645  |             R = R + 2;  |      2  |                         0  |
  2650  |  resetPlaceHolder_2();  |         |                            |
  2656  |             R = R + 2;  |      2  |                         0  |
  2661  |  resetPlaceHolder_2();  |         |                            |
  2667  |             R = R + 2;  |      2  |                         0  |
  2672  |  resetPlaceHolder_2();  |         |                            |
  2678  |             R = R + 2;  |      2  |                         0  |
  2683  |  resetPlaceHolder_2();  |         |                            |
  2689  |             R = R + 2;  |      2  |                         0  |
  2694  |  resetPlaceHolder_2();  |         |                            |
  2700  |             R = R + 2;  |      2  |                         0  |
  2705  |  resetPlaceHolder_2();  |         |                            |
  2711  |             R = R + 2;  |      2  |                         0  |
  2716  |  resetPlaceHolder_2();  |         |                            |
  2722  |             R = R + 2;  |      2  |                         0  |
  2727  |  resetPlaceHolder_2();  |         |                            |
  2733  |             R = R + 2;  |      2  |                         0  |
  2738  |  resetPlaceHolder_2();  |         |                            |
  2744  |             R = R + 2;  |      2  |                         0  |
  2749  |  resetPlaceHolder_2();  |         |                            |
  2755  |             R = R + 2;  |      2  |                         0  |
  2760  |  resetPlaceHolder_2();  |         |                            |
  2766  |             R = R + 2;  |      2  |                         0  |
  2771  |  resetPlaceHolder_2();  |         |                            |
  2777  |             R = R + 2;  |      2  |                         0  |
  2782  |  resetPlaceHolder_2();  |         |                            |
  2788  |             R = R + 2;  |      2  |                         0  |
  2793  |  resetPlaceHolder_2();  |         |                            |
  2799  |             R = R + 2;  |      2  |                         0  |
  2804  |  resetPlaceHolder_2();  |         |                            |
  2810  |             R = R + 2;  |      2  |                         0  |
  2815  |  resetPlaceHolder_2();  |         |                            |
  2821  |             R = R + 2;  |      2  |                         0  |
  2826  |  resetPlaceHolder_2();  |         |                            |
  2832  |             R = R + 2;  |      2  |                         0  |
  2837  |  resetPlaceHolder_2();  |         |                            |
  2843  |             R = R + 2;  |      2  |                         0  |
  2848  |  resetPlaceHolder_2();  |         |                            |
  2854  |             R = R + 2;  |      2  |                         0  |
  2859  |  resetPlaceHolder_2();  |         |                            |
  2865  |             R = R + 2;  |      2  |                         0  |
  2870  |  resetPlaceHolder_2();  |         |                            |
  2876  |             R = R + 2;  |      2  |                         0  |
  2881  |  resetPlaceHolder_2();  |         |                            |
  2887  |             R = R + 2;  |      2  |                         0  |
  2892  |  resetPlaceHolder_2();  |         |                            |
  2898  |             R = R + 2;  |      2  |                         0  |
  2903  |  resetPlaceHolder_2();  |         |                            |
  2909  |             R = R + 2;  |      2  |                         0  |
  2914  |  resetPlaceHolder_2();  |         |                            |
  2920  |             R = R + 2;  |      2  |                         0  |
  2925  |  resetPlaceHolder_2();  |         |                            |
  2931  |             R = R + 2;  |      2  |                         0  |
  2936  |  resetPlaceHolder_2();  |         |                            |
  2942  |             R = R + 2;  |      2  |                         0  |
  2947  |  resetPlaceHolder_2();  |         |                            |
  2953  |             R = R + 2;  |      2  |                         0  |
  2958  |  resetPlaceHolder_2();  |         |                            |
  2964  |             R = R + 2;  |      2  |                         0  |
  2969  |  resetPlaceHolder_2();  |         |                            |
  2975  |             R = R + 2;  |      2  |                         0  |
  2980  |  resetPlaceHolder_2();  |         |                            |
  2986  |             R = R + 2;  |      2  |                         0  |
  2991  |  resetPlaceHolder_2();  |         |                            |
  2997  |             R = R + 2;  |      2  |                         0  |
  3002  |  resetPlaceHolder_2();  |         |                            |
  3008  |             R = R + 2;  |      2  |                         0  |
  3013  |  resetPlaceHolder_2();  |         |                            |
  3019  |             R = R + 2;  |      2  |                         0  |
  3024  |  resetPlaceHolder_2();  |         |                            |
  3030  |             R = R + 2;  |      2  |                         0  |
  3035  |  resetPlaceHolder_2();  |         |                            |
  3041  |             R = R + 2;  |      2  |                         0  |
  3046  |  resetPlaceHolder_2();  |         |                            |
  3052  |             R = R + 2;  |      2  |                         0  |
  3057  |  resetPlaceHolder_2();  |         |                            |
  3063  |             R = R + 2;  |      2  |                         0  |
  3068  |  resetPlaceHolder_2();  |         |                            |
  3074  |             R = R + 2;  |      2  |                         0  |
  3079  |  resetPlaceHolder_2();  |         |                            |
  3085  |             R = R + 2;  |      2  |                         0  |
  3090  |  resetPlaceHolder_2();  |         |                            |
  3096  |             R = R + 2;  |      2  |                         0  |
  3101  |  resetPlaceHolder_2();  |         |                            |
  3107  |             R = R + 2;  |      2  |                         0  |
  3112  |  resetPlaceHolder_2();  |         |                            |
  3118  |             R = R + 2;  |      2  |                         0  |
  3123  |  resetPlaceHolder_2();  |         |                            |
  3129  |             R = R + 2;  |      2  |                         0  |
  3134  |  resetPlaceHolder_2();  |         |                            |
  3140  |             R = R + 2;  |      2  |                         0  |
  3145  |  resetPlaceHolder_2();  |         |                            |
  3151  |             R = R + 2;  |      2  |                         0  |
  3156  |  resetPlaceHolder_2();  |         |                            |
  3162  |             R = R + 2;  |      2  |                         0  |
  3167  |  resetPlaceHolder_2();  |         |                            |
  3173  |             R = R + 2;  |      2  |                         0  |
  3178  |  resetPlaceHolder_2();  |         |                            |
  3184  |             R = R + 1;  |      1  |                         0  |
  3189  |  resetPlaceHolder_1();  |         |                            |
  3203  |             R = R + 2;  |      2  |                         0  |
  3208  |  resetPlaceHolder_2();  |         |                            |
  3214  |             R = R + 2;  |      2  |                         0  |
  3219  |  resetPlaceHolder_2();  |         |                            |
  3225  |             R = R + 2;  |      2  |                         0  |
  3230  |  resetPlaceHolder_2();  |         |                            |
  3236  |             R = R + 2;  |      2  |                         0  |
  3241  |  resetPlaceHolder_2();  |         |                            |
  3247  |             R = R + 2;  |      2  |                         0  |
  3252  |  resetPlaceHolder_2();  |         |                            |
  3258  |             R = R + 2;  |      2  |                         0  |
  3263  |  resetPlaceHolder_2();  |         |                            |
  3269  |             R = R + 2;  |      2  |                         0  |
  3274  |  resetPlaceHolder_2();  |         |                            |
  3280  |             R = R + 2;  |      2  |                         0  |
  3285  |  resetPlaceHolder_2();  |         |                            |
  3291  |             R = R + 2;  |      2  |                         0  |
  3296  |  resetPlaceHolder_2();  |         |                            |
  3302  |             R = R + 2;  |      2  |                         0  |
  3307  |  resetPlaceHolder_2();  |         |                            |
  3313  |             R = R + 2;  |      2  |                         0  |
  3318  |  resetPlaceHolder_2();  |         |                            |
  3324  |             R = R + 2;  |      2  |                         0  |
  3329  |  resetPlaceHolder_2();  |         |                            |
  3335  |             R = R + 2;  |      2  |                         0  |
  3340  |  resetPlaceHolder_2();  |         |                            |
  3346  |             R = R + 2;  |      2  |                         0  |
  3351  |  resetPlaceHolder_2();  |         |                            |
  3357  |             R = R + 2;  |      2  |                         0  |
  3362  |  resetPlaceHolder_2();  |         |                            |
  3368  |             R = R + 2;  |      2  |                         0  |
  3373  |  resetPlaceHolder_2();  |         |                            |
  3379  |             R = R + 2;  |      2  |                         0  |
  3384  |  resetPlaceHolder_2();  |         |                            |
  3390  |             R = R + 2;  |      2  |                         0  |
  3395  |  resetPlaceHolder_2();  |         |                            |
  3401  |             R = R + 2;  |      2  |                         0  |
  3406  |  resetPlaceHolder_2();  |         |                            |
  3412  |             R = R + 2;  |      2  |                         0  |
  3417  |  resetPlaceHolder_2();  |         |                            |
  3423  |             R = R + 2;  |      2  |                         0  |
  3428  |  resetPlaceHolder_2();  |         |                            |
  3434  |             R = R + 2;  |      2  |                         0  |
  3439  |  resetPlaceHolder_2();  |         |                            |
  3445  |             R = R + 2;  |      2  |                         0  |
  3450  |  resetPlaceHolder_2();  |         |                            |
  3456  |             R = R + 2;  |      2  |                         0  |
  3461  |  resetPlaceHolder_2();  |         |                            |
  3467  |             R = R + 2;  |      2  |                         0  |
  3472  |  resetPlaceHolder_2();  |         |                            |
  3478  |             R = R + 2;  |      2  |                         0  |
  3483  |  resetPlaceHolder_2();  |         |                            |
  3489  |             R = R + 2;  |      2  |                         0  |
  3494  |  resetPlaceHolder_2();  |         |                            |
  3500  |             R = R + 2;  |      2  |                         0  |
  3505  |  resetPlaceHolder_2();  |         |                            |
  3511  |             R = R + 2;  |      2  |                         0  |
  3516  |  resetPlaceHolder_2();  |         |                            |
  3522  |             R = R + 2;  |      2  |                         0  |
  3527  |  resetPlaceHolder_2();  |         |                            |
  3533  |             R = R + 2;  |      2  |                         0  |
  3538  |  resetPlaceHolder_2();  |         |                            |
  3544  |             R = R + 2;  |      2  |                         0  |
  3549  |  resetPlaceHolder_2();  |         |                            |
  3555  |             R = R + 2;  |      2  |                         0  |
  3560  |  resetPlaceHolder_2();  |         |                            |
  3566  |             R = R + 1;  |      1  |                         0  |
  3571  |  resetPlaceHolder_1();  |         |                            |
  3585  |             R = R + 2;  |      2  |                         0  |
  3590  |  resetPlaceHolder_2();  |         |                            |
  3596  |             R = R + 2;  |      2  |                         0  |
  3601  |  resetPlaceHolder_2();  |         |                            |
  3607  |             R = R + 2;  |      2  |                         0  |
  3612  |  resetPlaceHolder_2();  |         |                            |
  3618  |             R = R + 2;  |      2  |                         0  |
  3623  |  resetPlaceHolder_2();  |         |                            |
  3629  |             R = R + 2;  |      2  |                         0  |
  3634  |  resetPlaceHolder_2();  |         |                            |
  3640  |             R = R + 2;  |      2  |                         0  |
  3645  |  resetPlaceHolder_2();  |         |                            |
  3651  |             R = R + 2;  |      2  |                         0  |
  3656  |  resetPlaceHolder_2();  |         |                            |
  3662  |             R = R + 2;  |      2  |                         0  |
  3667  |  resetPlaceHolder_2();  |         |                            |
  3673  |             R = R + 2;  |      2  |                         0  |
  3678  |  resetPlaceHolder_2();  |         |                            |
  3684  |             R = R + 2;  |      2  |                         0  |
  3689  |  resetPlaceHolder_2();  |         |                            |
  3695  |             R = R + 2;  |      2  |                         0  |
  3700  |  resetPlaceHolder_2();  |         |                            |
  3706  |             R = R + 2;  |      2  |                         0  |
  3711  |  resetPlaceHolder_2();  |         |                            |
  3717  |             R = R + 2;  |      2  |                         0  |
  3722  |  resetPlaceHolder_2();  |         |                            |
  3728  |             R = R + 2;  |      2  |                         0  |
  3733  |  resetPlaceHolder_2();  |         |                            |
  3739  |             R = R + 2;  |      2  |                         0  |
  3744  |  resetPlaceHolder_2();  |         |                            |
  3750  |             R = R + 2;  |      2  |                         0  |
  3755  |  resetPlaceHolder_2();  |         |                            |
  3761  |             R = R + 2;  |      2  |                         0  |
  3766  |  resetPlaceHolder_2();  |         |                            |
  3772  |             R = R + 2;  |      2  |                         0  |
  3777  |  resetPlaceHolder_2();  |         |                            |
  3783  |             R = R + 2;  |      2  |                         0  |
  3788  |  resetPlaceHolder_2();  |         |                            |
  3794  |             R = R + 2;  |      2  |                         0  |
  3799  |  resetPlaceHolder_2();  |         |                            |
  3805  |             R = R + 2;  |      2  |                         0  |
  3810  |  resetPlaceHolder_2();  |         |                            |
  3816  |             R = R + 2;  |      2  |                         0  |
  3821  |  resetPlaceHolder_2();  |         |                            |
  3827  |             R = R + 2;  |      2  |                         0  |
  3832  |  resetPlaceHolder_2();  |         |                            |
  3838  |             R = R + 2;  |      2  |                         0  |
  3843  |  resetPlaceHolder_2();  |         |                            |
  3849  |             R = R + 2;  |      2  |                         0  |
  3854  |  resetPlaceHolder_2();  |         |                            |
  3860  |             R = R + 2;  |      2  |                         0  |
  3865  |  resetPlaceHolder_2();  |         |                            |
  3871  |             R = R + 2;  |      2  |                         0  |
  3876  |  resetPlaceHolder_2();  |         |                            |
  3882  |             R = R + 2;  |      2  |                         0  |
  3887  |  resetPlaceHolder_2();  |         |                            |
  3893  |             R = R + 2;  |      2  |                         0  |
  3898  |  resetPlaceHolder_2();  |         |                            |
  3904  |             R = R + 2;  |      2  |                         0  |
  3909  |  resetPlaceHolder_2();  |         |                            |
  3915  |             R = R + 2;  |      2  |                         0  |
  3920  |  resetPlaceHolder_2();  |         |                            |
  3926  |             R = R + 2;  |      2  |                         0  |
  3931  |  resetPlaceHolder_2();  |         |                            |
  3937  |             R = R + 2;  |      2  |                         0  |
  3942  |  resetPlaceHolder_2();  |         |                            |
  3948  |             R = R + 2;  |      2  |                         0  |
  3953  |  resetPlaceHolder_2();  |         |                            |
  3959  |             R = R + 2;  |      2  |                         0  |
  3964  |  resetPlaceHolder_2();  |         |                            |
  3970  |             R = R + 2;  |      2  |                         0  |
  3975  |  resetPlaceHolder_2();  |         |                            |
  3981  |             R = R + 2;  |      2  |                         0  |
  3986  |  resetPlaceHolder_2();  |         |                            |
  3992  |             R = R + 2;  |      2  |                         0  |
  3997  |  resetPlaceHolder_2();  |         |                            |
  4003  |             R = R + 2;  |      2  |                         0  |
  4008  |  resetPlaceHolder_2();  |         |                            |
  4014  |             R = R + 2;  |      2  |                         0  |
  4019  |  resetPlaceHolder_2();  |         |                            |
  4025  |             R = R + 2;  |      2  |                         0  |
  4030  |  resetPlaceHolder_2();  |         |                            |
  4036  |             R = R + 2;  |      2  |                         0  |
  4041  |  resetPlaceHolder_2();  |         |                            |
  4047  |             R = R + 2;  |      2  |                         0  |
  4052  |  resetPlaceHolder_2();  |         |                            |
  4058  |             R = R + 2;  |      2  |                         0  |
  4063  |  resetPlaceHolder_2();  |         |                            |
  4069  |             R = R + 2;  |      2  |                         0  |
  4074  |  resetPlaceHolder_2();  |         |                            |
  4080  |             R = R + 2;  |      2  |                         0  |
  4085  |  resetPlaceHolder_2();  |         |                            |
  4091  |             R = R + 2;  |      2  |                         0  |
  4096  |  resetPlaceHolder_2();  |         |                            |
  4102  |             R = R + 2;  |      2  |                         0  |
  4107  |  resetPlaceHolder_2();  |         |                            |
  4113  |             R = R + 2;  |      2  |                         0  |
  4118  |  resetPlaceHolder_2();  |         |                            |
  4124  |             R = R + 2;  |      2  |                         0  |
  4129  |  resetPlaceHolder_2();  |         |                            |
  4135  |             R = R + 2;  |      2  |                         0  |
  4140  |  resetPlaceHolder_2();  |         |                            |
  4146  |             R = R + 2;  |      2  |                         0  |
  4151  |  resetPlaceHolder_2();  |         |                            |
  4157  |             R = R + 2;  |      2  |                         0  |
  4162  |  resetPlaceHolder_2();  |         |                            |
  4168  |             R = R + 2;  |      2  |                         0  |
  4173  |  resetPlaceHolder_2();  |         |                            |
  4179  |             R = R + 2;  |      2  |                         0  |
  4184  |  resetPlaceHolder_2();  |         |                            |
  4190  |             R = R + 2;  |      2  |                         0  |
  4195  |  resetPlaceHolder_2();  |         |                            |
  4201  |             R = R + 2;  |      2  |                         0  |
  4206  |  resetPlaceHolder_2();  |         |                            |
  4212  |             R = R + 2;  |      2  |                         0  |
  4217  |  resetPlaceHolder_2();  |         |                            |
  4223  |             R = R + 2;  |      2  |                         0  |
  4228  |  resetPlaceHolder_2();  |         |                            |
  4234  |             R = R + 2;  |      2  |                         0  |
  4239  |  resetPlaceHolder_2();  |         |                            |
  4245  |             R = R + 2;  |      2  |                         0  |
  4250  |  resetPlaceHolder_2();  |         |                            |
  4256  |             R = R + 2;  |      2  |                         0  |
  4261  |  resetPlaceHolder_2();  |         |                            |
  4267  |             R = R + 2;  |      2  |                         0  |
  4272  |  resetPlaceHolder_2();  |         |                            |
  4278  |             R = R + 2;  |      2  |                         0  |
  4283  |  resetPlaceHolder_2();  |         |                            |
  4289  |             R = R + 2;  |      2  |                         0  |
  4294  |  resetPlaceHolder_2();  |         |                            |
  4300  |             R = R + 2;  |      2  |                         0  |
  4305  |  resetPlaceHolder_2();  |         |                            |
  4311  |             R = R + 2;  |      2  |                         0  |
  4316  |  resetPlaceHolder_2();  |         |                            |
  4322  |             R = R + 2;  |      2  |                         0  |
  4327  |  resetPlaceHolder_2();  |         |                            |
  4333  |             R = R + 2;  |      2  |                         0  |
  4338  |  resetPlaceHolder_2();  |         |                            |
  4344  |             R = R + 2;  |      2  |                         0  |
  4349  |  resetPlaceHolder_2();  |         |                            |
  4355  |             R = R + 2;  |      2  |                         0  |
  4360  |  resetPlaceHolder_2();  |         |                            |
  4366  |             R = R + 2;  |      2  |                         0  |
  4371  |  resetPlaceHolder_2();  |         |                            |
  4377  |             R = R + 2;  |      2  |                         0  |
  4382  |  resetPlaceHolder_2();  |         |                            |
  4388  |             R = R + 2;  |      2  |                         0  |
  4393  |  resetPlaceHolder_2();  |         |                            |
  4399  |             R = R + 2;  |      2  |                         0  |
  4404  |  resetPlaceHolder_2();  |         |                            |
  4410  |             R = R + 2;  |      2  |                         0  |
  4415  |  resetPlaceHolder_2();  |         |                            |
  4421  |             R = R + 2;  |      2  |                         0  |
  4426  |  resetPlaceHolder_2();  |         |                            |
  4432  |             R = R + 2;  |      2  |                         0  |
  4437  |  resetPlaceHolder_2();  |         |                            |
  4443  |             R = R + 2;  |      2  |                         0  |
  4448  |  resetPlaceHolder_2();  |         |                            |
  4454  |             R = R + 2;  |      2  |                         0  |
  4459  |  resetPlaceHolder_2();  |         |                            |
  4465  |             R = R + 2;  |      2  |                         0  |
  4470  |  resetPlaceHolder_2();  |         |                            |
  4476  |             R = R + 2;  |      2  |                         0  |
  4481  |  resetPlaceHolder_2();  |         |                            |
  4487  |             R = R + 2;  |      2  |                         0  |
  4492  |  resetPlaceHolder_2();  |         |                            |
  4498  |             R = R + 2;  |      2  |                         0  |
  4503  |  resetPlaceHolder_2();  |         |                            |
  4509  |             R = R + 2;  |      2  |                         0  |
  4514  |  resetPlaceHolder_2();  |         |                            |
  4520  |             R = R + 2;  |      2  |                         0  |
  4525  |  resetPlaceHolder_2();  |         |                            |
  4531  |             R = R + 2;  |      2  |                         0  |
  4536  |  resetPlaceHolder_2();  |         |                            |
  4542  |             R = R + 2;  |      2  |                         0  |
  4547  |  resetPlaceHolder_2();  |         |                            |
  4553  |             R = R + 2;  |      2  |                         0  |
  4558  |  resetPlaceHolder_2();  |         |                            |
  4564  |             R = R + 2;  |      2  |                         0  |
  4569  |  resetPlaceHolder_2();  |         |                            |
  4575  |             R = R + 2;  |      2  |                         0  |
  4580  |  resetPlaceHolder_2();  |         |                            |
  4586  |             R = R + 2;  |      2  |                         0  |
  4591  |  resetPlaceHolder_2();  |         |                            |
  4597  |             R = R + 2;  |      2  |                         0  |
  4602  |  resetPlaceHolder_2();  |         |                            |
  4608  |             R = R + 2;  |      2  |                         0  |
  4613  |  resetPlaceHolder_2();  |         |                            |
  4619  |             R = R + 2;  |      2  |                         0  |
  4624  |  resetPlaceHolder_2();  |         |                            |
  4630  |             R = R + 2;  |      2  |                         0  |
  4635  |  resetPlaceHolder_2();  |         |                            |
  4641  |             R = R + 2;  |      2  |                         0  |
  4646  |  resetPlaceHolder_2();  |         |                            |
  4652  |             R = R + 2;  |      2  |                         0  |
  4657  |  resetPlaceHolder_2();  |         |                            |
  4663  |             R = R + 2;  |      2  |                         0  |
  4668  |  resetPlaceHolder_2();  |         |                            |
  4674  |             R = R + 2;  |      2  |                         0  |
  4679  |  resetPlaceHolder_2();  |         |                            |
  4685  |             R = R + 2;  |      2  |                         0  |
  4690  |  resetPlaceHolder_2();  |         |                            |
  4696  |             R = R + 2;  |      2  |                         0  |
  4701  |  resetPlaceHolder_2();  |         |                            |
  4707  |             R = R + 2;  |      2  |                         0  |
  4712  |  resetPlaceHolder_2();  |         |                            |
  4718  |             R = R + 2;  |      2  |                         0  |
  4723  |  resetPlaceHolder_2();  |         |                            |
  4729  |             R = R + 2;  |      2  |                         0  |
  4734  |  resetPlaceHolder_2();  |         |                            |
  4740  |             R = R + 2;  |      2  |                         0  |
  4745  |  resetPlaceHolder_2();  |         |                            |
  4751  |             R = R + 2;  |      2  |                         0  |
  4756  |  resetPlaceHolder_2();  |         |                            |
  4762  |             R = R + 2;  |      2  |                         0  |
  4767  |  resetPlaceHolder_2();  |         |                            |
  4773  |             R = R + 2;  |      2  |                         0  |
  4778  |  resetPlaceHolder_2();  |         |                            |
  4784  |             R = R + 2;  |      2  |                         0  |
  4789  |  resetPlaceHolder_2();  |         |                            |
  4795  |             R = R + 2;  |      2  |                         0  |
  4800  |  resetPlaceHolder_2();  |         |                            |
  4806  |             R = R + 2;  |      2  |                         0  |
  4811  |  resetPlaceHolder_2();  |         |                            |
  4817  |             R = R + 2;  |      2  |                         0  |
  4822  |  resetPlaceHolder_2();  |         |                            |
  4828  |             R = R + 2;  |      2  |                         0  |
  4833  |  resetPlaceHolder_2();  |         |                            |
  4839  |             R = R + 2;  |      2  |                         0  |
  4844  |  resetPlaceHolder_2();  |         |                            |
  4850  |             R = R + 2;  |      2  |                         0  |
  4855  |  resetPlaceHolder_2();  |         |                            |
  4861  |             R = R + 2;  |      2  |                         0  |
  4866  |  resetPlaceHolder_2();  |         |                            |
  4872  |             R = R + 2;  |      2  |                         0  |
  4877  |  resetPlaceHolder_2();  |         |                            |
  4883  |             R = R + 2;  |      2  |                         0  |
  4888  |  resetPlaceHolder_2();  |         |                            |
  4894  |             R = R + 2;  |      2  |                         0  |
  4899  |  resetPlaceHolder_2();  |         |                            |
  4905  |             R = R + 2;  |      2  |                         0  |
  4910  |  resetPlaceHolder_2();  |         |                            |
  4916  |             R = R + 2;  |      2  |                         0  |
  4921  |  resetPlaceHolder_2();  |         |                            |
  4927  |             R = R + 2;  |      2  |                         0  |
  4932  |  resetPlaceHolder_2();  |         |                            |
  4938  |             R = R + 2;  |      2  |                         0  |
  4943  |  resetPlaceHolder_2();  |         |                            |
  4949  |             R = R + 2;  |      2  |                         0  |
  4954  |  resetPlaceHolder_2();  |         |                            |
  4960  |             R = R + 2;  |      2  |                         0  |
  4965  |  resetPlaceHolder_2();  |         |                            |
  4971  |             R = R + 2;  |      2  |                         0  |
  4976  |  resetPlaceHolder_2();  |         |                            |
  4982  |             R = R + 2;  |      2  |                         0  |
  4987  |  resetPlaceHolder_2();  |         |                            |
  4993  |             R = R + 2;  |      2  |                         0  |
  4998  |  resetPlaceHolder_2();  |         |                            |
  5004  |             R = R + 2;  |      2  |                         0  |
  5009  |  resetPlaceHolder_2();  |         |                            |
  5015  |             R = R + 2;  |      2  |                         0  |
  5020  |  resetPlaceHolder_2();  |         |                            |
  5026  |             R = R + 2;  |      2  |                         0  |
  5031  |  resetPlaceHolder_2();  |         |                            |
  5037  |             R = R + 2;  |      2  |                         0  |
  5042  |  resetPlaceHolder_2();  |         |                            |
  5048  |             R = R + 2;  |      2  |                         0  |
  5053  |  resetPlaceHolder_2();  |         |                            |
  5059  |             R = R + 2;  |      2  |                         0  |
  5064  |  resetPlaceHolder_2();  |         |                            |
  5070  |             R = R + 2;  |      2  |                         0  |
  5075  |  resetPlaceHolder_2();  |         |                            |
  5081  |             R = R + 2;  |      2  |                         0  |
  5086  |  resetPlaceHolder_2();  |         |                            |
  5092  |             R = R + 2;  |      2  |                         0  |
  5097  |  resetPlaceHolder_2();  |         |                            |
  5103  |             R = R + 2;  |      2  |                         0  |
  5108  |  resetPlaceHolder_2();  |         |                            |
  5114  |             R = R + 2;  |      2  |                         0  |
  5119  |  resetPlaceHolder_2();  |         |                            |
  5125  |             R = R + 2;  |      2  |                         0  |
  5130  |  resetPlaceHolder_2();  |         |                            |
  5136  |             R = R + 2;  |      2  |                         0  |
  5141  |  resetPlaceHolder_2();  |         |                            |
  5147  |             R = R + 2;  |      2  |                         0  |
  5152  |  resetPlaceHolder_2();  |         |                            |
  5158  |             R = R + 2;  |      2  |                         0  |
  5163  |  resetPlaceHolder_2();  |         |                            |
  5169  |             R = R + 2;  |      2  |                         0  |
  5174  |  resetPlaceHolder_2();  |         |                            |
  5180  |             R = R + 2;  |      2  |                         0  |
  5185  |  resetPlaceHolder_2();  |         |                            |
  5191  |             R = R + 2;  |      2  |                         0  |
  5196  |  resetPlaceHolder_2();  |         |                            |
  5202  |             R = R + 2;  |      2  |                         0  |
  5207  |  resetPlaceHolder_2();  |         |                            |
  5213  |             R = R + 2;  |      2  |                         0  |
  5218  |  resetPlaceHolder_2();  |         |                            |
  5224  |             R = R + 2;  |      2  |                         0  |
  5229  |  resetPlaceHolder_2();  |         |                            |
  5235  |             R = R + 2;  |      2  |                         0  |
  5240  |  resetPlaceHolder_2();  |         |                            |
  5246  |             R = R + 2;  |      2  |                         0  |
  5251  |  resetPlaceHolder_2();  |         |                            |
  5257  |             R = R + 2;  |      2  |                         0  |
  5262  |  resetPlaceHolder_2();  |         |                            |
  5268  |             R = R + 1;  |      1  |                         0  |
  5273  |  resetPlaceHolder_1();  |         |                            |
  5287  |             R = R + 2;  |      2  |                         0  |
  5292  |  resetPlaceHolder_2();  |         |                            |
  5298  |             R = R + 2;  |      2  |                         0  |
  5303  |  resetPlaceHolder_2();  |         |                            |
  5309  |             R = R + 2;  |      2  |                         0  |
  5314  |  resetPlaceHolder_2();  |         |                            |
  5320  |             R = R + 2;  |      2  |                         0  |
  5325  |  resetPlaceHolder_2();  |         |                            |
  5331  |             R = R + 2;  |      2  |                         0  |
  5336  |  resetPlaceHolder_2();  |         |                            |
  5342  |             R = R + 2;  |      2  |                         0  |
  5347  |  resetPlaceHolder_2();  |         |                            |
  5353  |             R = R + 2;  |      2  |                         0  |
  5358  |  resetPlaceHolder_2();  |         |                            |
  5364  |             R = R + 1;  |      1  |                         0  |
  5369  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_2(); -> // reset R0
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	1m48.191s
user	2m11.842s
sys	0m2.606s

2023-01-25 02:28:09,662 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:28:26,207 INFO     Done. Execution time: 16.544851064682007 seconds
2023-01-25 02:28:26,208 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `13.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0228-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0228-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m16.535s
user	0m35.893s
sys	0m3.606s

2023-01-25 02:28:26,208 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 02:28:26,208 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:28:28,649 INFO     Done. Execution time: 2.440946578979492 seconds
2023-01-25 02:28:28,649 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`

real	0m2.431s
user	0m4.527s
sys	0m0.273s

2023-01-25 02:28:28,650 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-25 02:28:28,650 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-25 02:28:28,654 INFO     Done. Execution time: 0.0038449764251708984 seconds
2023-01-25 02:28:28,654 INFO     Output: rm: cannot remove '/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java': No such file or directory

2023-01-25 02:28:28,654 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-25 02:28:31,085 INFO     Done. Execution time: 2.430666208267212 seconds
2023-01-25 02:28:31,085 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m2.421s
user	0m4.485s
sys	0m0.317s

2023-01-25 02:28:31,086 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:28:32,447 INFO     Done. Execution time: 1.361624002456665 seconds
2023-01-25 02:28:32,448 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.351s
user	0m2.219s
sys	0m0.162s

2023-01-25 02:28:32,448 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 02:28:32,448 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:29:39,478 INFO     Done. Execution time: 67.02956748008728 seconds
2023-01-25 02:29:39,478 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz1359665854711205210/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1359665854711205210/bin -o /tmp/qfuzz1359665854711205210/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1359665854711205210/bin
Found file /tmp/qfuzz1359665854711205210/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz1359665854711205210/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1359665854711205210/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1359665854711205210/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1359665854711205210/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1359665854711205210/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 38, exec speed = 145089 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m38 to 38 bits (average: 38.00 bits)
[1;90m        Exec timing : [0m145k to 145k us (average: 145k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1359665854711205210/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [53.00]
2; /tmp/qfuzz1359665854711205210/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [0.00]
10; /tmp/qfuzz1359665854711205210/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1359665854711205210/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32
/tmp/qfuzz1359665854711205210/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz1359665854711205210/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1359665854711205210/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 136, 152, 55, 156, 22, 33, 153, 18, 139, 10, 93, 16, 187, 110, 33, 12, 170, 152, 55, 152, 22, 33, 153, 18, 139, 10, 93, 16, 187, 110, 33, 12, 67, 69, 57, 59, 130, 5, 24, 13, 167, 170, 90, 160, 58, 52, 191, 129, 179)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1359665854711205210/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 91, 152, 152, 152, 148, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 189, 4, 176, 155, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 110, 36, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1359665854711205210/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [136,152,55,156,22]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [91,152,152,152,148]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [110,33,153,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.019s
user	0m32.428s
sys	0m2.672s

2023-01-25 02:29:39,478 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-25 02:29:39,478 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-25 02:29:39,483 INFO     Done. Execution time: 0.00471186637878418 seconds
2023-01-25 02:29:39,483 INFO     Output: 
2023-01-25 02:29:39,483 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-25 02:29:43,251 INFO     Done. Execution time: 3.7673099040985107 seconds
2023-01-25 02:29:43,251 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [136,152,55,156,22])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [91,152,152,152,148])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [110,33,153,67,50])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 62):
                                                                                                                                                                
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |       stopIndex       |
----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [136,152,55,156,22]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [136,152,55,156,22]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [136,152,55,156,22]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [136,152,55,156,22]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [136,152,55,156,22]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [136,152,55,156,22]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [136,152,55,156,22]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [136,152,55,156,22]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [136,152,55,156,22]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [136,152,55,156,22]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |     152  |  1  |         1  |        2  |    1  |      1  |  [136,152,55,156,22]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |     152  |  1  |         1  |        2  |    2  |      1  |  [136,152,55,156,22]  |
    57  |                         i = i + 1;  |         |  0  |         0  |     152  |  2  |         1  |        2  |    2  |      1  |  [136,152,55,156,22]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |     152  |  2  |         1  |        2  |    2  |      1  |  [136,152,55,156,22]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m3.756s
user	0m7.507s
sys	0m0.331s

2023-01-25 02:29:43,252 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:29:46,353 INFO     Done. Execution time: 3.100569486618042 seconds
2023-01-25 02:29:46,353 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0229-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0229-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m3.089s
user	0m5.474s
sys	0m0.318s

2023-01-25 02:29:46,353 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 02:29:46,354 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:30:54,000 INFO     Done. Execution time: 67.64572501182556 seconds
2023-01-25 02:30:54,000 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz8358228349671293270/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8358228349671293270/bin -o /tmp/qfuzz8358228349671293270/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8358228349671293270/bin
Found file /tmp/qfuzz8358228349671293270/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz8358228349671293270/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8358228349671293270/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8358228349671293270/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8358228349671293270/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8358228349671293270/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 6, exec speed = 132014 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8358228349671293270/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

WARN  brbo.backend2.qfuzz.Executor$ - No interesting inputs. Using the input seed.
INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8358228349671293270/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8358228349671293270/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 187, 2, 33
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.633s
user	0m41.537s
sys	0m3.023s

2023-01-25 02:30:54,000 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-25 02:30:54,000 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-25 02:30:54,005 INFO     Done. Execution time: 0.0046901702880859375 seconds
2023-01-25 02:30:54,005 INFO     Output: 
2023-01-25 02:30:54,006 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-25 02:30:58,066 INFO     Done. Execution time: 4.060033082962036 seconds
2023-01-25 02:30:58,066 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(187, 2, 33)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 1)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                          
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |  d   |  recursiveTypeIndexes  |
------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            187  |  33  |                     2  |
    32  |     return;  |         |  0  |            187  |  33  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m4.049s
user	0m7.528s
sys	0m0.428s

2023-01-25 02:30:58,066 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:31:01,310 INFO     Done. Execution time: 3.2428717613220215 seconds
2023-01-25 02:31:01,310 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0230-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0230-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m3.225s
user	0m5.657s
sys	0m0.380s

2023-01-25 02:31:01,310 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 02:31:01,310 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:32:09,126 INFO     Done. Execution time: 67.81584811210632 seconds
2023-01-25 02:32:09,126 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz1185516992292794828/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1185516992292794828/bin -o /tmp/qfuzz1185516992292794828/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1185516992292794828/bin
Found file /tmp/qfuzz1185516992292794828/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz1185516992292794828/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1185516992292794828/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1185516992292794828/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1185516992292794828/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1185516992292794828/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 24, exec speed = 137237 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m137k to 137k us (average: 137k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1185516992292794828/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz1185516992292794828/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1185516992292794828/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz1185516992292794828/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1185516992292794828/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 7, 189, 50, 48, 38, 5, 54, 110, 33, 153, 67, 171, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 114, 68, 50, 170, 93, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1185516992292794828/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.796s
user	0m36.121s
sys	0m2.771s

2023-01-25 02:32:09,127 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-25 02:32:09,127 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-25 02:32:09,131 INFO     Done. Execution time: 0.004227876663208008 seconds
2023-01-25 02:32:09,132 INFO     Output: 
2023-01-25 02:32:09,132 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-25 02:32:16,345 INFO     Done. Execution time: 7.213203430175781 seconds
2023-01-25 02:32:16,346 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m7.202s
user	0m13.393s
sys	0m1.966s

2023-01-25 02:32:16,346 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:32:26,505 INFO     Done. Execution time: 10.15955114364624 seconds
2023-01-25 02:32:26,506 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `7.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0232-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0232-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.150s
user	0m21.529s
sys	0m3.092s

2023-01-25 02:32:26,506 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 02:32:26,506 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-25 02:33:33,611 INFO     Done. Execution time: 67.1052393913269 seconds
2023-01-25 02:33:33,612 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz7751570307191959857/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7751570307191959857/bin -o /tmp/qfuzz7751570307191959857/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7751570307191959857/bin
Found file /tmp/qfuzz7751570307191959857/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz7751570307191959857/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7751570307191959857/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7751570307191959857/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7751570307191959857/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7751570307191959857/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 81, map size = 32, exec speed = 137796 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m137k to 137k us (average: 137k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 680.00; [675.00,1355.00,2215.00,3075.00,3766.00]
2; /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 4; 11.00; [95.00,106.00,1355.00,3835.00]
3; /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 5; 40.00; [1315.00,1355.00,3075.00,3355.00,3766.00]
7; /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 3; 720.00; [15.00,735.00,1686.00]
11; /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta; 5; 691.00; [655.00,1355.00,2215.00,3075.00,3766.00]
21; /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 5; 140.00; [1135.00,1275.00,1546.00,3075.00,3775.00]
29; /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 5; 120.00; [295.00,555.00,675.00,1995.00,3866.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
/tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000000,orig:example.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(192, 99, 33, 27, 14, 34, 171, 153, 50, 23, 53, 153, 169, 34, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(76, 188, 56, 153, 63, 67, 109, 75, 115, 38, 28, 167, 195, 15, 46, 137, 4, 93, 15, 15, 15, 195, 15, 15, 15, 156, 8, 60, 119, 87, 72, 79, 148)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 32, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 194, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(83)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 167, 65, 153, 67, 50, 170, 93, 16, 113, 110, 33, 153, 67, 48, 5, 5, 93, 16, 187, 33, 153, 67, 169, 50, 139, 93, 156, 13, 195, 5, 9, 153, 67, 52, 93, 10, 170, 154, 16, 187, 110, 33, 84, 67, 50, 170, 4, 132, 4, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 191, 4, 4, 67, 50, 170, 125, 16, 72, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 7, 134, 67, 50, 118, 187, 110, 11, 33, 153, 67, 50, 170, 93, 134, 187, 110, 37, 4, 54, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 7, 153, 67, 50, 174, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7751570307191959857/fuzzer-out/afl/queue/id:000000,orig:example.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153, 67, 50, 170, 93, 16, 187, 110, 33, 153)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [192,99,33,27,14]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [76,188,56,153,63]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,32,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [83]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,167,65,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,191,4,4,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m7.095s
user	0m34.443s
sys	0m2.445s

2023-01-25 02:33:33,612 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-25 02:33:33,612 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `rm /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-25 02:33:33,617 INFO     Done. Execution time: 0.0043947696685791016 seconds
2023-01-25 02:33:33,617 INFO     Output: 
2023-01-25 02:33:33,617 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-25 02:33:43,056 INFO     Done. Execution time: 9.437990665435791 seconds
2023-01-25 02:33:43,056 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([192,99,33,27,14])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 7 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([76,188,56,153,63])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,32,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([83])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,167,65,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,191,4,4,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,67])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 7)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 7 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  chunk  |        diff         |  i  |  lhsBuilder  |  rhsBuilder  |
-------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [192,99,33,27,14]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [192,99,33,27,14]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [192,99,33,27,14]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [192,99,33,27,14]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [192,99,33,27,14]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [192,99,33,27,14]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [192,99,33,27,14]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [192,99,33,27,14]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |    192  |  [192,99,33,27,14]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |    192  |  192  |    192  |  [192,99,33,27,14]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |  192  |    192  |  [192,99,33,27,14]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |  192  |    192  |  [192,99,33,27,14]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |  192  |     99  |  [192,99,33,27,14]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |     99  |  291  |     99  |  [192,99,33,27,14]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  291  |     99  |  [192,99,33,27,14]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  291  |     99  |  [192,99,33,27,14]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  291  |     33  |  [192,99,33,27,14]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |     33  |  324  |     33  |  [192,99,33,27,14]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  324  |     33  |  [192,99,33,27,14]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  324  |     33  |  [192,99,33,27,14]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  324  |     27  |  [192,99,33,27,14]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |     27  |  351  |     27  |  [192,99,33,27,14]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  351  |     27  |  [192,99,33,27,14]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  351  |     27  |  [192,99,33,27,14]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  351  |     14  |  [192,99,33,27,14]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |     14  |  365  |     14  |  [192,99,33,27,14]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  365  |     14  |  [192,99,33,27,14]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  365  |     14  |  [192,99,33,27,14]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,43,57,71,85}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |    192  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |     99  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |     33  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |     27  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |     14  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m9.427s
user	0m14.881s
sys	0m3.483s

2023-01-25 02:33:43,056 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-25 02:33:53,357 INFO     Done. Execution time: 10.300369501113892 seconds
2023-01-25 02:33:53,357 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `7.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0125-0233-transparentAmortize-60s-mostPrecise/lang3-raw-0125-0233-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.290s
user	0m23.269s
sys	0m2.821s

2023-01-25 02:33:53,357 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-25 02:33:53,357 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/`

2023-01-26 12:40:31,496 INFO     Arguments:
2023-01-26 12:40:31,497 INFO     timeout	60
2023-01-26 12:40:31,497 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-26 12:40:31,497 INFO     samples	0
2023-01-26 12:40:31,497 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-26 12:40:31,497 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-26 12:40:31,497 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-26 12:40:31,497 INFO     dry	False
2023-01-26 12:40:31,497 INFO     log	/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/timeout60_01.txt
2023-01-26 12:40:31,497 INFO     mode	qfuzz
2023-01-26 12:40:31,497 INFO     version	master
2023-01-26 12:40:31,497 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
2023-01-26 12:40:31,497 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-26 12:40:31,516 INFO     Done. Execution time: 0.018362760543823242 seconds
2023-01-26 12:40:31,516 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "f0bb6e419e59447e8334c74ad21e0bca0d92b94c"`
2023-01-26 12:40:31,524 INFO     Done. Execution time: 0.007755756378173828 seconds
2023-01-26 12:40:31,524 INFO     Build a new version: "f0bb6e419e59447e8334c74ad21e0bca0d92b94c"
2023-01-26 12:40:31,524 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-26 12:40:41,940 INFO     Done. Execution time: 10.415912628173828 seconds
2023-01-26 12:40:41,941 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[success] Total time: 3 s, completed Jan 26, 2023 12:40:41 PM

2023-01-26 12:40:41,943 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-26 12:40:41,943 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 12:41:47,853 INFO     Done. Execution time: 65.90971994400024 seconds
2023-01-26 12:41:47,854 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz1046000863001639870/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1046000863001639870/bin -o /tmp/qfuzz1046000863001639870/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1046000863001639870/bin
Found file /tmp/qfuzz1046000863001639870/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz1046000863001639870/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1046000863001639870/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1046000863001639870/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1046000863001639870/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz1046000863001639870/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 132084 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 125703 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m125k to 132k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 337.00; [1359.00,3522.00,3859.00]
2; /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 57.00; [659.00,3882.00,3939.00]
3; /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta; 3; 1103.00; [1059.00,2419.00,3522.00]
5; /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 3; 17.00; [339.00,1242.00,1259.00]
6; /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta; 3; 1600.00; [119.00,1719.00,3522.00]
8; /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 3; 160.00; [2239.00,2399.00,3882.00]
15; /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 3; 563.00; [19.00,2639.00,3202.00]
18; /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 3; 337.00; [99.00,3522.00,3859.00]
21; /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 3; 1643.00; [99.00,1742.00,3579.00]
25; /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta; 3; 1857.00; [19.00,2062.00,3919.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(102, 150)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(86, 4, 4, 19, 178, 10, 63, 23, 4, 131, 18, 18, 18, 59, 18, 18, 18, 18, 18, 11, 120, 76, 4, 197, 108, 49, 165, 93, 64, 46)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 5, 4, 99, 192, 109, 111, 20, 111, 38, 70, 155, 155, 155, 155, 155, 155, 155, 155, 155, 132, 79, 88, 79, 30, 27, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(159, 88, 131)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 56, 119, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 6, 85, 194, 5, 70, 9, 114, 145)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(61, 5, 62, 157, 16, 144, 16, 16, 16, 16, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 132, 52, 88, 120, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1046000863001639870/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [102,150]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [86,4,4,19,178]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,5,4,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [159,88,131]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,56,119,139]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,6,85,194,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [61,5,62,157,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,132,52,88,120]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.901s
user	0m24.227s
sys	0m1.670s

2023-01-26 12:41:47,854 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-26 12:41:47,854 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-26 12:41:52,036 INFO     Done. Execution time: 4.181256294250488 seconds
2023-01-26 12:41:52,036 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([102,150])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([86,4,4,19,178])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([159,88,131])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,5,4,99,192])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,56,119,139])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([61,5,62,157,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,6,85,194,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,132,52,88,120])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 34):
                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |    text     |
-------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [102,150]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [102,150]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [102,150]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [102,150]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [102,150]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [102,150]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [102,150]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    102  |  0  |    0  |  [102,150]  |
    24  |                     R = R + chunk;  |    102  |  102  |    102  |  0  |    0  |  [102,150]  |
    28  |                         i = i + 1;  |         |  102  |    102  |  1  |    0  |  [102,150]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24}
                                                                   
 Index  |     Commands     |  Costs  |  SegmentIDs in GroupID(0)  |
-------------------------------------------------------------------
    24  |  R = R + chunk;  |    102  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m4.173s
user	0m7.720s
sys	0m0.966s

2023-01-26 12:41:52,036 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 12:41:53,859 INFO     Done. Execution time: 1.8225882053375244 seconds
2023-01-26 12:41:53,859 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java:46: error: cannot find symbol
      R = R + chunk;
      ^
  symbol:   variable R
  location: class TemplateEngine
//root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java:46: error: cannot find symbol
      R = R + chunk;
          ^
  symbol:   variable R
  location: class TemplateEngine
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.815s
user	0m3.077s
sys	0m0.203s

2023-01-26 12:41:53,859 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-26 12:41:53,859 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 12:42:59,928 INFO     Done. Execution time: 66.0685830116272 seconds
2023-01-26 12:42:59,928 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz5312287330737048882/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5312287330737048882/bin -o /tmp/qfuzz5312287330737048882/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5312287330737048882/bin
Found file /tmp/qfuzz5312287330737048882/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz5312287330737048882/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5312287330737048882/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5312287330737048882/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5312287330737048882/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz5312287330737048882/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 56, exec speed = 147863 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 56, exec speed = 146398 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m56 to 56 bits (average: 56.00 bits)
[1;90m        Exec timing : [0m146k to 147k us (average: 147k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 12.00; [1359.00,2233.00,3513.00,3525.00,3859.00]
2; /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 5; 12.00; [659.00,3373.00,3873.00,3885.00,3939.00]
3; /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 5; 12.00; [1359.00,2233.00,3153.00,3165.00,3719.00]
5; /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 5; 12.00; [1399.00,3013.00,3513.00,3525.00,3859.00]
7; /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 5; 12.00; [1359.00,1593.00,3513.00,3525.00,3859.00]
17; /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4; 5; 12.00; [499.00,619.00,2893.00,3513.00,3525.00]
25; /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 4; 12.00; [2199.00,2293.00,3513.00,3525.00]
51; /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 5; 12.00; [1673.00,1999.00,3513.00,3525.00,3659.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
/tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 5, 182, 5, 70, 99, 192, 83, 35, 179, 30, 12, 5, 191)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 163, 109, 109, 109, 31, 114, 101, 109, 52, 109, 185, 109, 109, 138, 56, 27, 71)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 24, 79, 30, 86, 144, 15, 120, 79, 157, 163, 16, 78, 174, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 79, 158, 111, 38, 70, 148, 89, 88, 79, 43, 35, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 69, 99, 192, 109, 150, 85, 185, 195, 35, 30, 41, 108, 171, 88, 120, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(157, 112, 67, 99, 185, 20, 111, 163, 110, 127, 79, 88, 79, 30, 88, 144, 40, 120, 78, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5312287330737048882/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,5,182,5,70], 2, 192
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,163,109,109,109], 2, 114
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,24,79,30], 2, 144
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 2, 79
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,69,99,192], 2, 150
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [157,112,67,99,185], 2, 111
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 2, 168
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 2, 111
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.060s
user	0m27.047s
sys	0m1.682s

2023-01-26 12:42:59,928 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-26 12:42:59,929 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-26 12:43:10,629 INFO     Done. Execution time: 10.700203657150269 seconds
2023-01-26 12:43:10,629 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,5,182,5,70], 2, 192)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,163,109,109,109], 2, 114)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,24,79,30], 2, 144)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 2, 79)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,69,99,192], 2, 150)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([157,112,67,99,185], 2, 111)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 2, 168)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 2, 111)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 8)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                  
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |        text        |
--------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |        192  |       |           2  |  [175,5,182,5,70]  |
    26  |                      // int R = 0;  |         |     0  |         |     |     |        192  |       |           2  |  [175,5,182,5,70]  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |     |        192  |       |           2  |  [175,5,182,5,70]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |        192  |       |           2  |  [175,5,182,5,70]  |
    30  |                         int i = 0;  |         |     0  |         |  0  |     |        192  |       |           2  |  [175,5,182,5,70]  |
    32  |                         int j = 0;  |         |     0  |         |  0  |  0  |        192  |       |           2  |  [175,5,182,5,70]  |
    34  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |        192  |       |           2  |  [175,5,182,5,70]  |
    36  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |        192  |    0  |           2  |  [175,5,182,5,70]  |
    41  |                             j = 0;  |         |     0  |      0  |  0  |  0  |        192  |    0  |           2  |  [175,5,182,5,70]  |
    44  |        chunk = arrayRead(text, j);  |         |     0  |    175  |  0  |  0  |        192  |    0  |           2  |  [175,5,182,5,70]  |
    47  |                     R = R + chunk;  |    175  |   175  |    175  |  0  |  0  |        192  |    0  |           2  |  [175,5,182,5,70]  |
    51  |                         j = j + 1;  |         |   175  |    175  |  0  |  1  |        192  |    0  |           2  |  [175,5,182,5,70]  |
    59  |          tag = arrayRead(text, j);  |         |   175  |    175  |  0  |  1  |        192  |    5  |           2  |  [175,5,182,5,70]  |
    63  |                         j = j + 1;  |         |   175  |    175  |  0  |  2  |        192  |    5  |           2  |  [175,5,182,5,70]  |
    66  |        chunk = arrayRead(text, j);  |         |   175  |    182  |  0  |  2  |        192  |    5  |           2  |  [175,5,182,5,70]  |
    69  |                     R = R + chunk;  |    182  |   357  |    182  |  0  |  2  |        192  |    5  |           2  |  [175,5,182,5,70]  |
    73  |                         j = j + 1;  |         |   357  |    182  |  0  |  3  |        192  |    5  |           2  |  [175,5,182,5,70]  |
    74  |              resetPlaceHolder_2();  |         |   357  |    182  |  0  |  3  |        192  |    5  |           2  |  [175,5,182,5,70]  |
    82  |          tag = arrayRead(text, j);  |         |   357  |    182  |  0  |  3  |        192  |    5  |           2  |  [175,5,182,5,70]  |
    86  |                         j = j + 1;  |         |   357  |    182  |  0  |  4  |        192  |    5  |           2  |  [175,5,182,5,70]  |
    89  |        chunk = arrayRead(text, j);  |         |   357  |     70  |  0  |  4  |        192  |    5  |           2  |  [175,5,182,5,70]  |
    92  |                     R = R + chunk;  |     70  |   427  |     70  |  0  |  4  |        192  |    5  |           2  |  [175,5,182,5,70]  |
    96  |                         j = j + 1;  |         |   427  |     70  |  0  |  5  |        192  |    5  |           2  |  [175,5,182,5,70]  |
    97  |              resetPlaceHolder_2();  |         |   427  |     70  |  0  |  5  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   106  |                         i = i + 1;  |         |   427  |     70  |  1  |  5  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   109  |                 R = R + separator;  |    192  |   619  |     70  |  1  |  5  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   110  |              resetPlaceHolder_1();  |         |   619  |     70  |  1  |  5  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   115  |                             j = 0;  |         |   619  |     70  |  1  |  0  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   118  |        chunk = arrayRead(text, j);  |         |   619  |    175  |  1  |  0  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   121  |                     R = R + chunk;  |    175  |   794  |    175  |  1  |  0  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   125  |                         j = j + 1;  |         |   794  |    175  |  1  |  1  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   133  |          tag = arrayRead(text, j);  |         |   794  |    175  |  1  |  1  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   137  |                         j = j + 1;  |         |   794  |    175  |  1  |  2  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   140  |        chunk = arrayRead(text, j);  |         |   794  |    182  |  1  |  2  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   143  |                     R = R + chunk;  |    182  |   976  |    182  |  1  |  2  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   147  |                         j = j + 1;  |         |   976  |    182  |  1  |  3  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   148  |              resetPlaceHolder_2();  |         |   976  |    182  |  1  |  3  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   156  |          tag = arrayRead(text, j);  |         |   976  |    182  |  1  |  3  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   160  |                         j = j + 1;  |         |   976  |    182  |  1  |  4  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   163  |        chunk = arrayRead(text, j);  |         |   976  |     70  |  1  |  4  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   166  |                     R = R + chunk;  |     70  |  1046  |     70  |  1  |  4  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   170  |                         j = j + 1;  |         |  1046  |     70  |  1  |  5  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   171  |              resetPlaceHolder_2();  |         |  1046  |     70  |  1  |  5  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   180  |                         i = i + 1;  |         |  1046  |     70  |  2  |  5  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   183  |                 R = R + separator;  |    192  |  1238  |     70  |  2  |  5  |        192  |    5  |           2  |  [175,5,182,5,70]  |
   184  |              resetPlaceHolder_1();  |         |  1238  |     70  |  2  |  5  |        192  |    5  |           2  |  [175,5,182,5,70]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {183} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    175  |                            |
    69  |         R = R + chunk;  |    182  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     70  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    192  |                         0  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    175  |                            |
   143  |         R = R + chunk;  |    182  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     70  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    192  |                         1  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {69,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47,92,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {69,121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {69,92,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {92,121,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {121,143,166}; {47,69,92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    175  |                         0  |
    69  |         R = R + chunk;  |    182  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     70  |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    192  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    175  |                         1  |
   143  |         R = R + chunk;  |    182  |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     70  |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    192  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {183}
GroupID(1): {121,143,166}; {47,69,92}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |    175  |                            |                         0  |
    69  |         R = R + chunk;  |    182  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |     70  |                            |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |    192  |                         0  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    175  |                            |                         1  |
   143  |         R = R + chunk;  |    182  |                            |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |     70  |                            |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |    192  |                         1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(110)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m10.692s
user	0m19.643s
sys	0m4.535s

2023-01-26 12:43:10,630 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 12:44:34,224 INFO     Done. Execution time: 83.59393239021301 seconds
2023-01-26 12:44:34,224 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 templateds)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `81.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1243-transparentAmortize-60s-mostPrecise/stac-raw-0126-1243-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m23.586s
user	3m34.426s
sys	0m16.104s

2023-01-26 12:44:34,224 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-26 12:44:34,224 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 12:45:40,348 INFO     Done. Execution time: 66.12397742271423 seconds
2023-01-26 12:45:40,349 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz4698100956929271186/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4698100956929271186/bin -o /tmp/qfuzz4698100956929271186/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4698100956929271186/bin
Found file /tmp/qfuzz4698100956929271186/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz4698100956929271186/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4698100956929271186/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4698100956929271186/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4698100956929271186/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz4698100956929271186/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 63, exec speed = 150814 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 63, exec speed = 145743 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m63 to 63 bits (average: 63.00 bits)
[1;90m        Exec timing : [0m145k to 150k us (average: 148k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 12.00; [408.00,1359.00,2233.00,3513.00,3525.00,3859.00]
2; /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 6; 12.00; [488.00,659.00,3373.00,3873.00,3885.00,3939.00]
3; /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 6; 12.00; [408.00,1273.00,1285.00,2233.00,3839.00,3859.00]
5; /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 5; 5.00; [388.00,393.00,399.00,2593.00,2605.00]
7; /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 6; 12.00; [119.00,1588.00,2239.00,2293.00,2305.00,2973.00]
14; /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 6; 12.00; [1273.00,1359.00,1673.00,1685.00,2939.00,3808.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(83, 189, 67, 74, 146, 100, 63, 190, 87, 69, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(114, 114, 111, 14, 5, 12, 148, 79, 88, 30, 88, 120, 191, 194)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(129, 160, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 185, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(63, 131, 191, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4698100956929271186/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [83,189,67,74,146], 2, 63, 190
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [114,114,111,14,5], 2, 148, 79
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [129,160,19,19,19], 2, 19, 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [63,131,191,99,192], 2, 111, 20
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 2, 168, 24
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 2, 111, 20
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.116s
user	0m28.575s
sys	0m1.695s

2023-01-26 12:45:40,349 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-26 12:45:40,349 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-26 12:45:53,110 INFO     Done. Execution time: 12.760834217071533 seconds
2023-01-26 12:45:53,111 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([83,189,67,74,146], 2, 63, 190)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([114,114,111,14,5], 2, 148, 79)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([129,160,19,19,19], 2, 19, 19)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([63,131,191,99,192], 2, 111, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 2, 168, 24)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 2, 111, 20)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                              
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |         text         |  ts  |
----------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |  190  |   63  |       |  [83,189,67,74,146]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |  190  |   63  |       |  [83,189,67,74,146]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |  190  |   63  |       |  [83,189,67,74,146]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |  190  |   63  |       |  [83,189,67,74,146]  |   2  |
    38  |                         int i = 0;  |         |     0  |         |  0  |     |  190  |   63  |       |  [83,189,67,74,146]  |   2  |
    40  |                         int j = 0;  |         |     0  |         |  0  |  0  |  190  |   63  |       |  [83,189,67,74,146]  |   2  |
    42  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |  190  |   63  |       |  [83,189,67,74,146]  |   2  |
    44  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |  190  |   63  |    0  |  [83,189,67,74,146]  |   2  |
    49  |                             j = 0;  |         |     0  |      0  |  0  |  0  |  190  |   63  |    0  |  [83,189,67,74,146]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |     0  |     83  |  0  |  0  |  190  |   63  |    0  |  [83,189,67,74,146]  |   2  |
    55  |                     R = R + chunk;  |     83  |    83  |     83  |  0  |  0  |  190  |   63  |    0  |  [83,189,67,74,146]  |   2  |
    59  |                         j = j + 1;  |         |    83  |     83  |  0  |  1  |  190  |   63  |    0  |  [83,189,67,74,146]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |    83  |     83  |  0  |  1  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
    71  |                         j = j + 1;  |         |    83  |     83  |  0  |  2  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |    83  |     67  |  0  |  2  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
    77  |                     R = R + chunk;  |     67  |   150  |     67  |  0  |  2  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
    80  |                       R = R + rep;  |    190  |   340  |     67  |  0  |  2  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
    84  |                         j = j + 1;  |         |   340  |     67  |  0  |  3  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
    85  |              resetPlaceHolder_2();  |         |   340  |     67  |  0  |  3  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |   340  |     67  |  0  |  3  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
    97  |                         j = j + 1;  |         |   340  |     67  |  0  |  4  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |   340  |    146  |  0  |  4  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   103  |                     R = R + chunk;  |    146  |   486  |    146  |  0  |  4  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   106  |                       R = R + rep;  |    190  |   676  |    146  |  0  |  4  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   110  |                         j = j + 1;  |         |   676  |    146  |  0  |  5  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   111  |              resetPlaceHolder_2();  |         |   676  |    146  |  0  |  5  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   120  |                         i = i + 1;  |         |   676  |    146  |  1  |  5  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   123  |                       R = R + sep;  |     63  |   739  |    146  |  1  |  5  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   124  |              resetPlaceHolder_1();  |         |   739  |    146  |  1  |  5  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   129  |                             j = 0;  |         |   739  |    146  |  1  |  0  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |   739  |     83  |  1  |  0  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   135  |                     R = R + chunk;  |     83  |   822  |     83  |  1  |  0  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   139  |                         j = j + 1;  |         |   822  |     83  |  1  |  1  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |   822  |     83  |  1  |  1  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
   151  |                         j = j + 1;  |         |   822  |     83  |  1  |  2  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |   822  |     67  |  1  |  2  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
   157  |                     R = R + chunk;  |     67  |   889  |     67  |  1  |  2  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
   160  |                       R = R + rep;  |    190  |  1079  |     67  |  1  |  2  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
   164  |                         j = j + 1;  |         |  1079  |     67  |  1  |  3  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
   165  |              resetPlaceHolder_2();  |         |  1079  |     67  |  1  |  3  |  190  |   63  |  189  |  [83,189,67,74,146]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |  1079  |     67  |  1  |  3  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   177  |                         j = j + 1;  |         |  1079  |     67  |  1  |  4  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |  1079  |    146  |  1  |  4  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   183  |                     R = R + chunk;  |    146  |  1225  |    146  |  1  |  4  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   186  |                       R = R + rep;  |    190  |  1415  |    146  |  1  |  4  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   190  |                         j = j + 1;  |         |  1415  |    146  |  1  |  5  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   191  |              resetPlaceHolder_2();  |         |  1415  |    146  |  1  |  5  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   200  |                         i = i + 1;  |         |  1415  |    146  |  2  |  5  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   203  |                       R = R + sep;  |     63  |  1478  |    146  |  2  |  5  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  1478  |    146  |  2  |  5  |  190  |   63  |   74  |  [83,189,67,74,146]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {160}; {186}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {160}; {186}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |     83  |                            |
    77  |         R = R + chunk;  |     67  |                            |
    80  |           R = R + rep;  |    190  |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    146  |                            |
   106  |           R = R + rep;  |    190  |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |     63  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |     83  |                            |
   157  |         R = R + chunk;  |     67  |                            |
   160  |           R = R + rep;  |    190  |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    146  |                            |
   186  |           R = R + rep;  |    190  |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |     63  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {123}; {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {123}; {203} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |     83  |                            |
    77  |         R = R + chunk;  |     67  |                            |
    80  |           R = R + rep;  |    190  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    146  |                            |
   106  |           R = R + rep;  |    190  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |     63  |                         0  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |     83  |                            |
   157  |         R = R + chunk;  |     67  |                            |
   160  |           R = R + rep;  |    190  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    146  |                            |
   186  |           R = R + rep;  |    190  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |     63  |                         1  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,135}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {55,77,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {77,103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {77,135,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {135,157,183}; {55,77,103} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |     83  |                         0  |
    77  |         R = R + chunk;  |     67  |                         0  |
    80  |           R = R + rep;  |    190  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |    146  |                         0  |
   106  |           R = R + rep;  |    190  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |     63  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |     83  |                         1  |
   157  |         R = R + chunk;  |     67  |                         1  |
   160  |           R = R + rep;  |    190  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |    146  |                         1  |
   186  |           R = R + rep;  |    190  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |     63  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {106}; {160}; {186}; {80}
GroupID(1): {123}; {203}
GroupID(2): {135,157,183}; {55,77,103}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |     83  |                            |                            |                         0  |
    77  |         R = R + chunk;  |     67  |                            |                            |                         0  |
    80  |           R = R + rep;  |    190  |                         0  |                            |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |    146  |                            |                            |                         0  |
   106  |           R = R + rep;  |    190  |                         1  |                            |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |     63  |                            |                         0  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |     83  |                            |                            |                         1  |
   157  |         R = R + chunk;  |     67  |                            |                            |                         1  |
   160  |           R = R + rep;  |    190  |                         2  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |    146  |                            |                            |                         1  |
   186  |           R = R + rep;  |    190  |                         3  |                            |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |     63  |                            |                         1  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(85, 111, 165)
GroupID(1): Set(124)
GroupID(2): Set(124)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R chunk -> R2 = R2 + chunk;
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_2(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R rep -> R0 = R0 + rep;
resetPlaceHolder_1(); -> {
  if (S2 < R2)
  {
    S2 = R2;
  }
  else
  {
    ;
  }
  R2 = 0;
  C2 = C2 + 1;
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m12.750s
user	0m23.556s
sys	0m5.779s

2023-01-26 12:45:53,111 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 12:50:58,885 INFO     Done. Execution time: 305.7743730545044 seconds
2023-01-26 12:50:58,886 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-52151940163342557.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 sep)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 rep)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 rep)))` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-7117647066673369194.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-8934716963067692977.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 sep)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p (+ 0 (* 1 1 text)))` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 (+ 0 (* 1 1 ts)))` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
FATAL brbo.common.Z3Solver - Z3 timed out after `10 seconds`!
FATAL brbo.common.Z3Solver - Error when running Z3. Exit code: `143`
ERROR brbo.common.Z3Solver - Z3 output:

INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `303.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1245-transparentAmortize-60s-mostPrecise/stac-raw-0126-1245-transparentAmortize-60s-mostPrecise-000-099.csv`

real	5m5.765s
user	16m31.815s
sys	0m46.010s

2023-01-26 12:50:58,886 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-26 12:50:58,886 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 12:52:04,917 INFO     Done. Execution time: 66.03106117248535 seconds
2023-01-26 12:52:04,917 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz4481627088601610270/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4481627088601610270/bin -o /tmp/qfuzz4481627088601610270/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4481627088601610270/bin
Found file /tmp/qfuzz4481627088601610270/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz4481627088601610270/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4481627088601610270/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4481627088601610270/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4481627088601610270/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz4481627088601610270/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 130771 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 41, exec speed = 135632 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m130k to 135k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 260.00; [1355.00,1995.00,2255.00,3522.00,3855.00]
2; /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 5; 53.00; [655.00,3215.00,3555.00,3882.00,3935.00]
3; /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 4; 7.00; [95.00,102.00,175.00,715.00]
4; /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta; 5; 407.00; [315.00,722.00,1575.00,2415.00,2895.00]
11; /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta; 5; 460.00; [222.00,1775.00,2235.00,2815.00,3275.00]
20; /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta; 5; 700.00; [95.00,795.00,1535.00,2255.00,3522.00]
22; /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 5; 480.00; [735.00,1775.00,2255.00,2955.00,3522.00]
26; /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 5; 40.00; [1355.00,1995.00,3522.00,3855.00,3895.00]
29; /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 5; 200.00; [15.00,775.00,2555.00,2755.00,3622.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
/tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(180, 127, 137, 38)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 194, 67, 99, 192, 109, 111, 20, 111, 117, 70, 148, 79, 88, 79, 102, 164, 144, 47, 182, 105, 19, 42, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 147, 36, 88, 51, 100, 100, 100, 100, 41, 4, 95, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 76, 4, 39, 109, 111, 100, 176, 90, 99, 192, 109, 90, 99, 192, 109, 120, 8, 147, 198, 198, 198, 198, 198, 198, 198, 198, 198, 191, 89, 168, 153, 157, 182, 16, 106, 199, 6, 153, 112, 65, 195, 35, 30, 19, 91, 160, 32, 141)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(10, 140, 88, 111, 163, 126, 111, 5, 101, 150, 142, 13, 150, 150, 71, 91, 161, 5, 121, 42, 111, 140, 42, 161, 82, 150, 128, 161, 132, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 144, 15, 120, 78, 47, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 8, 4, 4, 35, 172, 152, 152, 152, 152, 145, 189, 185, 54, 125, 32, 35, 167, 188, 128, 116, 61, 56, 134, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4481627088601610270/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [180,127,137,38]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,194,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,147,36,88]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,76,4,39]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [10,140,88,111,163]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [35,144,15,120,78]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,8,4,4,35]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.023s
user	0m25.055s
sys	0m1.786s

2023-01-26 12:52:04,918 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-26 12:52:04,918 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-26 12:52:12,965 INFO     Done. Execution time: 8.047217607498169 seconds
2023-01-26 12:52:12,965 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([180,127,137,38])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,194,67,99,192])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,147,36,88])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,76,4,39])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([10,140,88,111,163])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([35,144,15,120,78])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,8,4,4,35])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 74):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |        text        |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [180,127,137,38]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [180,127,137,38]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [180,127,137,38]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [180,127,137,38]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [180,127,137,38]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [180,127,137,38]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [180,127,137,38]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    180  |  0  |    0  |  [180,127,137,38]  |
    24  |                     R = R + chunk;  |    180  |  180  |    180  |  0  |    0  |  [180,127,137,38]  |
    28  |                         i = i + 1;  |         |  180  |    180  |  1  |    0  |  [180,127,137,38]  |
    34  |        chunk = arrayRead(text, i);  |         |  180  |    127  |  1  |    0  |  [180,127,137,38]  |
    37  |                     R = R + chunk;  |    127  |  307  |    127  |  1  |    0  |  [180,127,137,38]  |
    41  |                         i = i + 1;  |         |  307  |    127  |  2  |    0  |  [180,127,137,38]  |
    42  |              resetPlaceHolder_1();  |         |  307  |    127  |  2  |    0  |  [180,127,137,38]  |
    48  |        chunk = arrayRead(text, i);  |         |  307  |    137  |  2  |    0  |  [180,127,137,38]  |
    51  |                     R = R + chunk;  |    137  |  444  |    137  |  2  |    0  |  [180,127,137,38]  |
    55  |                         i = i + 1;  |         |  444  |    137  |  3  |    0  |  [180,127,137,38]  |
    56  |              resetPlaceHolder_1();  |         |  444  |    137  |  3  |    0  |  [180,127,137,38]  |
    62  |        chunk = arrayRead(text, i);  |         |  444  |     38  |  3  |    0  |  [180,127,137,38]  |
    65  |                     R = R + chunk;  |     38  |  482  |     38  |  3  |    0  |  [180,127,137,38]  |
    69  |                         i = i + 1;  |         |  482  |     38  |  4  |    0  |  [180,127,137,38]  |
    70  |              resetPlaceHolder_1();  |         |  482  |     38  |  4  |    0  |  [180,127,137,38]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 51, 65]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37, 51, 65]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 37, 51, 65]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,37,51,65}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    180  |                         0  |
    37  |         R = R + chunk;  |    127  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |    137  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |     38  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m8.039s
user	0m13.542s
sys	0m3.151s

2023-01-26 12:52:12,966 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 12:52:21,209 INFO     Done. Execution time: 8.243672132492065 seconds
2023-01-26 12:52:21,210 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1252-transparentAmortize-60s-mostPrecise/stac-raw-0126-1252-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.235s
user	0m18.127s
sys	0m2.431s

2023-01-26 12:52:21,210 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-26 12:52:21,210 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 12:53:27,962 INFO     Done. Execution time: 66.75141167640686 seconds
2023-01-26 12:53:27,962 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz3644269160979127674/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3644269160979127674/bin -o /tmp/qfuzz3644269160979127674/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3644269160979127674/bin
Found file /tmp/qfuzz3644269160979127674/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz3644269160979127674/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3644269160979127674/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3644269160979127674/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3644269160979127674/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3644269160979127674/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 40, exec speed = 135094 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 40, exec speed = 124308 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m124k to 135k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [29.00,34.00,3511.00]
2; /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 5.00; [29.00,34.00,3871.00]
3; /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 3; 5.00; [29.00,34.00,3871.00]
6; /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 5.00; [29.00,34.00,1871.00]
14; /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 3; 5.00; [29.00,34.00,3451.00]
20; /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 3; 5.00; [29.00,34.00,1251.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(62, 5, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(172, 112, 67, 99, 193, 76, 111, 167, 70, 140, 79, 88, 79, 132, 84, 144, 15, 120, 78, 19, 61, 157, 178, 178, 178, 134, 79, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(93, 163, 93, 163)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 157, 45, 16, 78, 56, 108, 20, 112, 38, 70, 148, 79, 88, 79, 30, 86, 174, 192, 109, 111, 20, 197, 108, 175, 93, 121, 88, 85, 185, 195, 35, 30, 42, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3644269160979127674/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 62, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 172, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 93, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 193, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 193, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 175, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.741s
user	0m24.691s
sys	0m1.677s

2023-01-26 12:53:27,962 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-26 12:53:27,962 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-26 12:53:33,883 INFO     Done. Execution time: 5.920934200286865 seconds
2023-01-26 12:53:33,883 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(62, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(172, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(93, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(193, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(193, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(175, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                    
 Index  |              Commands               |  Costs  |  R   |  builder  |  i  |  sep  |  types  |
----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |           |     |   62  |      2  |
    19  |                   int builder = 0;  |         |   0  |        0  |     |   62  |      2  |
    20  |                      // int R = 0;  |         |   0  |        0  |     |   62  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |   0  |        0  |     |   62  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |   0  |        0  |     |   62  |      2  |
    26  |             builder = builder + 1;  |         |   0  |        1  |     |   62  |      2  |
    29  |                         R = R + 1;  |      1  |   1  |        1  |     |   62  |      2  |
    31  |                         int i = 1;  |         |   1  |        1  |  1  |   62  |      2  |
    38  |           builder = builder + sep;  |         |   1  |       63  |  1  |   62  |      2  |
    41  |                       R = R + sep;  |     62  |  63  |       63  |  1  |   62  |      2  |
    45  |             builder = builder + 1;  |         |  63  |       64  |  1  |   62  |      2  |
    48  |                         R = R + 1;  |      1  |  64  |       64  |  1  |   62  |      2  |
    52  |                         i = i + 1;  |         |  64  |       64  |  2  |   62  |      2  |
    53  |              resetPlaceHolder_1();  |         |  64  |       64  |  2  |   62  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |     62  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     62  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |     62  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m5.912s
user	0m11.328s
sys	0m1.754s

2023-01-26 12:53:33,884 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 12:53:49,185 INFO     Done. Execution time: 15.300667762756348 seconds
2023-01-26 12:53:49,185 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `13.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1253-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1253-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.293s
user	0m38.918s
sys	0m6.403s

2023-01-26 12:53:49,185 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-26 12:53:49,185 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 12:54:54,938 INFO     Done. Execution time: 65.75308871269226 seconds
2023-01-26 12:54:54,939 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz1463049746661283866/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1463049746661283866/bin -o /tmp/qfuzz1463049746661283866/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1463049746661283866/bin
Found file /tmp/qfuzz1463049746661283866/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz1463049746661283866/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1463049746661283866/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1463049746661283866/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1463049746661283866/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz1463049746661283866/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 34, exec speed = 127342 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 34, exec speed = 126796 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m126k to 127k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1463049746661283866/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 3.00; [29.00,32.00,37.00]
2; /tmp/qfuzz1463049746661283866/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 3.00; [29.00,32.00,37.00]
3; /tmp/qfuzz1463049746661283866/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1463049746661283866/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz1463049746661283866/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1463049746661283866/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1463049746661283866/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1463049746661283866/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1463049746661283866/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.744s
user	0m22.665s
sys	0m1.775s

2023-01-26 12:54:54,939 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-26 12:54:54,939 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-26 12:55:00,075 INFO     Done. Execution time: 5.135205268859863 seconds
2023-01-26 12:55:00,075 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m5.128s
user	0m10.003s
sys	0m1.786s

2023-01-26 12:55:00,075 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 12:55:08,604 INFO     Done. Execution time: 8.528743982315063 seconds
2023-01-26 12:55:08,604 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1255-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1255-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.521s
user	0m18.922s
sys	0m2.860s

2023-01-26 12:55:08,604 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-26 12:55:08,605 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 12:56:14,820 INFO     Done. Execution time: 66.21479344367981 seconds
2023-01-26 12:56:14,820 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz1612367088665862298/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1612367088665862298/bin -o /tmp/qfuzz1612367088665862298/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1612367088665862298/bin
Found file /tmp/qfuzz1612367088665862298/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz1612367088665862298/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1612367088665862298/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1612367088665862298/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1612367088665862298/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz1612367088665862298/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 161190 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 42, exec speed = 149716 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m149k to 161k us (average: 155k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
3; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
4; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
6; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
7; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
8; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
10; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
11; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
12; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 4; 8.00; [30.00,38.00,50.00,66.00]
14; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
15; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,38.00,50.00,66.00]
17; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
18; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
20; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
21; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
23; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
24; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
25; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
27; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
29; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
31; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:8; 4; 8.00; [30.00,50.00,58.00,66.00]
33; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
35; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
36; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,50.00,58.00,66.00]
40; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:2; 4; 8.00; [30.00,50.00,58.00,66.00]
41; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
43; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:8; 5; 8.00; [30.00,38.00,50.00,58.00,66.00]
44; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]
46; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:4; 4; 8.00; [30.00,50.00,58.00,66.00]
48; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:32; 4; 8.00; [30.00,38.00,50.00,66.00]
49; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:128; 4; 8.00; [30.00,50.00,58.00,66.00]
51; /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:128
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:32
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:4
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:16
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:8
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:2
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:32
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:16
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:8
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:2
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:2
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:2
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000032,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 46, 92, 92, 92, 92, 92, 92, 92, 92, 92, 90, 92, 92, 60, 86, 144, 11, 101, 4, 59, 180, 160, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000031,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(55, 160, 58, 5, 47, 180, 113, 69, 123, 180, 52, 160, 20, 148, 84, 119, 63, 5, 122, 88, 31, 160, 63, 178, 148, 79, 150, 5, 63, 178, 148, 79, 149, 102, 57, 63, 160, 122, 88, 55, 81, 41, 102, 108, 9, 22, 122, 88, 22, 81, 100, 31, 4, 132, 143, 52, 131, 5, 93, 64, 143, 52, 20, 100, 88, 69, 123, 196, 162)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000030,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(95)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000029,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 112, 67, 99, 192, 193, 157, 182, 16, 78, 56, 108, 83, 93, 121, 88, 85, 185, 195, 35, 161, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000028,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(153, 80, 5, 5, 11, 102)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000027,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000026,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(191, 64, 99, 140, 191, 64, 151)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000025,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 80, 30, 41, 108, 52, 88, 120, 191, 112)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000024,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 86, 198, 180, 7, 111, 61, 61, 61, 61, 61, 61, 61, 61, 71, 61, 61, 166, 94, 120, 51, 12, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000023,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(111, 156, 4, 93, 111, 137, 121, 88, 71, 185, 195, 35, 22, 78, 166, 184, 67, 79, 30, 86, 102, 88, 151, 64, 188)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000022,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 63, 4, 177)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000021,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(145, 147, 67, 99, 169, 188, 52, 176, 142, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000020,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 70, 148, 150, 88, 79, 30, 86, 144, 15, 120, 177, 157, 17, 103, 93, 121, 88, 85, 185, 195, 35, 30, 41, 108, 52, 88, 120, 70, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000019,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 115, 109, 111, 20, 111, 38, 70, 148, 93, 148, 79, 85, 185, 195, 35, 30, 41, 108, 52, 88, 120, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000018,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 14, 93, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000017,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(102, 182, 147, 52, 123, 18, 76, 198, 180, 167, 91, 23, 141, 18, 147, 185, 177, 4, 43, 102, 79, 78, 141, 18, 147, 108, 194, 4, 43, 102)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(111, 72, 70, 147, 79, 185, 111, 20, 111, 72, 70, 147, 4, 160, 94, 12, 29, 198, 136, 179, 56, 108, 103, 57, 121, 147, 85, 73, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 19, 109, 111, 197, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(189, 79)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 171, 16, 160, 123, 182, 165, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 14, 175, 121)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(181, 160, 24, 147, 120, 16, 195, 145, 150, 77, 133, 160, 160, 57, 97, 120, 122, 191, 145, 28, 151, 145)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(169)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(39, 143, 196, 185, 62, 164, 101, 192, 138, 144, 23, 108, 46, 38, 109, 99, 61, 144, 23, 108, 46, 191, 109, 99, 197, 148, 117, 72, 151, 75, 163)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 191, 60, 122, 65, 71, 139, 7, 106, 6, 71)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 142)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(66, 106, 91, 99, 198, 140, 111, 88, 104, 191, 150)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(17, 8, 8, 8, 82, 19, 8, 146, 8, 5, 5, 169)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(122)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1612367088665862298/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,46,92,92]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [55,160,58,5,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [95]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [153,80,5,5,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [133]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [191,64,99,140,191]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,80,30,41]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,86,198,180,7]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [111,156,4,93,111]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [6,6,6,6,6]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [145,147,67,99,169]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,70,148,150]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,115]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,14]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [102,182,147,52,123]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [111,72,70,147,79]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,19]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [189,79]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,171,16,160,123]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,14,175,121]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [181,160,24,147,120]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [169]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [39,143,196,185,62]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,191,60,122,65]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,142]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [66,106,91,99,198]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [17,8,8,8,82]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [122]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.205s
user	0m27.271s
sys	0m3.365s

2023-01-26 12:56:14,820 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-26 12:56:14,820 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-26 12:57:45,059 INFO     Done. Execution time: 90.23819088935852 seconds
2023-01-26 12:57:45,059 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([95])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,46,92,92])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([55,160,58,5,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 33 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,112,67,99,192])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([153,80,5,5,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([133])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([191,64,99,140,191])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,80,30,41])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,86,198,180,7])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 33 (24.24%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([111,156,4,93,111])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([6,6,6,6,6])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([145,147,67,99,169])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,70,148,150])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,115])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,14])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([102,182,147,52,123])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([111,72,70,147,79])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 16 / 33 (48.48%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,19])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([189,79])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,171,16,160,123])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,14,175,121])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([181,160,24,147,120])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([169])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([39,143,196,185,62])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,191,60,122,65])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,142])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([66,106,91,99,198])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([17,8,8,8,82])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([122])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 33)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 33 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 5802):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R    |  entry  |  i  |   j   |        sorted        |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |       |  [175,112,46,92,92]  |
    10  |                      // int R = 0;  |         |     0  |         |     |       |  [175,112,46,92,92]  |
    11  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |       |  [175,112,46,92,92]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |       |  [175,112,46,92,92]  |
    14  |                     int entry = 0;  |         |     0  |      0  |     |       |  [175,112,46,92,92]  |
    16  |                         int i = 0;  |         |     0  |      0  |  0  |       |  [175,112,46,92,92]  |
    22  |      entry = arrayRead(sorted, i);  |         |     0  |    175  |  0  |       |  [175,112,46,92,92]  |
    24  |                         int j = 0;  |         |     0  |    175  |  0  |    0  |  [175,112,46,92,92]  |
    30  |                         R = R + 2;  |      2  |     2  |    175  |  0  |    0  |  [175,112,46,92,92]  |
    34  |                         j = j + 1;  |         |     2  |    175  |  0  |    1  |  [175,112,46,92,92]  |
    35  |              resetPlaceHolder_2();  |         |     2  |    175  |  0  |    1  |  [175,112,46,92,92]  |
    41  |                         R = R + 2;  |      2  |     4  |    175  |  0  |    1  |  [175,112,46,92,92]  |
    45  |                         j = j + 1;  |         |     4  |    175  |  0  |    2  |  [175,112,46,92,92]  |
    46  |              resetPlaceHolder_2();  |         |     4  |    175  |  0  |    2  |  [175,112,46,92,92]  |
    52  |                         R = R + 2;  |      2  |     6  |    175  |  0  |    2  |  [175,112,46,92,92]  |
    56  |                         j = j + 1;  |         |     6  |    175  |  0  |    3  |  [175,112,46,92,92]  |
    57  |              resetPlaceHolder_2();  |         |     6  |    175  |  0  |    3  |  [175,112,46,92,92]  |
    63  |                         R = R + 2;  |      2  |     8  |    175  |  0  |    3  |  [175,112,46,92,92]  |
    67  |                         j = j + 1;  |         |     8  |    175  |  0  |    4  |  [175,112,46,92,92]  |
    68  |              resetPlaceHolder_2();  |         |     8  |    175  |  0  |    4  |  [175,112,46,92,92]  |
    74  |                         R = R + 2;  |      2  |    10  |    175  |  0  |    4  |  [175,112,46,92,92]  |
    78  |                         j = j + 1;  |         |    10  |    175  |  0  |    5  |  [175,112,46,92,92]  |
    79  |              resetPlaceHolder_2();  |         |    10  |    175  |  0  |    5  |  [175,112,46,92,92]  |
    85  |                         R = R + 2;  |      2  |    12  |    175  |  0  |    5  |  [175,112,46,92,92]  |
    89  |                         j = j + 1;  |         |    12  |    175  |  0  |    6  |  [175,112,46,92,92]  |
    90  |              resetPlaceHolder_2();  |         |    12  |    175  |  0  |    6  |  [175,112,46,92,92]  |
    96  |                         R = R + 2;  |      2  |    14  |    175  |  0  |    6  |  [175,112,46,92,92]  |
   100  |                         j = j + 1;  |         |    14  |    175  |  0  |    7  |  [175,112,46,92,92]  |
   101  |              resetPlaceHolder_2();  |         |    14  |    175  |  0  |    7  |  [175,112,46,92,92]  |
   107  |                         R = R + 2;  |      2  |    16  |    175  |  0  |    7  |  [175,112,46,92,92]  |
   111  |                         j = j + 1;  |         |    16  |    175  |  0  |    8  |  [175,112,46,92,92]  |
   112  |              resetPlaceHolder_2();  |         |    16  |    175  |  0  |    8  |  [175,112,46,92,92]  |
   118  |                         R = R + 2;  |      2  |    18  |    175  |  0  |    8  |  [175,112,46,92,92]  |
   122  |                         j = j + 1;  |         |    18  |    175  |  0  |    9  |  [175,112,46,92,92]  |
   123  |              resetPlaceHolder_2();  |         |    18  |    175  |  0  |    9  |  [175,112,46,92,92]  |
   129  |                         R = R + 2;  |      2  |    20  |    175  |  0  |    9  |  [175,112,46,92,92]  |
   133  |                         j = j + 1;  |         |    20  |    175  |  0  |   10  |  [175,112,46,92,92]  |
   134  |              resetPlaceHolder_2();  |         |    20  |    175  |  0  |   10  |  [175,112,46,92,92]  |
   140  |                         R = R + 2;  |      2  |    22  |    175  |  0  |   10  |  [175,112,46,92,92]  |
   144  |                         j = j + 1;  |         |    22  |    175  |  0  |   11  |  [175,112,46,92,92]  |
   145  |              resetPlaceHolder_2();  |         |    22  |    175  |  0  |   11  |  [175,112,46,92,92]  |
   151  |                         R = R + 2;  |      2  |    24  |    175  |  0  |   11  |  [175,112,46,92,92]  |
   155  |                         j = j + 1;  |         |    24  |    175  |  0  |   12  |  [175,112,46,92,92]  |
   156  |              resetPlaceHolder_2();  |         |    24  |    175  |  0  |   12  |  [175,112,46,92,92]  |
   162  |                         R = R + 2;  |      2  |    26  |    175  |  0  |   12  |  [175,112,46,92,92]  |
   166  |                         j = j + 1;  |         |    26  |    175  |  0  |   13  |  [175,112,46,92,92]  |
   167  |              resetPlaceHolder_2();  |         |    26  |    175  |  0  |   13  |  [175,112,46,92,92]  |
   173  |                         R = R + 2;  |      2  |    28  |    175  |  0  |   13  |  [175,112,46,92,92]  |
   177  |                         j = j + 1;  |         |    28  |    175  |  0  |   14  |  [175,112,46,92,92]  |
   178  |              resetPlaceHolder_2();  |         |    28  |    175  |  0  |   14  |  [175,112,46,92,92]  |
   184  |                         R = R + 2;  |      2  |    30  |    175  |  0  |   14  |  [175,112,46,92,92]  |
   188  |                         j = j + 1;  |         |    30  |    175  |  0  |   15  |  [175,112,46,92,92]  |
   189  |              resetPlaceHolder_2();  |         |    30  |    175  |  0  |   15  |  [175,112,46,92,92]  |
   195  |                         R = R + 2;  |      2  |    32  |    175  |  0  |   15  |  [175,112,46,92,92]  |
   199  |                         j = j + 1;  |         |    32  |    175  |  0  |   16  |  [175,112,46,92,92]  |
   200  |              resetPlaceHolder_2();  |         |    32  |    175  |  0  |   16  |  [175,112,46,92,92]  |
   206  |                         R = R + 2;  |      2  |    34  |    175  |  0  |   16  |  [175,112,46,92,92]  |
   210  |                         j = j + 1;  |         |    34  |    175  |  0  |   17  |  [175,112,46,92,92]  |
   211  |              resetPlaceHolder_2();  |         |    34  |    175  |  0  |   17  |  [175,112,46,92,92]  |
   217  |                         R = R + 2;  |      2  |    36  |    175  |  0  |   17  |  [175,112,46,92,92]  |
   221  |                         j = j + 1;  |         |    36  |    175  |  0  |   18  |  [175,112,46,92,92]  |
   222  |              resetPlaceHolder_2();  |         |    36  |    175  |  0  |   18  |  [175,112,46,92,92]  |
   228  |                         R = R + 2;  |      2  |    38  |    175  |  0  |   18  |  [175,112,46,92,92]  |
   232  |                         j = j + 1;  |         |    38  |    175  |  0  |   19  |  [175,112,46,92,92]  |
   233  |              resetPlaceHolder_2();  |         |    38  |    175  |  0  |   19  |  [175,112,46,92,92]  |
   239  |                         R = R + 2;  |      2  |    40  |    175  |  0  |   19  |  [175,112,46,92,92]  |
   243  |                         j = j + 1;  |         |    40  |    175  |  0  |   20  |  [175,112,46,92,92]  |
   244  |              resetPlaceHolder_2();  |         |    40  |    175  |  0  |   20  |  [175,112,46,92,92]  |
   250  |                         R = R + 2;  |      2  |    42  |    175  |  0  |   20  |  [175,112,46,92,92]  |
   254  |                         j = j + 1;  |         |    42  |    175  |  0  |   21  |  [175,112,46,92,92]  |
   255  |              resetPlaceHolder_2();  |         |    42  |    175  |  0  |   21  |  [175,112,46,92,92]  |
   261  |                         R = R + 2;  |      2  |    44  |    175  |  0  |   21  |  [175,112,46,92,92]  |
   265  |                         j = j + 1;  |         |    44  |    175  |  0  |   22  |  [175,112,46,92,92]  |
   266  |              resetPlaceHolder_2();  |         |    44  |    175  |  0  |   22  |  [175,112,46,92,92]  |
   272  |                         R = R + 2;  |      2  |    46  |    175  |  0  |   22  |  [175,112,46,92,92]  |
   276  |                         j = j + 1;  |         |    46  |    175  |  0  |   23  |  [175,112,46,92,92]  |
   277  |              resetPlaceHolder_2();  |         |    46  |    175  |  0  |   23  |  [175,112,46,92,92]  |
   283  |                         R = R + 2;  |      2  |    48  |    175  |  0  |   23  |  [175,112,46,92,92]  |
   287  |                         j = j + 1;  |         |    48  |    175  |  0  |   24  |  [175,112,46,92,92]  |
   288  |              resetPlaceHolder_2();  |         |    48  |    175  |  0  |   24  |  [175,112,46,92,92]  |
   294  |                         R = R + 2;  |      2  |    50  |    175  |  0  |   24  |  [175,112,46,92,92]  |
   298  |                         j = j + 1;  |         |    50  |    175  |  0  |   25  |  [175,112,46,92,92]  |
   299  |              resetPlaceHolder_2();  |         |    50  |    175  |  0  |   25  |  [175,112,46,92,92]  |
   305  |                         R = R + 2;  |      2  |    52  |    175  |  0  |   25  |  [175,112,46,92,92]  |
   309  |                         j = j + 1;  |         |    52  |    175  |  0  |   26  |  [175,112,46,92,92]  |
   310  |              resetPlaceHolder_2();  |         |    52  |    175  |  0  |   26  |  [175,112,46,92,92]  |
   316  |                         R = R + 2;  |      2  |    54  |    175  |  0  |   26  |  [175,112,46,92,92]  |
   320  |                         j = j + 1;  |         |    54  |    175  |  0  |   27  |  [175,112,46,92,92]  |
   321  |              resetPlaceHolder_2();  |         |    54  |    175  |  0  |   27  |  [175,112,46,92,92]  |
   327  |                         R = R + 2;  |      2  |    56  |    175  |  0  |   27  |  [175,112,46,92,92]  |
   331  |                         j = j + 1;  |         |    56  |    175  |  0  |   28  |  [175,112,46,92,92]  |
   332  |              resetPlaceHolder_2();  |         |    56  |    175  |  0  |   28  |  [175,112,46,92,92]  |
   338  |                         R = R + 2;  |      2  |    58  |    175  |  0  |   28  |  [175,112,46,92,92]  |
   342  |                         j = j + 1;  |         |    58  |    175  |  0  |   29  |  [175,112,46,92,92]  |
   343  |              resetPlaceHolder_2();  |         |    58  |    175  |  0  |   29  |  [175,112,46,92,92]  |
   349  |                         R = R + 2;  |      2  |    60  |    175  |  0  |   29  |  [175,112,46,92,92]  |
   353  |                         j = j + 1;  |         |    60  |    175  |  0  |   30  |  [175,112,46,92,92]  |
   354  |              resetPlaceHolder_2();  |         |    60  |    175  |  0  |   30  |  [175,112,46,92,92]  |
   360  |                         R = R + 2;  |      2  |    62  |    175  |  0  |   30  |  [175,112,46,92,92]  |
   364  |                         j = j + 1;  |         |    62  |    175  |  0  |   31  |  [175,112,46,92,92]  |
   365  |              resetPlaceHolder_2();  |         |    62  |    175  |  0  |   31  |  [175,112,46,92,92]  |
   371  |                         R = R + 2;  |      2  |    64  |    175  |  0  |   31  |  [175,112,46,92,92]  |
   375  |                         j = j + 1;  |         |    64  |    175  |  0  |   32  |  [175,112,46,92,92]  |
   376  |              resetPlaceHolder_2();  |         |    64  |    175  |  0  |   32  |  [175,112,46,92,92]  |
   382  |                         R = R + 2;  |      2  |    66  |    175  |  0  |   32  |  [175,112,46,92,92]  |
   386  |                         j = j + 1;  |         |    66  |    175  |  0  |   33  |  [175,112,46,92,92]  |
   387  |              resetPlaceHolder_2();  |         |    66  |    175  |  0  |   33  |  [175,112,46,92,92]  |
   393  |                         R = R + 2;  |      2  |    68  |    175  |  0  |   33  |  [175,112,46,92,92]  |
   397  |                         j = j + 1;  |         |    68  |    175  |  0  |   34  |  [175,112,46,92,92]  |
   398  |              resetPlaceHolder_2();  |         |    68  |    175  |  0  |   34  |  [175,112,46,92,92]  |
   404  |                         R = R + 2;  |      2  |    70  |    175  |  0  |   34  |  [175,112,46,92,92]  |
   408  |                         j = j + 1;  |         |    70  |    175  |  0  |   35  |  [175,112,46,92,92]  |
   409  |              resetPlaceHolder_2();  |         |    70  |    175  |  0  |   35  |  [175,112,46,92,92]  |
   415  |                         R = R + 2;  |      2  |    72  |    175  |  0  |   35  |  [175,112,46,92,92]  |
   419  |                         j = j + 1;  |         |    72  |    175  |  0  |   36  |  [175,112,46,92,92]  |
   420  |              resetPlaceHolder_2();  |         |    72  |    175  |  0  |   36  |  [175,112,46,92,92]  |
   426  |                         R = R + 2;  |      2  |    74  |    175  |  0  |   36  |  [175,112,46,92,92]  |
   430  |                         j = j + 1;  |         |    74  |    175  |  0  |   37  |  [175,112,46,92,92]  |
   431  |              resetPlaceHolder_2();  |         |    74  |    175  |  0  |   37  |  [175,112,46,92,92]  |
   437  |                         R = R + 2;  |      2  |    76  |    175  |  0  |   37  |  [175,112,46,92,92]  |
   441  |                         j = j + 1;  |         |    76  |    175  |  0  |   38  |  [175,112,46,92,92]  |
   442  |              resetPlaceHolder_2();  |         |    76  |    175  |  0  |   38  |  [175,112,46,92,92]  |
   448  |                         R = R + 2;  |      2  |    78  |    175  |  0  |   38  |  [175,112,46,92,92]  |
   452  |                         j = j + 1;  |         |    78  |    175  |  0  |   39  |  [175,112,46,92,92]  |
   453  |              resetPlaceHolder_2();  |         |    78  |    175  |  0  |   39  |  [175,112,46,92,92]  |
   459  |                         R = R + 2;  |      2  |    80  |    175  |  0  |   39  |  [175,112,46,92,92]  |
   463  |                         j = j + 1;  |         |    80  |    175  |  0  |   40  |  [175,112,46,92,92]  |
   464  |              resetPlaceHolder_2();  |         |    80  |    175  |  0  |   40  |  [175,112,46,92,92]  |
   470  |                         R = R + 2;  |      2  |    82  |    175  |  0  |   40  |  [175,112,46,92,92]  |
   474  |                         j = j + 1;  |         |    82  |    175  |  0  |   41  |  [175,112,46,92,92]  |
   475  |              resetPlaceHolder_2();  |         |    82  |    175  |  0  |   41  |  [175,112,46,92,92]  |
   481  |                         R = R + 2;  |      2  |    84  |    175  |  0  |   41  |  [175,112,46,92,92]  |
   485  |                         j = j + 1;  |         |    84  |    175  |  0  |   42  |  [175,112,46,92,92]  |
   486  |              resetPlaceHolder_2();  |         |    84  |    175  |  0  |   42  |  [175,112,46,92,92]  |
   492  |                         R = R + 2;  |      2  |    86  |    175  |  0  |   42  |  [175,112,46,92,92]  |
   496  |                         j = j + 1;  |         |    86  |    175  |  0  |   43  |  [175,112,46,92,92]  |
   497  |              resetPlaceHolder_2();  |         |    86  |    175  |  0  |   43  |  [175,112,46,92,92]  |
   503  |                         R = R + 2;  |      2  |    88  |    175  |  0  |   43  |  [175,112,46,92,92]  |
   507  |                         j = j + 1;  |         |    88  |    175  |  0  |   44  |  [175,112,46,92,92]  |
   508  |              resetPlaceHolder_2();  |         |    88  |    175  |  0  |   44  |  [175,112,46,92,92]  |
   514  |                         R = R + 2;  |      2  |    90  |    175  |  0  |   44  |  [175,112,46,92,92]  |
   518  |                         j = j + 1;  |         |    90  |    175  |  0  |   45  |  [175,112,46,92,92]  |
   519  |              resetPlaceHolder_2();  |         |    90  |    175  |  0  |   45  |  [175,112,46,92,92]  |
   525  |                         R = R + 2;  |      2  |    92  |    175  |  0  |   45  |  [175,112,46,92,92]  |
   529  |                         j = j + 1;  |         |    92  |    175  |  0  |   46  |  [175,112,46,92,92]  |
   530  |              resetPlaceHolder_2();  |         |    92  |    175  |  0  |   46  |  [175,112,46,92,92]  |
   536  |                         R = R + 2;  |      2  |    94  |    175  |  0  |   46  |  [175,112,46,92,92]  |
   540  |                         j = j + 1;  |         |    94  |    175  |  0  |   47  |  [175,112,46,92,92]  |
   541  |              resetPlaceHolder_2();  |         |    94  |    175  |  0  |   47  |  [175,112,46,92,92]  |
   547  |                         R = R + 2;  |      2  |    96  |    175  |  0  |   47  |  [175,112,46,92,92]  |
   551  |                         j = j + 1;  |         |    96  |    175  |  0  |   48  |  [175,112,46,92,92]  |
   552  |              resetPlaceHolder_2();  |         |    96  |    175  |  0  |   48  |  [175,112,46,92,92]  |
   558  |                         R = R + 2;  |      2  |    98  |    175  |  0  |   48  |  [175,112,46,92,92]  |
   562  |                         j = j + 1;  |         |    98  |    175  |  0  |   49  |  [175,112,46,92,92]  |
   563  |              resetPlaceHolder_2();  |         |    98  |    175  |  0  |   49  |  [175,112,46,92,92]  |
   569  |                         R = R + 2;  |      2  |   100  |    175  |  0  |   49  |  [175,112,46,92,92]  |
   573  |                         j = j + 1;  |         |   100  |    175  |  0  |   50  |  [175,112,46,92,92]  |
   574  |              resetPlaceHolder_2();  |         |   100  |    175  |  0  |   50  |  [175,112,46,92,92]  |
   580  |                         R = R + 2;  |      2  |   102  |    175  |  0  |   50  |  [175,112,46,92,92]  |
   584  |                         j = j + 1;  |         |   102  |    175  |  0  |   51  |  [175,112,46,92,92]  |
   585  |              resetPlaceHolder_2();  |         |   102  |    175  |  0  |   51  |  [175,112,46,92,92]  |
   591  |                         R = R + 2;  |      2  |   104  |    175  |  0  |   51  |  [175,112,46,92,92]  |
   595  |                         j = j + 1;  |         |   104  |    175  |  0  |   52  |  [175,112,46,92,92]  |
   596  |              resetPlaceHolder_2();  |         |   104  |    175  |  0  |   52  |  [175,112,46,92,92]  |
   602  |                         R = R + 2;  |      2  |   106  |    175  |  0  |   52  |  [175,112,46,92,92]  |
   606  |                         j = j + 1;  |         |   106  |    175  |  0  |   53  |  [175,112,46,92,92]  |
   607  |              resetPlaceHolder_2();  |         |   106  |    175  |  0  |   53  |  [175,112,46,92,92]  |
   613  |                         R = R + 2;  |      2  |   108  |    175  |  0  |   53  |  [175,112,46,92,92]  |
   617  |                         j = j + 1;  |         |   108  |    175  |  0  |   54  |  [175,112,46,92,92]  |
   618  |              resetPlaceHolder_2();  |         |   108  |    175  |  0  |   54  |  [175,112,46,92,92]  |
   624  |                         R = R + 2;  |      2  |   110  |    175  |  0  |   54  |  [175,112,46,92,92]  |
   628  |                         j = j + 1;  |         |   110  |    175  |  0  |   55  |  [175,112,46,92,92]  |
   629  |              resetPlaceHolder_2();  |         |   110  |    175  |  0  |   55  |  [175,112,46,92,92]  |
   635  |                         R = R + 2;  |      2  |   112  |    175  |  0  |   55  |  [175,112,46,92,92]  |
   639  |                         j = j + 1;  |         |   112  |    175  |  0  |   56  |  [175,112,46,92,92]  |
   640  |              resetPlaceHolder_2();  |         |   112  |    175  |  0  |   56  |  [175,112,46,92,92]  |
   646  |                         R = R + 2;  |      2  |   114  |    175  |  0  |   56  |  [175,112,46,92,92]  |
   650  |                         j = j + 1;  |         |   114  |    175  |  0  |   57  |  [175,112,46,92,92]  |
   651  |              resetPlaceHolder_2();  |         |   114  |    175  |  0  |   57  |  [175,112,46,92,92]  |
   657  |                         R = R + 2;  |      2  |   116  |    175  |  0  |   57  |  [175,112,46,92,92]  |
   661  |                         j = j + 1;  |         |   116  |    175  |  0  |   58  |  [175,112,46,92,92]  |
   662  |              resetPlaceHolder_2();  |         |   116  |    175  |  0  |   58  |  [175,112,46,92,92]  |
   668  |                         R = R + 2;  |      2  |   118  |    175  |  0  |   58  |  [175,112,46,92,92]  |
   672  |                         j = j + 1;  |         |   118  |    175  |  0  |   59  |  [175,112,46,92,92]  |
   673  |              resetPlaceHolder_2();  |         |   118  |    175  |  0  |   59  |  [175,112,46,92,92]  |
   679  |                         R = R + 2;  |      2  |   120  |    175  |  0  |   59  |  [175,112,46,92,92]  |
   683  |                         j = j + 1;  |         |   120  |    175  |  0  |   60  |  [175,112,46,92,92]  |
   684  |              resetPlaceHolder_2();  |         |   120  |    175  |  0  |   60  |  [175,112,46,92,92]  |
   690  |                         R = R + 2;  |      2  |   122  |    175  |  0  |   60  |  [175,112,46,92,92]  |
   694  |                         j = j + 1;  |         |   122  |    175  |  0  |   61  |  [175,112,46,92,92]  |
   695  |              resetPlaceHolder_2();  |         |   122  |    175  |  0  |   61  |  [175,112,46,92,92]  |
   701  |                         R = R + 2;  |      2  |   124  |    175  |  0  |   61  |  [175,112,46,92,92]  |
   705  |                         j = j + 1;  |         |   124  |    175  |  0  |   62  |  [175,112,46,92,92]  |
   706  |              resetPlaceHolder_2();  |         |   124  |    175  |  0  |   62  |  [175,112,46,92,92]  |
   712  |                         R = R + 2;  |      2  |   126  |    175  |  0  |   62  |  [175,112,46,92,92]  |
   716  |                         j = j + 1;  |         |   126  |    175  |  0  |   63  |  [175,112,46,92,92]  |
   717  |              resetPlaceHolder_2();  |         |   126  |    175  |  0  |   63  |  [175,112,46,92,92]  |
   723  |                         R = R + 2;  |      2  |   128  |    175  |  0  |   63  |  [175,112,46,92,92]  |
   727  |                         j = j + 1;  |         |   128  |    175  |  0  |   64  |  [175,112,46,92,92]  |
   728  |              resetPlaceHolder_2();  |         |   128  |    175  |  0  |   64  |  [175,112,46,92,92]  |
   734  |                         R = R + 2;  |      2  |   130  |    175  |  0  |   64  |  [175,112,46,92,92]  |
   738  |                         j = j + 1;  |         |   130  |    175  |  0  |   65  |  [175,112,46,92,92]  |
   739  |              resetPlaceHolder_2();  |         |   130  |    175  |  0  |   65  |  [175,112,46,92,92]  |
   745  |                         R = R + 2;  |      2  |   132  |    175  |  0  |   65  |  [175,112,46,92,92]  |
   749  |                         j = j + 1;  |         |   132  |    175  |  0  |   66  |  [175,112,46,92,92]  |
   750  |              resetPlaceHolder_2();  |         |   132  |    175  |  0  |   66  |  [175,112,46,92,92]  |
   756  |                         R = R + 2;  |      2  |   134  |    175  |  0  |   66  |  [175,112,46,92,92]  |
   760  |                         j = j + 1;  |         |   134  |    175  |  0  |   67  |  [175,112,46,92,92]  |
   761  |              resetPlaceHolder_2();  |         |   134  |    175  |  0  |   67  |  [175,112,46,92,92]  |
   767  |                         R = R + 2;  |      2  |   136  |    175  |  0  |   67  |  [175,112,46,92,92]  |
   771  |                         j = j + 1;  |         |   136  |    175  |  0  |   68  |  [175,112,46,92,92]  |
   772  |              resetPlaceHolder_2();  |         |   136  |    175  |  0  |   68  |  [175,112,46,92,92]  |
   778  |                         R = R + 2;  |      2  |   138  |    175  |  0  |   68  |  [175,112,46,92,92]  |
   782  |                         j = j + 1;  |         |   138  |    175  |  0  |   69  |  [175,112,46,92,92]  |
   783  |              resetPlaceHolder_2();  |         |   138  |    175  |  0  |   69  |  [175,112,46,92,92]  |
   789  |                         R = R + 2;  |      2  |   140  |    175  |  0  |   69  |  [175,112,46,92,92]  |
   793  |                         j = j + 1;  |         |   140  |    175  |  0  |   70  |  [175,112,46,92,92]  |
   794  |              resetPlaceHolder_2();  |         |   140  |    175  |  0  |   70  |  [175,112,46,92,92]  |
   800  |                         R = R + 2;  |      2  |   142  |    175  |  0  |   70  |  [175,112,46,92,92]  |
   804  |                         j = j + 1;  |         |   142  |    175  |  0  |   71  |  [175,112,46,92,92]  |
   805  |              resetPlaceHolder_2();  |         |   142  |    175  |  0  |   71  |  [175,112,46,92,92]  |
   811  |                         R = R + 2;  |      2  |   144  |    175  |  0  |   71  |  [175,112,46,92,92]  |
   815  |                         j = j + 1;  |         |   144  |    175  |  0  |   72  |  [175,112,46,92,92]  |
   816  |              resetPlaceHolder_2();  |         |   144  |    175  |  0  |   72  |  [175,112,46,92,92]  |
   822  |                         R = R + 2;  |      2  |   146  |    175  |  0  |   72  |  [175,112,46,92,92]  |
   826  |                         j = j + 1;  |         |   146  |    175  |  0  |   73  |  [175,112,46,92,92]  |
   827  |              resetPlaceHolder_2();  |         |   146  |    175  |  0  |   73  |  [175,112,46,92,92]  |
   833  |                         R = R + 2;  |      2  |   148  |    175  |  0  |   73  |  [175,112,46,92,92]  |
   837  |                         j = j + 1;  |         |   148  |    175  |  0  |   74  |  [175,112,46,92,92]  |
   838  |              resetPlaceHolder_2();  |         |   148  |    175  |  0  |   74  |  [175,112,46,92,92]  |
   844  |                         R = R + 2;  |      2  |   150  |    175  |  0  |   74  |  [175,112,46,92,92]  |
   848  |                         j = j + 1;  |         |   150  |    175  |  0  |   75  |  [175,112,46,92,92]  |
   849  |              resetPlaceHolder_2();  |         |   150  |    175  |  0  |   75  |  [175,112,46,92,92]  |
   855  |                         R = R + 2;  |      2  |   152  |    175  |  0  |   75  |  [175,112,46,92,92]  |
   859  |                         j = j + 1;  |         |   152  |    175  |  0  |   76  |  [175,112,46,92,92]  |
   860  |              resetPlaceHolder_2();  |         |   152  |    175  |  0  |   76  |  [175,112,46,92,92]  |
   866  |                         R = R + 2;  |      2  |   154  |    175  |  0  |   76  |  [175,112,46,92,92]  |
   870  |                         j = j + 1;  |         |   154  |    175  |  0  |   77  |  [175,112,46,92,92]  |
   871  |              resetPlaceHolder_2();  |         |   154  |    175  |  0  |   77  |  [175,112,46,92,92]  |
   877  |                         R = R + 2;  |      2  |   156  |    175  |  0  |   77  |  [175,112,46,92,92]  |
   881  |                         j = j + 1;  |         |   156  |    175  |  0  |   78  |  [175,112,46,92,92]  |
   882  |              resetPlaceHolder_2();  |         |   156  |    175  |  0  |   78  |  [175,112,46,92,92]  |
   888  |                         R = R + 2;  |      2  |   158  |    175  |  0  |   78  |  [175,112,46,92,92]  |
   892  |                         j = j + 1;  |         |   158  |    175  |  0  |   79  |  [175,112,46,92,92]  |
   893  |              resetPlaceHolder_2();  |         |   158  |    175  |  0  |   79  |  [175,112,46,92,92]  |
   899  |                         R = R + 2;  |      2  |   160  |    175  |  0  |   79  |  [175,112,46,92,92]  |
   903  |                         j = j + 1;  |         |   160  |    175  |  0  |   80  |  [175,112,46,92,92]  |
   904  |              resetPlaceHolder_2();  |         |   160  |    175  |  0  |   80  |  [175,112,46,92,92]  |
   910  |                         R = R + 2;  |      2  |   162  |    175  |  0  |   80  |  [175,112,46,92,92]  |
   914  |                         j = j + 1;  |         |   162  |    175  |  0  |   81  |  [175,112,46,92,92]  |
   915  |              resetPlaceHolder_2();  |         |   162  |    175  |  0  |   81  |  [175,112,46,92,92]  |
   921  |                         R = R + 2;  |      2  |   164  |    175  |  0  |   81  |  [175,112,46,92,92]  |
   925  |                         j = j + 1;  |         |   164  |    175  |  0  |   82  |  [175,112,46,92,92]  |
   926  |              resetPlaceHolder_2();  |         |   164  |    175  |  0  |   82  |  [175,112,46,92,92]  |
   932  |                         R = R + 2;  |      2  |   166  |    175  |  0  |   82  |  [175,112,46,92,92]  |
   936  |                         j = j + 1;  |         |   166  |    175  |  0  |   83  |  [175,112,46,92,92]  |
   937  |              resetPlaceHolder_2();  |         |   166  |    175  |  0  |   83  |  [175,112,46,92,92]  |
   943  |                         R = R + 2;  |      2  |   168  |    175  |  0  |   83  |  [175,112,46,92,92]  |
   947  |                         j = j + 1;  |         |   168  |    175  |  0  |   84  |  [175,112,46,92,92]  |
   948  |              resetPlaceHolder_2();  |         |   168  |    175  |  0  |   84  |  [175,112,46,92,92]  |
   954  |                         R = R + 2;  |      2  |   170  |    175  |  0  |   84  |  [175,112,46,92,92]  |
   958  |                         j = j + 1;  |         |   170  |    175  |  0  |   85  |  [175,112,46,92,92]  |
   959  |              resetPlaceHolder_2();  |         |   170  |    175  |  0  |   85  |  [175,112,46,92,92]  |
   965  |                         R = R + 2;  |      2  |   172  |    175  |  0  |   85  |  [175,112,46,92,92]  |
   969  |                         j = j + 1;  |         |   172  |    175  |  0  |   86  |  [175,112,46,92,92]  |
   970  |              resetPlaceHolder_2();  |         |   172  |    175  |  0  |   86  |  [175,112,46,92,92]  |
   976  |                         R = R + 2;  |      2  |   174  |    175  |  0  |   86  |  [175,112,46,92,92]  |
   980  |                         j = j + 1;  |         |   174  |    175  |  0  |   87  |  [175,112,46,92,92]  |
   981  |              resetPlaceHolder_2();  |         |   174  |    175  |  0  |   87  |  [175,112,46,92,92]  |
   987  |                         R = R + 2;  |      2  |   176  |    175  |  0  |   87  |  [175,112,46,92,92]  |
   991  |                         j = j + 1;  |         |   176  |    175  |  0  |   88  |  [175,112,46,92,92]  |
   992  |              resetPlaceHolder_2();  |         |   176  |    175  |  0  |   88  |  [175,112,46,92,92]  |
   998  |                         R = R + 2;  |      2  |   178  |    175  |  0  |   88  |  [175,112,46,92,92]  |
  1002  |                         j = j + 1;  |         |   178  |    175  |  0  |   89  |  [175,112,46,92,92]  |
  1003  |              resetPlaceHolder_2();  |         |   178  |    175  |  0  |   89  |  [175,112,46,92,92]  |
  1009  |                         R = R + 2;  |      2  |   180  |    175  |  0  |   89  |  [175,112,46,92,92]  |
  1013  |                         j = j + 1;  |         |   180  |    175  |  0  |   90  |  [175,112,46,92,92]  |
  1014  |              resetPlaceHolder_2();  |         |   180  |    175  |  0  |   90  |  [175,112,46,92,92]  |
  1020  |                         R = R + 2;  |      2  |   182  |    175  |  0  |   90  |  [175,112,46,92,92]  |
  1024  |                         j = j + 1;  |         |   182  |    175  |  0  |   91  |  [175,112,46,92,92]  |
  1025  |              resetPlaceHolder_2();  |         |   182  |    175  |  0  |   91  |  [175,112,46,92,92]  |
  1031  |                         R = R + 2;  |      2  |   184  |    175  |  0  |   91  |  [175,112,46,92,92]  |
  1035  |                         j = j + 1;  |         |   184  |    175  |  0  |   92  |  [175,112,46,92,92]  |
  1036  |              resetPlaceHolder_2();  |         |   184  |    175  |  0  |   92  |  [175,112,46,92,92]  |
  1042  |                         R = R + 2;  |      2  |   186  |    175  |  0  |   92  |  [175,112,46,92,92]  |
  1046  |                         j = j + 1;  |         |   186  |    175  |  0  |   93  |  [175,112,46,92,92]  |
  1047  |              resetPlaceHolder_2();  |         |   186  |    175  |  0  |   93  |  [175,112,46,92,92]  |
  1053  |                         R = R + 2;  |      2  |   188  |    175  |  0  |   93  |  [175,112,46,92,92]  |
  1057  |                         j = j + 1;  |         |   188  |    175  |  0  |   94  |  [175,112,46,92,92]  |
  1058  |              resetPlaceHolder_2();  |         |   188  |    175  |  0  |   94  |  [175,112,46,92,92]  |
  1064  |                         R = R + 2;  |      2  |   190  |    175  |  0  |   94  |  [175,112,46,92,92]  |
  1068  |                         j = j + 1;  |         |   190  |    175  |  0  |   95  |  [175,112,46,92,92]  |
  1069  |              resetPlaceHolder_2();  |         |   190  |    175  |  0  |   95  |  [175,112,46,92,92]  |
  1075  |                         R = R + 2;  |      2  |   192  |    175  |  0  |   95  |  [175,112,46,92,92]  |
  1079  |                         j = j + 1;  |         |   192  |    175  |  0  |   96  |  [175,112,46,92,92]  |
  1080  |              resetPlaceHolder_2();  |         |   192  |    175  |  0  |   96  |  [175,112,46,92,92]  |
  1086  |                         R = R + 2;  |      2  |   194  |    175  |  0  |   96  |  [175,112,46,92,92]  |
  1090  |                         j = j + 1;  |         |   194  |    175  |  0  |   97  |  [175,112,46,92,92]  |
  1091  |              resetPlaceHolder_2();  |         |   194  |    175  |  0  |   97  |  [175,112,46,92,92]  |
  1097  |                         R = R + 2;  |      2  |   196  |    175  |  0  |   97  |  [175,112,46,92,92]  |
  1101  |                         j = j + 1;  |         |   196  |    175  |  0  |   98  |  [175,112,46,92,92]  |
  1102  |              resetPlaceHolder_2();  |         |   196  |    175  |  0  |   98  |  [175,112,46,92,92]  |
  1108  |                         R = R + 2;  |      2  |   198  |    175  |  0  |   98  |  [175,112,46,92,92]  |
  1112  |                         j = j + 1;  |         |   198  |    175  |  0  |   99  |  [175,112,46,92,92]  |
  1113  |              resetPlaceHolder_2();  |         |   198  |    175  |  0  |   99  |  [175,112,46,92,92]  |
  1119  |                         R = R + 2;  |      2  |   200  |    175  |  0  |   99  |  [175,112,46,92,92]  |
  1123  |                         j = j + 1;  |         |   200  |    175  |  0  |  100  |  [175,112,46,92,92]  |
  1124  |              resetPlaceHolder_2();  |         |   200  |    175  |  0  |  100  |  [175,112,46,92,92]  |
  1130  |                         R = R + 2;  |      2  |   202  |    175  |  0  |  100  |  [175,112,46,92,92]  |
  1134  |                         j = j + 1;  |         |   202  |    175  |  0  |  101  |  [175,112,46,92,92]  |
  1135  |              resetPlaceHolder_2();  |         |   202  |    175  |  0  |  101  |  [175,112,46,92,92]  |
  1141  |                         R = R + 2;  |      2  |   204  |    175  |  0  |  101  |  [175,112,46,92,92]  |
  1145  |                         j = j + 1;  |         |   204  |    175  |  0  |  102  |  [175,112,46,92,92]  |
  1146  |              resetPlaceHolder_2();  |         |   204  |    175  |  0  |  102  |  [175,112,46,92,92]  |
  1152  |                         R = R + 2;  |      2  |   206  |    175  |  0  |  102  |  [175,112,46,92,92]  |
  1156  |                         j = j + 1;  |         |   206  |    175  |  0  |  103  |  [175,112,46,92,92]  |
  1157  |              resetPlaceHolder_2();  |         |   206  |    175  |  0  |  103  |  [175,112,46,92,92]  |
  1163  |                         R = R + 2;  |      2  |   208  |    175  |  0  |  103  |  [175,112,46,92,92]  |
  1167  |                         j = j + 1;  |         |   208  |    175  |  0  |  104  |  [175,112,46,92,92]  |
  1168  |              resetPlaceHolder_2();  |         |   208  |    175  |  0  |  104  |  [175,112,46,92,92]  |
  1174  |                         R = R + 2;  |      2  |   210  |    175  |  0  |  104  |  [175,112,46,92,92]  |
  1178  |                         j = j + 1;  |         |   210  |    175  |  0  |  105  |  [175,112,46,92,92]  |
  1179  |              resetPlaceHolder_2();  |         |   210  |    175  |  0  |  105  |  [175,112,46,92,92]  |
  1185  |                         R = R + 2;  |      2  |   212  |    175  |  0  |  105  |  [175,112,46,92,92]  |
  1189  |                         j = j + 1;  |         |   212  |    175  |  0  |  106  |  [175,112,46,92,92]  |
  1190  |              resetPlaceHolder_2();  |         |   212  |    175  |  0  |  106  |  [175,112,46,92,92]  |
  1196  |                         R = R + 2;  |      2  |   214  |    175  |  0  |  106  |  [175,112,46,92,92]  |
  1200  |                         j = j + 1;  |         |   214  |    175  |  0  |  107  |  [175,112,46,92,92]  |
  1201  |              resetPlaceHolder_2();  |         |   214  |    175  |  0  |  107  |  [175,112,46,92,92]  |
  1207  |                         R = R + 2;  |      2  |   216  |    175  |  0  |  107  |  [175,112,46,92,92]  |
  1211  |                         j = j + 1;  |         |   216  |    175  |  0  |  108  |  [175,112,46,92,92]  |
  1212  |              resetPlaceHolder_2();  |         |   216  |    175  |  0  |  108  |  [175,112,46,92,92]  |
  1218  |                         R = R + 2;  |      2  |   218  |    175  |  0  |  108  |  [175,112,46,92,92]  |
  1222  |                         j = j + 1;  |         |   218  |    175  |  0  |  109  |  [175,112,46,92,92]  |
  1223  |              resetPlaceHolder_2();  |         |   218  |    175  |  0  |  109  |  [175,112,46,92,92]  |
  1229  |                         R = R + 2;  |      2  |   220  |    175  |  0  |  109  |  [175,112,46,92,92]  |
  1233  |                         j = j + 1;  |         |   220  |    175  |  0  |  110  |  [175,112,46,92,92]  |
  1234  |              resetPlaceHolder_2();  |         |   220  |    175  |  0  |  110  |  [175,112,46,92,92]  |
  1240  |                         R = R + 2;  |      2  |   222  |    175  |  0  |  110  |  [175,112,46,92,92]  |
  1244  |                         j = j + 1;  |         |   222  |    175  |  0  |  111  |  [175,112,46,92,92]  |
  1245  |              resetPlaceHolder_2();  |         |   222  |    175  |  0  |  111  |  [175,112,46,92,92]  |
  1251  |                         R = R + 2;  |      2  |   224  |    175  |  0  |  111  |  [175,112,46,92,92]  |
  1255  |                         j = j + 1;  |         |   224  |    175  |  0  |  112  |  [175,112,46,92,92]  |
  1256  |              resetPlaceHolder_2();  |         |   224  |    175  |  0  |  112  |  [175,112,46,92,92]  |
  1262  |                         R = R + 2;  |      2  |   226  |    175  |  0  |  112  |  [175,112,46,92,92]  |
  1266  |                         j = j + 1;  |         |   226  |    175  |  0  |  113  |  [175,112,46,92,92]  |
  1267  |              resetPlaceHolder_2();  |         |   226  |    175  |  0  |  113  |  [175,112,46,92,92]  |
  1273  |                         R = R + 2;  |      2  |   228  |    175  |  0  |  113  |  [175,112,46,92,92]  |
  1277  |                         j = j + 1;  |         |   228  |    175  |  0  |  114  |  [175,112,46,92,92]  |
  1278  |              resetPlaceHolder_2();  |         |   228  |    175  |  0  |  114  |  [175,112,46,92,92]  |
  1284  |                         R = R + 2;  |      2  |   230  |    175  |  0  |  114  |  [175,112,46,92,92]  |
  1288  |                         j = j + 1;  |         |   230  |    175  |  0  |  115  |  [175,112,46,92,92]  |
  1289  |              resetPlaceHolder_2();  |         |   230  |    175  |  0  |  115  |  [175,112,46,92,92]  |
  1295  |                         R = R + 2;  |      2  |   232  |    175  |  0  |  115  |  [175,112,46,92,92]  |
  1299  |                         j = j + 1;  |         |   232  |    175  |  0  |  116  |  [175,112,46,92,92]  |
  1300  |              resetPlaceHolder_2();  |         |   232  |    175  |  0  |  116  |  [175,112,46,92,92]  |
  1306  |                         R = R + 2;  |      2  |   234  |    175  |  0  |  116  |  [175,112,46,92,92]  |
  1310  |                         j = j + 1;  |         |   234  |    175  |  0  |  117  |  [175,112,46,92,92]  |
  1311  |              resetPlaceHolder_2();  |         |   234  |    175  |  0  |  117  |  [175,112,46,92,92]  |
  1317  |                         R = R + 2;  |      2  |   236  |    175  |  0  |  117  |  [175,112,46,92,92]  |
  1321  |                         j = j + 1;  |         |   236  |    175  |  0  |  118  |  [175,112,46,92,92]  |
  1322  |              resetPlaceHolder_2();  |         |   236  |    175  |  0  |  118  |  [175,112,46,92,92]  |
  1328  |                         R = R + 2;  |      2  |   238  |    175  |  0  |  118  |  [175,112,46,92,92]  |
  1332  |                         j = j + 1;  |         |   238  |    175  |  0  |  119  |  [175,112,46,92,92]  |
  1333  |              resetPlaceHolder_2();  |         |   238  |    175  |  0  |  119  |  [175,112,46,92,92]  |
  1339  |                         R = R + 2;  |      2  |   240  |    175  |  0  |  119  |  [175,112,46,92,92]  |
  1343  |                         j = j + 1;  |         |   240  |    175  |  0  |  120  |  [175,112,46,92,92]  |
  1344  |              resetPlaceHolder_2();  |         |   240  |    175  |  0  |  120  |  [175,112,46,92,92]  |
  1350  |                         R = R + 2;  |      2  |   242  |    175  |  0  |  120  |  [175,112,46,92,92]  |
  1354  |                         j = j + 1;  |         |   242  |    175  |  0  |  121  |  [175,112,46,92,92]  |
  1355  |              resetPlaceHolder_2();  |         |   242  |    175  |  0  |  121  |  [175,112,46,92,92]  |
  1361  |                         R = R + 2;  |      2  |   244  |    175  |  0  |  121  |  [175,112,46,92,92]  |
  1365  |                         j = j + 1;  |         |   244  |    175  |  0  |  122  |  [175,112,46,92,92]  |
  1366  |              resetPlaceHolder_2();  |         |   244  |    175  |  0  |  122  |  [175,112,46,92,92]  |
  1372  |                         R = R + 2;  |      2  |   246  |    175  |  0  |  122  |  [175,112,46,92,92]  |
  1376  |                         j = j + 1;  |         |   246  |    175  |  0  |  123  |  [175,112,46,92,92]  |
  1377  |              resetPlaceHolder_2();  |         |   246  |    175  |  0  |  123  |  [175,112,46,92,92]  |
  1383  |                         R = R + 2;  |      2  |   248  |    175  |  0  |  123  |  [175,112,46,92,92]  |
  1387  |                         j = j + 1;  |         |   248  |    175  |  0  |  124  |  [175,112,46,92,92]  |
  1388  |              resetPlaceHolder_2();  |         |   248  |    175  |  0  |  124  |  [175,112,46,92,92]  |
  1394  |                         R = R + 2;  |      2  |   250  |    175  |  0  |  124  |  [175,112,46,92,92]  |
  1398  |                         j = j + 1;  |         |   250  |    175  |  0  |  125  |  [175,112,46,92,92]  |
  1399  |              resetPlaceHolder_2();  |         |   250  |    175  |  0  |  125  |  [175,112,46,92,92]  |
  1405  |                         R = R + 2;  |      2  |   252  |    175  |  0  |  125  |  [175,112,46,92,92]  |
  1409  |                         j = j + 1;  |         |   252  |    175  |  0  |  126  |  [175,112,46,92,92]  |
  1410  |              resetPlaceHolder_2();  |         |   252  |    175  |  0  |  126  |  [175,112,46,92,92]  |
  1416  |                         R = R + 2;  |      2  |   254  |    175  |  0  |  126  |  [175,112,46,92,92]  |
  1420  |                         j = j + 1;  |         |   254  |    175  |  0  |  127  |  [175,112,46,92,92]  |
  1421  |              resetPlaceHolder_2();  |         |   254  |    175  |  0  |  127  |  [175,112,46,92,92]  |
  1427  |                         R = R + 2;  |      2  |   256  |    175  |  0  |  127  |  [175,112,46,92,92]  |
  1431  |                         j = j + 1;  |         |   256  |    175  |  0  |  128  |  [175,112,46,92,92]  |
  1432  |              resetPlaceHolder_2();  |         |   256  |    175  |  0  |  128  |  [175,112,46,92,92]  |
  1438  |                         R = R + 2;  |      2  |   258  |    175  |  0  |  128  |  [175,112,46,92,92]  |
  1442  |                         j = j + 1;  |         |   258  |    175  |  0  |  129  |  [175,112,46,92,92]  |
  1443  |              resetPlaceHolder_2();  |         |   258  |    175  |  0  |  129  |  [175,112,46,92,92]  |
  1449  |                         R = R + 2;  |      2  |   260  |    175  |  0  |  129  |  [175,112,46,92,92]  |
  1453  |                         j = j + 1;  |         |   260  |    175  |  0  |  130  |  [175,112,46,92,92]  |
  1454  |              resetPlaceHolder_2();  |         |   260  |    175  |  0  |  130  |  [175,112,46,92,92]  |
  1460  |                         R = R + 2;  |      2  |   262  |    175  |  0  |  130  |  [175,112,46,92,92]  |
  1464  |                         j = j + 1;  |         |   262  |    175  |  0  |  131  |  [175,112,46,92,92]  |
  1465  |              resetPlaceHolder_2();  |         |   262  |    175  |  0  |  131  |  [175,112,46,92,92]  |
  1471  |                         R = R + 2;  |      2  |   264  |    175  |  0  |  131  |  [175,112,46,92,92]  |
  1475  |                         j = j + 1;  |         |   264  |    175  |  0  |  132  |  [175,112,46,92,92]  |
  1476  |              resetPlaceHolder_2();  |         |   264  |    175  |  0  |  132  |  [175,112,46,92,92]  |
  1482  |                         R = R + 2;  |      2  |   266  |    175  |  0  |  132  |  [175,112,46,92,92]  |
  1486  |                         j = j + 1;  |         |   266  |    175  |  0  |  133  |  [175,112,46,92,92]  |
  1487  |              resetPlaceHolder_2();  |         |   266  |    175  |  0  |  133  |  [175,112,46,92,92]  |
  1493  |                         R = R + 2;  |      2  |   268  |    175  |  0  |  133  |  [175,112,46,92,92]  |
  1497  |                         j = j + 1;  |         |   268  |    175  |  0  |  134  |  [175,112,46,92,92]  |
  1498  |              resetPlaceHolder_2();  |         |   268  |    175  |  0  |  134  |  [175,112,46,92,92]  |
  1504  |                         R = R + 2;  |      2  |   270  |    175  |  0  |  134  |  [175,112,46,92,92]  |
  1508  |                         j = j + 1;  |         |   270  |    175  |  0  |  135  |  [175,112,46,92,92]  |
  1509  |              resetPlaceHolder_2();  |         |   270  |    175  |  0  |  135  |  [175,112,46,92,92]  |
  1515  |                         R = R + 2;  |      2  |   272  |    175  |  0  |  135  |  [175,112,46,92,92]  |
  1519  |                         j = j + 1;  |         |   272  |    175  |  0  |  136  |  [175,112,46,92,92]  |
  1520  |              resetPlaceHolder_2();  |         |   272  |    175  |  0  |  136  |  [175,112,46,92,92]  |
  1526  |                         R = R + 2;  |      2  |   274  |    175  |  0  |  136  |  [175,112,46,92,92]  |
  1530  |                         j = j + 1;  |         |   274  |    175  |  0  |  137  |  [175,112,46,92,92]  |
  1531  |              resetPlaceHolder_2();  |         |   274  |    175  |  0  |  137  |  [175,112,46,92,92]  |
  1537  |                         R = R + 2;  |      2  |   276  |    175  |  0  |  137  |  [175,112,46,92,92]  |
  1541  |                         j = j + 1;  |         |   276  |    175  |  0  |  138  |  [175,112,46,92,92]  |
  1542  |              resetPlaceHolder_2();  |         |   276  |    175  |  0  |  138  |  [175,112,46,92,92]  |
  1548  |                         R = R + 2;  |      2  |   278  |    175  |  0  |  138  |  [175,112,46,92,92]  |
  1552  |                         j = j + 1;  |         |   278  |    175  |  0  |  139  |  [175,112,46,92,92]  |
  1553  |              resetPlaceHolder_2();  |         |   278  |    175  |  0  |  139  |  [175,112,46,92,92]  |
  1559  |                         R = R + 2;  |      2  |   280  |    175  |  0  |  139  |  [175,112,46,92,92]  |
  1563  |                         j = j + 1;  |         |   280  |    175  |  0  |  140  |  [175,112,46,92,92]  |
  1564  |              resetPlaceHolder_2();  |         |   280  |    175  |  0  |  140  |  [175,112,46,92,92]  |
  1570  |                         R = R + 2;  |      2  |   282  |    175  |  0  |  140  |  [175,112,46,92,92]  |
  1574  |                         j = j + 1;  |         |   282  |    175  |  0  |  141  |  [175,112,46,92,92]  |
  1575  |              resetPlaceHolder_2();  |         |   282  |    175  |  0  |  141  |  [175,112,46,92,92]  |
  1581  |                         R = R + 2;  |      2  |   284  |    175  |  0  |  141  |  [175,112,46,92,92]  |
  1585  |                         j = j + 1;  |         |   284  |    175  |  0  |  142  |  [175,112,46,92,92]  |
  1586  |              resetPlaceHolder_2();  |         |   284  |    175  |  0  |  142  |  [175,112,46,92,92]  |
  1592  |                         R = R + 2;  |      2  |   286  |    175  |  0  |  142  |  [175,112,46,92,92]  |
  1596  |                         j = j + 1;  |         |   286  |    175  |  0  |  143  |  [175,112,46,92,92]  |
  1597  |              resetPlaceHolder_2();  |         |   286  |    175  |  0  |  143  |  [175,112,46,92,92]  |
  1603  |                         R = R + 2;  |      2  |   288  |    175  |  0  |  143  |  [175,112,46,92,92]  |
  1607  |                         j = j + 1;  |         |   288  |    175  |  0  |  144  |  [175,112,46,92,92]  |
  1608  |              resetPlaceHolder_2();  |         |   288  |    175  |  0  |  144  |  [175,112,46,92,92]  |
  1614  |                         R = R + 2;  |      2  |   290  |    175  |  0  |  144  |  [175,112,46,92,92]  |
  1618  |                         j = j + 1;  |         |   290  |    175  |  0  |  145  |  [175,112,46,92,92]  |
  1619  |              resetPlaceHolder_2();  |         |   290  |    175  |  0  |  145  |  [175,112,46,92,92]  |
  1625  |                         R = R + 2;  |      2  |   292  |    175  |  0  |  145  |  [175,112,46,92,92]  |
  1629  |                         j = j + 1;  |         |   292  |    175  |  0  |  146  |  [175,112,46,92,92]  |
  1630  |              resetPlaceHolder_2();  |         |   292  |    175  |  0  |  146  |  [175,112,46,92,92]  |
  1636  |                         R = R + 2;  |      2  |   294  |    175  |  0  |  146  |  [175,112,46,92,92]  |
  1640  |                         j = j + 1;  |         |   294  |    175  |  0  |  147  |  [175,112,46,92,92]  |
  1641  |              resetPlaceHolder_2();  |         |   294  |    175  |  0  |  147  |  [175,112,46,92,92]  |
  1647  |                         R = R + 2;  |      2  |   296  |    175  |  0  |  147  |  [175,112,46,92,92]  |
  1651  |                         j = j + 1;  |         |   296  |    175  |  0  |  148  |  [175,112,46,92,92]  |
  1652  |              resetPlaceHolder_2();  |         |   296  |    175  |  0  |  148  |  [175,112,46,92,92]  |
  1658  |                         R = R + 2;  |      2  |   298  |    175  |  0  |  148  |  [175,112,46,92,92]  |
  1662  |                         j = j + 1;  |         |   298  |    175  |  0  |  149  |  [175,112,46,92,92]  |
  1663  |              resetPlaceHolder_2();  |         |   298  |    175  |  0  |  149  |  [175,112,46,92,92]  |
  1669  |                         R = R + 2;  |      2  |   300  |    175  |  0  |  149  |  [175,112,46,92,92]  |
  1673  |                         j = j + 1;  |         |   300  |    175  |  0  |  150  |  [175,112,46,92,92]  |
  1674  |              resetPlaceHolder_2();  |         |   300  |    175  |  0  |  150  |  [175,112,46,92,92]  |
  1680  |                         R = R + 2;  |      2  |   302  |    175  |  0  |  150  |  [175,112,46,92,92]  |
  1684  |                         j = j + 1;  |         |   302  |    175  |  0  |  151  |  [175,112,46,92,92]  |
  1685  |              resetPlaceHolder_2();  |         |   302  |    175  |  0  |  151  |  [175,112,46,92,92]  |
  1691  |                         R = R + 2;  |      2  |   304  |    175  |  0  |  151  |  [175,112,46,92,92]  |
  1695  |                         j = j + 1;  |         |   304  |    175  |  0  |  152  |  [175,112,46,92,92]  |
  1696  |              resetPlaceHolder_2();  |         |   304  |    175  |  0  |  152  |  [175,112,46,92,92]  |
  1702  |                         R = R + 2;  |      2  |   306  |    175  |  0  |  152  |  [175,112,46,92,92]  |
  1706  |                         j = j + 1;  |         |   306  |    175  |  0  |  153  |  [175,112,46,92,92]  |
  1707  |              resetPlaceHolder_2();  |         |   306  |    175  |  0  |  153  |  [175,112,46,92,92]  |
  1713  |                         R = R + 2;  |      2  |   308  |    175  |  0  |  153  |  [175,112,46,92,92]  |
  1717  |                         j = j + 1;  |         |   308  |    175  |  0  |  154  |  [175,112,46,92,92]  |
  1718  |              resetPlaceHolder_2();  |         |   308  |    175  |  0  |  154  |  [175,112,46,92,92]  |
  1724  |                         R = R + 2;  |      2  |   310  |    175  |  0  |  154  |  [175,112,46,92,92]  |
  1728  |                         j = j + 1;  |         |   310  |    175  |  0  |  155  |  [175,112,46,92,92]  |
  1729  |              resetPlaceHolder_2();  |         |   310  |    175  |  0  |  155  |  [175,112,46,92,92]  |
  1735  |                         R = R + 2;  |      2  |   312  |    175  |  0  |  155  |  [175,112,46,92,92]  |
  1739  |                         j = j + 1;  |         |   312  |    175  |  0  |  156  |  [175,112,46,92,92]  |
  1740  |              resetPlaceHolder_2();  |         |   312  |    175  |  0  |  156  |  [175,112,46,92,92]  |
  1746  |                         R = R + 2;  |      2  |   314  |    175  |  0  |  156  |  [175,112,46,92,92]  |
  1750  |                         j = j + 1;  |         |   314  |    175  |  0  |  157  |  [175,112,46,92,92]  |
  1751  |              resetPlaceHolder_2();  |         |   314  |    175  |  0  |  157  |  [175,112,46,92,92]  |
  1757  |                         R = R + 2;  |      2  |   316  |    175  |  0  |  157  |  [175,112,46,92,92]  |
  1761  |                         j = j + 1;  |         |   316  |    175  |  0  |  158  |  [175,112,46,92,92]  |
  1762  |              resetPlaceHolder_2();  |         |   316  |    175  |  0  |  158  |  [175,112,46,92,92]  |
  1768  |                         R = R + 2;  |      2  |   318  |    175  |  0  |  158  |  [175,112,46,92,92]  |
  1772  |                         j = j + 1;  |         |   318  |    175  |  0  |  159  |  [175,112,46,92,92]  |
  1773  |              resetPlaceHolder_2();  |         |   318  |    175  |  0  |  159  |  [175,112,46,92,92]  |
  1779  |                         R = R + 2;  |      2  |   320  |    175  |  0  |  159  |  [175,112,46,92,92]  |
  1783  |                         j = j + 1;  |         |   320  |    175  |  0  |  160  |  [175,112,46,92,92]  |
  1784  |              resetPlaceHolder_2();  |         |   320  |    175  |  0  |  160  |  [175,112,46,92,92]  |
  1790  |                         R = R + 2;  |      2  |   322  |    175  |  0  |  160  |  [175,112,46,92,92]  |
  1794  |                         j = j + 1;  |         |   322  |    175  |  0  |  161  |  [175,112,46,92,92]  |
  1795  |              resetPlaceHolder_2();  |         |   322  |    175  |  0  |  161  |  [175,112,46,92,92]  |
  1801  |                         R = R + 2;  |      2  |   324  |    175  |  0  |  161  |  [175,112,46,92,92]  |
  1805  |                         j = j + 1;  |         |   324  |    175  |  0  |  162  |  [175,112,46,92,92]  |
  1806  |              resetPlaceHolder_2();  |         |   324  |    175  |  0  |  162  |  [175,112,46,92,92]  |
  1812  |                         R = R + 2;  |      2  |   326  |    175  |  0  |  162  |  [175,112,46,92,92]  |
  1816  |                         j = j + 1;  |         |   326  |    175  |  0  |  163  |  [175,112,46,92,92]  |
  1817  |              resetPlaceHolder_2();  |         |   326  |    175  |  0  |  163  |  [175,112,46,92,92]  |
  1823  |                         R = R + 2;  |      2  |   328  |    175  |  0  |  163  |  [175,112,46,92,92]  |
  1827  |                         j = j + 1;  |         |   328  |    175  |  0  |  164  |  [175,112,46,92,92]  |
  1828  |              resetPlaceHolder_2();  |         |   328  |    175  |  0  |  164  |  [175,112,46,92,92]  |
  1834  |                         R = R + 2;  |      2  |   330  |    175  |  0  |  164  |  [175,112,46,92,92]  |
  1838  |                         j = j + 1;  |         |   330  |    175  |  0  |  165  |  [175,112,46,92,92]  |
  1839  |              resetPlaceHolder_2();  |         |   330  |    175  |  0  |  165  |  [175,112,46,92,92]  |
  1845  |                         R = R + 2;  |      2  |   332  |    175  |  0  |  165  |  [175,112,46,92,92]  |
  1849  |                         j = j + 1;  |         |   332  |    175  |  0  |  166  |  [175,112,46,92,92]  |
  1850  |              resetPlaceHolder_2();  |         |   332  |    175  |  0  |  166  |  [175,112,46,92,92]  |
  1856  |                         R = R + 2;  |      2  |   334  |    175  |  0  |  166  |  [175,112,46,92,92]  |
  1860  |                         j = j + 1;  |         |   334  |    175  |  0  |  167  |  [175,112,46,92,92]  |
  1861  |              resetPlaceHolder_2();  |         |   334  |    175  |  0  |  167  |  [175,112,46,92,92]  |
  1867  |                         R = R + 2;  |      2  |   336  |    175  |  0  |  167  |  [175,112,46,92,92]  |
  1871  |                         j = j + 1;  |         |   336  |    175  |  0  |  168  |  [175,112,46,92,92]  |
  1872  |              resetPlaceHolder_2();  |         |   336  |    175  |  0  |  168  |  [175,112,46,92,92]  |
  1878  |                         R = R + 2;  |      2  |   338  |    175  |  0  |  168  |  [175,112,46,92,92]  |
  1882  |                         j = j + 1;  |         |   338  |    175  |  0  |  169  |  [175,112,46,92,92]  |
  1883  |              resetPlaceHolder_2();  |         |   338  |    175  |  0  |  169  |  [175,112,46,92,92]  |
  1889  |                         R = R + 2;  |      2  |   340  |    175  |  0  |  169  |  [175,112,46,92,92]  |
  1893  |                         j = j + 1;  |         |   340  |    175  |  0  |  170  |  [175,112,46,92,92]  |
  1894  |              resetPlaceHolder_2();  |         |   340  |    175  |  0  |  170  |  [175,112,46,92,92]  |
  1900  |                         R = R + 2;  |      2  |   342  |    175  |  0  |  170  |  [175,112,46,92,92]  |
  1904  |                         j = j + 1;  |         |   342  |    175  |  0  |  171  |  [175,112,46,92,92]  |
  1905  |              resetPlaceHolder_2();  |         |   342  |    175  |  0  |  171  |  [175,112,46,92,92]  |
  1911  |                         R = R + 2;  |      2  |   344  |    175  |  0  |  171  |  [175,112,46,92,92]  |
  1915  |                         j = j + 1;  |         |   344  |    175  |  0  |  172  |  [175,112,46,92,92]  |
  1916  |              resetPlaceHolder_2();  |         |   344  |    175  |  0  |  172  |  [175,112,46,92,92]  |
  1922  |                         R = R + 2;  |      2  |   346  |    175  |  0  |  172  |  [175,112,46,92,92]  |
  1926  |                         j = j + 1;  |         |   346  |    175  |  0  |  173  |  [175,112,46,92,92]  |
  1927  |              resetPlaceHolder_2();  |         |   346  |    175  |  0  |  173  |  [175,112,46,92,92]  |
  1933  |                         R = R + 2;  |      2  |   348  |    175  |  0  |  173  |  [175,112,46,92,92]  |
  1937  |                         j = j + 1;  |         |   348  |    175  |  0  |  174  |  [175,112,46,92,92]  |
  1938  |              resetPlaceHolder_2();  |         |   348  |    175  |  0  |  174  |  [175,112,46,92,92]  |
  1944  |                         R = R + 2;  |      2  |   350  |    175  |  0  |  174  |  [175,112,46,92,92]  |
  1948  |                         j = j + 1;  |         |   350  |    175  |  0  |  175  |  [175,112,46,92,92]  |
  1949  |              resetPlaceHolder_2();  |         |   350  |    175  |  0  |  175  |  [175,112,46,92,92]  |
  1955  |                         R = R + 1;  |      1  |   351  |    175  |  0  |  175  |  [175,112,46,92,92]  |
  1959  |                         i = i + 1;  |         |   351  |    175  |  1  |  175  |  [175,112,46,92,92]  |
  1960  |              resetPlaceHolder_1();  |         |   351  |    175  |  1  |  175  |  [175,112,46,92,92]  |
  1966  |      entry = arrayRead(sorted, i);  |         |   351  |    112  |  1  |  175  |  [175,112,46,92,92]  |
  1968  |                         int j = 0;  |         |   351  |    112  |  1  |    0  |  [175,112,46,92,92]  |
  1974  |                         R = R + 2;  |      2  |   353  |    112  |  1  |    0  |  [175,112,46,92,92]  |
  1978  |                         j = j + 1;  |         |   353  |    112  |  1  |    1  |  [175,112,46,92,92]  |
  1979  |              resetPlaceHolder_2();  |         |   353  |    112  |  1  |    1  |  [175,112,46,92,92]  |
  1985  |                         R = R + 2;  |      2  |   355  |    112  |  1  |    1  |  [175,112,46,92,92]  |
  1989  |                         j = j + 1;  |         |   355  |    112  |  1  |    2  |  [175,112,46,92,92]  |
  1990  |              resetPlaceHolder_2();  |         |   355  |    112  |  1  |    2  |  [175,112,46,92,92]  |
  1996  |                         R = R + 2;  |      2  |   357  |    112  |  1  |    2  |  [175,112,46,92,92]  |
  2000  |                         j = j + 1;  |         |   357  |    112  |  1  |    3  |  [175,112,46,92,92]  |
  2001  |              resetPlaceHolder_2();  |         |   357  |    112  |  1  |    3  |  [175,112,46,92,92]  |
  2007  |                         R = R + 2;  |      2  |   359  |    112  |  1  |    3  |  [175,112,46,92,92]  |
  2011  |                         j = j + 1;  |         |   359  |    112  |  1  |    4  |  [175,112,46,92,92]  |
  2012  |              resetPlaceHolder_2();  |         |   359  |    112  |  1  |    4  |  [175,112,46,92,92]  |
  2018  |                         R = R + 2;  |      2  |   361  |    112  |  1  |    4  |  [175,112,46,92,92]  |
  2022  |                         j = j + 1;  |         |   361  |    112  |  1  |    5  |  [175,112,46,92,92]  |
  2023  |              resetPlaceHolder_2();  |         |   361  |    112  |  1  |    5  |  [175,112,46,92,92]  |
  2029  |                         R = R + 2;  |      2  |   363  |    112  |  1  |    5  |  [175,112,46,92,92]  |
  2033  |                         j = j + 1;  |         |   363  |    112  |  1  |    6  |  [175,112,46,92,92]  |
  2034  |              resetPlaceHolder_2();  |         |   363  |    112  |  1  |    6  |  [175,112,46,92,92]  |
  2040  |                         R = R + 2;  |      2  |   365  |    112  |  1  |    6  |  [175,112,46,92,92]  |
  2044  |                         j = j + 1;  |         |   365  |    112  |  1  |    7  |  [175,112,46,92,92]  |
  2045  |              resetPlaceHolder_2();  |         |   365  |    112  |  1  |    7  |  [175,112,46,92,92]  |
  2051  |                         R = R + 2;  |      2  |   367  |    112  |  1  |    7  |  [175,112,46,92,92]  |
  2055  |                         j = j + 1;  |         |   367  |    112  |  1  |    8  |  [175,112,46,92,92]  |
  2056  |              resetPlaceHolder_2();  |         |   367  |    112  |  1  |    8  |  [175,112,46,92,92]  |
  2062  |                         R = R + 2;  |      2  |   369  |    112  |  1  |    8  |  [175,112,46,92,92]  |
  2066  |                         j = j + 1;  |         |   369  |    112  |  1  |    9  |  [175,112,46,92,92]  |
  2067  |              resetPlaceHolder_2();  |         |   369  |    112  |  1  |    9  |  [175,112,46,92,92]  |
  2073  |                         R = R + 2;  |      2  |   371  |    112  |  1  |    9  |  [175,112,46,92,92]  |
  2077  |                         j = j + 1;  |         |   371  |    112  |  1  |   10  |  [175,112,46,92,92]  |
  2078  |              resetPlaceHolder_2();  |         |   371  |    112  |  1  |   10  |  [175,112,46,92,92]  |
  2084  |                         R = R + 2;  |      2  |   373  |    112  |  1  |   10  |  [175,112,46,92,92]  |
  2088  |                         j = j + 1;  |         |   373  |    112  |  1  |   11  |  [175,112,46,92,92]  |
  2089  |              resetPlaceHolder_2();  |         |   373  |    112  |  1  |   11  |  [175,112,46,92,92]  |
  2095  |                         R = R + 2;  |      2  |   375  |    112  |  1  |   11  |  [175,112,46,92,92]  |
  2099  |                         j = j + 1;  |         |   375  |    112  |  1  |   12  |  [175,112,46,92,92]  |
  2100  |              resetPlaceHolder_2();  |         |   375  |    112  |  1  |   12  |  [175,112,46,92,92]  |
  2106  |                         R = R + 2;  |      2  |   377  |    112  |  1  |   12  |  [175,112,46,92,92]  |
  2110  |                         j = j + 1;  |         |   377  |    112  |  1  |   13  |  [175,112,46,92,92]  |
  2111  |              resetPlaceHolder_2();  |         |   377  |    112  |  1  |   13  |  [175,112,46,92,92]  |
  2117  |                         R = R + 2;  |      2  |   379  |    112  |  1  |   13  |  [175,112,46,92,92]  |
  2121  |                         j = j + 1;  |         |   379  |    112  |  1  |   14  |  [175,112,46,92,92]  |
  2122  |              resetPlaceHolder_2();  |         |   379  |    112  |  1  |   14  |  [175,112,46,92,92]  |
  2128  |                         R = R + 2;  |      2  |   381  |    112  |  1  |   14  |  [175,112,46,92,92]  |
  2132  |                         j = j + 1;  |         |   381  |    112  |  1  |   15  |  [175,112,46,92,92]  |
  2133  |              resetPlaceHolder_2();  |         |   381  |    112  |  1  |   15  |  [175,112,46,92,92]  |
  2139  |                         R = R + 2;  |      2  |   383  |    112  |  1  |   15  |  [175,112,46,92,92]  |
  2143  |                         j = j + 1;  |         |   383  |    112  |  1  |   16  |  [175,112,46,92,92]  |
  2144  |              resetPlaceHolder_2();  |         |   383  |    112  |  1  |   16  |  [175,112,46,92,92]  |
  2150  |                         R = R + 2;  |      2  |   385  |    112  |  1  |   16  |  [175,112,46,92,92]  |
  2154  |                         j = j + 1;  |         |   385  |    112  |  1  |   17  |  [175,112,46,92,92]  |
  2155  |              resetPlaceHolder_2();  |         |   385  |    112  |  1  |   17  |  [175,112,46,92,92]  |
  2161  |                         R = R + 2;  |      2  |   387  |    112  |  1  |   17  |  [175,112,46,92,92]  |
  2165  |                         j = j + 1;  |         |   387  |    112  |  1  |   18  |  [175,112,46,92,92]  |
  2166  |              resetPlaceHolder_2();  |         |   387  |    112  |  1  |   18  |  [175,112,46,92,92]  |
  2172  |                         R = R + 2;  |      2  |   389  |    112  |  1  |   18  |  [175,112,46,92,92]  |
  2176  |                         j = j + 1;  |         |   389  |    112  |  1  |   19  |  [175,112,46,92,92]  |
  2177  |              resetPlaceHolder_2();  |         |   389  |    112  |  1  |   19  |  [175,112,46,92,92]  |
  2183  |                         R = R + 2;  |      2  |   391  |    112  |  1  |   19  |  [175,112,46,92,92]  |
  2187  |                         j = j + 1;  |         |   391  |    112  |  1  |   20  |  [175,112,46,92,92]  |
  2188  |              resetPlaceHolder_2();  |         |   391  |    112  |  1  |   20  |  [175,112,46,92,92]  |
  2194  |                         R = R + 2;  |      2  |   393  |    112  |  1  |   20  |  [175,112,46,92,92]  |
  2198  |                         j = j + 1;  |         |   393  |    112  |  1  |   21  |  [175,112,46,92,92]  |
  2199  |              resetPlaceHolder_2();  |         |   393  |    112  |  1  |   21  |  [175,112,46,92,92]  |
  2205  |                         R = R + 2;  |      2  |   395  |    112  |  1  |   21  |  [175,112,46,92,92]  |
  2209  |                         j = j + 1;  |         |   395  |    112  |  1  |   22  |  [175,112,46,92,92]  |
  2210  |              resetPlaceHolder_2();  |         |   395  |    112  |  1  |   22  |  [175,112,46,92,92]  |
  2216  |                         R = R + 2;  |      2  |   397  |    112  |  1  |   22  |  [175,112,46,92,92]  |
  2220  |                         j = j + 1;  |         |   397  |    112  |  1  |   23  |  [175,112,46,92,92]  |
  2221  |              resetPlaceHolder_2();  |         |   397  |    112  |  1  |   23  |  [175,112,46,92,92]  |
  2227  |                         R = R + 2;  |      2  |   399  |    112  |  1  |   23  |  [175,112,46,92,92]  |
  2231  |                         j = j + 1;  |         |   399  |    112  |  1  |   24  |  [175,112,46,92,92]  |
  2232  |              resetPlaceHolder_2();  |         |   399  |    112  |  1  |   24  |  [175,112,46,92,92]  |
  2238  |                         R = R + 2;  |      2  |   401  |    112  |  1  |   24  |  [175,112,46,92,92]  |
  2242  |                         j = j + 1;  |         |   401  |    112  |  1  |   25  |  [175,112,46,92,92]  |
  2243  |              resetPlaceHolder_2();  |         |   401  |    112  |  1  |   25  |  [175,112,46,92,92]  |
  2249  |                         R = R + 2;  |      2  |   403  |    112  |  1  |   25  |  [175,112,46,92,92]  |
  2253  |                         j = j + 1;  |         |   403  |    112  |  1  |   26  |  [175,112,46,92,92]  |
  2254  |              resetPlaceHolder_2();  |         |   403  |    112  |  1  |   26  |  [175,112,46,92,92]  |
  2260  |                         R = R + 2;  |      2  |   405  |    112  |  1  |   26  |  [175,112,46,92,92]  |
  2264  |                         j = j + 1;  |         |   405  |    112  |  1  |   27  |  [175,112,46,92,92]  |
  2265  |              resetPlaceHolder_2();  |         |   405  |    112  |  1  |   27  |  [175,112,46,92,92]  |
  2271  |                         R = R + 2;  |      2  |   407  |    112  |  1  |   27  |  [175,112,46,92,92]  |
  2275  |                         j = j + 1;  |         |   407  |    112  |  1  |   28  |  [175,112,46,92,92]  |
  2276  |              resetPlaceHolder_2();  |         |   407  |    112  |  1  |   28  |  [175,112,46,92,92]  |
  2282  |                         R = R + 2;  |      2  |   409  |    112  |  1  |   28  |  [175,112,46,92,92]  |
  2286  |                         j = j + 1;  |         |   409  |    112  |  1  |   29  |  [175,112,46,92,92]  |
  2287  |              resetPlaceHolder_2();  |         |   409  |    112  |  1  |   29  |  [175,112,46,92,92]  |
  2293  |                         R = R + 2;  |      2  |   411  |    112  |  1  |   29  |  [175,112,46,92,92]  |
  2297  |                         j = j + 1;  |         |   411  |    112  |  1  |   30  |  [175,112,46,92,92]  |
  2298  |              resetPlaceHolder_2();  |         |   411  |    112  |  1  |   30  |  [175,112,46,92,92]  |
  2304  |                         R = R + 2;  |      2  |   413  |    112  |  1  |   30  |  [175,112,46,92,92]  |
  2308  |                         j = j + 1;  |         |   413  |    112  |  1  |   31  |  [175,112,46,92,92]  |
  2309  |              resetPlaceHolder_2();  |         |   413  |    112  |  1  |   31  |  [175,112,46,92,92]  |
  2315  |                         R = R + 2;  |      2  |   415  |    112  |  1  |   31  |  [175,112,46,92,92]  |
  2319  |                         j = j + 1;  |         |   415  |    112  |  1  |   32  |  [175,112,46,92,92]  |
  2320  |              resetPlaceHolder_2();  |         |   415  |    112  |  1  |   32  |  [175,112,46,92,92]  |
  2326  |                         R = R + 2;  |      2  |   417  |    112  |  1  |   32  |  [175,112,46,92,92]  |
  2330  |                         j = j + 1;  |         |   417  |    112  |  1  |   33  |  [175,112,46,92,92]  |
  2331  |              resetPlaceHolder_2();  |         |   417  |    112  |  1  |   33  |  [175,112,46,92,92]  |
  2337  |                         R = R + 2;  |      2  |   419  |    112  |  1  |   33  |  [175,112,46,92,92]  |
  2341  |                         j = j + 1;  |         |   419  |    112  |  1  |   34  |  [175,112,46,92,92]  |
  2342  |              resetPlaceHolder_2();  |         |   419  |    112  |  1  |   34  |  [175,112,46,92,92]  |
  2348  |                         R = R + 2;  |      2  |   421  |    112  |  1  |   34  |  [175,112,46,92,92]  |
  2352  |                         j = j + 1;  |         |   421  |    112  |  1  |   35  |  [175,112,46,92,92]  |
  2353  |              resetPlaceHolder_2();  |         |   421  |    112  |  1  |   35  |  [175,112,46,92,92]  |
  2359  |                         R = R + 2;  |      2  |   423  |    112  |  1  |   35  |  [175,112,46,92,92]  |
  2363  |                         j = j + 1;  |         |   423  |    112  |  1  |   36  |  [175,112,46,92,92]  |
  2364  |              resetPlaceHolder_2();  |         |   423  |    112  |  1  |   36  |  [175,112,46,92,92]  |
  2370  |                         R = R + 2;  |      2  |   425  |    112  |  1  |   36  |  [175,112,46,92,92]  |
  2374  |                         j = j + 1;  |         |   425  |    112  |  1  |   37  |  [175,112,46,92,92]  |
  2375  |              resetPlaceHolder_2();  |         |   425  |    112  |  1  |   37  |  [175,112,46,92,92]  |
  2381  |                         R = R + 2;  |      2  |   427  |    112  |  1  |   37  |  [175,112,46,92,92]  |
  2385  |                         j = j + 1;  |         |   427  |    112  |  1  |   38  |  [175,112,46,92,92]  |
  2386  |              resetPlaceHolder_2();  |         |   427  |    112  |  1  |   38  |  [175,112,46,92,92]  |
  2392  |                         R = R + 2;  |      2  |   429  |    112  |  1  |   38  |  [175,112,46,92,92]  |
  2396  |                         j = j + 1;  |         |   429  |    112  |  1  |   39  |  [175,112,46,92,92]  |
  2397  |              resetPlaceHolder_2();  |         |   429  |    112  |  1  |   39  |  [175,112,46,92,92]  |
  2403  |                         R = R + 2;  |      2  |   431  |    112  |  1  |   39  |  [175,112,46,92,92]  |
  2407  |                         j = j + 1;  |         |   431  |    112  |  1  |   40  |  [175,112,46,92,92]  |
  2408  |              resetPlaceHolder_2();  |         |   431  |    112  |  1  |   40  |  [175,112,46,92,92]  |
  2414  |                         R = R + 2;  |      2  |   433  |    112  |  1  |   40  |  [175,112,46,92,92]  |
  2418  |                         j = j + 1;  |         |   433  |    112  |  1  |   41  |  [175,112,46,92,92]  |
  2419  |              resetPlaceHolder_2();  |         |   433  |    112  |  1  |   41  |  [175,112,46,92,92]  |
  2425  |                         R = R + 2;  |      2  |   435  |    112  |  1  |   41  |  [175,112,46,92,92]  |
  2429  |                         j = j + 1;  |         |   435  |    112  |  1  |   42  |  [175,112,46,92,92]  |
  2430  |              resetPlaceHolder_2();  |         |   435  |    112  |  1  |   42  |  [175,112,46,92,92]  |
  2436  |                         R = R + 2;  |      2  |   437  |    112  |  1  |   42  |  [175,112,46,92,92]  |
  2440  |                         j = j + 1;  |         |   437  |    112  |  1  |   43  |  [175,112,46,92,92]  |
  2441  |              resetPlaceHolder_2();  |         |   437  |    112  |  1  |   43  |  [175,112,46,92,92]  |
  2447  |                         R = R + 2;  |      2  |   439  |    112  |  1  |   43  |  [175,112,46,92,92]  |
  2451  |                         j = j + 1;  |         |   439  |    112  |  1  |   44  |  [175,112,46,92,92]  |
  2452  |              resetPlaceHolder_2();  |         |   439  |    112  |  1  |   44  |  [175,112,46,92,92]  |
  2458  |                         R = R + 2;  |      2  |   441  |    112  |  1  |   44  |  [175,112,46,92,92]  |
  2462  |                         j = j + 1;  |         |   441  |    112  |  1  |   45  |  [175,112,46,92,92]  |
  2463  |              resetPlaceHolder_2();  |         |   441  |    112  |  1  |   45  |  [175,112,46,92,92]  |
  2469  |                         R = R + 2;  |      2  |   443  |    112  |  1  |   45  |  [175,112,46,92,92]  |
  2473  |                         j = j + 1;  |         |   443  |    112  |  1  |   46  |  [175,112,46,92,92]  |
  2474  |              resetPlaceHolder_2();  |         |   443  |    112  |  1  |   46  |  [175,112,46,92,92]  |
  2480  |                         R = R + 2;  |      2  |   445  |    112  |  1  |   46  |  [175,112,46,92,92]  |
  2484  |                         j = j + 1;  |         |   445  |    112  |  1  |   47  |  [175,112,46,92,92]  |
  2485  |              resetPlaceHolder_2();  |         |   445  |    112  |  1  |   47  |  [175,112,46,92,92]  |
  2491  |                         R = R + 2;  |      2  |   447  |    112  |  1  |   47  |  [175,112,46,92,92]  |
  2495  |                         j = j + 1;  |         |   447  |    112  |  1  |   48  |  [175,112,46,92,92]  |
  2496  |              resetPlaceHolder_2();  |         |   447  |    112  |  1  |   48  |  [175,112,46,92,92]  |
  2502  |                         R = R + 2;  |      2  |   449  |    112  |  1  |   48  |  [175,112,46,92,92]  |
  2506  |                         j = j + 1;  |         |   449  |    112  |  1  |   49  |  [175,112,46,92,92]  |
  2507  |              resetPlaceHolder_2();  |         |   449  |    112  |  1  |   49  |  [175,112,46,92,92]  |
  2513  |                         R = R + 2;  |      2  |   451  |    112  |  1  |   49  |  [175,112,46,92,92]  |
  2517  |                         j = j + 1;  |         |   451  |    112  |  1  |   50  |  [175,112,46,92,92]  |
  2518  |              resetPlaceHolder_2();  |         |   451  |    112  |  1  |   50  |  [175,112,46,92,92]  |
  2524  |                         R = R + 2;  |      2  |   453  |    112  |  1  |   50  |  [175,112,46,92,92]  |
  2528  |                         j = j + 1;  |         |   453  |    112  |  1  |   51  |  [175,112,46,92,92]  |
  2529  |              resetPlaceHolder_2();  |         |   453  |    112  |  1  |   51  |  [175,112,46,92,92]  |
  2535  |                         R = R + 2;  |      2  |   455  |    112  |  1  |   51  |  [175,112,46,92,92]  |
  2539  |                         j = j + 1;  |         |   455  |    112  |  1  |   52  |  [175,112,46,92,92]  |
  2540  |              resetPlaceHolder_2();  |         |   455  |    112  |  1  |   52  |  [175,112,46,92,92]  |
  2546  |                         R = R + 2;  |      2  |   457  |    112  |  1  |   52  |  [175,112,46,92,92]  |
  2550  |                         j = j + 1;  |         |   457  |    112  |  1  |   53  |  [175,112,46,92,92]  |
  2551  |              resetPlaceHolder_2();  |         |   457  |    112  |  1  |   53  |  [175,112,46,92,92]  |
  2557  |                         R = R + 2;  |      2  |   459  |    112  |  1  |   53  |  [175,112,46,92,92]  |
  2561  |                         j = j + 1;  |         |   459  |    112  |  1  |   54  |  [175,112,46,92,92]  |
  2562  |              resetPlaceHolder_2();  |         |   459  |    112  |  1  |   54  |  [175,112,46,92,92]  |
  2568  |                         R = R + 2;  |      2  |   461  |    112  |  1  |   54  |  [175,112,46,92,92]  |
  2572  |                         j = j + 1;  |         |   461  |    112  |  1  |   55  |  [175,112,46,92,92]  |
  2573  |              resetPlaceHolder_2();  |         |   461  |    112  |  1  |   55  |  [175,112,46,92,92]  |
  2579  |                         R = R + 2;  |      2  |   463  |    112  |  1  |   55  |  [175,112,46,92,92]  |
  2583  |                         j = j + 1;  |         |   463  |    112  |  1  |   56  |  [175,112,46,92,92]  |
  2584  |              resetPlaceHolder_2();  |         |   463  |    112  |  1  |   56  |  [175,112,46,92,92]  |
  2590  |                         R = R + 2;  |      2  |   465  |    112  |  1  |   56  |  [175,112,46,92,92]  |
  2594  |                         j = j + 1;  |         |   465  |    112  |  1  |   57  |  [175,112,46,92,92]  |
  2595  |              resetPlaceHolder_2();  |         |   465  |    112  |  1  |   57  |  [175,112,46,92,92]  |
  2601  |                         R = R + 2;  |      2  |   467  |    112  |  1  |   57  |  [175,112,46,92,92]  |
  2605  |                         j = j + 1;  |         |   467  |    112  |  1  |   58  |  [175,112,46,92,92]  |
  2606  |              resetPlaceHolder_2();  |         |   467  |    112  |  1  |   58  |  [175,112,46,92,92]  |
  2612  |                         R = R + 2;  |      2  |   469  |    112  |  1  |   58  |  [175,112,46,92,92]  |
  2616  |                         j = j + 1;  |         |   469  |    112  |  1  |   59  |  [175,112,46,92,92]  |
  2617  |              resetPlaceHolder_2();  |         |   469  |    112  |  1  |   59  |  [175,112,46,92,92]  |
  2623  |                         R = R + 2;  |      2  |   471  |    112  |  1  |   59  |  [175,112,46,92,92]  |
  2627  |                         j = j + 1;  |         |   471  |    112  |  1  |   60  |  [175,112,46,92,92]  |
  2628  |              resetPlaceHolder_2();  |         |   471  |    112  |  1  |   60  |  [175,112,46,92,92]  |
  2634  |                         R = R + 2;  |      2  |   473  |    112  |  1  |   60  |  [175,112,46,92,92]  |
  2638  |                         j = j + 1;  |         |   473  |    112  |  1  |   61  |  [175,112,46,92,92]  |
  2639  |              resetPlaceHolder_2();  |         |   473  |    112  |  1  |   61  |  [175,112,46,92,92]  |
  2645  |                         R = R + 2;  |      2  |   475  |    112  |  1  |   61  |  [175,112,46,92,92]  |
  2649  |                         j = j + 1;  |         |   475  |    112  |  1  |   62  |  [175,112,46,92,92]  |
  2650  |              resetPlaceHolder_2();  |         |   475  |    112  |  1  |   62  |  [175,112,46,92,92]  |
  2656  |                         R = R + 2;  |      2  |   477  |    112  |  1  |   62  |  [175,112,46,92,92]  |
  2660  |                         j = j + 1;  |         |   477  |    112  |  1  |   63  |  [175,112,46,92,92]  |
  2661  |              resetPlaceHolder_2();  |         |   477  |    112  |  1  |   63  |  [175,112,46,92,92]  |
  2667  |                         R = R + 2;  |      2  |   479  |    112  |  1  |   63  |  [175,112,46,92,92]  |
  2671  |                         j = j + 1;  |         |   479  |    112  |  1  |   64  |  [175,112,46,92,92]  |
  2672  |              resetPlaceHolder_2();  |         |   479  |    112  |  1  |   64  |  [175,112,46,92,92]  |
  2678  |                         R = R + 2;  |      2  |   481  |    112  |  1  |   64  |  [175,112,46,92,92]  |
  2682  |                         j = j + 1;  |         |   481  |    112  |  1  |   65  |  [175,112,46,92,92]  |
  2683  |              resetPlaceHolder_2();  |         |   481  |    112  |  1  |   65  |  [175,112,46,92,92]  |
  2689  |                         R = R + 2;  |      2  |   483  |    112  |  1  |   65  |  [175,112,46,92,92]  |
  2693  |                         j = j + 1;  |         |   483  |    112  |  1  |   66  |  [175,112,46,92,92]  |
  2694  |              resetPlaceHolder_2();  |         |   483  |    112  |  1  |   66  |  [175,112,46,92,92]  |
  2700  |                         R = R + 2;  |      2  |   485  |    112  |  1  |   66  |  [175,112,46,92,92]  |
  2704  |                         j = j + 1;  |         |   485  |    112  |  1  |   67  |  [175,112,46,92,92]  |
  2705  |              resetPlaceHolder_2();  |         |   485  |    112  |  1  |   67  |  [175,112,46,92,92]  |
  2711  |                         R = R + 2;  |      2  |   487  |    112  |  1  |   67  |  [175,112,46,92,92]  |
  2715  |                         j = j + 1;  |         |   487  |    112  |  1  |   68  |  [175,112,46,92,92]  |
  2716  |              resetPlaceHolder_2();  |         |   487  |    112  |  1  |   68  |  [175,112,46,92,92]  |
  2722  |                         R = R + 2;  |      2  |   489  |    112  |  1  |   68  |  [175,112,46,92,92]  |
  2726  |                         j = j + 1;  |         |   489  |    112  |  1  |   69  |  [175,112,46,92,92]  |
  2727  |              resetPlaceHolder_2();  |         |   489  |    112  |  1  |   69  |  [175,112,46,92,92]  |
  2733  |                         R = R + 2;  |      2  |   491  |    112  |  1  |   69  |  [175,112,46,92,92]  |
  2737  |                         j = j + 1;  |         |   491  |    112  |  1  |   70  |  [175,112,46,92,92]  |
  2738  |              resetPlaceHolder_2();  |         |   491  |    112  |  1  |   70  |  [175,112,46,92,92]  |
  2744  |                         R = R + 2;  |      2  |   493  |    112  |  1  |   70  |  [175,112,46,92,92]  |
  2748  |                         j = j + 1;  |         |   493  |    112  |  1  |   71  |  [175,112,46,92,92]  |
  2749  |              resetPlaceHolder_2();  |         |   493  |    112  |  1  |   71  |  [175,112,46,92,92]  |
  2755  |                         R = R + 2;  |      2  |   495  |    112  |  1  |   71  |  [175,112,46,92,92]  |
  2759  |                         j = j + 1;  |         |   495  |    112  |  1  |   72  |  [175,112,46,92,92]  |
  2760  |              resetPlaceHolder_2();  |         |   495  |    112  |  1  |   72  |  [175,112,46,92,92]  |
  2766  |                         R = R + 2;  |      2  |   497  |    112  |  1  |   72  |  [175,112,46,92,92]  |
  2770  |                         j = j + 1;  |         |   497  |    112  |  1  |   73  |  [175,112,46,92,92]  |
  2771  |              resetPlaceHolder_2();  |         |   497  |    112  |  1  |   73  |  [175,112,46,92,92]  |
  2777  |                         R = R + 2;  |      2  |   499  |    112  |  1  |   73  |  [175,112,46,92,92]  |
  2781  |                         j = j + 1;  |         |   499  |    112  |  1  |   74  |  [175,112,46,92,92]  |
  2782  |              resetPlaceHolder_2();  |         |   499  |    112  |  1  |   74  |  [175,112,46,92,92]  |
  2788  |                         R = R + 2;  |      2  |   501  |    112  |  1  |   74  |  [175,112,46,92,92]  |
  2792  |                         j = j + 1;  |         |   501  |    112  |  1  |   75  |  [175,112,46,92,92]  |
  2793  |              resetPlaceHolder_2();  |         |   501  |    112  |  1  |   75  |  [175,112,46,92,92]  |
  2799  |                         R = R + 2;  |      2  |   503  |    112  |  1  |   75  |  [175,112,46,92,92]  |
  2803  |                         j = j + 1;  |         |   503  |    112  |  1  |   76  |  [175,112,46,92,92]  |
  2804  |              resetPlaceHolder_2();  |         |   503  |    112  |  1  |   76  |  [175,112,46,92,92]  |
  2810  |                         R = R + 2;  |      2  |   505  |    112  |  1  |   76  |  [175,112,46,92,92]  |
  2814  |                         j = j + 1;  |         |   505  |    112  |  1  |   77  |  [175,112,46,92,92]  |
  2815  |              resetPlaceHolder_2();  |         |   505  |    112  |  1  |   77  |  [175,112,46,92,92]  |
  2821  |                         R = R + 2;  |      2  |   507  |    112  |  1  |   77  |  [175,112,46,92,92]  |
  2825  |                         j = j + 1;  |         |   507  |    112  |  1  |   78  |  [175,112,46,92,92]  |
  2826  |              resetPlaceHolder_2();  |         |   507  |    112  |  1  |   78  |  [175,112,46,92,92]  |
  2832  |                         R = R + 2;  |      2  |   509  |    112  |  1  |   78  |  [175,112,46,92,92]  |
  2836  |                         j = j + 1;  |         |   509  |    112  |  1  |   79  |  [175,112,46,92,92]  |
  2837  |              resetPlaceHolder_2();  |         |   509  |    112  |  1  |   79  |  [175,112,46,92,92]  |
  2843  |                         R = R + 2;  |      2  |   511  |    112  |  1  |   79  |  [175,112,46,92,92]  |
  2847  |                         j = j + 1;  |         |   511  |    112  |  1  |   80  |  [175,112,46,92,92]  |
  2848  |              resetPlaceHolder_2();  |         |   511  |    112  |  1  |   80  |  [175,112,46,92,92]  |
  2854  |                         R = R + 2;  |      2  |   513  |    112  |  1  |   80  |  [175,112,46,92,92]  |
  2858  |                         j = j + 1;  |         |   513  |    112  |  1  |   81  |  [175,112,46,92,92]  |
  2859  |              resetPlaceHolder_2();  |         |   513  |    112  |  1  |   81  |  [175,112,46,92,92]  |
  2865  |                         R = R + 2;  |      2  |   515  |    112  |  1  |   81  |  [175,112,46,92,92]  |
  2869  |                         j = j + 1;  |         |   515  |    112  |  1  |   82  |  [175,112,46,92,92]  |
  2870  |              resetPlaceHolder_2();  |         |   515  |    112  |  1  |   82  |  [175,112,46,92,92]  |
  2876  |                         R = R + 2;  |      2  |   517  |    112  |  1  |   82  |  [175,112,46,92,92]  |
  2880  |                         j = j + 1;  |         |   517  |    112  |  1  |   83  |  [175,112,46,92,92]  |
  2881  |              resetPlaceHolder_2();  |         |   517  |    112  |  1  |   83  |  [175,112,46,92,92]  |
  2887  |                         R = R + 2;  |      2  |   519  |    112  |  1  |   83  |  [175,112,46,92,92]  |
  2891  |                         j = j + 1;  |         |   519  |    112  |  1  |   84  |  [175,112,46,92,92]  |
  2892  |              resetPlaceHolder_2();  |         |   519  |    112  |  1  |   84  |  [175,112,46,92,92]  |
  2898  |                         R = R + 2;  |      2  |   521  |    112  |  1  |   84  |  [175,112,46,92,92]  |
  2902  |                         j = j + 1;  |         |   521  |    112  |  1  |   85  |  [175,112,46,92,92]  |
  2903  |              resetPlaceHolder_2();  |         |   521  |    112  |  1  |   85  |  [175,112,46,92,92]  |
  2909  |                         R = R + 2;  |      2  |   523  |    112  |  1  |   85  |  [175,112,46,92,92]  |
  2913  |                         j = j + 1;  |         |   523  |    112  |  1  |   86  |  [175,112,46,92,92]  |
  2914  |              resetPlaceHolder_2();  |         |   523  |    112  |  1  |   86  |  [175,112,46,92,92]  |
  2920  |                         R = R + 2;  |      2  |   525  |    112  |  1  |   86  |  [175,112,46,92,92]  |
  2924  |                         j = j + 1;  |         |   525  |    112  |  1  |   87  |  [175,112,46,92,92]  |
  2925  |              resetPlaceHolder_2();  |         |   525  |    112  |  1  |   87  |  [175,112,46,92,92]  |
  2931  |                         R = R + 2;  |      2  |   527  |    112  |  1  |   87  |  [175,112,46,92,92]  |
  2935  |                         j = j + 1;  |         |   527  |    112  |  1  |   88  |  [175,112,46,92,92]  |
  2936  |              resetPlaceHolder_2();  |         |   527  |    112  |  1  |   88  |  [175,112,46,92,92]  |
  2942  |                         R = R + 2;  |      2  |   529  |    112  |  1  |   88  |  [175,112,46,92,92]  |
  2946  |                         j = j + 1;  |         |   529  |    112  |  1  |   89  |  [175,112,46,92,92]  |
  2947  |              resetPlaceHolder_2();  |         |   529  |    112  |  1  |   89  |  [175,112,46,92,92]  |
  2953  |                         R = R + 2;  |      2  |   531  |    112  |  1  |   89  |  [175,112,46,92,92]  |
  2957  |                         j = j + 1;  |         |   531  |    112  |  1  |   90  |  [175,112,46,92,92]  |
  2958  |              resetPlaceHolder_2();  |         |   531  |    112  |  1  |   90  |  [175,112,46,92,92]  |
  2964  |                         R = R + 2;  |      2  |   533  |    112  |  1  |   90  |  [175,112,46,92,92]  |
  2968  |                         j = j + 1;  |         |   533  |    112  |  1  |   91  |  [175,112,46,92,92]  |
  2969  |              resetPlaceHolder_2();  |         |   533  |    112  |  1  |   91  |  [175,112,46,92,92]  |
  2975  |                         R = R + 2;  |      2  |   535  |    112  |  1  |   91  |  [175,112,46,92,92]  |
  2979  |                         j = j + 1;  |         |   535  |    112  |  1  |   92  |  [175,112,46,92,92]  |
  2980  |              resetPlaceHolder_2();  |         |   535  |    112  |  1  |   92  |  [175,112,46,92,92]  |
  2986  |                         R = R + 2;  |      2  |   537  |    112  |  1  |   92  |  [175,112,46,92,92]  |
  2990  |                         j = j + 1;  |         |   537  |    112  |  1  |   93  |  [175,112,46,92,92]  |
  2991  |              resetPlaceHolder_2();  |         |   537  |    112  |  1  |   93  |  [175,112,46,92,92]  |
  2997  |                         R = R + 2;  |      2  |   539  |    112  |  1  |   93  |  [175,112,46,92,92]  |
  3001  |                         j = j + 1;  |         |   539  |    112  |  1  |   94  |  [175,112,46,92,92]  |
  3002  |              resetPlaceHolder_2();  |         |   539  |    112  |  1  |   94  |  [175,112,46,92,92]  |
  3008  |                         R = R + 2;  |      2  |   541  |    112  |  1  |   94  |  [175,112,46,92,92]  |
  3012  |                         j = j + 1;  |         |   541  |    112  |  1  |   95  |  [175,112,46,92,92]  |
  3013  |              resetPlaceHolder_2();  |         |   541  |    112  |  1  |   95  |  [175,112,46,92,92]  |
  3019  |                         R = R + 2;  |      2  |   543  |    112  |  1  |   95  |  [175,112,46,92,92]  |
  3023  |                         j = j + 1;  |         |   543  |    112  |  1  |   96  |  [175,112,46,92,92]  |
  3024  |              resetPlaceHolder_2();  |         |   543  |    112  |  1  |   96  |  [175,112,46,92,92]  |
  3030  |                         R = R + 2;  |      2  |   545  |    112  |  1  |   96  |  [175,112,46,92,92]  |
  3034  |                         j = j + 1;  |         |   545  |    112  |  1  |   97  |  [175,112,46,92,92]  |
  3035  |              resetPlaceHolder_2();  |         |   545  |    112  |  1  |   97  |  [175,112,46,92,92]  |
  3041  |                         R = R + 2;  |      2  |   547  |    112  |  1  |   97  |  [175,112,46,92,92]  |
  3045  |                         j = j + 1;  |         |   547  |    112  |  1  |   98  |  [175,112,46,92,92]  |
  3046  |              resetPlaceHolder_2();  |         |   547  |    112  |  1  |   98  |  [175,112,46,92,92]  |
  3052  |                         R = R + 2;  |      2  |   549  |    112  |  1  |   98  |  [175,112,46,92,92]  |
  3056  |                         j = j + 1;  |         |   549  |    112  |  1  |   99  |  [175,112,46,92,92]  |
  3057  |              resetPlaceHolder_2();  |         |   549  |    112  |  1  |   99  |  [175,112,46,92,92]  |
  3063  |                         R = R + 2;  |      2  |   551  |    112  |  1  |   99  |  [175,112,46,92,92]  |
  3067  |                         j = j + 1;  |         |   551  |    112  |  1  |  100  |  [175,112,46,92,92]  |
  3068  |              resetPlaceHolder_2();  |         |   551  |    112  |  1  |  100  |  [175,112,46,92,92]  |
  3074  |                         R = R + 2;  |      2  |   553  |    112  |  1  |  100  |  [175,112,46,92,92]  |
  3078  |                         j = j + 1;  |         |   553  |    112  |  1  |  101  |  [175,112,46,92,92]  |
  3079  |              resetPlaceHolder_2();  |         |   553  |    112  |  1  |  101  |  [175,112,46,92,92]  |
  3085  |                         R = R + 2;  |      2  |   555  |    112  |  1  |  101  |  [175,112,46,92,92]  |
  3089  |                         j = j + 1;  |         |   555  |    112  |  1  |  102  |  [175,112,46,92,92]  |
  3090  |              resetPlaceHolder_2();  |         |   555  |    112  |  1  |  102  |  [175,112,46,92,92]  |
  3096  |                         R = R + 2;  |      2  |   557  |    112  |  1  |  102  |  [175,112,46,92,92]  |
  3100  |                         j = j + 1;  |         |   557  |    112  |  1  |  103  |  [175,112,46,92,92]  |
  3101  |              resetPlaceHolder_2();  |         |   557  |    112  |  1  |  103  |  [175,112,46,92,92]  |
  3107  |                         R = R + 2;  |      2  |   559  |    112  |  1  |  103  |  [175,112,46,92,92]  |
  3111  |                         j = j + 1;  |         |   559  |    112  |  1  |  104  |  [175,112,46,92,92]  |
  3112  |              resetPlaceHolder_2();  |         |   559  |    112  |  1  |  104  |  [175,112,46,92,92]  |
  3118  |                         R = R + 2;  |      2  |   561  |    112  |  1  |  104  |  [175,112,46,92,92]  |
  3122  |                         j = j + 1;  |         |   561  |    112  |  1  |  105  |  [175,112,46,92,92]  |
  3123  |              resetPlaceHolder_2();  |         |   561  |    112  |  1  |  105  |  [175,112,46,92,92]  |
  3129  |                         R = R + 2;  |      2  |   563  |    112  |  1  |  105  |  [175,112,46,92,92]  |
  3133  |                         j = j + 1;  |         |   563  |    112  |  1  |  106  |  [175,112,46,92,92]  |
  3134  |              resetPlaceHolder_2();  |         |   563  |    112  |  1  |  106  |  [175,112,46,92,92]  |
  3140  |                         R = R + 2;  |      2  |   565  |    112  |  1  |  106  |  [175,112,46,92,92]  |
  3144  |                         j = j + 1;  |         |   565  |    112  |  1  |  107  |  [175,112,46,92,92]  |
  3145  |              resetPlaceHolder_2();  |         |   565  |    112  |  1  |  107  |  [175,112,46,92,92]  |
  3151  |                         R = R + 2;  |      2  |   567  |    112  |  1  |  107  |  [175,112,46,92,92]  |
  3155  |                         j = j + 1;  |         |   567  |    112  |  1  |  108  |  [175,112,46,92,92]  |
  3156  |              resetPlaceHolder_2();  |         |   567  |    112  |  1  |  108  |  [175,112,46,92,92]  |
  3162  |                         R = R + 2;  |      2  |   569  |    112  |  1  |  108  |  [175,112,46,92,92]  |
  3166  |                         j = j + 1;  |         |   569  |    112  |  1  |  109  |  [175,112,46,92,92]  |
  3167  |              resetPlaceHolder_2();  |         |   569  |    112  |  1  |  109  |  [175,112,46,92,92]  |
  3173  |                         R = R + 2;  |      2  |   571  |    112  |  1  |  109  |  [175,112,46,92,92]  |
  3177  |                         j = j + 1;  |         |   571  |    112  |  1  |  110  |  [175,112,46,92,92]  |
  3178  |              resetPlaceHolder_2();  |         |   571  |    112  |  1  |  110  |  [175,112,46,92,92]  |
  3184  |                         R = R + 2;  |      2  |   573  |    112  |  1  |  110  |  [175,112,46,92,92]  |
  3188  |                         j = j + 1;  |         |   573  |    112  |  1  |  111  |  [175,112,46,92,92]  |
  3189  |              resetPlaceHolder_2();  |         |   573  |    112  |  1  |  111  |  [175,112,46,92,92]  |
  3195  |                         R = R + 2;  |      2  |   575  |    112  |  1  |  111  |  [175,112,46,92,92]  |
  3199  |                         j = j + 1;  |         |   575  |    112  |  1  |  112  |  [175,112,46,92,92]  |
  3200  |              resetPlaceHolder_2();  |         |   575  |    112  |  1  |  112  |  [175,112,46,92,92]  |
  3206  |                         R = R + 1;  |      1  |   576  |    112  |  1  |  112  |  [175,112,46,92,92]  |
  3210  |                         i = i + 1;  |         |   576  |    112  |  2  |  112  |  [175,112,46,92,92]  |
  3211  |              resetPlaceHolder_1();  |         |   576  |    112  |  2  |  112  |  [175,112,46,92,92]  |
  3217  |      entry = arrayRead(sorted, i);  |         |   576  |     46  |  2  |  112  |  [175,112,46,92,92]  |
  3219  |                         int j = 0;  |         |   576  |     46  |  2  |    0  |  [175,112,46,92,92]  |
  3225  |                         R = R + 2;  |      2  |   578  |     46  |  2  |    0  |  [175,112,46,92,92]  |
  3229  |                         j = j + 1;  |         |   578  |     46  |  2  |    1  |  [175,112,46,92,92]  |
  3230  |              resetPlaceHolder_2();  |         |   578  |     46  |  2  |    1  |  [175,112,46,92,92]  |
  3236  |                         R = R + 2;  |      2  |   580  |     46  |  2  |    1  |  [175,112,46,92,92]  |
  3240  |                         j = j + 1;  |         |   580  |     46  |  2  |    2  |  [175,112,46,92,92]  |
  3241  |              resetPlaceHolder_2();  |         |   580  |     46  |  2  |    2  |  [175,112,46,92,92]  |
  3247  |                         R = R + 2;  |      2  |   582  |     46  |  2  |    2  |  [175,112,46,92,92]  |
  3251  |                         j = j + 1;  |         |   582  |     46  |  2  |    3  |  [175,112,46,92,92]  |
  3252  |              resetPlaceHolder_2();  |         |   582  |     46  |  2  |    3  |  [175,112,46,92,92]  |
  3258  |                         R = R + 2;  |      2  |   584  |     46  |  2  |    3  |  [175,112,46,92,92]  |
  3262  |                         j = j + 1;  |         |   584  |     46  |  2  |    4  |  [175,112,46,92,92]  |
  3263  |              resetPlaceHolder_2();  |         |   584  |     46  |  2  |    4  |  [175,112,46,92,92]  |
  3269  |                         R = R + 2;  |      2  |   586  |     46  |  2  |    4  |  [175,112,46,92,92]  |
  3273  |                         j = j + 1;  |         |   586  |     46  |  2  |    5  |  [175,112,46,92,92]  |
  3274  |              resetPlaceHolder_2();  |         |   586  |     46  |  2  |    5  |  [175,112,46,92,92]  |
  3280  |                         R = R + 2;  |      2  |   588  |     46  |  2  |    5  |  [175,112,46,92,92]  |
  3284  |                         j = j + 1;  |         |   588  |     46  |  2  |    6  |  [175,112,46,92,92]  |
  3285  |              resetPlaceHolder_2();  |         |   588  |     46  |  2  |    6  |  [175,112,46,92,92]  |
  3291  |                         R = R + 2;  |      2  |   590  |     46  |  2  |    6  |  [175,112,46,92,92]  |
  3295  |                         j = j + 1;  |         |   590  |     46  |  2  |    7  |  [175,112,46,92,92]  |
  3296  |              resetPlaceHolder_2();  |         |   590  |     46  |  2  |    7  |  [175,112,46,92,92]  |
  3302  |                         R = R + 2;  |      2  |   592  |     46  |  2  |    7  |  [175,112,46,92,92]  |
  3306  |                         j = j + 1;  |         |   592  |     46  |  2  |    8  |  [175,112,46,92,92]  |
  3307  |              resetPlaceHolder_2();  |         |   592  |     46  |  2  |    8  |  [175,112,46,92,92]  |
  3313  |                         R = R + 2;  |      2  |   594  |     46  |  2  |    8  |  [175,112,46,92,92]  |
  3317  |                         j = j + 1;  |         |   594  |     46  |  2  |    9  |  [175,112,46,92,92]  |
  3318  |              resetPlaceHolder_2();  |         |   594  |     46  |  2  |    9  |  [175,112,46,92,92]  |
  3324  |                         R = R + 2;  |      2  |   596  |     46  |  2  |    9  |  [175,112,46,92,92]  |
  3328  |                         j = j + 1;  |         |   596  |     46  |  2  |   10  |  [175,112,46,92,92]  |
  3329  |              resetPlaceHolder_2();  |         |   596  |     46  |  2  |   10  |  [175,112,46,92,92]  |
  3335  |                         R = R + 2;  |      2  |   598  |     46  |  2  |   10  |  [175,112,46,92,92]  |
  3339  |                         j = j + 1;  |         |   598  |     46  |  2  |   11  |  [175,112,46,92,92]  |
  3340  |              resetPlaceHolder_2();  |         |   598  |     46  |  2  |   11  |  [175,112,46,92,92]  |
  3346  |                         R = R + 2;  |      2  |   600  |     46  |  2  |   11  |  [175,112,46,92,92]  |
  3350  |                         j = j + 1;  |         |   600  |     46  |  2  |   12  |  [175,112,46,92,92]  |
  3351  |              resetPlaceHolder_2();  |         |   600  |     46  |  2  |   12  |  [175,112,46,92,92]  |
  3357  |                         R = R + 2;  |      2  |   602  |     46  |  2  |   12  |  [175,112,46,92,92]  |
  3361  |                         j = j + 1;  |         |   602  |     46  |  2  |   13  |  [175,112,46,92,92]  |
  3362  |              resetPlaceHolder_2();  |         |   602  |     46  |  2  |   13  |  [175,112,46,92,92]  |
  3368  |                         R = R + 2;  |      2  |   604  |     46  |  2  |   13  |  [175,112,46,92,92]  |
  3372  |                         j = j + 1;  |         |   604  |     46  |  2  |   14  |  [175,112,46,92,92]  |
  3373  |              resetPlaceHolder_2();  |         |   604  |     46  |  2  |   14  |  [175,112,46,92,92]  |
  3379  |                         R = R + 2;  |      2  |   606  |     46  |  2  |   14  |  [175,112,46,92,92]  |
  3383  |                         j = j + 1;  |         |   606  |     46  |  2  |   15  |  [175,112,46,92,92]  |
  3384  |              resetPlaceHolder_2();  |         |   606  |     46  |  2  |   15  |  [175,112,46,92,92]  |
  3390  |                         R = R + 2;  |      2  |   608  |     46  |  2  |   15  |  [175,112,46,92,92]  |
  3394  |                         j = j + 1;  |         |   608  |     46  |  2  |   16  |  [175,112,46,92,92]  |
  3395  |              resetPlaceHolder_2();  |         |   608  |     46  |  2  |   16  |  [175,112,46,92,92]  |
  3401  |                         R = R + 2;  |      2  |   610  |     46  |  2  |   16  |  [175,112,46,92,92]  |
  3405  |                         j = j + 1;  |         |   610  |     46  |  2  |   17  |  [175,112,46,92,92]  |
  3406  |              resetPlaceHolder_2();  |         |   610  |     46  |  2  |   17  |  [175,112,46,92,92]  |
  3412  |                         R = R + 2;  |      2  |   612  |     46  |  2  |   17  |  [175,112,46,92,92]  |
  3416  |                         j = j + 1;  |         |   612  |     46  |  2  |   18  |  [175,112,46,92,92]  |
  3417  |              resetPlaceHolder_2();  |         |   612  |     46  |  2  |   18  |  [175,112,46,92,92]  |
  3423  |                         R = R + 2;  |      2  |   614  |     46  |  2  |   18  |  [175,112,46,92,92]  |
  3427  |                         j = j + 1;  |         |   614  |     46  |  2  |   19  |  [175,112,46,92,92]  |
  3428  |              resetPlaceHolder_2();  |         |   614  |     46  |  2  |   19  |  [175,112,46,92,92]  |
  3434  |                         R = R + 2;  |      2  |   616  |     46  |  2  |   19  |  [175,112,46,92,92]  |
  3438  |                         j = j + 1;  |         |   616  |     46  |  2  |   20  |  [175,112,46,92,92]  |
  3439  |              resetPlaceHolder_2();  |         |   616  |     46  |  2  |   20  |  [175,112,46,92,92]  |
  3445  |                         R = R + 2;  |      2  |   618  |     46  |  2  |   20  |  [175,112,46,92,92]  |
  3449  |                         j = j + 1;  |         |   618  |     46  |  2  |   21  |  [175,112,46,92,92]  |
  3450  |              resetPlaceHolder_2();  |         |   618  |     46  |  2  |   21  |  [175,112,46,92,92]  |
  3456  |                         R = R + 2;  |      2  |   620  |     46  |  2  |   21  |  [175,112,46,92,92]  |
  3460  |                         j = j + 1;  |         |   620  |     46  |  2  |   22  |  [175,112,46,92,92]  |
  3461  |              resetPlaceHolder_2();  |         |   620  |     46  |  2  |   22  |  [175,112,46,92,92]  |
  3467  |                         R = R + 2;  |      2  |   622  |     46  |  2  |   22  |  [175,112,46,92,92]  |
  3471  |                         j = j + 1;  |         |   622  |     46  |  2  |   23  |  [175,112,46,92,92]  |
  3472  |              resetPlaceHolder_2();  |         |   622  |     46  |  2  |   23  |  [175,112,46,92,92]  |
  3478  |                         R = R + 2;  |      2  |   624  |     46  |  2  |   23  |  [175,112,46,92,92]  |
  3482  |                         j = j + 1;  |         |   624  |     46  |  2  |   24  |  [175,112,46,92,92]  |
  3483  |              resetPlaceHolder_2();  |         |   624  |     46  |  2  |   24  |  [175,112,46,92,92]  |
  3489  |                         R = R + 2;  |      2  |   626  |     46  |  2  |   24  |  [175,112,46,92,92]  |
  3493  |                         j = j + 1;  |         |   626  |     46  |  2  |   25  |  [175,112,46,92,92]  |
  3494  |              resetPlaceHolder_2();  |         |   626  |     46  |  2  |   25  |  [175,112,46,92,92]  |
  3500  |                         R = R + 2;  |      2  |   628  |     46  |  2  |   25  |  [175,112,46,92,92]  |
  3504  |                         j = j + 1;  |         |   628  |     46  |  2  |   26  |  [175,112,46,92,92]  |
  3505  |              resetPlaceHolder_2();  |         |   628  |     46  |  2  |   26  |  [175,112,46,92,92]  |
  3511  |                         R = R + 2;  |      2  |   630  |     46  |  2  |   26  |  [175,112,46,92,92]  |
  3515  |                         j = j + 1;  |         |   630  |     46  |  2  |   27  |  [175,112,46,92,92]  |
  3516  |              resetPlaceHolder_2();  |         |   630  |     46  |  2  |   27  |  [175,112,46,92,92]  |
  3522  |                         R = R + 2;  |      2  |   632  |     46  |  2  |   27  |  [175,112,46,92,92]  |
  3526  |                         j = j + 1;  |         |   632  |     46  |  2  |   28  |  [175,112,46,92,92]  |
  3527  |              resetPlaceHolder_2();  |         |   632  |     46  |  2  |   28  |  [175,112,46,92,92]  |
  3533  |                         R = R + 2;  |      2  |   634  |     46  |  2  |   28  |  [175,112,46,92,92]  |
  3537  |                         j = j + 1;  |         |   634  |     46  |  2  |   29  |  [175,112,46,92,92]  |
  3538  |              resetPlaceHolder_2();  |         |   634  |     46  |  2  |   29  |  [175,112,46,92,92]  |
  3544  |                         R = R + 2;  |      2  |   636  |     46  |  2  |   29  |  [175,112,46,92,92]  |
  3548  |                         j = j + 1;  |         |   636  |     46  |  2  |   30  |  [175,112,46,92,92]  |
  3549  |              resetPlaceHolder_2();  |         |   636  |     46  |  2  |   30  |  [175,112,46,92,92]  |
  3555  |                         R = R + 2;  |      2  |   638  |     46  |  2  |   30  |  [175,112,46,92,92]  |
  3559  |                         j = j + 1;  |         |   638  |     46  |  2  |   31  |  [175,112,46,92,92]  |
  3560  |              resetPlaceHolder_2();  |         |   638  |     46  |  2  |   31  |  [175,112,46,92,92]  |
  3566  |                         R = R + 2;  |      2  |   640  |     46  |  2  |   31  |  [175,112,46,92,92]  |
  3570  |                         j = j + 1;  |         |   640  |     46  |  2  |   32  |  [175,112,46,92,92]  |
  3571  |              resetPlaceHolder_2();  |         |   640  |     46  |  2  |   32  |  [175,112,46,92,92]  |
  3577  |                         R = R + 2;  |      2  |   642  |     46  |  2  |   32  |  [175,112,46,92,92]  |
  3581  |                         j = j + 1;  |         |   642  |     46  |  2  |   33  |  [175,112,46,92,92]  |
  3582  |              resetPlaceHolder_2();  |         |   642  |     46  |  2  |   33  |  [175,112,46,92,92]  |
  3588  |                         R = R + 2;  |      2  |   644  |     46  |  2  |   33  |  [175,112,46,92,92]  |
  3592  |                         j = j + 1;  |         |   644  |     46  |  2  |   34  |  [175,112,46,92,92]  |
  3593  |              resetPlaceHolder_2();  |         |   644  |     46  |  2  |   34  |  [175,112,46,92,92]  |
  3599  |                         R = R + 2;  |      2  |   646  |     46  |  2  |   34  |  [175,112,46,92,92]  |
  3603  |                         j = j + 1;  |         |   646  |     46  |  2  |   35  |  [175,112,46,92,92]  |
  3604  |              resetPlaceHolder_2();  |         |   646  |     46  |  2  |   35  |  [175,112,46,92,92]  |
  3610  |                         R = R + 2;  |      2  |   648  |     46  |  2  |   35  |  [175,112,46,92,92]  |
  3614  |                         j = j + 1;  |         |   648  |     46  |  2  |   36  |  [175,112,46,92,92]  |
  3615  |              resetPlaceHolder_2();  |         |   648  |     46  |  2  |   36  |  [175,112,46,92,92]  |
  3621  |                         R = R + 2;  |      2  |   650  |     46  |  2  |   36  |  [175,112,46,92,92]  |
  3625  |                         j = j + 1;  |         |   650  |     46  |  2  |   37  |  [175,112,46,92,92]  |
  3626  |              resetPlaceHolder_2();  |         |   650  |     46  |  2  |   37  |  [175,112,46,92,92]  |
  3632  |                         R = R + 2;  |      2  |   652  |     46  |  2  |   37  |  [175,112,46,92,92]  |
  3636  |                         j = j + 1;  |         |   652  |     46  |  2  |   38  |  [175,112,46,92,92]  |
  3637  |              resetPlaceHolder_2();  |         |   652  |     46  |  2  |   38  |  [175,112,46,92,92]  |
  3643  |                         R = R + 2;  |      2  |   654  |     46  |  2  |   38  |  [175,112,46,92,92]  |
  3647  |                         j = j + 1;  |         |   654  |     46  |  2  |   39  |  [175,112,46,92,92]  |
  3648  |              resetPlaceHolder_2();  |         |   654  |     46  |  2  |   39  |  [175,112,46,92,92]  |
  3654  |                         R = R + 2;  |      2  |   656  |     46  |  2  |   39  |  [175,112,46,92,92]  |
  3658  |                         j = j + 1;  |         |   656  |     46  |  2  |   40  |  [175,112,46,92,92]  |
  3659  |              resetPlaceHolder_2();  |         |   656  |     46  |  2  |   40  |  [175,112,46,92,92]  |
  3665  |                         R = R + 2;  |      2  |   658  |     46  |  2  |   40  |  [175,112,46,92,92]  |
  3669  |                         j = j + 1;  |         |   658  |     46  |  2  |   41  |  [175,112,46,92,92]  |
  3670  |              resetPlaceHolder_2();  |         |   658  |     46  |  2  |   41  |  [175,112,46,92,92]  |
  3676  |                         R = R + 2;  |      2  |   660  |     46  |  2  |   41  |  [175,112,46,92,92]  |
  3680  |                         j = j + 1;  |         |   660  |     46  |  2  |   42  |  [175,112,46,92,92]  |
  3681  |              resetPlaceHolder_2();  |         |   660  |     46  |  2  |   42  |  [175,112,46,92,92]  |
  3687  |                         R = R + 2;  |      2  |   662  |     46  |  2  |   42  |  [175,112,46,92,92]  |
  3691  |                         j = j + 1;  |         |   662  |     46  |  2  |   43  |  [175,112,46,92,92]  |
  3692  |              resetPlaceHolder_2();  |         |   662  |     46  |  2  |   43  |  [175,112,46,92,92]  |
  3698  |                         R = R + 2;  |      2  |   664  |     46  |  2  |   43  |  [175,112,46,92,92]  |
  3702  |                         j = j + 1;  |         |   664  |     46  |  2  |   44  |  [175,112,46,92,92]  |
  3703  |              resetPlaceHolder_2();  |         |   664  |     46  |  2  |   44  |  [175,112,46,92,92]  |
  3709  |                         R = R + 2;  |      2  |   666  |     46  |  2  |   44  |  [175,112,46,92,92]  |
  3713  |                         j = j + 1;  |         |   666  |     46  |  2  |   45  |  [175,112,46,92,92]  |
  3714  |              resetPlaceHolder_2();  |         |   666  |     46  |  2  |   45  |  [175,112,46,92,92]  |
  3720  |                         R = R + 2;  |      2  |   668  |     46  |  2  |   45  |  [175,112,46,92,92]  |
  3724  |                         j = j + 1;  |         |   668  |     46  |  2  |   46  |  [175,112,46,92,92]  |
  3725  |              resetPlaceHolder_2();  |         |   668  |     46  |  2  |   46  |  [175,112,46,92,92]  |
  3731  |                         R = R + 1;  |      1  |   669  |     46  |  2  |   46  |  [175,112,46,92,92]  |
  3735  |                         i = i + 1;  |         |   669  |     46  |  3  |   46  |  [175,112,46,92,92]  |
  3736  |              resetPlaceHolder_1();  |         |   669  |     46  |  3  |   46  |  [175,112,46,92,92]  |
  3742  |      entry = arrayRead(sorted, i);  |         |   669  |     92  |  3  |   46  |  [175,112,46,92,92]  |
  3744  |                         int j = 0;  |         |   669  |     92  |  3  |    0  |  [175,112,46,92,92]  |
  3750  |                         R = R + 2;  |      2  |   671  |     92  |  3  |    0  |  [175,112,46,92,92]  |
  3754  |                         j = j + 1;  |         |   671  |     92  |  3  |    1  |  [175,112,46,92,92]  |
  3755  |              resetPlaceHolder_2();  |         |   671  |     92  |  3  |    1  |  [175,112,46,92,92]  |
  3761  |                         R = R + 2;  |      2  |   673  |     92  |  3  |    1  |  [175,112,46,92,92]  |
  3765  |                         j = j + 1;  |         |   673  |     92  |  3  |    2  |  [175,112,46,92,92]  |
  3766  |              resetPlaceHolder_2();  |         |   673  |     92  |  3  |    2  |  [175,112,46,92,92]  |
  3772  |                         R = R + 2;  |      2  |   675  |     92  |  3  |    2  |  [175,112,46,92,92]  |
  3776  |                         j = j + 1;  |         |   675  |     92  |  3  |    3  |  [175,112,46,92,92]  |
  3777  |              resetPlaceHolder_2();  |         |   675  |     92  |  3  |    3  |  [175,112,46,92,92]  |
  3783  |                         R = R + 2;  |      2  |   677  |     92  |  3  |    3  |  [175,112,46,92,92]  |
  3787  |                         j = j + 1;  |         |   677  |     92  |  3  |    4  |  [175,112,46,92,92]  |
  3788  |              resetPlaceHolder_2();  |         |   677  |     92  |  3  |    4  |  [175,112,46,92,92]  |
  3794  |                         R = R + 2;  |      2  |   679  |     92  |  3  |    4  |  [175,112,46,92,92]  |
  3798  |                         j = j + 1;  |         |   679  |     92  |  3  |    5  |  [175,112,46,92,92]  |
  3799  |              resetPlaceHolder_2();  |         |   679  |     92  |  3  |    5  |  [175,112,46,92,92]  |
  3805  |                         R = R + 2;  |      2  |   681  |     92  |  3  |    5  |  [175,112,46,92,92]  |
  3809  |                         j = j + 1;  |         |   681  |     92  |  3  |    6  |  [175,112,46,92,92]  |
  3810  |              resetPlaceHolder_2();  |         |   681  |     92  |  3  |    6  |  [175,112,46,92,92]  |
  3816  |                         R = R + 2;  |      2  |   683  |     92  |  3  |    6  |  [175,112,46,92,92]  |
  3820  |                         j = j + 1;  |         |   683  |     92  |  3  |    7  |  [175,112,46,92,92]  |
  3821  |              resetPlaceHolder_2();  |         |   683  |     92  |  3  |    7  |  [175,112,46,92,92]  |
  3827  |                         R = R + 2;  |      2  |   685  |     92  |  3  |    7  |  [175,112,46,92,92]  |
  3831  |                         j = j + 1;  |         |   685  |     92  |  3  |    8  |  [175,112,46,92,92]  |
  3832  |              resetPlaceHolder_2();  |         |   685  |     92  |  3  |    8  |  [175,112,46,92,92]  |
  3838  |                         R = R + 2;  |      2  |   687  |     92  |  3  |    8  |  [175,112,46,92,92]  |
  3842  |                         j = j + 1;  |         |   687  |     92  |  3  |    9  |  [175,112,46,92,92]  |
  3843  |              resetPlaceHolder_2();  |         |   687  |     92  |  3  |    9  |  [175,112,46,92,92]  |
  3849  |                         R = R + 2;  |      2  |   689  |     92  |  3  |    9  |  [175,112,46,92,92]  |
  3853  |                         j = j + 1;  |         |   689  |     92  |  3  |   10  |  [175,112,46,92,92]  |
  3854  |              resetPlaceHolder_2();  |         |   689  |     92  |  3  |   10  |  [175,112,46,92,92]  |
  3860  |                         R = R + 2;  |      2  |   691  |     92  |  3  |   10  |  [175,112,46,92,92]  |
  3864  |                         j = j + 1;  |         |   691  |     92  |  3  |   11  |  [175,112,46,92,92]  |
  3865  |              resetPlaceHolder_2();  |         |   691  |     92  |  3  |   11  |  [175,112,46,92,92]  |
  3871  |                         R = R + 2;  |      2  |   693  |     92  |  3  |   11  |  [175,112,46,92,92]  |
  3875  |                         j = j + 1;  |         |   693  |     92  |  3  |   12  |  [175,112,46,92,92]  |
  3876  |              resetPlaceHolder_2();  |         |   693  |     92  |  3  |   12  |  [175,112,46,92,92]  |
  3882  |                         R = R + 2;  |      2  |   695  |     92  |  3  |   12  |  [175,112,46,92,92]  |
  3886  |                         j = j + 1;  |         |   695  |     92  |  3  |   13  |  [175,112,46,92,92]  |
  3887  |              resetPlaceHolder_2();  |         |   695  |     92  |  3  |   13  |  [175,112,46,92,92]  |
  3893  |                         R = R + 2;  |      2  |   697  |     92  |  3  |   13  |  [175,112,46,92,92]  |
  3897  |                         j = j + 1;  |         |   697  |     92  |  3  |   14  |  [175,112,46,92,92]  |
  3898  |              resetPlaceHolder_2();  |         |   697  |     92  |  3  |   14  |  [175,112,46,92,92]  |
  3904  |                         R = R + 2;  |      2  |   699  |     92  |  3  |   14  |  [175,112,46,92,92]  |
  3908  |                         j = j + 1;  |         |   699  |     92  |  3  |   15  |  [175,112,46,92,92]  |
  3909  |              resetPlaceHolder_2();  |         |   699  |     92  |  3  |   15  |  [175,112,46,92,92]  |
  3915  |                         R = R + 2;  |      2  |   701  |     92  |  3  |   15  |  [175,112,46,92,92]  |
  3919  |                         j = j + 1;  |         |   701  |     92  |  3  |   16  |  [175,112,46,92,92]  |
  3920  |              resetPlaceHolder_2();  |         |   701  |     92  |  3  |   16  |  [175,112,46,92,92]  |
  3926  |                         R = R + 2;  |      2  |   703  |     92  |  3  |   16  |  [175,112,46,92,92]  |
  3930  |                         j = j + 1;  |         |   703  |     92  |  3  |   17  |  [175,112,46,92,92]  |
  3931  |              resetPlaceHolder_2();  |         |   703  |     92  |  3  |   17  |  [175,112,46,92,92]  |
  3937  |                         R = R + 2;  |      2  |   705  |     92  |  3  |   17  |  [175,112,46,92,92]  |
  3941  |                         j = j + 1;  |         |   705  |     92  |  3  |   18  |  [175,112,46,92,92]  |
  3942  |              resetPlaceHolder_2();  |         |   705  |     92  |  3  |   18  |  [175,112,46,92,92]  |
  3948  |                         R = R + 2;  |      2  |   707  |     92  |  3  |   18  |  [175,112,46,92,92]  |
  3952  |                         j = j + 1;  |         |   707  |     92  |  3  |   19  |  [175,112,46,92,92]  |
  3953  |              resetPlaceHolder_2();  |         |   707  |     92  |  3  |   19  |  [175,112,46,92,92]  |
  3959  |                         R = R + 2;  |      2  |   709  |     92  |  3  |   19  |  [175,112,46,92,92]  |
  3963  |                         j = j + 1;  |         |   709  |     92  |  3  |   20  |  [175,112,46,92,92]  |
  3964  |              resetPlaceHolder_2();  |         |   709  |     92  |  3  |   20  |  [175,112,46,92,92]  |
  3970  |                         R = R + 2;  |      2  |   711  |     92  |  3  |   20  |  [175,112,46,92,92]  |
  3974  |                         j = j + 1;  |         |   711  |     92  |  3  |   21  |  [175,112,46,92,92]  |
  3975  |              resetPlaceHolder_2();  |         |   711  |     92  |  3  |   21  |  [175,112,46,92,92]  |
  3981  |                         R = R + 2;  |      2  |   713  |     92  |  3  |   21  |  [175,112,46,92,92]  |
  3985  |                         j = j + 1;  |         |   713  |     92  |  3  |   22  |  [175,112,46,92,92]  |
  3986  |              resetPlaceHolder_2();  |         |   713  |     92  |  3  |   22  |  [175,112,46,92,92]  |
  3992  |                         R = R + 2;  |      2  |   715  |     92  |  3  |   22  |  [175,112,46,92,92]  |
  3996  |                         j = j + 1;  |         |   715  |     92  |  3  |   23  |  [175,112,46,92,92]  |
  3997  |              resetPlaceHolder_2();  |         |   715  |     92  |  3  |   23  |  [175,112,46,92,92]  |
  4003  |                         R = R + 2;  |      2  |   717  |     92  |  3  |   23  |  [175,112,46,92,92]  |
  4007  |                         j = j + 1;  |         |   717  |     92  |  3  |   24  |  [175,112,46,92,92]  |
  4008  |              resetPlaceHolder_2();  |         |   717  |     92  |  3  |   24  |  [175,112,46,92,92]  |
  4014  |                         R = R + 2;  |      2  |   719  |     92  |  3  |   24  |  [175,112,46,92,92]  |
  4018  |                         j = j + 1;  |         |   719  |     92  |  3  |   25  |  [175,112,46,92,92]  |
  4019  |              resetPlaceHolder_2();  |         |   719  |     92  |  3  |   25  |  [175,112,46,92,92]  |
  4025  |                         R = R + 2;  |      2  |   721  |     92  |  3  |   25  |  [175,112,46,92,92]  |
  4029  |                         j = j + 1;  |         |   721  |     92  |  3  |   26  |  [175,112,46,92,92]  |
  4030  |              resetPlaceHolder_2();  |         |   721  |     92  |  3  |   26  |  [175,112,46,92,92]  |
  4036  |                         R = R + 2;  |      2  |   723  |     92  |  3  |   26  |  [175,112,46,92,92]  |
  4040  |                         j = j + 1;  |         |   723  |     92  |  3  |   27  |  [175,112,46,92,92]  |
  4041  |              resetPlaceHolder_2();  |         |   723  |     92  |  3  |   27  |  [175,112,46,92,92]  |
  4047  |                         R = R + 2;  |      2  |   725  |     92  |  3  |   27  |  [175,112,46,92,92]  |
  4051  |                         j = j + 1;  |         |   725  |     92  |  3  |   28  |  [175,112,46,92,92]  |
  4052  |              resetPlaceHolder_2();  |         |   725  |     92  |  3  |   28  |  [175,112,46,92,92]  |
  4058  |                         R = R + 2;  |      2  |   727  |     92  |  3  |   28  |  [175,112,46,92,92]  |
  4062  |                         j = j + 1;  |         |   727  |     92  |  3  |   29  |  [175,112,46,92,92]  |
  4063  |              resetPlaceHolder_2();  |         |   727  |     92  |  3  |   29  |  [175,112,46,92,92]  |
  4069  |                         R = R + 2;  |      2  |   729  |     92  |  3  |   29  |  [175,112,46,92,92]  |
  4073  |                         j = j + 1;  |         |   729  |     92  |  3  |   30  |  [175,112,46,92,92]  |
  4074  |              resetPlaceHolder_2();  |         |   729  |     92  |  3  |   30  |  [175,112,46,92,92]  |
  4080  |                         R = R + 2;  |      2  |   731  |     92  |  3  |   30  |  [175,112,46,92,92]  |
  4084  |                         j = j + 1;  |         |   731  |     92  |  3  |   31  |  [175,112,46,92,92]  |
  4085  |              resetPlaceHolder_2();  |         |   731  |     92  |  3  |   31  |  [175,112,46,92,92]  |
  4091  |                         R = R + 2;  |      2  |   733  |     92  |  3  |   31  |  [175,112,46,92,92]  |
  4095  |                         j = j + 1;  |         |   733  |     92  |  3  |   32  |  [175,112,46,92,92]  |
  4096  |              resetPlaceHolder_2();  |         |   733  |     92  |  3  |   32  |  [175,112,46,92,92]  |
  4102  |                         R = R + 2;  |      2  |   735  |     92  |  3  |   32  |  [175,112,46,92,92]  |
  4106  |                         j = j + 1;  |         |   735  |     92  |  3  |   33  |  [175,112,46,92,92]  |
  4107  |              resetPlaceHolder_2();  |         |   735  |     92  |  3  |   33  |  [175,112,46,92,92]  |
  4113  |                         R = R + 2;  |      2  |   737  |     92  |  3  |   33  |  [175,112,46,92,92]  |
  4117  |                         j = j + 1;  |         |   737  |     92  |  3  |   34  |  [175,112,46,92,92]  |
  4118  |              resetPlaceHolder_2();  |         |   737  |     92  |  3  |   34  |  [175,112,46,92,92]  |
  4124  |                         R = R + 2;  |      2  |   739  |     92  |  3  |   34  |  [175,112,46,92,92]  |
  4128  |                         j = j + 1;  |         |   739  |     92  |  3  |   35  |  [175,112,46,92,92]  |
  4129  |              resetPlaceHolder_2();  |         |   739  |     92  |  3  |   35  |  [175,112,46,92,92]  |
  4135  |                         R = R + 2;  |      2  |   741  |     92  |  3  |   35  |  [175,112,46,92,92]  |
  4139  |                         j = j + 1;  |         |   741  |     92  |  3  |   36  |  [175,112,46,92,92]  |
  4140  |              resetPlaceHolder_2();  |         |   741  |     92  |  3  |   36  |  [175,112,46,92,92]  |
  4146  |                         R = R + 2;  |      2  |   743  |     92  |  3  |   36  |  [175,112,46,92,92]  |
  4150  |                         j = j + 1;  |         |   743  |     92  |  3  |   37  |  [175,112,46,92,92]  |
  4151  |              resetPlaceHolder_2();  |         |   743  |     92  |  3  |   37  |  [175,112,46,92,92]  |
  4157  |                         R = R + 2;  |      2  |   745  |     92  |  3  |   37  |  [175,112,46,92,92]  |
  4161  |                         j = j + 1;  |         |   745  |     92  |  3  |   38  |  [175,112,46,92,92]  |
  4162  |              resetPlaceHolder_2();  |         |   745  |     92  |  3  |   38  |  [175,112,46,92,92]  |
  4168  |                         R = R + 2;  |      2  |   747  |     92  |  3  |   38  |  [175,112,46,92,92]  |
  4172  |                         j = j + 1;  |         |   747  |     92  |  3  |   39  |  [175,112,46,92,92]  |
  4173  |              resetPlaceHolder_2();  |         |   747  |     92  |  3  |   39  |  [175,112,46,92,92]  |
  4179  |                         R = R + 2;  |      2  |   749  |     92  |  3  |   39  |  [175,112,46,92,92]  |
  4183  |                         j = j + 1;  |         |   749  |     92  |  3  |   40  |  [175,112,46,92,92]  |
  4184  |              resetPlaceHolder_2();  |         |   749  |     92  |  3  |   40  |  [175,112,46,92,92]  |
  4190  |                         R = R + 2;  |      2  |   751  |     92  |  3  |   40  |  [175,112,46,92,92]  |
  4194  |                         j = j + 1;  |         |   751  |     92  |  3  |   41  |  [175,112,46,92,92]  |
  4195  |              resetPlaceHolder_2();  |         |   751  |     92  |  3  |   41  |  [175,112,46,92,92]  |
  4201  |                         R = R + 2;  |      2  |   753  |     92  |  3  |   41  |  [175,112,46,92,92]  |
  4205  |                         j = j + 1;  |         |   753  |     92  |  3  |   42  |  [175,112,46,92,92]  |
  4206  |              resetPlaceHolder_2();  |         |   753  |     92  |  3  |   42  |  [175,112,46,92,92]  |
  4212  |                         R = R + 2;  |      2  |   755  |     92  |  3  |   42  |  [175,112,46,92,92]  |
  4216  |                         j = j + 1;  |         |   755  |     92  |  3  |   43  |  [175,112,46,92,92]  |
  4217  |              resetPlaceHolder_2();  |         |   755  |     92  |  3  |   43  |  [175,112,46,92,92]  |
  4223  |                         R = R + 2;  |      2  |   757  |     92  |  3  |   43  |  [175,112,46,92,92]  |
  4227  |                         j = j + 1;  |         |   757  |     92  |  3  |   44  |  [175,112,46,92,92]  |
  4228  |              resetPlaceHolder_2();  |         |   757  |     92  |  3  |   44  |  [175,112,46,92,92]  |
  4234  |                         R = R + 2;  |      2  |   759  |     92  |  3  |   44  |  [175,112,46,92,92]  |
  4238  |                         j = j + 1;  |         |   759  |     92  |  3  |   45  |  [175,112,46,92,92]  |
  4239  |              resetPlaceHolder_2();  |         |   759  |     92  |  3  |   45  |  [175,112,46,92,92]  |
  4245  |                         R = R + 2;  |      2  |   761  |     92  |  3  |   45  |  [175,112,46,92,92]  |
  4249  |                         j = j + 1;  |         |   761  |     92  |  3  |   46  |  [175,112,46,92,92]  |
  4250  |              resetPlaceHolder_2();  |         |   761  |     92  |  3  |   46  |  [175,112,46,92,92]  |
  4256  |                         R = R + 2;  |      2  |   763  |     92  |  3  |   46  |  [175,112,46,92,92]  |
  4260  |                         j = j + 1;  |         |   763  |     92  |  3  |   47  |  [175,112,46,92,92]  |
  4261  |              resetPlaceHolder_2();  |         |   763  |     92  |  3  |   47  |  [175,112,46,92,92]  |
  4267  |                         R = R + 2;  |      2  |   765  |     92  |  3  |   47  |  [175,112,46,92,92]  |
  4271  |                         j = j + 1;  |         |   765  |     92  |  3  |   48  |  [175,112,46,92,92]  |
  4272  |              resetPlaceHolder_2();  |         |   765  |     92  |  3  |   48  |  [175,112,46,92,92]  |
  4278  |                         R = R + 2;  |      2  |   767  |     92  |  3  |   48  |  [175,112,46,92,92]  |
  4282  |                         j = j + 1;  |         |   767  |     92  |  3  |   49  |  [175,112,46,92,92]  |
  4283  |              resetPlaceHolder_2();  |         |   767  |     92  |  3  |   49  |  [175,112,46,92,92]  |
  4289  |                         R = R + 2;  |      2  |   769  |     92  |  3  |   49  |  [175,112,46,92,92]  |
  4293  |                         j = j + 1;  |         |   769  |     92  |  3  |   50  |  [175,112,46,92,92]  |
  4294  |              resetPlaceHolder_2();  |         |   769  |     92  |  3  |   50  |  [175,112,46,92,92]  |
  4300  |                         R = R + 2;  |      2  |   771  |     92  |  3  |   50  |  [175,112,46,92,92]  |
  4304  |                         j = j + 1;  |         |   771  |     92  |  3  |   51  |  [175,112,46,92,92]  |
  4305  |              resetPlaceHolder_2();  |         |   771  |     92  |  3  |   51  |  [175,112,46,92,92]  |
  4311  |                         R = R + 2;  |      2  |   773  |     92  |  3  |   51  |  [175,112,46,92,92]  |
  4315  |                         j = j + 1;  |         |   773  |     92  |  3  |   52  |  [175,112,46,92,92]  |
  4316  |              resetPlaceHolder_2();  |         |   773  |     92  |  3  |   52  |  [175,112,46,92,92]  |
  4322  |                         R = R + 2;  |      2  |   775  |     92  |  3  |   52  |  [175,112,46,92,92]  |
  4326  |                         j = j + 1;  |         |   775  |     92  |  3  |   53  |  [175,112,46,92,92]  |
  4327  |              resetPlaceHolder_2();  |         |   775  |     92  |  3  |   53  |  [175,112,46,92,92]  |
  4333  |                         R = R + 2;  |      2  |   777  |     92  |  3  |   53  |  [175,112,46,92,92]  |
  4337  |                         j = j + 1;  |         |   777  |     92  |  3  |   54  |  [175,112,46,92,92]  |
  4338  |              resetPlaceHolder_2();  |         |   777  |     92  |  3  |   54  |  [175,112,46,92,92]  |
  4344  |                         R = R + 2;  |      2  |   779  |     92  |  3  |   54  |  [175,112,46,92,92]  |
  4348  |                         j = j + 1;  |         |   779  |     92  |  3  |   55  |  [175,112,46,92,92]  |
  4349  |              resetPlaceHolder_2();  |         |   779  |     92  |  3  |   55  |  [175,112,46,92,92]  |
  4355  |                         R = R + 2;  |      2  |   781  |     92  |  3  |   55  |  [175,112,46,92,92]  |
  4359  |                         j = j + 1;  |         |   781  |     92  |  3  |   56  |  [175,112,46,92,92]  |
  4360  |              resetPlaceHolder_2();  |         |   781  |     92  |  3  |   56  |  [175,112,46,92,92]  |
  4366  |                         R = R + 2;  |      2  |   783  |     92  |  3  |   56  |  [175,112,46,92,92]  |
  4370  |                         j = j + 1;  |         |   783  |     92  |  3  |   57  |  [175,112,46,92,92]  |
  4371  |              resetPlaceHolder_2();  |         |   783  |     92  |  3  |   57  |  [175,112,46,92,92]  |
  4377  |                         R = R + 2;  |      2  |   785  |     92  |  3  |   57  |  [175,112,46,92,92]  |
  4381  |                         j = j + 1;  |         |   785  |     92  |  3  |   58  |  [175,112,46,92,92]  |
  4382  |              resetPlaceHolder_2();  |         |   785  |     92  |  3  |   58  |  [175,112,46,92,92]  |
  4388  |                         R = R + 2;  |      2  |   787  |     92  |  3  |   58  |  [175,112,46,92,92]  |
  4392  |                         j = j + 1;  |         |   787  |     92  |  3  |   59  |  [175,112,46,92,92]  |
  4393  |              resetPlaceHolder_2();  |         |   787  |     92  |  3  |   59  |  [175,112,46,92,92]  |
  4399  |                         R = R + 2;  |      2  |   789  |     92  |  3  |   59  |  [175,112,46,92,92]  |
  4403  |                         j = j + 1;  |         |   789  |     92  |  3  |   60  |  [175,112,46,92,92]  |
  4404  |              resetPlaceHolder_2();  |         |   789  |     92  |  3  |   60  |  [175,112,46,92,92]  |
  4410  |                         R = R + 2;  |      2  |   791  |     92  |  3  |   60  |  [175,112,46,92,92]  |
  4414  |                         j = j + 1;  |         |   791  |     92  |  3  |   61  |  [175,112,46,92,92]  |
  4415  |              resetPlaceHolder_2();  |         |   791  |     92  |  3  |   61  |  [175,112,46,92,92]  |
  4421  |                         R = R + 2;  |      2  |   793  |     92  |  3  |   61  |  [175,112,46,92,92]  |
  4425  |                         j = j + 1;  |         |   793  |     92  |  3  |   62  |  [175,112,46,92,92]  |
  4426  |              resetPlaceHolder_2();  |         |   793  |     92  |  3  |   62  |  [175,112,46,92,92]  |
  4432  |                         R = R + 2;  |      2  |   795  |     92  |  3  |   62  |  [175,112,46,92,92]  |
  4436  |                         j = j + 1;  |         |   795  |     92  |  3  |   63  |  [175,112,46,92,92]  |
  4437  |              resetPlaceHolder_2();  |         |   795  |     92  |  3  |   63  |  [175,112,46,92,92]  |
  4443  |                         R = R + 2;  |      2  |   797  |     92  |  3  |   63  |  [175,112,46,92,92]  |
  4447  |                         j = j + 1;  |         |   797  |     92  |  3  |   64  |  [175,112,46,92,92]  |
  4448  |              resetPlaceHolder_2();  |         |   797  |     92  |  3  |   64  |  [175,112,46,92,92]  |
  4454  |                         R = R + 2;  |      2  |   799  |     92  |  3  |   64  |  [175,112,46,92,92]  |
  4458  |                         j = j + 1;  |         |   799  |     92  |  3  |   65  |  [175,112,46,92,92]  |
  4459  |              resetPlaceHolder_2();  |         |   799  |     92  |  3  |   65  |  [175,112,46,92,92]  |
  4465  |                         R = R + 2;  |      2  |   801  |     92  |  3  |   65  |  [175,112,46,92,92]  |
  4469  |                         j = j + 1;  |         |   801  |     92  |  3  |   66  |  [175,112,46,92,92]  |
  4470  |              resetPlaceHolder_2();  |         |   801  |     92  |  3  |   66  |  [175,112,46,92,92]  |
  4476  |                         R = R + 2;  |      2  |   803  |     92  |  3  |   66  |  [175,112,46,92,92]  |
  4480  |                         j = j + 1;  |         |   803  |     92  |  3  |   67  |  [175,112,46,92,92]  |
  4481  |              resetPlaceHolder_2();  |         |   803  |     92  |  3  |   67  |  [175,112,46,92,92]  |
  4487  |                         R = R + 2;  |      2  |   805  |     92  |  3  |   67  |  [175,112,46,92,92]  |
  4491  |                         j = j + 1;  |         |   805  |     92  |  3  |   68  |  [175,112,46,92,92]  |
  4492  |              resetPlaceHolder_2();  |         |   805  |     92  |  3  |   68  |  [175,112,46,92,92]  |
  4498  |                         R = R + 2;  |      2  |   807  |     92  |  3  |   68  |  [175,112,46,92,92]  |
  4502  |                         j = j + 1;  |         |   807  |     92  |  3  |   69  |  [175,112,46,92,92]  |
  4503  |              resetPlaceHolder_2();  |         |   807  |     92  |  3  |   69  |  [175,112,46,92,92]  |
  4509  |                         R = R + 2;  |      2  |   809  |     92  |  3  |   69  |  [175,112,46,92,92]  |
  4513  |                         j = j + 1;  |         |   809  |     92  |  3  |   70  |  [175,112,46,92,92]  |
  4514  |              resetPlaceHolder_2();  |         |   809  |     92  |  3  |   70  |  [175,112,46,92,92]  |
  4520  |                         R = R + 2;  |      2  |   811  |     92  |  3  |   70  |  [175,112,46,92,92]  |
  4524  |                         j = j + 1;  |         |   811  |     92  |  3  |   71  |  [175,112,46,92,92]  |
  4525  |              resetPlaceHolder_2();  |         |   811  |     92  |  3  |   71  |  [175,112,46,92,92]  |
  4531  |                         R = R + 2;  |      2  |   813  |     92  |  3  |   71  |  [175,112,46,92,92]  |
  4535  |                         j = j + 1;  |         |   813  |     92  |  3  |   72  |  [175,112,46,92,92]  |
  4536  |              resetPlaceHolder_2();  |         |   813  |     92  |  3  |   72  |  [175,112,46,92,92]  |
  4542  |                         R = R + 2;  |      2  |   815  |     92  |  3  |   72  |  [175,112,46,92,92]  |
  4546  |                         j = j + 1;  |         |   815  |     92  |  3  |   73  |  [175,112,46,92,92]  |
  4547  |              resetPlaceHolder_2();  |         |   815  |     92  |  3  |   73  |  [175,112,46,92,92]  |
  4553  |                         R = R + 2;  |      2  |   817  |     92  |  3  |   73  |  [175,112,46,92,92]  |
  4557  |                         j = j + 1;  |         |   817  |     92  |  3  |   74  |  [175,112,46,92,92]  |
  4558  |              resetPlaceHolder_2();  |         |   817  |     92  |  3  |   74  |  [175,112,46,92,92]  |
  4564  |                         R = R + 2;  |      2  |   819  |     92  |  3  |   74  |  [175,112,46,92,92]  |
  4568  |                         j = j + 1;  |         |   819  |     92  |  3  |   75  |  [175,112,46,92,92]  |
  4569  |              resetPlaceHolder_2();  |         |   819  |     92  |  3  |   75  |  [175,112,46,92,92]  |
  4575  |                         R = R + 2;  |      2  |   821  |     92  |  3  |   75  |  [175,112,46,92,92]  |
  4579  |                         j = j + 1;  |         |   821  |     92  |  3  |   76  |  [175,112,46,92,92]  |
  4580  |              resetPlaceHolder_2();  |         |   821  |     92  |  3  |   76  |  [175,112,46,92,92]  |
  4586  |                         R = R + 2;  |      2  |   823  |     92  |  3  |   76  |  [175,112,46,92,92]  |
  4590  |                         j = j + 1;  |         |   823  |     92  |  3  |   77  |  [175,112,46,92,92]  |
  4591  |              resetPlaceHolder_2();  |         |   823  |     92  |  3  |   77  |  [175,112,46,92,92]  |
  4597  |                         R = R + 2;  |      2  |   825  |     92  |  3  |   77  |  [175,112,46,92,92]  |
  4601  |                         j = j + 1;  |         |   825  |     92  |  3  |   78  |  [175,112,46,92,92]  |
  4602  |              resetPlaceHolder_2();  |         |   825  |     92  |  3  |   78  |  [175,112,46,92,92]  |
  4608  |                         R = R + 2;  |      2  |   827  |     92  |  3  |   78  |  [175,112,46,92,92]  |
  4612  |                         j = j + 1;  |         |   827  |     92  |  3  |   79  |  [175,112,46,92,92]  |
  4613  |              resetPlaceHolder_2();  |         |   827  |     92  |  3  |   79  |  [175,112,46,92,92]  |
  4619  |                         R = R + 2;  |      2  |   829  |     92  |  3  |   79  |  [175,112,46,92,92]  |
  4623  |                         j = j + 1;  |         |   829  |     92  |  3  |   80  |  [175,112,46,92,92]  |
  4624  |              resetPlaceHolder_2();  |         |   829  |     92  |  3  |   80  |  [175,112,46,92,92]  |
  4630  |                         R = R + 2;  |      2  |   831  |     92  |  3  |   80  |  [175,112,46,92,92]  |
  4634  |                         j = j + 1;  |         |   831  |     92  |  3  |   81  |  [175,112,46,92,92]  |
  4635  |              resetPlaceHolder_2();  |         |   831  |     92  |  3  |   81  |  [175,112,46,92,92]  |
  4641  |                         R = R + 2;  |      2  |   833  |     92  |  3  |   81  |  [175,112,46,92,92]  |
  4645  |                         j = j + 1;  |         |   833  |     92  |  3  |   82  |  [175,112,46,92,92]  |
  4646  |              resetPlaceHolder_2();  |         |   833  |     92  |  3  |   82  |  [175,112,46,92,92]  |
  4652  |                         R = R + 2;  |      2  |   835  |     92  |  3  |   82  |  [175,112,46,92,92]  |
  4656  |                         j = j + 1;  |         |   835  |     92  |  3  |   83  |  [175,112,46,92,92]  |
  4657  |              resetPlaceHolder_2();  |         |   835  |     92  |  3  |   83  |  [175,112,46,92,92]  |
  4663  |                         R = R + 2;  |      2  |   837  |     92  |  3  |   83  |  [175,112,46,92,92]  |
  4667  |                         j = j + 1;  |         |   837  |     92  |  3  |   84  |  [175,112,46,92,92]  |
  4668  |              resetPlaceHolder_2();  |         |   837  |     92  |  3  |   84  |  [175,112,46,92,92]  |
  4674  |                         R = R + 2;  |      2  |   839  |     92  |  3  |   84  |  [175,112,46,92,92]  |
  4678  |                         j = j + 1;  |         |   839  |     92  |  3  |   85  |  [175,112,46,92,92]  |
  4679  |              resetPlaceHolder_2();  |         |   839  |     92  |  3  |   85  |  [175,112,46,92,92]  |
  4685  |                         R = R + 2;  |      2  |   841  |     92  |  3  |   85  |  [175,112,46,92,92]  |
  4689  |                         j = j + 1;  |         |   841  |     92  |  3  |   86  |  [175,112,46,92,92]  |
  4690  |              resetPlaceHolder_2();  |         |   841  |     92  |  3  |   86  |  [175,112,46,92,92]  |
  4696  |                         R = R + 2;  |      2  |   843  |     92  |  3  |   86  |  [175,112,46,92,92]  |
  4700  |                         j = j + 1;  |         |   843  |     92  |  3  |   87  |  [175,112,46,92,92]  |
  4701  |              resetPlaceHolder_2();  |         |   843  |     92  |  3  |   87  |  [175,112,46,92,92]  |
  4707  |                         R = R + 2;  |      2  |   845  |     92  |  3  |   87  |  [175,112,46,92,92]  |
  4711  |                         j = j + 1;  |         |   845  |     92  |  3  |   88  |  [175,112,46,92,92]  |
  4712  |              resetPlaceHolder_2();  |         |   845  |     92  |  3  |   88  |  [175,112,46,92,92]  |
  4718  |                         R = R + 2;  |      2  |   847  |     92  |  3  |   88  |  [175,112,46,92,92]  |
  4722  |                         j = j + 1;  |         |   847  |     92  |  3  |   89  |  [175,112,46,92,92]  |
  4723  |              resetPlaceHolder_2();  |         |   847  |     92  |  3  |   89  |  [175,112,46,92,92]  |
  4729  |                         R = R + 2;  |      2  |   849  |     92  |  3  |   89  |  [175,112,46,92,92]  |
  4733  |                         j = j + 1;  |         |   849  |     92  |  3  |   90  |  [175,112,46,92,92]  |
  4734  |              resetPlaceHolder_2();  |         |   849  |     92  |  3  |   90  |  [175,112,46,92,92]  |
  4740  |                         R = R + 2;  |      2  |   851  |     92  |  3  |   90  |  [175,112,46,92,92]  |
  4744  |                         j = j + 1;  |         |   851  |     92  |  3  |   91  |  [175,112,46,92,92]  |
  4745  |              resetPlaceHolder_2();  |         |   851  |     92  |  3  |   91  |  [175,112,46,92,92]  |
  4751  |                         R = R + 2;  |      2  |   853  |     92  |  3  |   91  |  [175,112,46,92,92]  |
  4755  |                         j = j + 1;  |         |   853  |     92  |  3  |   92  |  [175,112,46,92,92]  |
  4756  |              resetPlaceHolder_2();  |         |   853  |     92  |  3  |   92  |  [175,112,46,92,92]  |
  4762  |                         R = R + 1;  |      1  |   854  |     92  |  3  |   92  |  [175,112,46,92,92]  |
  4766  |                         i = i + 1;  |         |   854  |     92  |  4  |   92  |  [175,112,46,92,92]  |
  4767  |              resetPlaceHolder_1();  |         |   854  |     92  |  4  |   92  |  [175,112,46,92,92]  |
  4773  |      entry = arrayRead(sorted, i);  |         |   854  |     92  |  4  |   92  |  [175,112,46,92,92]  |
  4775  |                         int j = 0;  |         |   854  |     92  |  4  |    0  |  [175,112,46,92,92]  |
  4781  |                         R = R + 2;  |      2  |   856  |     92  |  4  |    0  |  [175,112,46,92,92]  |
  4785  |                         j = j + 1;  |         |   856  |     92  |  4  |    1  |  [175,112,46,92,92]  |
  4786  |              resetPlaceHolder_2();  |         |   856  |     92  |  4  |    1  |  [175,112,46,92,92]  |
  4792  |                         R = R + 2;  |      2  |   858  |     92  |  4  |    1  |  [175,112,46,92,92]  |
  4796  |                         j = j + 1;  |         |   858  |     92  |  4  |    2  |  [175,112,46,92,92]  |
  4797  |              resetPlaceHolder_2();  |         |   858  |     92  |  4  |    2  |  [175,112,46,92,92]  |
  4803  |                         R = R + 2;  |      2  |   860  |     92  |  4  |    2  |  [175,112,46,92,92]  |
  4807  |                         j = j + 1;  |         |   860  |     92  |  4  |    3  |  [175,112,46,92,92]  |
  4808  |              resetPlaceHolder_2();  |         |   860  |     92  |  4  |    3  |  [175,112,46,92,92]  |
  4814  |                         R = R + 2;  |      2  |   862  |     92  |  4  |    3  |  [175,112,46,92,92]  |
  4818  |                         j = j + 1;  |         |   862  |     92  |  4  |    4  |  [175,112,46,92,92]  |
  4819  |              resetPlaceHolder_2();  |         |   862  |     92  |  4  |    4  |  [175,112,46,92,92]  |
  4825  |                         R = R + 2;  |      2  |   864  |     92  |  4  |    4  |  [175,112,46,92,92]  |
  4829  |                         j = j + 1;  |         |   864  |     92  |  4  |    5  |  [175,112,46,92,92]  |
  4830  |              resetPlaceHolder_2();  |         |   864  |     92  |  4  |    5  |  [175,112,46,92,92]  |
  4836  |                         R = R + 2;  |      2  |   866  |     92  |  4  |    5  |  [175,112,46,92,92]  |
  4840  |                         j = j + 1;  |         |   866  |     92  |  4  |    6  |  [175,112,46,92,92]  |
  4841  |              resetPlaceHolder_2();  |         |   866  |     92  |  4  |    6  |  [175,112,46,92,92]  |
  4847  |                         R = R + 2;  |      2  |   868  |     92  |  4  |    6  |  [175,112,46,92,92]  |
  4851  |                         j = j + 1;  |         |   868  |     92  |  4  |    7  |  [175,112,46,92,92]  |
  4852  |              resetPlaceHolder_2();  |         |   868  |     92  |  4  |    7  |  [175,112,46,92,92]  |
  4858  |                         R = R + 2;  |      2  |   870  |     92  |  4  |    7  |  [175,112,46,92,92]  |
  4862  |                         j = j + 1;  |         |   870  |     92  |  4  |    8  |  [175,112,46,92,92]  |
  4863  |              resetPlaceHolder_2();  |         |   870  |     92  |  4  |    8  |  [175,112,46,92,92]  |
  4869  |                         R = R + 2;  |      2  |   872  |     92  |  4  |    8  |  [175,112,46,92,92]  |
  4873  |                         j = j + 1;  |         |   872  |     92  |  4  |    9  |  [175,112,46,92,92]  |
  4874  |              resetPlaceHolder_2();  |         |   872  |     92  |  4  |    9  |  [175,112,46,92,92]  |
  4880  |                         R = R + 2;  |      2  |   874  |     92  |  4  |    9  |  [175,112,46,92,92]  |
  4884  |                         j = j + 1;  |         |   874  |     92  |  4  |   10  |  [175,112,46,92,92]  |
  4885  |              resetPlaceHolder_2();  |         |   874  |     92  |  4  |   10  |  [175,112,46,92,92]  |
  4891  |                         R = R + 2;  |      2  |   876  |     92  |  4  |   10  |  [175,112,46,92,92]  |
  4895  |                         j = j + 1;  |         |   876  |     92  |  4  |   11  |  [175,112,46,92,92]  |
  4896  |              resetPlaceHolder_2();  |         |   876  |     92  |  4  |   11  |  [175,112,46,92,92]  |
  4902  |                         R = R + 2;  |      2  |   878  |     92  |  4  |   11  |  [175,112,46,92,92]  |
  4906  |                         j = j + 1;  |         |   878  |     92  |  4  |   12  |  [175,112,46,92,92]  |
  4907  |              resetPlaceHolder_2();  |         |   878  |     92  |  4  |   12  |  [175,112,46,92,92]  |
  4913  |                         R = R + 2;  |      2  |   880  |     92  |  4  |   12  |  [175,112,46,92,92]  |
  4917  |                         j = j + 1;  |         |   880  |     92  |  4  |   13  |  [175,112,46,92,92]  |
  4918  |              resetPlaceHolder_2();  |         |   880  |     92  |  4  |   13  |  [175,112,46,92,92]  |
  4924  |                         R = R + 2;  |      2  |   882  |     92  |  4  |   13  |  [175,112,46,92,92]  |
  4928  |                         j = j + 1;  |         |   882  |     92  |  4  |   14  |  [175,112,46,92,92]  |
  4929  |              resetPlaceHolder_2();  |         |   882  |     92  |  4  |   14  |  [175,112,46,92,92]  |
  4935  |                         R = R + 2;  |      2  |   884  |     92  |  4  |   14  |  [175,112,46,92,92]  |
  4939  |                         j = j + 1;  |         |   884  |     92  |  4  |   15  |  [175,112,46,92,92]  |
  4940  |              resetPlaceHolder_2();  |         |   884  |     92  |  4  |   15  |  [175,112,46,92,92]  |
  4946  |                         R = R + 2;  |      2  |   886  |     92  |  4  |   15  |  [175,112,46,92,92]  |
  4950  |                         j = j + 1;  |         |   886  |     92  |  4  |   16  |  [175,112,46,92,92]  |
  4951  |              resetPlaceHolder_2();  |         |   886  |     92  |  4  |   16  |  [175,112,46,92,92]  |
  4957  |                         R = R + 2;  |      2  |   888  |     92  |  4  |   16  |  [175,112,46,92,92]  |
  4961  |                         j = j + 1;  |         |   888  |     92  |  4  |   17  |  [175,112,46,92,92]  |
  4962  |              resetPlaceHolder_2();  |         |   888  |     92  |  4  |   17  |  [175,112,46,92,92]  |
  4968  |                         R = R + 2;  |      2  |   890  |     92  |  4  |   17  |  [175,112,46,92,92]  |
  4972  |                         j = j + 1;  |         |   890  |     92  |  4  |   18  |  [175,112,46,92,92]  |
  4973  |              resetPlaceHolder_2();  |         |   890  |     92  |  4  |   18  |  [175,112,46,92,92]  |
  4979  |                         R = R + 2;  |      2  |   892  |     92  |  4  |   18  |  [175,112,46,92,92]  |
  4983  |                         j = j + 1;  |         |   892  |     92  |  4  |   19  |  [175,112,46,92,92]  |
  4984  |              resetPlaceHolder_2();  |         |   892  |     92  |  4  |   19  |  [175,112,46,92,92]  |
  4990  |                         R = R + 2;  |      2  |   894  |     92  |  4  |   19  |  [175,112,46,92,92]  |
  4994  |                         j = j + 1;  |         |   894  |     92  |  4  |   20  |  [175,112,46,92,92]  |
  4995  |              resetPlaceHolder_2();  |         |   894  |     92  |  4  |   20  |  [175,112,46,92,92]  |
  5001  |                         R = R + 2;  |      2  |   896  |     92  |  4  |   20  |  [175,112,46,92,92]  |
  5005  |                         j = j + 1;  |         |   896  |     92  |  4  |   21  |  [175,112,46,92,92]  |
  5006  |              resetPlaceHolder_2();  |         |   896  |     92  |  4  |   21  |  [175,112,46,92,92]  |
  5012  |                         R = R + 2;  |      2  |   898  |     92  |  4  |   21  |  [175,112,46,92,92]  |
  5016  |                         j = j + 1;  |         |   898  |     92  |  4  |   22  |  [175,112,46,92,92]  |
  5017  |              resetPlaceHolder_2();  |         |   898  |     92  |  4  |   22  |  [175,112,46,92,92]  |
  5023  |                         R = R + 2;  |      2  |   900  |     92  |  4  |   22  |  [175,112,46,92,92]  |
  5027  |                         j = j + 1;  |         |   900  |     92  |  4  |   23  |  [175,112,46,92,92]  |
  5028  |              resetPlaceHolder_2();  |         |   900  |     92  |  4  |   23  |  [175,112,46,92,92]  |
  5034  |                         R = R + 2;  |      2  |   902  |     92  |  4  |   23  |  [175,112,46,92,92]  |
  5038  |                         j = j + 1;  |         |   902  |     92  |  4  |   24  |  [175,112,46,92,92]  |
  5039  |              resetPlaceHolder_2();  |         |   902  |     92  |  4  |   24  |  [175,112,46,92,92]  |
  5045  |                         R = R + 2;  |      2  |   904  |     92  |  4  |   24  |  [175,112,46,92,92]  |
  5049  |                         j = j + 1;  |         |   904  |     92  |  4  |   25  |  [175,112,46,92,92]  |
  5050  |              resetPlaceHolder_2();  |         |   904  |     92  |  4  |   25  |  [175,112,46,92,92]  |
  5056  |                         R = R + 2;  |      2  |   906  |     92  |  4  |   25  |  [175,112,46,92,92]  |
  5060  |                         j = j + 1;  |         |   906  |     92  |  4  |   26  |  [175,112,46,92,92]  |
  5061  |              resetPlaceHolder_2();  |         |   906  |     92  |  4  |   26  |  [175,112,46,92,92]  |
  5067  |                         R = R + 2;  |      2  |   908  |     92  |  4  |   26  |  [175,112,46,92,92]  |
  5071  |                         j = j + 1;  |         |   908  |     92  |  4  |   27  |  [175,112,46,92,92]  |
  5072  |              resetPlaceHolder_2();  |         |   908  |     92  |  4  |   27  |  [175,112,46,92,92]  |
  5078  |                         R = R + 2;  |      2  |   910  |     92  |  4  |   27  |  [175,112,46,92,92]  |
  5082  |                         j = j + 1;  |         |   910  |     92  |  4  |   28  |  [175,112,46,92,92]  |
  5083  |              resetPlaceHolder_2();  |         |   910  |     92  |  4  |   28  |  [175,112,46,92,92]  |
  5089  |                         R = R + 2;  |      2  |   912  |     92  |  4  |   28  |  [175,112,46,92,92]  |
  5093  |                         j = j + 1;  |         |   912  |     92  |  4  |   29  |  [175,112,46,92,92]  |
  5094  |              resetPlaceHolder_2();  |         |   912  |     92  |  4  |   29  |  [175,112,46,92,92]  |
  5100  |                         R = R + 2;  |      2  |   914  |     92  |  4  |   29  |  [175,112,46,92,92]  |
  5104  |                         j = j + 1;  |         |   914  |     92  |  4  |   30  |  [175,112,46,92,92]  |
  5105  |              resetPlaceHolder_2();  |         |   914  |     92  |  4  |   30  |  [175,112,46,92,92]  |
  5111  |                         R = R + 2;  |      2  |   916  |     92  |  4  |   30  |  [175,112,46,92,92]  |
  5115  |                         j = j + 1;  |         |   916  |     92  |  4  |   31  |  [175,112,46,92,92]  |
  5116  |              resetPlaceHolder_2();  |         |   916  |     92  |  4  |   31  |  [175,112,46,92,92]  |
  5122  |                         R = R + 2;  |      2  |   918  |     92  |  4  |   31  |  [175,112,46,92,92]  |
  5126  |                         j = j + 1;  |         |   918  |     92  |  4  |   32  |  [175,112,46,92,92]  |
  5127  |              resetPlaceHolder_2();  |         |   918  |     92  |  4  |   32  |  [175,112,46,92,92]  |
  5133  |                         R = R + 2;  |      2  |   920  |     92  |  4  |   32  |  [175,112,46,92,92]  |
  5137  |                         j = j + 1;  |         |   920  |     92  |  4  |   33  |  [175,112,46,92,92]  |
  5138  |              resetPlaceHolder_2();  |         |   920  |     92  |  4  |   33  |  [175,112,46,92,92]  |
  5144  |                         R = R + 2;  |      2  |   922  |     92  |  4  |   33  |  [175,112,46,92,92]  |
  5148  |                         j = j + 1;  |         |   922  |     92  |  4  |   34  |  [175,112,46,92,92]  |
  5149  |              resetPlaceHolder_2();  |         |   922  |     92  |  4  |   34  |  [175,112,46,92,92]  |
  5155  |                         R = R + 2;  |      2  |   924  |     92  |  4  |   34  |  [175,112,46,92,92]  |
  5159  |                         j = j + 1;  |         |   924  |     92  |  4  |   35  |  [175,112,46,92,92]  |
  5160  |              resetPlaceHolder_2();  |         |   924  |     92  |  4  |   35  |  [175,112,46,92,92]  |
  5166  |                         R = R + 2;  |      2  |   926  |     92  |  4  |   35  |  [175,112,46,92,92]  |
  5170  |                         j = j + 1;  |         |   926  |     92  |  4  |   36  |  [175,112,46,92,92]  |
  5171  |              resetPlaceHolder_2();  |         |   926  |     92  |  4  |   36  |  [175,112,46,92,92]  |
  5177  |                         R = R + 2;  |      2  |   928  |     92  |  4  |   36  |  [175,112,46,92,92]  |
  5181  |                         j = j + 1;  |         |   928  |     92  |  4  |   37  |  [175,112,46,92,92]  |
  5182  |              resetPlaceHolder_2();  |         |   928  |     92  |  4  |   37  |  [175,112,46,92,92]  |
  5188  |                         R = R + 2;  |      2  |   930  |     92  |  4  |   37  |  [175,112,46,92,92]  |
  5192  |                         j = j + 1;  |         |   930  |     92  |  4  |   38  |  [175,112,46,92,92]  |
  5193  |              resetPlaceHolder_2();  |         |   930  |     92  |  4  |   38  |  [175,112,46,92,92]  |
  5199  |                         R = R + 2;  |      2  |   932  |     92  |  4  |   38  |  [175,112,46,92,92]  |
  5203  |                         j = j + 1;  |         |   932  |     92  |  4  |   39  |  [175,112,46,92,92]  |
  5204  |              resetPlaceHolder_2();  |         |   932  |     92  |  4  |   39  |  [175,112,46,92,92]  |
  5210  |                         R = R + 2;  |      2  |   934  |     92  |  4  |   39  |  [175,112,46,92,92]  |
  5214  |                         j = j + 1;  |         |   934  |     92  |  4  |   40  |  [175,112,46,92,92]  |
  5215  |              resetPlaceHolder_2();  |         |   934  |     92  |  4  |   40  |  [175,112,46,92,92]  |
  5221  |                         R = R + 2;  |      2  |   936  |     92  |  4  |   40  |  [175,112,46,92,92]  |
  5225  |                         j = j + 1;  |         |   936  |     92  |  4  |   41  |  [175,112,46,92,92]  |
  5226  |              resetPlaceHolder_2();  |         |   936  |     92  |  4  |   41  |  [175,112,46,92,92]  |
  5232  |                         R = R + 2;  |      2  |   938  |     92  |  4  |   41  |  [175,112,46,92,92]  |
  5236  |                         j = j + 1;  |         |   938  |     92  |  4  |   42  |  [175,112,46,92,92]  |
  5237  |              resetPlaceHolder_2();  |         |   938  |     92  |  4  |   42  |  [175,112,46,92,92]  |
  5243  |                         R = R + 2;  |      2  |   940  |     92  |  4  |   42  |  [175,112,46,92,92]  |
  5247  |                         j = j + 1;  |         |   940  |     92  |  4  |   43  |  [175,112,46,92,92]  |
  5248  |              resetPlaceHolder_2();  |         |   940  |     92  |  4  |   43  |  [175,112,46,92,92]  |
  5254  |                         R = R + 2;  |      2  |   942  |     92  |  4  |   43  |  [175,112,46,92,92]  |
  5258  |                         j = j + 1;  |         |   942  |     92  |  4  |   44  |  [175,112,46,92,92]  |
  5259  |              resetPlaceHolder_2();  |         |   942  |     92  |  4  |   44  |  [175,112,46,92,92]  |
  5265  |                         R = R + 2;  |      2  |   944  |     92  |  4  |   44  |  [175,112,46,92,92]  |
  5269  |                         j = j + 1;  |         |   944  |     92  |  4  |   45  |  [175,112,46,92,92]  |
  5270  |              resetPlaceHolder_2();  |         |   944  |     92  |  4  |   45  |  [175,112,46,92,92]  |
  5276  |                         R = R + 2;  |      2  |   946  |     92  |  4  |   45  |  [175,112,46,92,92]  |
  5280  |                         j = j + 1;  |         |   946  |     92  |  4  |   46  |  [175,112,46,92,92]  |
  5281  |              resetPlaceHolder_2();  |         |   946  |     92  |  4  |   46  |  [175,112,46,92,92]  |
  5287  |                         R = R + 2;  |      2  |   948  |     92  |  4  |   46  |  [175,112,46,92,92]  |
  5291  |                         j = j + 1;  |         |   948  |     92  |  4  |   47  |  [175,112,46,92,92]  |
  5292  |              resetPlaceHolder_2();  |         |   948  |     92  |  4  |   47  |  [175,112,46,92,92]  |
  5298  |                         R = R + 2;  |      2  |   950  |     92  |  4  |   47  |  [175,112,46,92,92]  |
  5302  |                         j = j + 1;  |         |   950  |     92  |  4  |   48  |  [175,112,46,92,92]  |
  5303  |              resetPlaceHolder_2();  |         |   950  |     92  |  4  |   48  |  [175,112,46,92,92]  |
  5309  |                         R = R + 2;  |      2  |   952  |     92  |  4  |   48  |  [175,112,46,92,92]  |
  5313  |                         j = j + 1;  |         |   952  |     92  |  4  |   49  |  [175,112,46,92,92]  |
  5314  |              resetPlaceHolder_2();  |         |   952  |     92  |  4  |   49  |  [175,112,46,92,92]  |
  5320  |                         R = R + 2;  |      2  |   954  |     92  |  4  |   49  |  [175,112,46,92,92]  |
  5324  |                         j = j + 1;  |         |   954  |     92  |  4  |   50  |  [175,112,46,92,92]  |
  5325  |              resetPlaceHolder_2();  |         |   954  |     92  |  4  |   50  |  [175,112,46,92,92]  |
  5331  |                         R = R + 2;  |      2  |   956  |     92  |  4  |   50  |  [175,112,46,92,92]  |
  5335  |                         j = j + 1;  |         |   956  |     92  |  4  |   51  |  [175,112,46,92,92]  |
  5336  |              resetPlaceHolder_2();  |         |   956  |     92  |  4  |   51  |  [175,112,46,92,92]  |
  5342  |                         R = R + 2;  |      2  |   958  |     92  |  4  |   51  |  [175,112,46,92,92]  |
  5346  |                         j = j + 1;  |         |   958  |     92  |  4  |   52  |  [175,112,46,92,92]  |
  5347  |              resetPlaceHolder_2();  |         |   958  |     92  |  4  |   52  |  [175,112,46,92,92]  |
  5353  |                         R = R + 2;  |      2  |   960  |     92  |  4  |   52  |  [175,112,46,92,92]  |
  5357  |                         j = j + 1;  |         |   960  |     92  |  4  |   53  |  [175,112,46,92,92]  |
  5358  |              resetPlaceHolder_2();  |         |   960  |     92  |  4  |   53  |  [175,112,46,92,92]  |
  5364  |                         R = R + 2;  |      2  |   962  |     92  |  4  |   53  |  [175,112,46,92,92]  |
  5368  |                         j = j + 1;  |         |   962  |     92  |  4  |   54  |  [175,112,46,92,92]  |
  5369  |              resetPlaceHolder_2();  |         |   962  |     92  |  4  |   54  |  [175,112,46,92,92]  |
  5375  |                         R = R + 2;  |      2  |   964  |     92  |  4  |   54  |  [175,112,46,92,92]  |
  5379  |                         j = j + 1;  |         |   964  |     92  |  4  |   55  |  [175,112,46,92,92]  |
  5380  |              resetPlaceHolder_2();  |         |   964  |     92  |  4  |   55  |  [175,112,46,92,92]  |
  5386  |                         R = R + 2;  |      2  |   966  |     92  |  4  |   55  |  [175,112,46,92,92]  |
  5390  |                         j = j + 1;  |         |   966  |     92  |  4  |   56  |  [175,112,46,92,92]  |
  5391  |              resetPlaceHolder_2();  |         |   966  |     92  |  4  |   56  |  [175,112,46,92,92]  |
  5397  |                         R = R + 2;  |      2  |   968  |     92  |  4  |   56  |  [175,112,46,92,92]  |
  5401  |                         j = j + 1;  |         |   968  |     92  |  4  |   57  |  [175,112,46,92,92]  |
  5402  |              resetPlaceHolder_2();  |         |   968  |     92  |  4  |   57  |  [175,112,46,92,92]  |
  5408  |                         R = R + 2;  |      2  |   970  |     92  |  4  |   57  |  [175,112,46,92,92]  |
  5412  |                         j = j + 1;  |         |   970  |     92  |  4  |   58  |  [175,112,46,92,92]  |
  5413  |              resetPlaceHolder_2();  |         |   970  |     92  |  4  |   58  |  [175,112,46,92,92]  |
  5419  |                         R = R + 2;  |      2  |   972  |     92  |  4  |   58  |  [175,112,46,92,92]  |
  5423  |                         j = j + 1;  |         |   972  |     92  |  4  |   59  |  [175,112,46,92,92]  |
  5424  |              resetPlaceHolder_2();  |         |   972  |     92  |  4  |   59  |  [175,112,46,92,92]  |
  5430  |                         R = R + 2;  |      2  |   974  |     92  |  4  |   59  |  [175,112,46,92,92]  |
  5434  |                         j = j + 1;  |         |   974  |     92  |  4  |   60  |  [175,112,46,92,92]  |
  5435  |              resetPlaceHolder_2();  |         |   974  |     92  |  4  |   60  |  [175,112,46,92,92]  |
  5441  |                         R = R + 2;  |      2  |   976  |     92  |  4  |   60  |  [175,112,46,92,92]  |
  5445  |                         j = j + 1;  |         |   976  |     92  |  4  |   61  |  [175,112,46,92,92]  |
  5446  |              resetPlaceHolder_2();  |         |   976  |     92  |  4  |   61  |  [175,112,46,92,92]  |
  5452  |                         R = R + 2;  |      2  |   978  |     92  |  4  |   61  |  [175,112,46,92,92]  |
  5456  |                         j = j + 1;  |         |   978  |     92  |  4  |   62  |  [175,112,46,92,92]  |
  5457  |              resetPlaceHolder_2();  |         |   978  |     92  |  4  |   62  |  [175,112,46,92,92]  |
  5463  |                         R = R + 2;  |      2  |   980  |     92  |  4  |   62  |  [175,112,46,92,92]  |
  5467  |                         j = j + 1;  |         |   980  |     92  |  4  |   63  |  [175,112,46,92,92]  |
  5468  |              resetPlaceHolder_2();  |         |   980  |     92  |  4  |   63  |  [175,112,46,92,92]  |
  5474  |                         R = R + 2;  |      2  |   982  |     92  |  4  |   63  |  [175,112,46,92,92]  |
  5478  |                         j = j + 1;  |         |   982  |     92  |  4  |   64  |  [175,112,46,92,92]  |
  5479  |              resetPlaceHolder_2();  |         |   982  |     92  |  4  |   64  |  [175,112,46,92,92]  |
  5485  |                         R = R + 2;  |      2  |   984  |     92  |  4  |   64  |  [175,112,46,92,92]  |
  5489  |                         j = j + 1;  |         |   984  |     92  |  4  |   65  |  [175,112,46,92,92]  |
  5490  |              resetPlaceHolder_2();  |         |   984  |     92  |  4  |   65  |  [175,112,46,92,92]  |
  5496  |                         R = R + 2;  |      2  |   986  |     92  |  4  |   65  |  [175,112,46,92,92]  |
  5500  |                         j = j + 1;  |         |   986  |     92  |  4  |   66  |  [175,112,46,92,92]  |
  5501  |              resetPlaceHolder_2();  |         |   986  |     92  |  4  |   66  |  [175,112,46,92,92]  |
  5507  |                         R = R + 2;  |      2  |   988  |     92  |  4  |   66  |  [175,112,46,92,92]  |
  5511  |                         j = j + 1;  |         |   988  |     92  |  4  |   67  |  [175,112,46,92,92]  |
  5512  |              resetPlaceHolder_2();  |         |   988  |     92  |  4  |   67  |  [175,112,46,92,92]  |
  5518  |                         R = R + 2;  |      2  |   990  |     92  |  4  |   67  |  [175,112,46,92,92]  |
  5522  |                         j = j + 1;  |         |   990  |     92  |  4  |   68  |  [175,112,46,92,92]  |
  5523  |              resetPlaceHolder_2();  |         |   990  |     92  |  4  |   68  |  [175,112,46,92,92]  |
  5529  |                         R = R + 2;  |      2  |   992  |     92  |  4  |   68  |  [175,112,46,92,92]  |
  5533  |                         j = j + 1;  |         |   992  |     92  |  4  |   69  |  [175,112,46,92,92]  |
  5534  |              resetPlaceHolder_2();  |         |   992  |     92  |  4  |   69  |  [175,112,46,92,92]  |
  5540  |                         R = R + 2;  |      2  |   994  |     92  |  4  |   69  |  [175,112,46,92,92]  |
  5544  |                         j = j + 1;  |         |   994  |     92  |  4  |   70  |  [175,112,46,92,92]  |
  5545  |              resetPlaceHolder_2();  |         |   994  |     92  |  4  |   70  |  [175,112,46,92,92]  |
  5551  |                         R = R + 2;  |      2  |   996  |     92  |  4  |   70  |  [175,112,46,92,92]  |
  5555  |                         j = j + 1;  |         |   996  |     92  |  4  |   71  |  [175,112,46,92,92]  |
  5556  |              resetPlaceHolder_2();  |         |   996  |     92  |  4  |   71  |  [175,112,46,92,92]  |
  5562  |                         R = R + 2;  |      2  |   998  |     92  |  4  |   71  |  [175,112,46,92,92]  |
  5566  |                         j = j + 1;  |         |   998  |     92  |  4  |   72  |  [175,112,46,92,92]  |
  5567  |              resetPlaceHolder_2();  |         |   998  |     92  |  4  |   72  |  [175,112,46,92,92]  |
  5573  |                         R = R + 2;  |      2  |  1000  |     92  |  4  |   72  |  [175,112,46,92,92]  |
  5577  |                         j = j + 1;  |         |  1000  |     92  |  4  |   73  |  [175,112,46,92,92]  |
  5578  |              resetPlaceHolder_2();  |         |  1000  |     92  |  4  |   73  |  [175,112,46,92,92]  |
  5584  |                         R = R + 2;  |      2  |  1002  |     92  |  4  |   73  |  [175,112,46,92,92]  |
  5588  |                         j = j + 1;  |         |  1002  |     92  |  4  |   74  |  [175,112,46,92,92]  |
  5589  |              resetPlaceHolder_2();  |         |  1002  |     92  |  4  |   74  |  [175,112,46,92,92]  |
  5595  |                         R = R + 2;  |      2  |  1004  |     92  |  4  |   74  |  [175,112,46,92,92]  |
  5599  |                         j = j + 1;  |         |  1004  |     92  |  4  |   75  |  [175,112,46,92,92]  |
  5600  |              resetPlaceHolder_2();  |         |  1004  |     92  |  4  |   75  |  [175,112,46,92,92]  |
  5606  |                         R = R + 2;  |      2  |  1006  |     92  |  4  |   75  |  [175,112,46,92,92]  |
  5610  |                         j = j + 1;  |         |  1006  |     92  |  4  |   76  |  [175,112,46,92,92]  |
  5611  |              resetPlaceHolder_2();  |         |  1006  |     92  |  4  |   76  |  [175,112,46,92,92]  |
  5617  |                         R = R + 2;  |      2  |  1008  |     92  |  4  |   76  |  [175,112,46,92,92]  |
  5621  |                         j = j + 1;  |         |  1008  |     92  |  4  |   77  |  [175,112,46,92,92]  |
  5622  |              resetPlaceHolder_2();  |         |  1008  |     92  |  4  |   77  |  [175,112,46,92,92]  |
  5628  |                         R = R + 2;  |      2  |  1010  |     92  |  4  |   77  |  [175,112,46,92,92]  |
  5632  |                         j = j + 1;  |         |  1010  |     92  |  4  |   78  |  [175,112,46,92,92]  |
  5633  |              resetPlaceHolder_2();  |         |  1010  |     92  |  4  |   78  |  [175,112,46,92,92]  |
  5639  |                         R = R + 2;  |      2  |  1012  |     92  |  4  |   78  |  [175,112,46,92,92]  |
  5643  |                         j = j + 1;  |         |  1012  |     92  |  4  |   79  |  [175,112,46,92,92]  |
  5644  |              resetPlaceHolder_2();  |         |  1012  |     92  |  4  |   79  |  [175,112,46,92,92]  |
  5650  |                         R = R + 2;  |      2  |  1014  |     92  |  4  |   79  |  [175,112,46,92,92]  |
  5654  |                         j = j + 1;  |         |  1014  |     92  |  4  |   80  |  [175,112,46,92,92]  |
  5655  |              resetPlaceHolder_2();  |         |  1014  |     92  |  4  |   80  |  [175,112,46,92,92]  |
  5661  |                         R = R + 2;  |      2  |  1016  |     92  |  4  |   80  |  [175,112,46,92,92]  |
  5665  |                         j = j + 1;  |         |  1016  |     92  |  4  |   81  |  [175,112,46,92,92]  |
  5666  |              resetPlaceHolder_2();  |         |  1016  |     92  |  4  |   81  |  [175,112,46,92,92]  |
  5672  |                         R = R + 2;  |      2  |  1018  |     92  |  4  |   81  |  [175,112,46,92,92]  |
  5676  |                         j = j + 1;  |         |  1018  |     92  |  4  |   82  |  [175,112,46,92,92]  |
  5677  |              resetPlaceHolder_2();  |         |  1018  |     92  |  4  |   82  |  [175,112,46,92,92]  |
  5683  |                         R = R + 2;  |      2  |  1020  |     92  |  4  |   82  |  [175,112,46,92,92]  |
  5687  |                         j = j + 1;  |         |  1020  |     92  |  4  |   83  |  [175,112,46,92,92]  |
  5688  |              resetPlaceHolder_2();  |         |  1020  |     92  |  4  |   83  |  [175,112,46,92,92]  |
  5694  |                         R = R + 2;  |      2  |  1022  |     92  |  4  |   83  |  [175,112,46,92,92]  |
  5698  |                         j = j + 1;  |         |  1022  |     92  |  4  |   84  |  [175,112,46,92,92]  |
  5699  |              resetPlaceHolder_2();  |         |  1022  |     92  |  4  |   84  |  [175,112,46,92,92]  |
  5705  |                         R = R + 2;  |      2  |  1024  |     92  |  4  |   84  |  [175,112,46,92,92]  |
  5709  |                         j = j + 1;  |         |  1024  |     92  |  4  |   85  |  [175,112,46,92,92]  |
  5710  |              resetPlaceHolder_2();  |         |  1024  |     92  |  4  |   85  |  [175,112,46,92,92]  |
  5716  |                         R = R + 2;  |      2  |  1026  |     92  |  4  |   85  |  [175,112,46,92,92]  |
  5720  |                         j = j + 1;  |         |  1026  |     92  |  4  |   86  |  [175,112,46,92,92]  |
  5721  |              resetPlaceHolder_2();  |         |  1026  |     92  |  4  |   86  |  [175,112,46,92,92]  |
  5727  |                         R = R + 2;  |      2  |  1028  |     92  |  4  |   86  |  [175,112,46,92,92]  |
  5731  |                         j = j + 1;  |         |  1028  |     92  |  4  |   87  |  [175,112,46,92,92]  |
  5732  |              resetPlaceHolder_2();  |         |  1028  |     92  |  4  |   87  |  [175,112,46,92,92]  |
  5738  |                         R = R + 2;  |      2  |  1030  |     92  |  4  |   87  |  [175,112,46,92,92]  |
  5742  |                         j = j + 1;  |         |  1030  |     92  |  4  |   88  |  [175,112,46,92,92]  |
  5743  |              resetPlaceHolder_2();  |         |  1030  |     92  |  4  |   88  |  [175,112,46,92,92]  |
  5749  |                         R = R + 2;  |      2  |  1032  |     92  |  4  |   88  |  [175,112,46,92,92]  |
  5753  |                         j = j + 1;  |         |  1032  |     92  |  4  |   89  |  [175,112,46,92,92]  |
  5754  |              resetPlaceHolder_2();  |         |  1032  |     92  |  4  |   89  |  [175,112,46,92,92]  |
  5760  |                         R = R + 2;  |      2  |  1034  |     92  |  4  |   89  |  [175,112,46,92,92]  |
  5764  |                         j = j + 1;  |         |  1034  |     92  |  4  |   90  |  [175,112,46,92,92]  |
  5765  |              resetPlaceHolder_2();  |         |  1034  |     92  |  4  |   90  |  [175,112,46,92,92]  |
  5771  |                         R = R + 2;  |      2  |  1036  |     92  |  4  |   90  |  [175,112,46,92,92]  |
  5775  |                         j = j + 1;  |         |  1036  |     92  |  4  |   91  |  [175,112,46,92,92]  |
  5776  |              resetPlaceHolder_2();  |         |  1036  |     92  |  4  |   91  |  [175,112,46,92,92]  |
  5782  |                         R = R + 2;  |      2  |  1038  |     92  |  4  |   91  |  [175,112,46,92,92]  |
  5786  |                         j = j + 1;  |         |  1038  |     92  |  4  |   92  |  [175,112,46,92,92]  |
  5787  |              resetPlaceHolder_2();  |         |  1038  |     92  |  4  |   92  |  [175,112,46,92,92]  |
  5793  |                         R = R + 1;  |      1  |  1039  |     92  |  4  |   92  |  [175,112,46,92,92]  |
  5797  |                         i = i + 1;  |         |  1039  |     92  |  5  |   92  |  [175,112,46,92,92]  |
  5798  |              resetPlaceHolder_1();  |         |  1039  |     92  |  5  |   92  |  [175,112,46,92,92]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [4201, 2612, 2744, 1823, 3008, 1559, 4729, 3434, 2876, 5320, 3698, 1031, 2480, 3566, 1295, 481, 2117, 217, 4311, 2381, 2062, 2953, 2590, 3959, 5793, 2282, 5265, 2854, 5529, 4487, 4234, 3794, 4575, 1735, 1867, 4564, 4058, 3313, 5782, 3577, 4762, 404, 3335, 1196, 4047, 1746, 4792, 2216, 3236, 2348, 2491, 3915, 2227, 5518, 4803, 4124, 5056, 3140, 1724, 4322, 1482, 5342, 52, 3195, 1985, 184, 2667, 2755, 5188, 3280, 1922, 2403, 5199, 4179, 5397, 228, 5727, 448, 316, 5617, 261, 3258, 4432, 2007, 4696, 492, 756, 789, 4443, 591, 1911, 4454, 2469, 646, 4847, 3621, 514, 1383, 5650, 1020, 3357, 1581, 2777, 2073, 5045, 602, 2964, 4718, 4751, 5738, 5353, 4935, 5210, 877, 734, 5375, 866, 1119, 1394, 1526, 3676, 4924, 4825, 998, 2799, 1405, 4707, 3588, 2392, 74, 2205, 3184, 206, 5298, 3151, 5012, 1691, 1438, 3720, 85, 1306, 4531, 5034, 5562, 5540, 1768, 1636, 5122, 1163, 1900, 910, 2601, 3827, 2733, 2249, 778, 1042, 349, 1570, 1174, 3610, 4344, 4091, 3816, 2150, 5507, 2986, 2414, 4836, 3948, 3269, 4608, 3750, 5177, 4553, 5551, 4979, 4740, 3926, 4080, 3445, 3731, 1350, 3467, 1592, 4957, 5221, 1328, 2359, 1064, 1856, 1878, 3632, 1493, 4333, 5166, 1361, 5694, 5496, 5705, 1075, 4421, 2172, 1207, 3643, 1889, 3555, 4814, 679, 547, 96, 393, 3654, 701, 2304, 5639, 1974, 173, 3390, 3937, 129, 5683, 569, 3247, 4135, 2766, 4902, 41, 3074, 4069, 371, 3162, 503, 4223, 2370, 2634, 2788, 1086, 3225, 2546, 1779, 360, 4212, 3173, 4476, 921, 657, 558, 5419, 1515, 4036, 2645, 1185, 1996, 888, 2909, 965, 1251, 4685, 1680, 3871, 1273, 4256, 1548, 745, 2524, 2260, 5474, 5067, 2568, 4465, 118, 4946, 3599, 2161, 1669, 3118, 382, 2029, 2326, 2293, 5595, 5331, 3783, 2557, 2425, 3302, 4245, 4498, 2084, 1933, 1603, 4586, 1801, 3500, 4300, 4509, 4388, 3456, 811, 5584, 1471, 1339, 140, 4652, 1460, 943, 668, 932, 3893, 4990, 5254, 3838, 2051, 3423, 2139, 3687, 2931, 2535, 5089, 5661, 5463, 3522, 426, 162, 2271, 3206, 3981, 4113, 4355, 5133, 4168, 3849, 2942, 2513, 1845, 5452, 525, 712, 5716, 580, 855, 690, 63, 5111, 4366, 3904, 327, 1647, 954, 3129, 2678, 4641, 2821, 4377, 4630, 2689, 2656, 3019, 1053, 1790, 4190, 3063, 2920, 2700, 4003, 5276, 1262, 2337, 2128, 5309, 1317, 338, 3544, 470, 1658, 5001, 3412, 4781, 1130, 1218, 3041, 3107, 3970, 5628, 1141, 1702, 613, 1284, 2975, 1955, 2843, 2711, 2579, 1427, 1504, 5364, 2722, 4267, 1372, 5100, 1240, 2865, 5771, 250, 3478, 4289, 4278, 2458, 3401, 5749, 5386, 1834, 3533, 976, 5573, 2194, 2997, 4102, 3346, 844, 5485, 1108, 3665, 4913, 3709, 4542, 5243, 3368, 3085, 2447, 3324, 5408, 5023, 2183, 272, 5144, 899, 2095, 5672, 2315, 4869, 2623, 3761, 4025, 536, 4619, 5287, 1614, 800, 3992, 3379, 151, 4880, 4014, 4399, 3860, 3511, 5606, 3291, 833, 1097, 1229, 30, 3882, 5232, 1625, 5430, 5078, 1757, 4663, 4597, 5760, 305, 4146, 107, 239, 294, 195, 4968, 437, 4157, 767, 5441, 3030, 635, 2040, 3805, 283, 415, 624, 2502, 987, 2810, 1152, 2898, 1537, 3772, 459, 3489, 723, 4410, 822, 1713, 4674, 5155, 4520, 1944, 4891, 1009, 3096, 2887, 2018, 2832, 2436, 2238, 1416, 3052, 1449, 1812, 2106, 4858]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [4201, 2612, 2744, 1823, 3008, 1559, 4729, 3434, 2876, 5320, 3698, 1031, 2480, 3566, 1295, 481, 2117, 217, 4311, 2381, 2062, 2953, 2590, 3959, 5793, 2282, 5265, 2854, 5529, 4487, 4234, 3794, 4575, 1735, 1867, 4564, 4058, 3313, 5782, 3577, 4762, 404, 3335, 1196, 4047, 1746, 4792, 2216, 3236, 2348, 2491, 3915, 2227, 5518, 4803, 4124, 5056, 3140, 1724, 4322, 1482, 5342, 52, 3195, 1985, 184, 2667, 2755, 5188, 3280, 1922, 2403, 5199, 4179, 5397, 228, 5727, 448, 316, 5617, 261, 3258, 4432, 2007, 4696, 492, 756, 789, 4443, 591, 1911, 4454, 2469, 646, 4847, 3621, 514, 1383, 5650, 1020, 3357, 1581, 2777, 2073, 5045, 602, 2964, 4718, 4751, 5738, 5353, 4935, 5210, 877, 734, 5375, 866, 1119, 1394, 1526, 3676, 4924, 4825, 998, 2799, 1405, 4707, 3588, 2392, 74, 2205, 3184, 206, 5298, 3151, 5012, 1691, 1438, 3720, 85, 1306, 4531, 5034, 5562, 5540, 1768, 1636, 5122, 1163, 1900, 910, 2601, 3827, 2733, 2249, 778, 1042, 349, 1570, 1174, 3610, 4344, 4091, 3816, 2150, 5507, 2986, 2414, 4836, 3948, 3269, 4608, 3750, 5177, 4553, 5551, 4979, 4740, 3926, 4080, 3445, 3731, 1350, 3467, 1592, 4957, 5221, 1328, 2359, 1064, 1856, 1878, 3632, 1493, 4333, 5166, 1361, 5694, 5496, 5705, 1075, 4421, 2172, 1207, 3643, 1889, 3555, 4814, 679, 547, 96, 393, 3654, 701, 2304, 5639, 1974, 173, 3390, 3937, 129, 5683, 569, 3247, 4135, 2766, 4902, 41, 3074, 4069, 371, 3162, 503, 4223, 2370, 2634, 2788, 1086, 3225, 2546, 1779, 360, 4212, 3173, 4476, 921, 657, 558, 5419, 1515, 4036, 2645, 1185, 1996, 888, 2909, 965, 1251, 4685, 1680, 3871, 1273, 4256, 1548, 745, 2524, 2260, 5474, 5067, 2568, 4465, 118, 4946, 3599, 2161, 1669, 3118, 382, 2029, 2326, 2293, 5595, 5331, 3783, 2557, 2425, 3302, 4245, 4498, 2084, 1933, 1603, 4586, 1801, 3500, 4300, 4509, 4388, 3456, 811, 5584, 1471, 1339, 140, 4652, 1460, 943, 668, 932, 3893, 4990, 5254, 3838, 2051, 3423, 2139, 3687, 2931, 2535, 5089, 5661, 5463, 3522, 426, 162, 2271, 3206, 3981, 4113, 4355, 5133, 4168, 3849, 2942, 2513, 1845, 5452, 525, 712, 5716, 580, 855, 690, 63, 5111, 4366, 3904, 327, 1647, 954, 3129, 2678, 4641, 2821, 4377, 4630, 2689, 2656, 3019, 1053, 1790, 4190, 3063, 2920, 2700, 4003, 5276, 1262, 2337, 2128, 5309, 1317, 338, 3544, 470, 1658, 5001, 3412, 4781, 1130, 1218, 3041, 3107, 3970, 5628, 1141, 1702, 613, 1284, 2975, 1955, 2843, 2711, 2579, 1427, 1504, 5364, 2722, 4267, 1372, 5100, 1240, 2865, 5771, 250, 3478, 4289, 4278, 2458, 3401, 5749, 5386, 1834, 3533, 976, 5573, 2194, 2997, 4102, 3346, 844, 5485, 1108, 3665, 4913, 3709, 4542, 5243, 3368, 3085, 2447, 3324, 5408, 5023, 2183, 272, 5144, 899, 2095, 5672, 2315, 4869, 2623, 3761, 4025, 536, 4619, 5287, 1614, 800, 3992, 3379, 151, 4880, 4014, 4399, 3860, 3511, 5606, 3291, 833, 1097, 1229, 30, 3882, 5232, 1625, 5430, 5078, 1757, 4663, 4597, 5760, 305, 4146, 107, 239, 294, 195, 4968, 437, 4157, 767, 5441, 3030, 635, 2040, 3805, 283, 415, 624, 2502, 987, 2810, 1152, 2898, 1537, 3772, 459, 3489, 723, 4410, 822, 1713, 4674, 5155, 4520, 1944, 4891, 1009, 3096, 2887, 2018, 2832, 2436, 2238, 1416, 3052, 1449, 1812, 2106, 4858]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [4201, 2612, 2744, 1823, 3008, 1559, 4729, 3434, 2876, 5320, 3698, 1031, 2480, 3566, 1295, 481, 2117, 217, 4311, 2381, 2062, 2953, 2590, 3959, 5793, 2282, 5265, 2854, 5529, 4487, 4234, 3794, 4575, 1735, 1867, 4564, 4058, 3313, 5782, 3577, 4762, 404, 3335, 1196, 4047, 1746, 4792, 2216, 3236, 2348, 2491, 3915, 2227, 5518, 4803, 4124, 5056, 3140, 1724, 4322, 1482, 5342, 52, 3195, 1985, 184, 2667, 2755, 5188, 3280, 1922, 2403, 5199, 4179, 5397, 228, 5727, 448, 316, 5617, 261, 3258, 4432, 2007, 4696, 492, 756, 789, 4443, 591, 1911, 4454, 2469, 646, 4847, 3621, 514, 1383, 5650, 1020, 3357, 1581, 2777, 2073, 5045, 602, 2964, 4718, 4751, 5738, 5353, 4935, 5210, 877, 734, 5375, 866, 1119, 1394, 1526, 3676, 4924, 4825, 998, 2799, 1405, 4707, 3588, 2392, 74, 2205, 3184, 206, 5298, 3151, 5012, 1691, 1438, 3720, 85, 1306, 4531, 5034, 5562, 5540, 1768, 1636, 5122, 1163, 1900, 910, 2601, 3827, 2733, 2249, 778, 1042, 349, 1570, 1174, 3610, 4344, 4091, 3816, 2150, 5507, 2986, 2414, 4836, 3948, 3269, 4608, 3750, 5177, 4553, 5551, 4979, 4740, 3926, 4080, 3445, 3731, 1350, 3467, 1592, 4957, 5221, 1328, 2359, 1064, 1856, 1878, 3632, 1493, 4333, 5166, 1361, 5694, 5496, 5705, 1075, 4421, 2172, 1207, 3643, 1889, 3555, 4814, 679, 547, 96, 393, 3654, 701, 2304, 5639, 1974, 173, 3390, 3937, 129, 5683, 569, 3247, 4135, 2766, 4902, 41, 3074, 4069, 371, 3162, 503, 4223, 2370, 2634, 2788, 1086, 3225, 2546, 1779, 360, 4212, 3173, 4476, 921, 657, 558, 5419, 1515, 4036, 2645, 1185, 1996, 888, 2909, 965, 1251, 4685, 1680, 3871, 1273, 4256, 1548, 745, 2524, 2260, 5474, 5067, 2568, 4465, 118, 4946, 3599, 2161, 1669, 3118, 382, 2029, 2326, 2293, 5595, 5331, 3783, 2557, 2425, 3302, 4245, 4498, 2084, 1933, 1603, 4586, 1801, 3500, 4300, 4509, 4388, 3456, 811, 5584, 1471, 1339, 140, 4652, 1460, 943, 668, 932, 3893, 4990, 5254, 3838, 2051, 3423, 2139, 3687, 2931, 2535, 5089, 5661, 5463, 3522, 426, 162, 2271, 3206, 3981, 4113, 4355, 5133, 4168, 3849, 2942, 2513, 1845, 5452, 525, 712, 5716, 580, 855, 690, 63, 5111, 4366, 3904, 327, 1647, 954, 3129, 2678, 4641, 2821, 4377, 4630, 2689, 2656, 3019, 1053, 1790, 4190, 3063, 2920, 2700, 4003, 5276, 1262, 2337, 2128, 5309, 1317, 338, 3544, 470, 1658, 5001, 3412, 4781, 1130, 1218, 3041, 3107, 3970, 5628, 1141, 1702, 613, 1284, 2975, 1955, 2843, 2711, 2579, 1427, 1504, 5364, 2722, 4267, 1372, 5100, 1240, 2865, 5771, 250, 3478, 4289, 4278, 2458, 3401, 5749, 5386, 1834, 3533, 976, 5573, 2194, 2997, 4102, 3346, 844, 5485, 1108, 3665, 4913, 3709, 4542, 5243, 3368, 3085, 2447, 3324, 5408, 5023, 2183, 272, 5144, 899, 2095, 5672, 2315, 4869, 2623, 3761, 4025, 536, 4619, 5287, 1614, 800, 3992, 3379, 151, 4880, 4014, 4399, 3860, 3511, 5606, 3291, 833, 1097, 1229, 30, 3882, 5232, 1625, 5430, 5078, 1757, 4663, 4597, 5760, 305, 4146, 107, 239, 294, 195, 4968, 437, 4157, 767, 5441, 3030, 635, 2040, 3805, 283, 415, 624, 2502, 987, 2810, 1152, 2898, 1537, 3772, 459, 3489, 723, 4410, 822, 1713, 4674, 5155, 4520, 1944, 4891, 1009, 3096, 2887, 2018, 2832, 2436, 2238, 1416, 3052, 1449, 1812, 2106, 4858]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1020,1031,1042,1053,1064,1075,1086,1097,1108,1119,1130,1141,1152,1163,1174,1185,1196,1207,1218,1229,1240,1251,1262,1273,1284,1295,1306,1317,1328,1339,1350,1361,1372,1383,1394,1405,1416,1427,1438,1449,1460,1471,1482,1493,1504,1515,1526,1537,1548,1559,1570,1581,1592,1603,1614,1625,1636,1647,1658,1669,1680,1691,1702,1713,1724,1735,1746,1757,1768,1779,1790,1801,1812,1823,1834,1845,1856,1867,1878,1889,1900,1911,1922,1933,1944,1955,1974,1985,1996,2007,2018,2029,2040,2051,2062,2073,2084,2095,2106,2117,2128,2139,2150,2161,2172,2183,2194,2205,2216,2227,2238,2249,2260,2271,2282,2293,2304,2315,2326,2337,2348,2359,2370,2381,2392,2403,2414,2425,2436,2447,2458,2469,2480,2491,2502,2513,2524,2535,2546,2557,2568,2579,2590,2601,2612,2623,2634,2645,2656,2667,2678,2689,2700,2711,2722,2733,2744,2755,2766,2777,2788,2799,2810,2821,2832,2843,2854,2865,2876,2887,2898,2909,2920,2931,2942,2953,2964,2975,2986,2997,3008,3019,3030,3041,3052,3063,3074,3085,3096,3107,3118,3129,3140,3151,3162,3173,3184,3195,3206,3225,3236,3247,3258,3269,3280,3291,3302,3313,3324,3335,3346,3357,3368,3379,3390,3401,3412,3423,3434,3445,3456,3467,3478,3489,3500,3511,3522,3533,3544,3555,3566,3577,3588,3599,3610,3621,3632,3643,3654,3665,3676,3687,3698,3709,3720,3731,3750,3761,3772,3783,3794,3805,3816,3827,3838,3849,3860,3871,3882,3893,3904,3915,3926,3937,3948,3959,3970,3981,3992,4003,4014,4025,4036,4047,4058,4069,4080,4091,4102,4113,4124,4135,4146,4157,4168,4179,4190,4201,4212,4223,4234,4245,4256,4267,4278,4289,4300,4311,4322,4333,4344,4355,4366,4377,4388,4399,4410,4421,4432,4443,4454,4465,4476,4487,4498,4509,4520,4531,4542,4553,4564,4575,4586,4597,4608,4619,4630,4641,4652,4663,4674,4685,4696,4707,4718,4729,4740,4751,4762,4781,4792,4803,4814,4825,4836,4847,4858,4869,4880,4891,4902,4913,4924,4935,4946,4957,4968,4979,4990,5001,5012,5023,5034,5045,5056,5067,5078,5089,5100,5111,5122,5133,5144,5155,5166,5177,5188,5199,5210,5221,5232,5243,5254,5265,5276,5287,5298,5309,5320,5331,5342,5353,5364,5375,5386,5397,5408,5419,5430,5441,5452,5463,5474,5485,5496,5507,5518,5529,5540,5551,5562,5573,5584,5595,5606,5617,5628,5639,5650,5661,5672,5683,5694,5705,5716,5727,5738,5749,5760,5771,5782,5793}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 2;  |      2  |                         0  |
  1014  |  resetPlaceHolder_2();  |         |                            |
  1020  |             R = R + 2;  |      2  |                         0  |
  1025  |  resetPlaceHolder_2();  |         |                            |
  1031  |             R = R + 2;  |      2  |                         0  |
  1036  |  resetPlaceHolder_2();  |         |                            |
  1042  |             R = R + 2;  |      2  |                         0  |
  1047  |  resetPlaceHolder_2();  |         |                            |
  1053  |             R = R + 2;  |      2  |                         0  |
  1058  |  resetPlaceHolder_2();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1069  |  resetPlaceHolder_2();  |         |                            |
  1075  |             R = R + 2;  |      2  |                         0  |
  1080  |  resetPlaceHolder_2();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1091  |  resetPlaceHolder_2();  |         |                            |
  1097  |             R = R + 2;  |      2  |                         0  |
  1102  |  resetPlaceHolder_2();  |         |                            |
  1108  |             R = R + 2;  |      2  |                         0  |
  1113  |  resetPlaceHolder_2();  |         |                            |
  1119  |             R = R + 2;  |      2  |                         0  |
  1124  |  resetPlaceHolder_2();  |         |                            |
  1130  |             R = R + 2;  |      2  |                         0  |
  1135  |  resetPlaceHolder_2();  |         |                            |
  1141  |             R = R + 2;  |      2  |                         0  |
  1146  |  resetPlaceHolder_2();  |         |                            |
  1152  |             R = R + 2;  |      2  |                         0  |
  1157  |  resetPlaceHolder_2();  |         |                            |
  1163  |             R = R + 2;  |      2  |                         0  |
  1168  |  resetPlaceHolder_2();  |         |                            |
  1174  |             R = R + 2;  |      2  |                         0  |
  1179  |  resetPlaceHolder_2();  |         |                            |
  1185  |             R = R + 2;  |      2  |                         0  |
  1190  |  resetPlaceHolder_2();  |         |                            |
  1196  |             R = R + 2;  |      2  |                         0  |
  1201  |  resetPlaceHolder_2();  |         |                            |
  1207  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_2();  |         |                            |
  1218  |             R = R + 2;  |      2  |                         0  |
  1223  |  resetPlaceHolder_2();  |         |                            |
  1229  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_2();  |         |                            |
  1240  |             R = R + 2;  |      2  |                         0  |
  1245  |  resetPlaceHolder_2();  |         |                            |
  1251  |             R = R + 2;  |      2  |                         0  |
  1256  |  resetPlaceHolder_2();  |         |                            |
  1262  |             R = R + 2;  |      2  |                         0  |
  1267  |  resetPlaceHolder_2();  |         |                            |
  1273  |             R = R + 2;  |      2  |                         0  |
  1278  |  resetPlaceHolder_2();  |         |                            |
  1284  |             R = R + 2;  |      2  |                         0  |
  1289  |  resetPlaceHolder_2();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1300  |  resetPlaceHolder_2();  |         |                            |
  1306  |             R = R + 2;  |      2  |                         0  |
  1311  |  resetPlaceHolder_2();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1322  |  resetPlaceHolder_2();  |         |                            |
  1328  |             R = R + 2;  |      2  |                         0  |
  1333  |  resetPlaceHolder_2();  |         |                            |
  1339  |             R = R + 2;  |      2  |                         0  |
  1344  |  resetPlaceHolder_2();  |         |                            |
  1350  |             R = R + 2;  |      2  |                         0  |
  1355  |  resetPlaceHolder_2();  |         |                            |
  1361  |             R = R + 2;  |      2  |                         0  |
  1366  |  resetPlaceHolder_2();  |         |                            |
  1372  |             R = R + 2;  |      2  |                         0  |
  1377  |  resetPlaceHolder_2();  |         |                            |
  1383  |             R = R + 2;  |      2  |                         0  |
  1388  |  resetPlaceHolder_2();  |         |                            |
  1394  |             R = R + 2;  |      2  |                         0  |
  1399  |  resetPlaceHolder_2();  |         |                            |
  1405  |             R = R + 2;  |      2  |                         0  |
  1410  |  resetPlaceHolder_2();  |         |                            |
  1416  |             R = R + 2;  |      2  |                         0  |
  1421  |  resetPlaceHolder_2();  |         |                            |
  1427  |             R = R + 2;  |      2  |                         0  |
  1432  |  resetPlaceHolder_2();  |         |                            |
  1438  |             R = R + 2;  |      2  |                         0  |
  1443  |  resetPlaceHolder_2();  |         |                            |
  1449  |             R = R + 2;  |      2  |                         0  |
  1454  |  resetPlaceHolder_2();  |         |                            |
  1460  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_2();  |         |                            |
  1471  |             R = R + 2;  |      2  |                         0  |
  1476  |  resetPlaceHolder_2();  |         |                            |
  1482  |             R = R + 2;  |      2  |                         0  |
  1487  |  resetPlaceHolder_2();  |         |                            |
  1493  |             R = R + 2;  |      2  |                         0  |
  1498  |  resetPlaceHolder_2();  |         |                            |
  1504  |             R = R + 2;  |      2  |                         0  |
  1509  |  resetPlaceHolder_2();  |         |                            |
  1515  |             R = R + 2;  |      2  |                         0  |
  1520  |  resetPlaceHolder_2();  |         |                            |
  1526  |             R = R + 2;  |      2  |                         0  |
  1531  |  resetPlaceHolder_2();  |         |                            |
  1537  |             R = R + 2;  |      2  |                         0  |
  1542  |  resetPlaceHolder_2();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1553  |  resetPlaceHolder_2();  |         |                            |
  1559  |             R = R + 2;  |      2  |                         0  |
  1564  |  resetPlaceHolder_2();  |         |                            |
  1570  |             R = R + 2;  |      2  |                         0  |
  1575  |  resetPlaceHolder_2();  |         |                            |
  1581  |             R = R + 2;  |      2  |                         0  |
  1586  |  resetPlaceHolder_2();  |         |                            |
  1592  |             R = R + 2;  |      2  |                         0  |
  1597  |  resetPlaceHolder_2();  |         |                            |
  1603  |             R = R + 2;  |      2  |                         0  |
  1608  |  resetPlaceHolder_2();  |         |                            |
  1614  |             R = R + 2;  |      2  |                         0  |
  1619  |  resetPlaceHolder_2();  |         |                            |
  1625  |             R = R + 2;  |      2  |                         0  |
  1630  |  resetPlaceHolder_2();  |         |                            |
  1636  |             R = R + 2;  |      2  |                         0  |
  1641  |  resetPlaceHolder_2();  |         |                            |
  1647  |             R = R + 2;  |      2  |                         0  |
  1652  |  resetPlaceHolder_2();  |         |                            |
  1658  |             R = R + 2;  |      2  |                         0  |
  1663  |  resetPlaceHolder_2();  |         |                            |
  1669  |             R = R + 2;  |      2  |                         0  |
  1674  |  resetPlaceHolder_2();  |         |                            |
  1680  |             R = R + 2;  |      2  |                         0  |
  1685  |  resetPlaceHolder_2();  |         |                            |
  1691  |             R = R + 2;  |      2  |                         0  |
  1696  |  resetPlaceHolder_2();  |         |                            |
  1702  |             R = R + 2;  |      2  |                         0  |
  1707  |  resetPlaceHolder_2();  |         |                            |
  1713  |             R = R + 2;  |      2  |                         0  |
  1718  |  resetPlaceHolder_2();  |         |                            |
  1724  |             R = R + 2;  |      2  |                         0  |
  1729  |  resetPlaceHolder_2();  |         |                            |
  1735  |             R = R + 2;  |      2  |                         0  |
  1740  |  resetPlaceHolder_2();  |         |                            |
  1746  |             R = R + 2;  |      2  |                         0  |
  1751  |  resetPlaceHolder_2();  |         |                            |
  1757  |             R = R + 2;  |      2  |                         0  |
  1762  |  resetPlaceHolder_2();  |         |                            |
  1768  |             R = R + 2;  |      2  |                         0  |
  1773  |  resetPlaceHolder_2();  |         |                            |
  1779  |             R = R + 2;  |      2  |                         0  |
  1784  |  resetPlaceHolder_2();  |         |                            |
  1790  |             R = R + 2;  |      2  |                         0  |
  1795  |  resetPlaceHolder_2();  |         |                            |
  1801  |             R = R + 2;  |      2  |                         0  |
  1806  |  resetPlaceHolder_2();  |         |                            |
  1812  |             R = R + 2;  |      2  |                         0  |
  1817  |  resetPlaceHolder_2();  |         |                            |
  1823  |             R = R + 2;  |      2  |                         0  |
  1828  |  resetPlaceHolder_2();  |         |                            |
  1834  |             R = R + 2;  |      2  |                         0  |
  1839  |  resetPlaceHolder_2();  |         |                            |
  1845  |             R = R + 2;  |      2  |                         0  |
  1850  |  resetPlaceHolder_2();  |         |                            |
  1856  |             R = R + 2;  |      2  |                         0  |
  1861  |  resetPlaceHolder_2();  |         |                            |
  1867  |             R = R + 2;  |      2  |                         0  |
  1872  |  resetPlaceHolder_2();  |         |                            |
  1878  |             R = R + 2;  |      2  |                         0  |
  1883  |  resetPlaceHolder_2();  |         |                            |
  1889  |             R = R + 2;  |      2  |                         0  |
  1894  |  resetPlaceHolder_2();  |         |                            |
  1900  |             R = R + 2;  |      2  |                         0  |
  1905  |  resetPlaceHolder_2();  |         |                            |
  1911  |             R = R + 2;  |      2  |                         0  |
  1916  |  resetPlaceHolder_2();  |         |                            |
  1922  |             R = R + 2;  |      2  |                         0  |
  1927  |  resetPlaceHolder_2();  |         |                            |
  1933  |             R = R + 2;  |      2  |                         0  |
  1938  |  resetPlaceHolder_2();  |         |                            |
  1944  |             R = R + 2;  |      2  |                         0  |
  1949  |  resetPlaceHolder_2();  |         |                            |
  1955  |             R = R + 1;  |      1  |                         0  |
  1960  |  resetPlaceHolder_1();  |         |                            |
  1974  |             R = R + 2;  |      2  |                         0  |
  1979  |  resetPlaceHolder_2();  |         |                            |
  1985  |             R = R + 2;  |      2  |                         0  |
  1990  |  resetPlaceHolder_2();  |         |                            |
  1996  |             R = R + 2;  |      2  |                         0  |
  2001  |  resetPlaceHolder_2();  |         |                            |
  2007  |             R = R + 2;  |      2  |                         0  |
  2012  |  resetPlaceHolder_2();  |         |                            |
  2018  |             R = R + 2;  |      2  |                         0  |
  2023  |  resetPlaceHolder_2();  |         |                            |
  2029  |             R = R + 2;  |      2  |                         0  |
  2034  |  resetPlaceHolder_2();  |         |                            |
  2040  |             R = R + 2;  |      2  |                         0  |
  2045  |  resetPlaceHolder_2();  |         |                            |
  2051  |             R = R + 2;  |      2  |                         0  |
  2056  |  resetPlaceHolder_2();  |         |                            |
  2062  |             R = R + 2;  |      2  |                         0  |
  2067  |  resetPlaceHolder_2();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2078  |  resetPlaceHolder_2();  |         |                            |
  2084  |             R = R + 2;  |      2  |                         0  |
  2089  |  resetPlaceHolder_2();  |         |                            |
  2095  |             R = R + 2;  |      2  |                         0  |
  2100  |  resetPlaceHolder_2();  |         |                            |
  2106  |             R = R + 2;  |      2  |                         0  |
  2111  |  resetPlaceHolder_2();  |         |                            |
  2117  |             R = R + 2;  |      2  |                         0  |
  2122  |  resetPlaceHolder_2();  |         |                            |
  2128  |             R = R + 2;  |      2  |                         0  |
  2133  |  resetPlaceHolder_2();  |         |                            |
  2139  |             R = R + 2;  |      2  |                         0  |
  2144  |  resetPlaceHolder_2();  |         |                            |
  2150  |             R = R + 2;  |      2  |                         0  |
  2155  |  resetPlaceHolder_2();  |         |                            |
  2161  |             R = R + 2;  |      2  |                         0  |
  2166  |  resetPlaceHolder_2();  |         |                            |
  2172  |             R = R + 2;  |      2  |                         0  |
  2177  |  resetPlaceHolder_2();  |         |                            |
  2183  |             R = R + 2;  |      2  |                         0  |
  2188  |  resetPlaceHolder_2();  |         |                            |
  2194  |             R = R + 2;  |      2  |                         0  |
  2199  |  resetPlaceHolder_2();  |         |                            |
  2205  |             R = R + 2;  |      2  |                         0  |
  2210  |  resetPlaceHolder_2();  |         |                            |
  2216  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_2();  |         |                            |
  2227  |             R = R + 2;  |      2  |                         0  |
  2232  |  resetPlaceHolder_2();  |         |                            |
  2238  |             R = R + 2;  |      2  |                         0  |
  2243  |  resetPlaceHolder_2();  |         |                            |
  2249  |             R = R + 2;  |      2  |                         0  |
  2254  |  resetPlaceHolder_2();  |         |                            |
  2260  |             R = R + 2;  |      2  |                         0  |
  2265  |  resetPlaceHolder_2();  |         |                            |
  2271  |             R = R + 2;  |      2  |                         0  |
  2276  |  resetPlaceHolder_2();  |         |                            |
  2282  |             R = R + 2;  |      2  |                         0  |
  2287  |  resetPlaceHolder_2();  |         |                            |
  2293  |             R = R + 2;  |      2  |                         0  |
  2298  |  resetPlaceHolder_2();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2309  |  resetPlaceHolder_2();  |         |                            |
  2315  |             R = R + 2;  |      2  |                         0  |
  2320  |  resetPlaceHolder_2();  |         |                            |
  2326  |             R = R + 2;  |      2  |                         0  |
  2331  |  resetPlaceHolder_2();  |         |                            |
  2337  |             R = R + 2;  |      2  |                         0  |
  2342  |  resetPlaceHolder_2();  |         |                            |
  2348  |             R = R + 2;  |      2  |                         0  |
  2353  |  resetPlaceHolder_2();  |         |                            |
  2359  |             R = R + 2;  |      2  |                         0  |
  2364  |  resetPlaceHolder_2();  |         |                            |
  2370  |             R = R + 2;  |      2  |                         0  |
  2375  |  resetPlaceHolder_2();  |         |                            |
  2381  |             R = R + 2;  |      2  |                         0  |
  2386  |  resetPlaceHolder_2();  |         |                            |
  2392  |             R = R + 2;  |      2  |                         0  |
  2397  |  resetPlaceHolder_2();  |         |                            |
  2403  |             R = R + 2;  |      2  |                         0  |
  2408  |  resetPlaceHolder_2();  |         |                            |
  2414  |             R = R + 2;  |      2  |                         0  |
  2419  |  resetPlaceHolder_2();  |         |                            |
  2425  |             R = R + 2;  |      2  |                         0  |
  2430  |  resetPlaceHolder_2();  |         |                            |
  2436  |             R = R + 2;  |      2  |                         0  |
  2441  |  resetPlaceHolder_2();  |         |                            |
  2447  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_2();  |         |                            |
  2458  |             R = R + 2;  |      2  |                         0  |
  2463  |  resetPlaceHolder_2();  |         |                            |
  2469  |             R = R + 2;  |      2  |                         0  |
  2474  |  resetPlaceHolder_2();  |         |                            |
  2480  |             R = R + 2;  |      2  |                         0  |
  2485  |  resetPlaceHolder_2();  |         |                            |
  2491  |             R = R + 2;  |      2  |                         0  |
  2496  |  resetPlaceHolder_2();  |         |                            |
  2502  |             R = R + 2;  |      2  |                         0  |
  2507  |  resetPlaceHolder_2();  |         |                            |
  2513  |             R = R + 2;  |      2  |                         0  |
  2518  |  resetPlaceHolder_2();  |         |                            |
  2524  |             R = R + 2;  |      2  |                         0  |
  2529  |  resetPlaceHolder_2();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2540  |  resetPlaceHolder_2();  |         |                            |
  2546  |             R = R + 2;  |      2  |                         0  |
  2551  |  resetPlaceHolder_2();  |         |                            |
  2557  |             R = R + 2;  |      2  |                         0  |
  2562  |  resetPlaceHolder_2();  |         |                            |
  2568  |             R = R + 2;  |      2  |                         0  |
  2573  |  resetPlaceHolder_2();  |         |                            |
  2579  |             R = R + 2;  |      2  |                         0  |
  2584  |  resetPlaceHolder_2();  |         |                            |
  2590  |             R = R + 2;  |      2  |                         0  |
  2595  |  resetPlaceHolder_2();  |         |                            |
  2601  |             R = R + 2;  |      2  |                         0  |
  2606  |  resetPlaceHolder_2();  |         |                            |
  2612  |             R = R + 2;  |      2  |                         0  |
  2617  |  resetPlaceHolder_2();  |         |                            |
  2623  |             R = R + 2;  |      2  |                         0  |
  2628  |  resetPlaceHolder_2();  |         |                            |
  2634  |             R = R + 2;  |      2  |                         0  |
  2639  |  resetPlaceHolder_2();  |         |                            |
  2645  |             R = R + 2;  |      2  |                         0  |
  2650  |  resetPlaceHolder_2();  |         |                            |
  2656  |             R = R + 2;  |      2  |                         0  |
  2661  |  resetPlaceHolder_2();  |         |                            |
  2667  |             R = R + 2;  |      2  |                         0  |
  2672  |  resetPlaceHolder_2();  |         |                            |
  2678  |             R = R + 2;  |      2  |                         0  |
  2683  |  resetPlaceHolder_2();  |         |                            |
  2689  |             R = R + 2;  |      2  |                         0  |
  2694  |  resetPlaceHolder_2();  |         |                            |
  2700  |             R = R + 2;  |      2  |                         0  |
  2705  |  resetPlaceHolder_2();  |         |                            |
  2711  |             R = R + 2;  |      2  |                         0  |
  2716  |  resetPlaceHolder_2();  |         |                            |
  2722  |             R = R + 2;  |      2  |                         0  |
  2727  |  resetPlaceHolder_2();  |         |                            |
  2733  |             R = R + 2;  |      2  |                         0  |
  2738  |  resetPlaceHolder_2();  |         |                            |
  2744  |             R = R + 2;  |      2  |                         0  |
  2749  |  resetPlaceHolder_2();  |         |                            |
  2755  |             R = R + 2;  |      2  |                         0  |
  2760  |  resetPlaceHolder_2();  |         |                            |
  2766  |             R = R + 2;  |      2  |                         0  |
  2771  |  resetPlaceHolder_2();  |         |                            |
  2777  |             R = R + 2;  |      2  |                         0  |
  2782  |  resetPlaceHolder_2();  |         |                            |
  2788  |             R = R + 2;  |      2  |                         0  |
  2793  |  resetPlaceHolder_2();  |         |                            |
  2799  |             R = R + 2;  |      2  |                         0  |
  2804  |  resetPlaceHolder_2();  |         |                            |
  2810  |             R = R + 2;  |      2  |                         0  |
  2815  |  resetPlaceHolder_2();  |         |                            |
  2821  |             R = R + 2;  |      2  |                         0  |
  2826  |  resetPlaceHolder_2();  |         |                            |
  2832  |             R = R + 2;  |      2  |                         0  |
  2837  |  resetPlaceHolder_2();  |         |                            |
  2843  |             R = R + 2;  |      2  |                         0  |
  2848  |  resetPlaceHolder_2();  |         |                            |
  2854  |             R = R + 2;  |      2  |                         0  |
  2859  |  resetPlaceHolder_2();  |         |                            |
  2865  |             R = R + 2;  |      2  |                         0  |
  2870  |  resetPlaceHolder_2();  |         |                            |
  2876  |             R = R + 2;  |      2  |                         0  |
  2881  |  resetPlaceHolder_2();  |         |                            |
  2887  |             R = R + 2;  |      2  |                         0  |
  2892  |  resetPlaceHolder_2();  |         |                            |
  2898  |             R = R + 2;  |      2  |                         0  |
  2903  |  resetPlaceHolder_2();  |         |                            |
  2909  |             R = R + 2;  |      2  |                         0  |
  2914  |  resetPlaceHolder_2();  |         |                            |
  2920  |             R = R + 2;  |      2  |                         0  |
  2925  |  resetPlaceHolder_2();  |         |                            |
  2931  |             R = R + 2;  |      2  |                         0  |
  2936  |  resetPlaceHolder_2();  |         |                            |
  2942  |             R = R + 2;  |      2  |                         0  |
  2947  |  resetPlaceHolder_2();  |         |                            |
  2953  |             R = R + 2;  |      2  |                         0  |
  2958  |  resetPlaceHolder_2();  |         |                            |
  2964  |             R = R + 2;  |      2  |                         0  |
  2969  |  resetPlaceHolder_2();  |         |                            |
  2975  |             R = R + 2;  |      2  |                         0  |
  2980  |  resetPlaceHolder_2();  |         |                            |
  2986  |             R = R + 2;  |      2  |                         0  |
  2991  |  resetPlaceHolder_2();  |         |                            |
  2997  |             R = R + 2;  |      2  |                         0  |
  3002  |  resetPlaceHolder_2();  |         |                            |
  3008  |             R = R + 2;  |      2  |                         0  |
  3013  |  resetPlaceHolder_2();  |         |                            |
  3019  |             R = R + 2;  |      2  |                         0  |
  3024  |  resetPlaceHolder_2();  |         |                            |
  3030  |             R = R + 2;  |      2  |                         0  |
  3035  |  resetPlaceHolder_2();  |         |                            |
  3041  |             R = R + 2;  |      2  |                         0  |
  3046  |  resetPlaceHolder_2();  |         |                            |
  3052  |             R = R + 2;  |      2  |                         0  |
  3057  |  resetPlaceHolder_2();  |         |                            |
  3063  |             R = R + 2;  |      2  |                         0  |
  3068  |  resetPlaceHolder_2();  |         |                            |
  3074  |             R = R + 2;  |      2  |                         0  |
  3079  |  resetPlaceHolder_2();  |         |                            |
  3085  |             R = R + 2;  |      2  |                         0  |
  3090  |  resetPlaceHolder_2();  |         |                            |
  3096  |             R = R + 2;  |      2  |                         0  |
  3101  |  resetPlaceHolder_2();  |         |                            |
  3107  |             R = R + 2;  |      2  |                         0  |
  3112  |  resetPlaceHolder_2();  |         |                            |
  3118  |             R = R + 2;  |      2  |                         0  |
  3123  |  resetPlaceHolder_2();  |         |                            |
  3129  |             R = R + 2;  |      2  |                         0  |
  3134  |  resetPlaceHolder_2();  |         |                            |
  3140  |             R = R + 2;  |      2  |                         0  |
  3145  |  resetPlaceHolder_2();  |         |                            |
  3151  |             R = R + 2;  |      2  |                         0  |
  3156  |  resetPlaceHolder_2();  |         |                            |
  3162  |             R = R + 2;  |      2  |                         0  |
  3167  |  resetPlaceHolder_2();  |         |                            |
  3173  |             R = R + 2;  |      2  |                         0  |
  3178  |  resetPlaceHolder_2();  |         |                            |
  3184  |             R = R + 2;  |      2  |                         0  |
  3189  |  resetPlaceHolder_2();  |         |                            |
  3195  |             R = R + 2;  |      2  |                         0  |
  3200  |  resetPlaceHolder_2();  |         |                            |
  3206  |             R = R + 1;  |      1  |                         0  |
  3211  |  resetPlaceHolder_1();  |         |                            |
  3225  |             R = R + 2;  |      2  |                         0  |
  3230  |  resetPlaceHolder_2();  |         |                            |
  3236  |             R = R + 2;  |      2  |                         0  |
  3241  |  resetPlaceHolder_2();  |         |                            |
  3247  |             R = R + 2;  |      2  |                         0  |
  3252  |  resetPlaceHolder_2();  |         |                            |
  3258  |             R = R + 2;  |      2  |                         0  |
  3263  |  resetPlaceHolder_2();  |         |                            |
  3269  |             R = R + 2;  |      2  |                         0  |
  3274  |  resetPlaceHolder_2();  |         |                            |
  3280  |             R = R + 2;  |      2  |                         0  |
  3285  |  resetPlaceHolder_2();  |         |                            |
  3291  |             R = R + 2;  |      2  |                         0  |
  3296  |  resetPlaceHolder_2();  |         |                            |
  3302  |             R = R + 2;  |      2  |                         0  |
  3307  |  resetPlaceHolder_2();  |         |                            |
  3313  |             R = R + 2;  |      2  |                         0  |
  3318  |  resetPlaceHolder_2();  |         |                            |
  3324  |             R = R + 2;  |      2  |                         0  |
  3329  |  resetPlaceHolder_2();  |         |                            |
  3335  |             R = R + 2;  |      2  |                         0  |
  3340  |  resetPlaceHolder_2();  |         |                            |
  3346  |             R = R + 2;  |      2  |                         0  |
  3351  |  resetPlaceHolder_2();  |         |                            |
  3357  |             R = R + 2;  |      2  |                         0  |
  3362  |  resetPlaceHolder_2();  |         |                            |
  3368  |             R = R + 2;  |      2  |                         0  |
  3373  |  resetPlaceHolder_2();  |         |                            |
  3379  |             R = R + 2;  |      2  |                         0  |
  3384  |  resetPlaceHolder_2();  |         |                            |
  3390  |             R = R + 2;  |      2  |                         0  |
  3395  |  resetPlaceHolder_2();  |         |                            |
  3401  |             R = R + 2;  |      2  |                         0  |
  3406  |  resetPlaceHolder_2();  |         |                            |
  3412  |             R = R + 2;  |      2  |                         0  |
  3417  |  resetPlaceHolder_2();  |         |                            |
  3423  |             R = R + 2;  |      2  |                         0  |
  3428  |  resetPlaceHolder_2();  |         |                            |
  3434  |             R = R + 2;  |      2  |                         0  |
  3439  |  resetPlaceHolder_2();  |         |                            |
  3445  |             R = R + 2;  |      2  |                         0  |
  3450  |  resetPlaceHolder_2();  |         |                            |
  3456  |             R = R + 2;  |      2  |                         0  |
  3461  |  resetPlaceHolder_2();  |         |                            |
  3467  |             R = R + 2;  |      2  |                         0  |
  3472  |  resetPlaceHolder_2();  |         |                            |
  3478  |             R = R + 2;  |      2  |                         0  |
  3483  |  resetPlaceHolder_2();  |         |                            |
  3489  |             R = R + 2;  |      2  |                         0  |
  3494  |  resetPlaceHolder_2();  |         |                            |
  3500  |             R = R + 2;  |      2  |                         0  |
  3505  |  resetPlaceHolder_2();  |         |                            |
  3511  |             R = R + 2;  |      2  |                         0  |
  3516  |  resetPlaceHolder_2();  |         |                            |
  3522  |             R = R + 2;  |      2  |                         0  |
  3527  |  resetPlaceHolder_2();  |         |                            |
  3533  |             R = R + 2;  |      2  |                         0  |
  3538  |  resetPlaceHolder_2();  |         |                            |
  3544  |             R = R + 2;  |      2  |                         0  |
  3549  |  resetPlaceHolder_2();  |         |                            |
  3555  |             R = R + 2;  |      2  |                         0  |
  3560  |  resetPlaceHolder_2();  |         |                            |
  3566  |             R = R + 2;  |      2  |                         0  |
  3571  |  resetPlaceHolder_2();  |         |                            |
  3577  |             R = R + 2;  |      2  |                         0  |
  3582  |  resetPlaceHolder_2();  |         |                            |
  3588  |             R = R + 2;  |      2  |                         0  |
  3593  |  resetPlaceHolder_2();  |         |                            |
  3599  |             R = R + 2;  |      2  |                         0  |
  3604  |  resetPlaceHolder_2();  |         |                            |
  3610  |             R = R + 2;  |      2  |                         0  |
  3615  |  resetPlaceHolder_2();  |         |                            |
  3621  |             R = R + 2;  |      2  |                         0  |
  3626  |  resetPlaceHolder_2();  |         |                            |
  3632  |             R = R + 2;  |      2  |                         0  |
  3637  |  resetPlaceHolder_2();  |         |                            |
  3643  |             R = R + 2;  |      2  |                         0  |
  3648  |  resetPlaceHolder_2();  |         |                            |
  3654  |             R = R + 2;  |      2  |                         0  |
  3659  |  resetPlaceHolder_2();  |         |                            |
  3665  |             R = R + 2;  |      2  |                         0  |
  3670  |  resetPlaceHolder_2();  |         |                            |
  3676  |             R = R + 2;  |      2  |                         0  |
  3681  |  resetPlaceHolder_2();  |         |                            |
  3687  |             R = R + 2;  |      2  |                         0  |
  3692  |  resetPlaceHolder_2();  |         |                            |
  3698  |             R = R + 2;  |      2  |                         0  |
  3703  |  resetPlaceHolder_2();  |         |                            |
  3709  |             R = R + 2;  |      2  |                         0  |
  3714  |  resetPlaceHolder_2();  |         |                            |
  3720  |             R = R + 2;  |      2  |                         0  |
  3725  |  resetPlaceHolder_2();  |         |                            |
  3731  |             R = R + 1;  |      1  |                         0  |
  3736  |  resetPlaceHolder_1();  |         |                            |
  3750  |             R = R + 2;  |      2  |                         0  |
  3755  |  resetPlaceHolder_2();  |         |                            |
  3761  |             R = R + 2;  |      2  |                         0  |
  3766  |  resetPlaceHolder_2();  |         |                            |
  3772  |             R = R + 2;  |      2  |                         0  |
  3777  |  resetPlaceHolder_2();  |         |                            |
  3783  |             R = R + 2;  |      2  |                         0  |
  3788  |  resetPlaceHolder_2();  |         |                            |
  3794  |             R = R + 2;  |      2  |                         0  |
  3799  |  resetPlaceHolder_2();  |         |                            |
  3805  |             R = R + 2;  |      2  |                         0  |
  3810  |  resetPlaceHolder_2();  |         |                            |
  3816  |             R = R + 2;  |      2  |                         0  |
  3821  |  resetPlaceHolder_2();  |         |                            |
  3827  |             R = R + 2;  |      2  |                         0  |
  3832  |  resetPlaceHolder_2();  |         |                            |
  3838  |             R = R + 2;  |      2  |                         0  |
  3843  |  resetPlaceHolder_2();  |         |                            |
  3849  |             R = R + 2;  |      2  |                         0  |
  3854  |  resetPlaceHolder_2();  |         |                            |
  3860  |             R = R + 2;  |      2  |                         0  |
  3865  |  resetPlaceHolder_2();  |         |                            |
  3871  |             R = R + 2;  |      2  |                         0  |
  3876  |  resetPlaceHolder_2();  |         |                            |
  3882  |             R = R + 2;  |      2  |                         0  |
  3887  |  resetPlaceHolder_2();  |         |                            |
  3893  |             R = R + 2;  |      2  |                         0  |
  3898  |  resetPlaceHolder_2();  |         |                            |
  3904  |             R = R + 2;  |      2  |                         0  |
  3909  |  resetPlaceHolder_2();  |         |                            |
  3915  |             R = R + 2;  |      2  |                         0  |
  3920  |  resetPlaceHolder_2();  |         |                            |
  3926  |             R = R + 2;  |      2  |                         0  |
  3931  |  resetPlaceHolder_2();  |         |                            |
  3937  |             R = R + 2;  |      2  |                         0  |
  3942  |  resetPlaceHolder_2();  |         |                            |
  3948  |             R = R + 2;  |      2  |                         0  |
  3953  |  resetPlaceHolder_2();  |         |                            |
  3959  |             R = R + 2;  |      2  |                         0  |
  3964  |  resetPlaceHolder_2();  |         |                            |
  3970  |             R = R + 2;  |      2  |                         0  |
  3975  |  resetPlaceHolder_2();  |         |                            |
  3981  |             R = R + 2;  |      2  |                         0  |
  3986  |  resetPlaceHolder_2();  |         |                            |
  3992  |             R = R + 2;  |      2  |                         0  |
  3997  |  resetPlaceHolder_2();  |         |                            |
  4003  |             R = R + 2;  |      2  |                         0  |
  4008  |  resetPlaceHolder_2();  |         |                            |
  4014  |             R = R + 2;  |      2  |                         0  |
  4019  |  resetPlaceHolder_2();  |         |                            |
  4025  |             R = R + 2;  |      2  |                         0  |
  4030  |  resetPlaceHolder_2();  |         |                            |
  4036  |             R = R + 2;  |      2  |                         0  |
  4041  |  resetPlaceHolder_2();  |         |                            |
  4047  |             R = R + 2;  |      2  |                         0  |
  4052  |  resetPlaceHolder_2();  |         |                            |
  4058  |             R = R + 2;  |      2  |                         0  |
  4063  |  resetPlaceHolder_2();  |         |                            |
  4069  |             R = R + 2;  |      2  |                         0  |
  4074  |  resetPlaceHolder_2();  |         |                            |
  4080  |             R = R + 2;  |      2  |                         0  |
  4085  |  resetPlaceHolder_2();  |         |                            |
  4091  |             R = R + 2;  |      2  |                         0  |
  4096  |  resetPlaceHolder_2();  |         |                            |
  4102  |             R = R + 2;  |      2  |                         0  |
  4107  |  resetPlaceHolder_2();  |         |                            |
  4113  |             R = R + 2;  |      2  |                         0  |
  4118  |  resetPlaceHolder_2();  |         |                            |
  4124  |             R = R + 2;  |      2  |                         0  |
  4129  |  resetPlaceHolder_2();  |         |                            |
  4135  |             R = R + 2;  |      2  |                         0  |
  4140  |  resetPlaceHolder_2();  |         |                            |
  4146  |             R = R + 2;  |      2  |                         0  |
  4151  |  resetPlaceHolder_2();  |         |                            |
  4157  |             R = R + 2;  |      2  |                         0  |
  4162  |  resetPlaceHolder_2();  |         |                            |
  4168  |             R = R + 2;  |      2  |                         0  |
  4173  |  resetPlaceHolder_2();  |         |                            |
  4179  |             R = R + 2;  |      2  |                         0  |
  4184  |  resetPlaceHolder_2();  |         |                            |
  4190  |             R = R + 2;  |      2  |                         0  |
  4195  |  resetPlaceHolder_2();  |         |                            |
  4201  |             R = R + 2;  |      2  |                         0  |
  4206  |  resetPlaceHolder_2();  |         |                            |
  4212  |             R = R + 2;  |      2  |                         0  |
  4217  |  resetPlaceHolder_2();  |         |                            |
  4223  |             R = R + 2;  |      2  |                         0  |
  4228  |  resetPlaceHolder_2();  |         |                            |
  4234  |             R = R + 2;  |      2  |                         0  |
  4239  |  resetPlaceHolder_2();  |         |                            |
  4245  |             R = R + 2;  |      2  |                         0  |
  4250  |  resetPlaceHolder_2();  |         |                            |
  4256  |             R = R + 2;  |      2  |                         0  |
  4261  |  resetPlaceHolder_2();  |         |                            |
  4267  |             R = R + 2;  |      2  |                         0  |
  4272  |  resetPlaceHolder_2();  |         |                            |
  4278  |             R = R + 2;  |      2  |                         0  |
  4283  |  resetPlaceHolder_2();  |         |                            |
  4289  |             R = R + 2;  |      2  |                         0  |
  4294  |  resetPlaceHolder_2();  |         |                            |
  4300  |             R = R + 2;  |      2  |                         0  |
  4305  |  resetPlaceHolder_2();  |         |                            |
  4311  |             R = R + 2;  |      2  |                         0  |
  4316  |  resetPlaceHolder_2();  |         |                            |
  4322  |             R = R + 2;  |      2  |                         0  |
  4327  |  resetPlaceHolder_2();  |         |                            |
  4333  |             R = R + 2;  |      2  |                         0  |
  4338  |  resetPlaceHolder_2();  |         |                            |
  4344  |             R = R + 2;  |      2  |                         0  |
  4349  |  resetPlaceHolder_2();  |         |                            |
  4355  |             R = R + 2;  |      2  |                         0  |
  4360  |  resetPlaceHolder_2();  |         |                            |
  4366  |             R = R + 2;  |      2  |                         0  |
  4371  |  resetPlaceHolder_2();  |         |                            |
  4377  |             R = R + 2;  |      2  |                         0  |
  4382  |  resetPlaceHolder_2();  |         |                            |
  4388  |             R = R + 2;  |      2  |                         0  |
  4393  |  resetPlaceHolder_2();  |         |                            |
  4399  |             R = R + 2;  |      2  |                         0  |
  4404  |  resetPlaceHolder_2();  |         |                            |
  4410  |             R = R + 2;  |      2  |                         0  |
  4415  |  resetPlaceHolder_2();  |         |                            |
  4421  |             R = R + 2;  |      2  |                         0  |
  4426  |  resetPlaceHolder_2();  |         |                            |
  4432  |             R = R + 2;  |      2  |                         0  |
  4437  |  resetPlaceHolder_2();  |         |                            |
  4443  |             R = R + 2;  |      2  |                         0  |
  4448  |  resetPlaceHolder_2();  |         |                            |
  4454  |             R = R + 2;  |      2  |                         0  |
  4459  |  resetPlaceHolder_2();  |         |                            |
  4465  |             R = R + 2;  |      2  |                         0  |
  4470  |  resetPlaceHolder_2();  |         |                            |
  4476  |             R = R + 2;  |      2  |                         0  |
  4481  |  resetPlaceHolder_2();  |         |                            |
  4487  |             R = R + 2;  |      2  |                         0  |
  4492  |  resetPlaceHolder_2();  |         |                            |
  4498  |             R = R + 2;  |      2  |                         0  |
  4503  |  resetPlaceHolder_2();  |         |                            |
  4509  |             R = R + 2;  |      2  |                         0  |
  4514  |  resetPlaceHolder_2();  |         |                            |
  4520  |             R = R + 2;  |      2  |                         0  |
  4525  |  resetPlaceHolder_2();  |         |                            |
  4531  |             R = R + 2;  |      2  |                         0  |
  4536  |  resetPlaceHolder_2();  |         |                            |
  4542  |             R = R + 2;  |      2  |                         0  |
  4547  |  resetPlaceHolder_2();  |         |                            |
  4553  |             R = R + 2;  |      2  |                         0  |
  4558  |  resetPlaceHolder_2();  |         |                            |
  4564  |             R = R + 2;  |      2  |                         0  |
  4569  |  resetPlaceHolder_2();  |         |                            |
  4575  |             R = R + 2;  |      2  |                         0  |
  4580  |  resetPlaceHolder_2();  |         |                            |
  4586  |             R = R + 2;  |      2  |                         0  |
  4591  |  resetPlaceHolder_2();  |         |                            |
  4597  |             R = R + 2;  |      2  |                         0  |
  4602  |  resetPlaceHolder_2();  |         |                            |
  4608  |             R = R + 2;  |      2  |                         0  |
  4613  |  resetPlaceHolder_2();  |         |                            |
  4619  |             R = R + 2;  |      2  |                         0  |
  4624  |  resetPlaceHolder_2();  |         |                            |
  4630  |             R = R + 2;  |      2  |                         0  |
  4635  |  resetPlaceHolder_2();  |         |                            |
  4641  |             R = R + 2;  |      2  |                         0  |
  4646  |  resetPlaceHolder_2();  |         |                            |
  4652  |             R = R + 2;  |      2  |                         0  |
  4657  |  resetPlaceHolder_2();  |         |                            |
  4663  |             R = R + 2;  |      2  |                         0  |
  4668  |  resetPlaceHolder_2();  |         |                            |
  4674  |             R = R + 2;  |      2  |                         0  |
  4679  |  resetPlaceHolder_2();  |         |                            |
  4685  |             R = R + 2;  |      2  |                         0  |
  4690  |  resetPlaceHolder_2();  |         |                            |
  4696  |             R = R + 2;  |      2  |                         0  |
  4701  |  resetPlaceHolder_2();  |         |                            |
  4707  |             R = R + 2;  |      2  |                         0  |
  4712  |  resetPlaceHolder_2();  |         |                            |
  4718  |             R = R + 2;  |      2  |                         0  |
  4723  |  resetPlaceHolder_2();  |         |                            |
  4729  |             R = R + 2;  |      2  |                         0  |
  4734  |  resetPlaceHolder_2();  |         |                            |
  4740  |             R = R + 2;  |      2  |                         0  |
  4745  |  resetPlaceHolder_2();  |         |                            |
  4751  |             R = R + 2;  |      2  |                         0  |
  4756  |  resetPlaceHolder_2();  |         |                            |
  4762  |             R = R + 1;  |      1  |                         0  |
  4767  |  resetPlaceHolder_1();  |         |                            |
  4781  |             R = R + 2;  |      2  |                         0  |
  4786  |  resetPlaceHolder_2();  |         |                            |
  4792  |             R = R + 2;  |      2  |                         0  |
  4797  |  resetPlaceHolder_2();  |         |                            |
  4803  |             R = R + 2;  |      2  |                         0  |
  4808  |  resetPlaceHolder_2();  |         |                            |
  4814  |             R = R + 2;  |      2  |                         0  |
  4819  |  resetPlaceHolder_2();  |         |                            |
  4825  |             R = R + 2;  |      2  |                         0  |
  4830  |  resetPlaceHolder_2();  |         |                            |
  4836  |             R = R + 2;  |      2  |                         0  |
  4841  |  resetPlaceHolder_2();  |         |                            |
  4847  |             R = R + 2;  |      2  |                         0  |
  4852  |  resetPlaceHolder_2();  |         |                            |
  4858  |             R = R + 2;  |      2  |                         0  |
  4863  |  resetPlaceHolder_2();  |         |                            |
  4869  |             R = R + 2;  |      2  |                         0  |
  4874  |  resetPlaceHolder_2();  |         |                            |
  4880  |             R = R + 2;  |      2  |                         0  |
  4885  |  resetPlaceHolder_2();  |         |                            |
  4891  |             R = R + 2;  |      2  |                         0  |
  4896  |  resetPlaceHolder_2();  |         |                            |
  4902  |             R = R + 2;  |      2  |                         0  |
  4907  |  resetPlaceHolder_2();  |         |                            |
  4913  |             R = R + 2;  |      2  |                         0  |
  4918  |  resetPlaceHolder_2();  |         |                            |
  4924  |             R = R + 2;  |      2  |                         0  |
  4929  |  resetPlaceHolder_2();  |         |                            |
  4935  |             R = R + 2;  |      2  |                         0  |
  4940  |  resetPlaceHolder_2();  |         |                            |
  4946  |             R = R + 2;  |      2  |                         0  |
  4951  |  resetPlaceHolder_2();  |         |                            |
  4957  |             R = R + 2;  |      2  |                         0  |
  4962  |  resetPlaceHolder_2();  |         |                            |
  4968  |             R = R + 2;  |      2  |                         0  |
  4973  |  resetPlaceHolder_2();  |         |                            |
  4979  |             R = R + 2;  |      2  |                         0  |
  4984  |  resetPlaceHolder_2();  |         |                            |
  4990  |             R = R + 2;  |      2  |                         0  |
  4995  |  resetPlaceHolder_2();  |         |                            |
  5001  |             R = R + 2;  |      2  |                         0  |
  5006  |  resetPlaceHolder_2();  |         |                            |
  5012  |             R = R + 2;  |      2  |                         0  |
  5017  |  resetPlaceHolder_2();  |         |                            |
  5023  |             R = R + 2;  |      2  |                         0  |
  5028  |  resetPlaceHolder_2();  |         |                            |
  5034  |             R = R + 2;  |      2  |                         0  |
  5039  |  resetPlaceHolder_2();  |         |                            |
  5045  |             R = R + 2;  |      2  |                         0  |
  5050  |  resetPlaceHolder_2();  |         |                            |
  5056  |             R = R + 2;  |      2  |                         0  |
  5061  |  resetPlaceHolder_2();  |         |                            |
  5067  |             R = R + 2;  |      2  |                         0  |
  5072  |  resetPlaceHolder_2();  |         |                            |
  5078  |             R = R + 2;  |      2  |                         0  |
  5083  |  resetPlaceHolder_2();  |         |                            |
  5089  |             R = R + 2;  |      2  |                         0  |
  5094  |  resetPlaceHolder_2();  |         |                            |
  5100  |             R = R + 2;  |      2  |                         0  |
  5105  |  resetPlaceHolder_2();  |         |                            |
  5111  |             R = R + 2;  |      2  |                         0  |
  5116  |  resetPlaceHolder_2();  |         |                            |
  5122  |             R = R + 2;  |      2  |                         0  |
  5127  |  resetPlaceHolder_2();  |         |                            |
  5133  |             R = R + 2;  |      2  |                         0  |
  5138  |  resetPlaceHolder_2();  |         |                            |
  5144  |             R = R + 2;  |      2  |                         0  |
  5149  |  resetPlaceHolder_2();  |         |                            |
  5155  |             R = R + 2;  |      2  |                         0  |
  5160  |  resetPlaceHolder_2();  |         |                            |
  5166  |             R = R + 2;  |      2  |                         0  |
  5171  |  resetPlaceHolder_2();  |         |                            |
  5177  |             R = R + 2;  |      2  |                         0  |
  5182  |  resetPlaceHolder_2();  |         |                            |
  5188  |             R = R + 2;  |      2  |                         0  |
  5193  |  resetPlaceHolder_2();  |         |                            |
  5199  |             R = R + 2;  |      2  |                         0  |
  5204  |  resetPlaceHolder_2();  |         |                            |
  5210  |             R = R + 2;  |      2  |                         0  |
  5215  |  resetPlaceHolder_2();  |         |                            |
  5221  |             R = R + 2;  |      2  |                         0  |
  5226  |  resetPlaceHolder_2();  |         |                            |
  5232  |             R = R + 2;  |      2  |                         0  |
  5237  |  resetPlaceHolder_2();  |         |                            |
  5243  |             R = R + 2;  |      2  |                         0  |
  5248  |  resetPlaceHolder_2();  |         |                            |
  5254  |             R = R + 2;  |      2  |                         0  |
  5259  |  resetPlaceHolder_2();  |         |                            |
  5265  |             R = R + 2;  |      2  |                         0  |
  5270  |  resetPlaceHolder_2();  |         |                            |
  5276  |             R = R + 2;  |      2  |                         0  |
  5281  |  resetPlaceHolder_2();  |         |                            |
  5287  |             R = R + 2;  |      2  |                         0  |
  5292  |  resetPlaceHolder_2();  |         |                            |
  5298  |             R = R + 2;  |      2  |                         0  |
  5303  |  resetPlaceHolder_2();  |         |                            |
  5309  |             R = R + 2;  |      2  |                         0  |
  5314  |  resetPlaceHolder_2();  |         |                            |
  5320  |             R = R + 2;  |      2  |                         0  |
  5325  |  resetPlaceHolder_2();  |         |                            |
  5331  |             R = R + 2;  |      2  |                         0  |
  5336  |  resetPlaceHolder_2();  |         |                            |
  5342  |             R = R + 2;  |      2  |                         0  |
  5347  |  resetPlaceHolder_2();  |         |                            |
  5353  |             R = R + 2;  |      2  |                         0  |
  5358  |  resetPlaceHolder_2();  |         |                            |
  5364  |             R = R + 2;  |      2  |                         0  |
  5369  |  resetPlaceHolder_2();  |         |                            |
  5375  |             R = R + 2;  |      2  |                         0  |
  5380  |  resetPlaceHolder_2();  |         |                            |
  5386  |             R = R + 2;  |      2  |                         0  |
  5391  |  resetPlaceHolder_2();  |         |                            |
  5397  |             R = R + 2;  |      2  |                         0  |
  5402  |  resetPlaceHolder_2();  |         |                            |
  5408  |             R = R + 2;  |      2  |                         0  |
  5413  |  resetPlaceHolder_2();  |         |                            |
  5419  |             R = R + 2;  |      2  |                         0  |
  5424  |  resetPlaceHolder_2();  |         |                            |
  5430  |             R = R + 2;  |      2  |                         0  |
  5435  |  resetPlaceHolder_2();  |         |                            |
  5441  |             R = R + 2;  |      2  |                         0  |
  5446  |  resetPlaceHolder_2();  |         |                            |
  5452  |             R = R + 2;  |      2  |                         0  |
  5457  |  resetPlaceHolder_2();  |         |                            |
  5463  |             R = R + 2;  |      2  |                         0  |
  5468  |  resetPlaceHolder_2();  |         |                            |
  5474  |             R = R + 2;  |      2  |                         0  |
  5479  |  resetPlaceHolder_2();  |         |                            |
  5485  |             R = R + 2;  |      2  |                         0  |
  5490  |  resetPlaceHolder_2();  |         |                            |
  5496  |             R = R + 2;  |      2  |                         0  |
  5501  |  resetPlaceHolder_2();  |         |                            |
  5507  |             R = R + 2;  |      2  |                         0  |
  5512  |  resetPlaceHolder_2();  |         |                            |
  5518  |             R = R + 2;  |      2  |                         0  |
  5523  |  resetPlaceHolder_2();  |         |                            |
  5529  |             R = R + 2;  |      2  |                         0  |
  5534  |  resetPlaceHolder_2();  |         |                            |
  5540  |             R = R + 2;  |      2  |                         0  |
  5545  |  resetPlaceHolder_2();  |         |                            |
  5551  |             R = R + 2;  |      2  |                         0  |
  5556  |  resetPlaceHolder_2();  |         |                            |
  5562  |             R = R + 2;  |      2  |                         0  |
  5567  |  resetPlaceHolder_2();  |         |                            |
  5573  |             R = R + 2;  |      2  |                         0  |
  5578  |  resetPlaceHolder_2();  |         |                            |
  5584  |             R = R + 2;  |      2  |                         0  |
  5589  |  resetPlaceHolder_2();  |         |                            |
  5595  |             R = R + 2;  |      2  |                         0  |
  5600  |  resetPlaceHolder_2();  |         |                            |
  5606  |             R = R + 2;  |      2  |                         0  |
  5611  |  resetPlaceHolder_2();  |         |                            |
  5617  |             R = R + 2;  |      2  |                         0  |
  5622  |  resetPlaceHolder_2();  |         |                            |
  5628  |             R = R + 2;  |      2  |                         0  |
  5633  |  resetPlaceHolder_2();  |         |                            |
  5639  |             R = R + 2;  |      2  |                         0  |
  5644  |  resetPlaceHolder_2();  |         |                            |
  5650  |             R = R + 2;  |      2  |                         0  |
  5655  |  resetPlaceHolder_2();  |         |                            |
  5661  |             R = R + 2;  |      2  |                         0  |
  5666  |  resetPlaceHolder_2();  |         |                            |
  5672  |             R = R + 2;  |      2  |                         0  |
  5677  |  resetPlaceHolder_2();  |         |                            |
  5683  |             R = R + 2;  |      2  |                         0  |
  5688  |  resetPlaceHolder_2();  |         |                            |
  5694  |             R = R + 2;  |      2  |                         0  |
  5699  |  resetPlaceHolder_2();  |         |                            |
  5705  |             R = R + 2;  |      2  |                         0  |
  5710  |  resetPlaceHolder_2();  |         |                            |
  5716  |             R = R + 2;  |      2  |                         0  |
  5721  |  resetPlaceHolder_2();  |         |                            |
  5727  |             R = R + 2;  |      2  |                         0  |
  5732  |  resetPlaceHolder_2();  |         |                            |
  5738  |             R = R + 2;  |      2  |                         0  |
  5743  |  resetPlaceHolder_2();  |         |                            |
  5749  |             R = R + 2;  |      2  |                         0  |
  5754  |  resetPlaceHolder_2();  |         |                            |
  5760  |             R = R + 2;  |      2  |                         0  |
  5765  |  resetPlaceHolder_2();  |         |                            |
  5771  |             R = R + 2;  |      2  |                         0  |
  5776  |  resetPlaceHolder_2();  |         |                            |
  5782  |             R = R + 2;  |      2  |                         0  |
  5787  |  resetPlaceHolder_2();  |         |                            |
  5793  |             R = R + 1;  |      1  |                         0  |
  5798  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
resetPlaceHolder_2(); -> // reset R0
use R 1 -> R0 = R0 + 1;
use R 2 -> R0 = R0 + 2;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	1m30.228s
user	1m44.859s
sys	0m2.031s

2023-01-26 12:57:45,060 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 12:57:56,261 INFO     Done. Execution time: 11.199995040893555 seconds
2023-01-26 12:57:56,261 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `9.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1257-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1257-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.191s
user	0m24.170s
sys	0m2.929s

2023-01-26 12:57:56,261 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-26 12:57:56,261 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 12:57:57,992 INFO     Done. Execution time: 1.73067045211792 seconds
2023-01-26 12:57:57,992 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.722s
user	0m3.058s
sys	0m0.188s

2023-01-26 12:57:57,993 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-26 12:57:57,993 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-26 12:57:59,802 INFO     Done. Execution time: 1.8086905479431152 seconds
2023-01-26 12:57:59,802 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.801s
user	0m3.378s
sys	0m0.177s

2023-01-26 12:57:59,802 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 12:58:00,755 INFO     Done. Execution time: 0.9527106285095215 seconds
2023-01-26 12:58:00,755 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m0.946s
user	0m1.543s
sys	0m0.086s

2023-01-26 12:58:00,755 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-26 12:58:00,755 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 12:59:06,823 INFO     Done. Execution time: 66.06742525100708 seconds
2023-01-26 12:59:06,823 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz2044316730589762967/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2044316730589762967/bin -o /tmp/qfuzz2044316730589762967/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2044316730589762967/bin
Found file /tmp/qfuzz2044316730589762967/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz2044316730589762967/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2044316730589762967/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2044316730589762967/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2044316730589762967/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2044316730589762967/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 38, exec speed = 112615 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 27, exec speed = 126502 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m27 to 38 bits (average: 32.50 bits)
[1;90m        Exec timing : [0m112k to 126k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2044316730589762967/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [53.00]
1; /tmp/qfuzz2044316730589762967/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz2044316730589762967/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 1; 0.00; [80.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2044316730589762967/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz2044316730589762967/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2044316730589762967/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2044316730589762967/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 175, 112, 67, 99, 192, 109, 111, 49, 111, 160, 58, 148, 79, 88, 79, 30, 112, 67, 99, 192, 109, 111, 49, 111, 160, 58, 148, 79, 88, 79, 119, 4, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2044316730589762967/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2044316730589762967/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [160,196,177,32,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [112,67,99,192,109]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.060s
user	0m22.808s
sys	0m1.676s

2023-01-26 12:59:06,823 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-26 12:59:06,824 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-26 12:59:09,391 INFO     Done. Execution time: 2.56699538230896 seconds
2023-01-26 12:59:09,391 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [175,112,67,99,192])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [160,196,177,32,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [112,67,99,192,109])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 62):
                                                                                                                                                                
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |       stopIndex       |
----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [175,112,67,99,192]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [175,112,67,99,192]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [175,112,67,99,192]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [175,112,67,99,192]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [175,112,67,99,192]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [175,112,67,99,192]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [175,112,67,99,192]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [175,112,67,99,192]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [175,112,67,99,192]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [175,112,67,99,192]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |     112  |  1  |         1  |        2  |    1  |      1  |  [175,112,67,99,192]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |     112  |  1  |         1  |        2  |    2  |      1  |  [175,112,67,99,192]  |
    57  |                         i = i + 1;  |         |  0  |         0  |     112  |  2  |         1  |        2  |    2  |      1  |  [175,112,67,99,192]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |     112  |  2  |         1  |        2  |    2  |      1  |  [175,112,67,99,192]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m2.558s
user	0m4.933s
sys	0m0.328s

2023-01-26 12:59:09,391 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 12:59:11,504 INFO     Done. Execution time: 2.1126720905303955 seconds
2023-01-26 12:59:11,504 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1259-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1259-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.105s
user	0m3.627s
sys	0m0.270s

2023-01-26 12:59:11,505 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-26 12:59:11,505 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:00:17,609 INFO     Done. Execution time: 66.10424900054932 seconds
2023-01-26 13:00:17,609 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz3058814695175369745/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3058814695175369745/bin -o /tmp/qfuzz3058814695175369745/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3058814695175369745/bin
Found file /tmp/qfuzz3058814695175369745/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz3058814695175369745/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3058814695175369745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3058814695175369745/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3058814695175369745/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3058814695175369745/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 121022 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 108566 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m108k to 121k us (average: 114k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3058814695175369745/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz3058814695175369745/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3058814695175369745/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3058814695175369745/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3058814695175369745/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3058814695175369745/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 193, 2, 196
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 175, 2, 67
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.095s
user	0m23.698s
sys	0m1.659s

2023-01-26 13:00:17,610 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-26 13:00:17,610 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-26 13:00:20,698 INFO     Done. Execution time: 3.0885543823242188 seconds
2023-01-26 13:00:20,699 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(193, 2, 196)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(175, 2, 67)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                           
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |   d   |  recursiveTypeIndexes  |
-------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            193  |  196  |                     2  |
    32  |     return;  |         |  0  |            193  |  196  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m3.080s
user	0m5.780s
sys	0m0.300s

2023-01-26 13:00:20,699 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:00:22,995 INFO     Done. Execution time: 2.2956483364105225 seconds
2023-01-26 13:00:22,995 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1300-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1300-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.288s
user	0m3.998s
sys	0m0.268s

2023-01-26 13:00:22,995 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-26 13:00:22,995 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:01:29,079 INFO     Done. Execution time: 66.08377361297607 seconds
2023-01-26 13:01:29,079 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz3749660733018979640/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3749660733018979640/bin -o /tmp/qfuzz3749660733018979640/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3749660733018979640/bin
Found file /tmp/qfuzz3749660733018979640/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz3749660733018979640/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3749660733018979640/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3749660733018979640/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3749660733018979640/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3749660733018979640/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 127467 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 123887 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m123k to 127k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3749660733018979640/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz3749660733018979640/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz3749660733018979640/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3749660733018979640/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz3749660733018979640/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3749660733018979640/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3749660733018979640/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(132)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3749660733018979640/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3749660733018979640/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.073s
user	0m23.352s
sys	0m1.924s

2023-01-26 13:01:29,080 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-26 13:01:29,080 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-26 13:01:34,906 INFO     Done. Execution time: 5.825639009475708 seconds
2023-01-26 13:01:34,906 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m5.816s
user	0m9.575s
sys	0m1.727s

2023-01-26 13:01:34,906 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:01:43,395 INFO     Done. Execution time: 8.489192247390747 seconds
2023-01-26 13:01:43,396 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1301-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1301-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.481s
user	0m17.497s
sys	0m2.914s

2023-01-26 13:01:43,396 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-26 13:01:43,396 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:02:50,196 INFO     Done. Execution time: 66.80031538009644 seconds
2023-01-26 13:02:50,197 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz6305044185043850510/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6305044185043850510/bin -o /tmp/qfuzz6305044185043850510/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6305044185043850510/bin
Found file /tmp/qfuzz6305044185043850510/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz6305044185043850510/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6305044185043850510/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6305044185043850510/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6305044185043850510/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz6305044185043850510/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 138446 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 130748 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m130k to 138k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 260.00; [1355.00,1995.00,2255.00,3526.00,3855.00]
2; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 5; 49.00; [655.00,3215.00,3555.00,3886.00,3935.00]
3; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 4; 651.00; [15.00,666.00,1855.00,3275.00]
4; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 2; 2811.00; [15.00,2826.00]
5; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta; 5; 391.00; [15.00,406.00,1235.00,2755.00,3215.00]
7; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 5; 420.00; [735.00,1355.00,1775.00,2255.00,3526.00]
16; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 5; 240.00; [1355.00,2015.00,2255.00,3526.00,3855.00]
18; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta; 5; 440.00; [335.00,1135.00,1575.00,2855.00,3526.00]
21; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 5; 480.00; [515.00,1095.00,1575.00,2635.00,3886.00]
27; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 5; 120.00; [215.00,335.00,1315.00,3655.00,4026.00]
37; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64; 5; 20.00; [115.00,495.00,515.00,706.00,3315.00]
57; /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16,+delta; 5; 500.00; [335.00,946.00,1575.00,3155.00,3655.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(46, 157, 182, 16, 78, 37, 7, 29, 37, 7, 131)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(34, 5, 165, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(200, 182, 16, 65, 10, 7, 7, 4, 7, 199, 86, 19, 101, 16, 7, 51, 4, 7, 7, 7, 7, 7, 184)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 78, 25, 54, 131, 106, 177, 88, 44, 111, 114, 109, 149, 177, 150, 153, 163, 133, 131, 106, 11, 147, 15, 56, 149, 177, 88, 80, 88, 120, 38, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 142, 16, 78, 56, 108, 103, 93, 121, 88, 85, 185, 195, 35, 30, 131, 19, 61, 160, 90)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 100, 192, 160, 111, 20, 129, 38, 10, 148, 79, 88, 79, 70, 65, 144, 34, 120, 78, 19, 77, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 36, 88, 85, 185, 195, 35, 30, 41, 108, 52, 88, 120, 146, 86, 144, 15, 120, 78, 19, 61, 160, 173)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 163)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6305044185043850510/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [46,157,182,16,78]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [34,5,165,24]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [200,182,16,65,10]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,78,25,54,131]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,142,16,78,56]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,100,192]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,36,88]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [19,61,160,137]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [32,163]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.790s
user	0m27.167s
sys	0m1.827s

2023-01-26 13:02:50,197 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-26 13:02:50,197 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-26 13:02:59,096 INFO     Done. Execution time: 8.898793697357178 seconds
2023-01-26 13:02:59,096 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([46,157,182,16,78])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 12 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([34,5,165,24])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([200,182,16,65,10])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,78,25,54,131])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,142,16,78,56])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,100,192])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([19,61,160,137])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([32,163])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,36,88])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 12)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 12 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  chunk  |         diff         |  i  |  lhsBuilder  |  rhsBuilder  |
--------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [46,157,182,16,78]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [46,157,182,16,78]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [46,157,182,16,78]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [46,157,182,16,78]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [46,157,182,16,78]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [46,157,182,16,78]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [46,157,182,16,78]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [46,157,182,16,78]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |     46  |  [46,157,182,16,78]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |     46  |   46  |     46  |  [46,157,182,16,78]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |   46  |     46  |  [46,157,182,16,78]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |   46  |     46  |  [46,157,182,16,78]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |   46  |    157  |  [46,157,182,16,78]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |    157  |  203  |    157  |  [46,157,182,16,78]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  203  |    157  |  [46,157,182,16,78]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  203  |    157  |  [46,157,182,16,78]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  203  |    182  |  [46,157,182,16,78]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |    182  |  385  |    182  |  [46,157,182,16,78]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  385  |    182  |  [46,157,182,16,78]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  385  |    182  |  [46,157,182,16,78]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  385  |     16  |  [46,157,182,16,78]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |     16  |  401  |     16  |  [46,157,182,16,78]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  401  |     16  |  [46,157,182,16,78]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  401  |     16  |  [46,157,182,16,78]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  401  |     78  |  [46,157,182,16,78]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |     78  |  479  |     78  |  [46,157,182,16,78]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  479  |     78  |  [46,157,182,16,78]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  479  |     78  |  [46,157,182,16,78]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,43,57,71,85}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |     46  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |    157  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |    182  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |     16  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |     78  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m8.890s
user	0m13.792s
sys	0m3.006s

2023-01-26 13:02:59,097 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:03:07,358 INFO     Done. Execution time: 8.261066913604736 seconds
2023-01-26 13:03:07,358 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `6.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1303-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1303-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.252s
user	0m18.054s
sys	0m2.597s

2023-01-26 13:03:07,358 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-26 13:03:07,358 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:04:13,458 INFO     Done. Execution time: 66.09928727149963 seconds
2023-01-26 13:04:13,458 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz2468843769469832341/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2468843769469832341/bin -o /tmp/qfuzz2468843769469832341/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2468843769469832341/bin
Found file /tmp/qfuzz2468843769469832341/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz2468843769469832341/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2468843769469832341/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2468843769469832341/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2468843769469832341/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2468843769469832341/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 132086 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 145573 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m132k to 145k us (average: 138k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 27.00; [1355.00,1995.00,2188.00,2228.00,2255.00,3524.00,3855.00]
2; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 7; 51.00; [655.00,948.00,3215.00,3368.00,3555.00,3884.00,3935.00]
3; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 4; 7.00; [88.00,95.00,1068.00,2464.00]
4; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 7; 40.00; [1355.00,1995.00,2095.00,2188.00,2228.00,3104.00,3855.00]
6; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta; 7; 107.00; [248.00,355.00,835.00,2264.00,3228.00,3835.00,4015.00]
7; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta; 7; 140.00; [275.00,415.00,768.00,1408.00,2235.00,3075.00,3524.00]
10; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8; 7; 27.00; [1815.00,1995.00,2188.00,2228.00,2255.00,3524.00,3855.00]
12; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta; 7; 173.00; [424.00,775.00,1415.00,1588.00,1768.00,2235.00,2975.00]
15; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8; 7; 133.00; [404.00,555.00,688.00,835.00,1135.00,1768.00,2955.00]
26; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta; 7; 193.00; [868.00,1355.00,1995.00,2255.00,2448.00,3524.00,3855.00]
28; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta; 7; 260.00; [248.00,728.00,1355.00,1995.00,2255.00,3524.00,3855.00]
42; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64; 7; 120.00; [404.00,1175.00,1328.00,2168.00,3335.00,3455.00,3675.00]
57; /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8,+delta; 7; 267.00; [88.00,615.00,1088.00,1355.00,1995.00,3524.00,3895.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 30, 67, 99, 194, 4, 54, 20, 111, 59, 178, 110, 102, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 183, 172, 58, 166, 108, 66, 149, 133, 137, 97, 88, 9, 9, 64, 56, 125, 66, 88, 133, 101, 49)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 12, 36, 20, 69, 38, 70, 148, 79, 88, 79, 30, 86, 106, 79, 30, 86, 144, 15, 120, 78, 19, 41, 108, 52, 88, 120, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 122, 43, 110, 111, 38, 70, 148, 79, 30, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 147, 27, 41, 56, 34, 88, 120, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 29, 86, 144, 15, 120, 78, 19, 61, 181, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 90, 99, 192, 109, 111, 20, 34, 38, 70, 148, 114, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 153, 13, 20, 111, 38, 70, 166, 79, 93, 121, 88, 176, 58, 88, 110, 111, 25, 108, 103, 93, 153, 55, 66, 108, 103, 93, 121, 60)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(112, 191, 17, 200, 41, 12)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(154, 104, 67, 99, 192, 109, 111, 20, 48, 94, 70, 148, 79, 112, 20, 30, 108, 144, 175, 122, 100, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(122, 4, 4, 4, 4, 4, 53, 121)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2468843769469832341/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,30,67,99,194], 4, 54
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [19,183,172,58,166], 108, 66
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 12, 36
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 122, 43
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [19,147,27,41,56], 34, 88
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [20,111,38,70,148], 79, 88
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,90,99,192], 109, 111
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,153,13,20,111], 38, 70
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [154,104,67,99,192], 109, 111
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [122,4,4,4,4], 4, 53
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 47, 168
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 109, 111
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.092s
user	0m27.359s
sys	0m1.697s

2023-01-26 13:04:13,458 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-26 13:04:13,458 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-26 13:04:23,721 INFO     Done. Execution time: 10.262945175170898 seconds
2023-01-26 13:04:23,722 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 12, 36)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([19,183,172,58,166], 108, 66)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,30,67,99,194], 4, 54)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 12 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 122, 43)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([19,147,27,41,56], 34, 88)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([20,111,38,70,148], 79, 88)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,90,99,192], 109, 111)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([154,104,67,99,192], 109, 111)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([122,4,4,4,4], 4, 53)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 47, 168)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 109, 111)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,153,13,20,111], 38, 70)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 12)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 12 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 136):
                                                                                                                             
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  months  |        tokens        |  years  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |      54  |  [175,30,67,99,194]  |      4  |
    26  |                      // int R = 0;  |         |    0  |         |     |      54  |  [175,30,67,99,194]  |      4  |
    27  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |      54  |  [175,30,67,99,194]  |      4  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |      54  |  [175,30,67,99,194]  |      4  |
    30  |                     int chunk = 0;  |         |    0  |      0  |     |      54  |  [175,30,67,99,194]  |      4  |
    32  |                         int i = 0;  |         |    0  |      0  |  0  |      54  |  [175,30,67,99,194]  |      4  |
    38  |      chunk = arrayRead(tokens, i);  |         |    0  |    175  |  0  |      54  |  [175,30,67,99,194]  |      4  |
    41  |                     R = R + chunk;  |    175  |  175  |    175  |  0  |      54  |  [175,30,67,99,194]  |      4  |
    44  |                     R = R + years;  |      4  |  179  |    175  |  0  |      54  |  [175,30,67,99,194]  |      4  |
    47  |                    R = R + months;  |     54  |  233  |    175  |  0  |      54  |  [175,30,67,99,194]  |      4  |
    51  |                         i = i + 1;  |         |  233  |    175  |  1  |      54  |  [175,30,67,99,194]  |      4  |
    52  |              resetPlaceHolder_1();  |         |  233  |    175  |  1  |      54  |  [175,30,67,99,194]  |      4  |
    58  |      chunk = arrayRead(tokens, i);  |         |  233  |     30  |  1  |      54  |  [175,30,67,99,194]  |      4  |
    61  |                     R = R + chunk;  |     30  |  263  |     30  |  1  |      54  |  [175,30,67,99,194]  |      4  |
    64  |                     R = R + years;  |      4  |  267  |     30  |  1  |      54  |  [175,30,67,99,194]  |      4  |
    67  |                    R = R + months;  |     54  |  321  |     30  |  1  |      54  |  [175,30,67,99,194]  |      4  |
    71  |                         i = i + 1;  |         |  321  |     30  |  2  |      54  |  [175,30,67,99,194]  |      4  |
    72  |              resetPlaceHolder_1();  |         |  321  |     30  |  2  |      54  |  [175,30,67,99,194]  |      4  |
    78  |      chunk = arrayRead(tokens, i);  |         |  321  |     67  |  2  |      54  |  [175,30,67,99,194]  |      4  |
    81  |                     R = R + chunk;  |     67  |  388  |     67  |  2  |      54  |  [175,30,67,99,194]  |      4  |
    84  |                     R = R + years;  |      4  |  392  |     67  |  2  |      54  |  [175,30,67,99,194]  |      4  |
    87  |                    R = R + months;  |     54  |  446  |     67  |  2  |      54  |  [175,30,67,99,194]  |      4  |
    91  |                         i = i + 1;  |         |  446  |     67  |  3  |      54  |  [175,30,67,99,194]  |      4  |
    92  |              resetPlaceHolder_1();  |         |  446  |     67  |  3  |      54  |  [175,30,67,99,194]  |      4  |
    98  |      chunk = arrayRead(tokens, i);  |         |  446  |     99  |  3  |      54  |  [175,30,67,99,194]  |      4  |
   101  |                     R = R + chunk;  |     99  |  545  |     99  |  3  |      54  |  [175,30,67,99,194]  |      4  |
   104  |                     R = R + years;  |      4  |  549  |     99  |  3  |      54  |  [175,30,67,99,194]  |      4  |
   107  |                    R = R + months;  |     54  |  603  |     99  |  3  |      54  |  [175,30,67,99,194]  |      4  |
   111  |                         i = i + 1;  |         |  603  |     99  |  4  |      54  |  [175,30,67,99,194]  |      4  |
   112  |              resetPlaceHolder_1();  |         |  603  |     99  |  4  |      54  |  [175,30,67,99,194]  |      4  |
   118  |      chunk = arrayRead(tokens, i);  |         |  603  |    194  |  4  |      54  |  [175,30,67,99,194]  |      4  |
   121  |                     R = R + chunk;  |    194  |  797  |    194  |  4  |      54  |  [175,30,67,99,194]  |      4  |
   124  |                     R = R + years;  |      4  |  801  |    194  |  4  |      54  |  [175,30,67,99,194]  |      4  |
   127  |                    R = R + months;  |     54  |  855  |    194  |  4  |      54  |  [175,30,67,99,194]  |      4  |
   131  |                         i = i + 1;  |         |  855  |    194  |  5  |      54  |  [175,30,67,99,194]  |      4  |
   132  |              resetPlaceHolder_1();  |         |  855  |    194  |  5  |      54  |  [175,30,67,99,194]  |      4  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {104}; {124}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    175  |                            |
    44  |         R = R + years;  |      4  |                         0  |
    47  |        R = R + months;  |     54  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     30  |                            |
    64  |         R = R + years;  |      4  |                         1  |
    67  |        R = R + months;  |     54  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     67  |                            |
    84  |         R = R + years;  |      4  |                         2  |
    87  |        R = R + months;  |     54  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |     99  |                            |
   104  |         R = R + years;  |      4  |                         3  |
   107  |        R = R + months;  |     54  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    194  |                            |
   124  |         R = R + years;  |      4  |                         4  |
   127  |        R = R + months;  |     54  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {107}; {127}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    175  |                            |
    44  |         R = R + years;  |      4  |                            |
    47  |        R = R + months;  |     54  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |     30  |                            |
    64  |         R = R + years;  |      4  |                            |
    67  |        R = R + months;  |     54  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |     67  |                            |
    84  |         R = R + years;  |      4  |                            |
    87  |        R = R + months;  |     54  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |     99  |                            |
   104  |         R = R + years;  |      4  |                            |
   107  |        R = R + months;  |     54  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    194  |                            |
   124  |         R = R + years;  |      4  |                            |
   127  |        R = R + months;  |     54  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}; {124}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {47}; {67}; {87}
GroupID(2): {41,61,81,101,121}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    175  |                            |                            |                         0  |
    44  |         R = R + years;  |      4  |                         0  |                            |                            |
    47  |        R = R + months;  |     54  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |     30  |                            |                            |                         0  |
    64  |         R = R + years;  |      4  |                         1  |                            |                            |
    67  |        R = R + months;  |     54  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |     67  |                            |                            |                         0  |
    84  |         R = R + years;  |      4  |                         2  |                            |                            |
    87  |        R = R + months;  |     54  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |     99  |                            |                            |                         0  |
   104  |         R = R + years;  |      4  |                         3  |                            |                            |
   107  |        R = R + months;  |     54  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |    194  |                            |                            |                         0  |
   124  |         R = R + years;  |      4  |                         4  |                            |                            |
   127  |        R = R + months;  |     54  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set(52, 72, 92, 112)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R months -> R1 = R1 + months;
use R years -> R0 = R0 + years;
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m10.254s
user	0m17.488s
sys	0m4.366s

2023-01-26 13:04:23,722 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:05:27,218 INFO     Done. Execution time: 63.49626064300537 seconds
2023-01-26 13:05:27,218 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `61.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1304-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1304-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m3.489s
user	3m14.033s
sys	0m21.284s

2023-01-26 13:05:27,219 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-26 13:05:27,219 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:06:33,311 INFO     Done. Execution time: 66.09166669845581 seconds
2023-01-26 13:06:33,311 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz2779308285067493170/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2779308285067493170/bin -o /tmp/qfuzz2779308285067493170/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2779308285067493170/bin
Found file /tmp/qfuzz2779308285067493170/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz2779308285067493170/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2779308285067493170/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2779308285067493170/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2779308285067493170/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2779308285067493170/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 134889 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 124951 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m124k to 134k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2779308285067493170/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz2779308285067493170/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 4.00; [30.00,34.00]
3; /tmp/qfuzz2779308285067493170/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2779308285067493170/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz2779308285067493170/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2779308285067493170/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2779308285067493170/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(192, 109, 88, 79, 30, 86, 139, 45, 35, 30, 4, 122, 52, 80, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 101, 119, 138, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2779308285067493170/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2779308285067493170/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.084s
user	0m23.911s
sys	0m1.806s

2023-01-26 13:06:33,311 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-26 13:06:33,311 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-26 13:06:38,731 INFO     Done. Execution time: 5.419284105300903 seconds
2023-01-26 13:06:38,731 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m5.410s
user	0m9.599s
sys	0m1.631s

2023-01-26 13:06:38,731 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:06:47,167 INFO     Done. Execution time: 8.435755491256714 seconds
2023-01-26 13:06:47,167 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1306-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1306-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.428s
user	0m17.701s
sys	0m2.855s

2023-01-26 13:06:47,167 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-26 13:06:47,168 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:07:53,580 INFO     Done. Execution time: 66.41229319572449 seconds
2023-01-26 13:07:53,580 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz2320320844709707542/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2320320844709707542/bin -o /tmp/qfuzz2320320844709707542/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2320320844709707542/bin
Found file /tmp/qfuzz2320320844709707542/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz2320320844709707542/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2320320844709707542/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2320320844709707542/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2320320844709707542/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2320320844709707542/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 94, exec speed = 135985 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 94, exec speed = 133727 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m94 to 94 bits (average: 94.00 bits)
[1;90m        Exec timing : [0m133k to 135k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (6 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 1.00; [28.00,32.00,35.50,37.00,1348.00,1988.00,2248.00,3508.00,3848.00]
2; /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 9; 1.00; [28.00,32.00,35.50,37.00,648.00,3208.00,3548.00,3868.00,3928.00]
6; /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:2; 9; 1.00; [28.00,32.00,35.50,37.00,648.00,3208.00,3328.00,3548.00,3928.00]
9; /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:64; 9; 1.00; [28.00,32.00,35.50,37.00,108.00,1048.00,1828.00,2068.00,2828.00]
14; /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000004,src:000000+000001,op:splice,rep:16; 8; 1.00; [28.00,32.00,35.50,37.00,3208.00,3548.00,3568.00,3928.00]
29; /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:2; 6; 1.00; [28.00,32.00,35.50,37.00,1188.00,1308.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:2
/tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000004,src:000000+000001,op:splice,rep:16
/tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:64
/tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:2
/tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000005,src:000000+000001,op:splice,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(65, 59, 59, 59, 59, 59, 59, 59, 59, 59, 169, 112, 67, 99, 192, 109, 111, 150, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000004,src:000000+000001,op:splice,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(196, 160, 196, 177, 178, 171, 70, 70, 38, 31)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000003,src:000000+000001,op:splice,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(141, 103, 52, 5, 91, 70, 135, 159, 6, 4, 74, 122, 28, 84, 128, 35, 133, 33, 166, 160, 154, 195, 85, 113, 11, 19, 74, 122, 176, 84, 128, 11, 48)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000002,src:000000+000001,op:splice,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(166, 160, 196, 177, 32, 47, 168, 82, 122, 176, 84, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2320320844709707542/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [65,59,59,59,59]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [196,160,196,177,178]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [141,103,52,5,91]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [166,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.403s
user	0m26.420s
sys	0m1.919s

2023-01-26 13:07:53,580 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-26 13:07:53,581 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-26 13:08:03,035 INFO     Done. Execution time: 9.45378851890564 seconds
2023-01-26 13:08:03,035 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([65,59,59,59,59])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([196,160,196,177,178])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([166,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([141,103,52,5,91])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 6)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 191):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |    baseMessage     |  buffer  |  chunk  |  i  |
-----------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [65,59,59,59,59]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [65,59,59,59,59]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [65,59,59,59,59]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [65,59,59,59,59]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [65,59,59,59,59]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [65,59,59,59,59]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [65,59,59,59,59]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [65,59,59,59,59]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [65,59,59,59,59]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [65,59,59,59,59]  |       0  |     65  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [65,59,59,59,59]  |       0  |     65  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [65,59,59,59,59]  |       0  |     65  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [65,59,59,59,59]  |       0  |     65  |  0  |
    42  |                     R = R + chunk;  |     65  |   70  |  [65,59,59,59,59]  |       0  |     65  |  0  |
    45  |                         R = R + 1;  |      1  |   71  |  [65,59,59,59,59]  |       0  |     65  |  0  |
    48  |                         R = R + 1;  |      1  |   72  |  [65,59,59,59,59]  |       0  |     65  |  0  |
    51  |                         R = R + 1;  |      1  |   73  |  [65,59,59,59,59]  |       0  |     65  |  0  |
    55  |                         i = i + 1;  |         |   73  |  [65,59,59,59,59]  |       0  |     65  |  1  |
    56  |              resetPlaceHolder_1();  |         |   73  |  [65,59,59,59,59]  |       0  |     65  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |   73  |  [65,59,59,59,59]  |       0  |     59  |  1  |
    65  |                         R = R + 1;  |      1  |   74  |  [65,59,59,59,59]  |       0  |     59  |  1  |
    68  |                         R = R + 1;  |      1  |   75  |  [65,59,59,59,59]  |       0  |     59  |  1  |
    71  |                         R = R + 1;  |      1  |   76  |  [65,59,59,59,59]  |       0  |     59  |  1  |
    74  |                     R = R + chunk;  |     59  |  135  |  [65,59,59,59,59]  |       0  |     59  |  1  |
    77  |                         R = R + 1;  |      1  |  136  |  [65,59,59,59,59]  |       0  |     59  |  1  |
    80  |                         R = R + 1;  |      1  |  137  |  [65,59,59,59,59]  |       0  |     59  |  1  |
    83  |                         R = R + 1;  |      1  |  138  |  [65,59,59,59,59]  |       0  |     59  |  1  |
    87  |                         i = i + 1;  |         |  138  |  [65,59,59,59,59]  |       0  |     59  |  2  |
    88  |              resetPlaceHolder_1();  |         |  138  |  [65,59,59,59,59]  |       0  |     59  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |  138  |  [65,59,59,59,59]  |       0  |     59  |  2  |
    97  |                         R = R + 1;  |      1  |  139  |  [65,59,59,59,59]  |       0  |     59  |  2  |
   100  |                         R = R + 1;  |      1  |  140  |  [65,59,59,59,59]  |       0  |     59  |  2  |
   103  |                         R = R + 1;  |      1  |  141  |  [65,59,59,59,59]  |       0  |     59  |  2  |
   106  |                     R = R + chunk;  |     59  |  200  |  [65,59,59,59,59]  |       0  |     59  |  2  |
   109  |                         R = R + 1;  |      1  |  201  |  [65,59,59,59,59]  |       0  |     59  |  2  |
   112  |                         R = R + 1;  |      1  |  202  |  [65,59,59,59,59]  |       0  |     59  |  2  |
   115  |                         R = R + 1;  |      1  |  203  |  [65,59,59,59,59]  |       0  |     59  |  2  |
   119  |                         i = i + 1;  |         |  203  |  [65,59,59,59,59]  |       0  |     59  |  3  |
   120  |              resetPlaceHolder_1();  |         |  203  |  [65,59,59,59,59]  |       0  |     59  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  203  |  [65,59,59,59,59]  |       0  |     59  |  3  |
   129  |                         R = R + 1;  |      1  |  204  |  [65,59,59,59,59]  |       0  |     59  |  3  |
   132  |                         R = R + 1;  |      1  |  205  |  [65,59,59,59,59]  |       0  |     59  |  3  |
   135  |                         R = R + 1;  |      1  |  206  |  [65,59,59,59,59]  |       0  |     59  |  3  |
   138  |                     R = R + chunk;  |     59  |  265  |  [65,59,59,59,59]  |       0  |     59  |  3  |
   141  |                         R = R + 1;  |      1  |  266  |  [65,59,59,59,59]  |       0  |     59  |  3  |
   144  |                         R = R + 1;  |      1  |  267  |  [65,59,59,59,59]  |       0  |     59  |  3  |
   147  |                         R = R + 1;  |      1  |  268  |  [65,59,59,59,59]  |       0  |     59  |  3  |
   151  |                         i = i + 1;  |         |  268  |  [65,59,59,59,59]  |       0  |     59  |  4  |
   152  |              resetPlaceHolder_1();  |         |  268  |  [65,59,59,59,59]  |       0  |     59  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  268  |  [65,59,59,59,59]  |       0  |     59  |  4  |
   161  |                         R = R + 1;  |      1  |  269  |  [65,59,59,59,59]  |       0  |     59  |  4  |
   164  |                         R = R + 1;  |      1  |  270  |  [65,59,59,59,59]  |       0  |     59  |  4  |
   167  |                         R = R + 1;  |      1  |  271  |  [65,59,59,59,59]  |       0  |     59  |  4  |
   170  |                     R = R + chunk;  |     59  |  330  |  [65,59,59,59,59]  |       0  |     59  |  4  |
   173  |                         R = R + 1;  |      1  |  331  |  [65,59,59,59,59]  |       0  |     59  |  4  |
   176  |                         R = R + 1;  |      1  |  332  |  [65,59,59,59,59]  |       0  |     59  |  4  |
   179  |                         R = R + 1;  |      1  |  333  |  [65,59,59,59,59]  |       0  |     59  |  4  |
   183  |                         i = i + 1;  |         |  333  |  [65,59,59,59,59]  |       0  |     59  |  5  |
   184  |              resetPlaceHolder_1();  |         |  333  |  [65,59,59,59,59]  |       0  |     59  |  5  |
   190  |                         R = R + 1;  |      1  |  334  |  [65,59,59,59,59]  |       0  |     59  |  5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [138, 170, 115, 42, 20, 164, 179, 106, 147, 132, 74, 33, 65, 97, 141, 109, 77, 173, 129, 45, 161, 17, 176, 71, 144, 39, 103, 135, 80, 167, 112, 48, 36, 51, 190, 68, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {190}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |     65  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |     59  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |     59  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |     59  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |     59  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                        32  |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {138}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {170}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {138}; {170}; {74}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {138}; {170}; {74} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                            |
    20  |             R = R + 1;  |      1  |                            |
    33  |             R = R + 1;  |      1  |                            |
    36  |             R = R + 1;  |      1  |                            |
    39  |             R = R + 1;  |      1  |                            |
    42  |         R = R + chunk;  |     65  |                            |
    45  |             R = R + 1;  |      1  |                            |
    48  |             R = R + 1;  |      1  |                            |
    51  |             R = R + 1;  |      1  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                            |
    68  |             R = R + 1;  |      1  |                            |
    71  |             R = R + 1;  |      1  |                            |
    74  |         R = R + chunk;  |     59  |                         0  |
    77  |             R = R + 1;  |      1  |                            |
    80  |             R = R + 1;  |      1  |                            |
    83  |             R = R + 1;  |      1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                            |
   100  |             R = R + 1;  |      1  |                            |
   103  |             R = R + 1;  |      1  |                            |
   106  |         R = R + chunk;  |     59  |                         1  |
   109  |             R = R + 1;  |      1  |                            |
   112  |             R = R + 1;  |      1  |                            |
   115  |             R = R + 1;  |      1  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                            |
   132  |             R = R + 1;  |      1  |                            |
   135  |             R = R + 1;  |      1  |                            |
   138  |         R = R + chunk;  |     59  |                         2  |
   141  |             R = R + 1;  |      1  |                            |
   144  |             R = R + 1;  |      1  |                            |
   147  |             R = R + 1;  |      1  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                            |
   164  |             R = R + 1;  |      1  |                            |
   167  |             R = R + 1;  |      1  |                            |
   170  |         R = R + chunk;  |     59  |                         3  |
   173  |             R = R + 1;  |      1  |                            |
   176  |             R = R + 1;  |      1  |                            |
   179  |             R = R + 1;  |      1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {106}; {138}; {170}; {74}
GroupID(2): {42}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 189])
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |                            |
    42  |         R = R + chunk;  |     65  |                            |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |                            |
    74  |         R = R + chunk;  |     59  |                            |                         0  |                            |
    77  |             R = R + 1;  |      1  |                        11  |                            |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |                            |
   106  |         R = R + chunk;  |     59  |                            |                         1  |                            |
   109  |             R = R + 1;  |      1  |                        17  |                            |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |                            |
   138  |         R = R + chunk;  |     59  |                            |                         2  |                            |
   141  |             R = R + 1;  |      1  |                        23  |                            |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |                            |
   170  |         R = R + chunk;  |     59  |                            |                         3  |                            |
   173  |             R = R + 1;  |      1  |                        29  |                            |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set(88, 120, 152)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> if ((i < 0) || (i == 0))
{
  R2 = R2 + chunk;
}
else
{
  R1 = R1 + chunk;
}
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  if ((i < 1) || (i == 1))
  {
    // reset R1
  }
  else
  {
    if (S1 < R1)
    {
      S1 = R1;
    }
    else
    {
      ;
    }
    R1 = 0;
    C1 = C1 + 1;
  }
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m9.444s
user	0m24.132s
sys	0m4.010s

2023-01-26 13:08:03,037 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:08:26,111 INFO     Done. Execution time: 23.074228048324585 seconds
2023-01-26 13:08:26,112 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 0) || (i == 0))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 1) || (i == 1))
      {

      }
      else
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (8 + (8 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (3 + (6 * baseMessage))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      if ((i < 0) || (i == 0))
      {
        D2 = D2 + chunk;
      }
      else
      {
        D1 = D1 + chunk;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      if ((i < 1) || (i == 1))
      {

      }
      else
      {
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 baseMessage)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 baseMessage)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 baseMessage)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D2 a!1 D1 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D2p () Int)
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C2 () Int)
(declare-fun D2 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C47 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C43 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C48 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C37 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C44 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C41 () Int)
(declare-fun C49 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C45 () Int)
(declare-fun C39 () Int)
(declare-fun C28 () Int)
(declare-fun C38 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C42 () Int)
(declare-fun C27 () Int)
(declare-fun C40 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C46 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D2p 0))
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!4 (<= D2p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!5 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!6 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D2 a!1 D1 a!2 D0 a!3))
       (<= D2p 0)
       (or a!4 (= D2p 0))
       a!5
       (or a!5 (= D1p 0))
       (<= D0p 0)
       (or a!6 (= D0p 0)))))
(assert (let ((a!1 (<= D2 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!3 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D2 0)) (or a!2 (= D1 0)) (or a!3 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C46 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C40 0)
     (>= C27 0)
     (>= C42 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C38 0)
     (>= C28 0)
     (>= C39 0)
     (>= C45 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C49 0)
     (>= C41 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C44 0)
     (>= C4 0)
     (>= C29 0)
     (>= C37 0)
     (>= C22 0)
     (>= C19 0)
     (>= C48 0)
     (>= C33 0)
     (>= C3 0)
     (>= C43 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C47 0)
     (>= C21 0)
     (>= C32 0)
     (<= C2 0)
     (<= C1 (+ 0 (* 1 1 baseMessage)))
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    (- 4))  (define-fun D1 () Int    7)  (define-fun D2 () Int    7)  (define-fun C1 () Int    15)  (define-fun baseMessage () Int    15)  (define-fun D1p () Int    9)  (define-fun C2 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D2p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C47 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C43 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C48 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C37 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C44 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C41 () Int    0)  (define-fun C49 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C45 () Int    0)  (define-fun C39 () Int    0)  (define-fun C28 () Int    0)  (define-fun C38 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C42 () Int    0)  (define-fun C27 () Int    0)  (define-fun C40 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C46 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `21.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1308-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1308-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m23.065s
user	1m15.712s
sys	0m8.540s

2023-01-26 13:08:26,112 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-26 13:08:26,112 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:09:32,202 INFO     Done. Execution time: 66.0898597240448 seconds
2023-01-26 13:09:32,202 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz3259149096675332376/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3259149096675332376/bin -o /tmp/qfuzz3259149096675332376/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3259149096675332376/bin
Found file /tmp/qfuzz3259149096675332376/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz3259149096675332376/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3259149096675332376/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3259149096675332376/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3259149096675332376/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3259149096675332376/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 140167 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 133611 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m133k to 140k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 6.00; [51.00,57.00]
3; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 2; 6.00; [51.00,57.00]
4; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
7; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
10; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 2; 6.00; [51.00,57.00]
11; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
13; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 2; 6.00; [51.00,57.00]
17; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64; 2; 6.00; [51.00,57.00]
21; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
23; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
25; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:4; 2; 6.00; [51.00,57.00]
31; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8; 2; 6.00; [51.00,57.00]
34; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]
42; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:4; 2; 6.00; [51.00,57.00]
44; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4; 2; 6.00; [51.00,57.00]
51; /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:128; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:128
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:4
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:4
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000016,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000015,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(44, 4, 131, 185, 195, 35, 30, 41, 108, 52, 88, 120, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 112, 67, 190, 192, 109, 83, 20, 111, 38, 83, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(125, 160, 106, 45, 5, 5, 125, 125, 115, 168, 125, 159, 142, 142, 142, 142, 142, 142, 63, 142, 142, 142, 197, 168, 20, 4, 125, 130, 18, 26, 125, 130, 125, 53, 58, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 112, 20, 56, 108, 103, 93, 97, 88, 185, 195, 17, 30, 41, 108, 163, 144, 75, 120, 78, 19, 61, 160, 38)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(19, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 85, 185, 195, 35, 30, 98, 108, 52, 88, 181, 191, 133, 88, 79, 30, 86, 165, 15, 120, 78, 197, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(51)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(168, 168, 168, 168, 168, 168, 168, 168, 168)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(183, 196, 183, 196)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(26, 26, 195, 26, 26, 26, 148, 26, 26, 26, 168)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(13, 112, 67, 99, 192, 109, 111, 20, 111, 38, 52, 5, 9, 88, 79, 67, 86, 144, 12, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 108, 36, 189, 66, 72, 93, 30, 108, 113, 85, 32, 35, 167, 12, 128, 27, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3259149096675332376/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 44
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 151
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 125
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 190
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 19
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 51
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 168
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 183
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 26
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 13
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 193
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 175
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.082s
user	0m25.159s
sys	0m2.076s

2023-01-26 13:09:32,202 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-26 13:09:32,203 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-26 13:09:39,260 INFO     Done. Execution time: 7.057366132736206 seconds
2023-01-26 13:09:39,260 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(44)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 13 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(151)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(125)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(190)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(19)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(51)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(168)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(183)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(26)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 13 (61.54%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(13)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(193)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(175)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 13)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 13 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 950):
                                                                                                             
 Index  |              Commands               |  Costs  |  R   |  arrayPrefix  |  className  |  className_  |
-------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |   0  |               |         44  |              |
    11  |               int arrayPrefix = 0;  |         |   0  |            0  |         44  |              |
    12  |                      // int R = 0;  |         |   0  |            0  |         44  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |   0  |            0  |         44  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |   0  |            0  |         44  |              |
    16  |        int className_ = className;  |         |   0  |            0  |         44  |          44  |
    29  |       className_ = className_ - 1;  |         |   0  |            0  |         44  |          43  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |   0  |            2  |         44  |          43  |
    36  |                         R = R + 2;  |      2  |   2  |            2  |         44  |          43  |
    37  |              resetPlaceHolder_1();  |         |   2  |            2  |         44  |          43  |
    50  |       className_ = className_ - 1;  |         |   2  |            2  |         44  |          42  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |   2  |            4  |         44  |          42  |
    57  |                         R = R + 2;  |      2  |   4  |            4  |         44  |          42  |
    58  |              resetPlaceHolder_1();  |         |   4  |            4  |         44  |          42  |
    71  |       className_ = className_ - 1;  |         |   4  |            4  |         44  |          41  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |   4  |            6  |         44  |          41  |
    78  |                         R = R + 2;  |      2  |   6  |            6  |         44  |          41  |
    79  |              resetPlaceHolder_1();  |         |   6  |            6  |         44  |          41  |
    92  |       className_ = className_ - 1;  |         |   6  |            6  |         44  |          40  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |   6  |            8  |         44  |          40  |
    99  |                         R = R + 2;  |      2  |   8  |            8  |         44  |          40  |
   100  |              resetPlaceHolder_1();  |         |   8  |            8  |         44  |          40  |
   113  |       className_ = className_ - 1;  |         |   8  |            8  |         44  |          39  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |   8  |           10  |         44  |          39  |
   120  |                         R = R + 2;  |      2  |  10  |           10  |         44  |          39  |
   121  |              resetPlaceHolder_1();  |         |  10  |           10  |         44  |          39  |
   134  |       className_ = className_ - 1;  |         |  10  |           10  |         44  |          38  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |  10  |           12  |         44  |          38  |
   141  |                         R = R + 2;  |      2  |  12  |           12  |         44  |          38  |
   142  |              resetPlaceHolder_1();  |         |  12  |           12  |         44  |          38  |
   155  |       className_ = className_ - 1;  |         |  12  |           12  |         44  |          37  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |  12  |           14  |         44  |          37  |
   162  |                         R = R + 2;  |      2  |  14  |           14  |         44  |          37  |
   163  |              resetPlaceHolder_1();  |         |  14  |           14  |         44  |          37  |
   176  |       className_ = className_ - 1;  |         |  14  |           14  |         44  |          36  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |  14  |           16  |         44  |          36  |
   183  |                         R = R + 2;  |      2  |  16  |           16  |         44  |          36  |
   184  |              resetPlaceHolder_1();  |         |  16  |           16  |         44  |          36  |
   197  |       className_ = className_ - 1;  |         |  16  |           16  |         44  |          35  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |  16  |           18  |         44  |          35  |
   204  |                         R = R + 2;  |      2  |  18  |           18  |         44  |          35  |
   205  |              resetPlaceHolder_1();  |         |  18  |           18  |         44  |          35  |
   218  |       className_ = className_ - 1;  |         |  18  |           18  |         44  |          34  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |  18  |           20  |         44  |          34  |
   225  |                         R = R + 2;  |      2  |  20  |           20  |         44  |          34  |
   226  |              resetPlaceHolder_1();  |         |  20  |           20  |         44  |          34  |
   239  |       className_ = className_ - 1;  |         |  20  |           20  |         44  |          33  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |  20  |           22  |         44  |          33  |
   246  |                         R = R + 2;  |      2  |  22  |           22  |         44  |          33  |
   247  |              resetPlaceHolder_1();  |         |  22  |           22  |         44  |          33  |
   260  |       className_ = className_ - 1;  |         |  22  |           22  |         44  |          32  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |  22  |           24  |         44  |          32  |
   267  |                         R = R + 2;  |      2  |  24  |           24  |         44  |          32  |
   268  |              resetPlaceHolder_1();  |         |  24  |           24  |         44  |          32  |
   281  |       className_ = className_ - 1;  |         |  24  |           24  |         44  |          31  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |  24  |           26  |         44  |          31  |
   288  |                         R = R + 2;  |      2  |  26  |           26  |         44  |          31  |
   289  |              resetPlaceHolder_1();  |         |  26  |           26  |         44  |          31  |
   302  |       className_ = className_ - 1;  |         |  26  |           26  |         44  |          30  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |  26  |           28  |         44  |          30  |
   309  |                         R = R + 2;  |      2  |  28  |           28  |         44  |          30  |
   310  |              resetPlaceHolder_1();  |         |  28  |           28  |         44  |          30  |
   323  |       className_ = className_ - 1;  |         |  28  |           28  |         44  |          29  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |  28  |           30  |         44  |          29  |
   330  |                         R = R + 2;  |      2  |  30  |           30  |         44  |          29  |
   331  |              resetPlaceHolder_1();  |         |  30  |           30  |         44  |          29  |
   344  |       className_ = className_ - 1;  |         |  30  |           30  |         44  |          28  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |  30  |           32  |         44  |          28  |
   351  |                         R = R + 2;  |      2  |  32  |           32  |         44  |          28  |
   352  |              resetPlaceHolder_1();  |         |  32  |           32  |         44  |          28  |
   365  |       className_ = className_ - 1;  |         |  32  |           32  |         44  |          27  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |  32  |           34  |         44  |          27  |
   372  |                         R = R + 2;  |      2  |  34  |           34  |         44  |          27  |
   373  |              resetPlaceHolder_1();  |         |  34  |           34  |         44  |          27  |
   386  |       className_ = className_ - 1;  |         |  34  |           34  |         44  |          26  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |  34  |           36  |         44  |          26  |
   393  |                         R = R + 2;  |      2  |  36  |           36  |         44  |          26  |
   394  |              resetPlaceHolder_1();  |         |  36  |           36  |         44  |          26  |
   407  |       className_ = className_ - 1;  |         |  36  |           36  |         44  |          25  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |  36  |           38  |         44  |          25  |
   414  |                         R = R + 2;  |      2  |  38  |           38  |         44  |          25  |
   415  |              resetPlaceHolder_1();  |         |  38  |           38  |         44  |          25  |
   428  |       className_ = className_ - 1;  |         |  38  |           38  |         44  |          24  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |  38  |           40  |         44  |          24  |
   435  |                         R = R + 2;  |      2  |  40  |           40  |         44  |          24  |
   436  |              resetPlaceHolder_1();  |         |  40  |           40  |         44  |          24  |
   449  |       className_ = className_ - 1;  |         |  40  |           40  |         44  |          23  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |  40  |           42  |         44  |          23  |
   456  |                         R = R + 2;  |      2  |  42  |           42  |         44  |          23  |
   457  |              resetPlaceHolder_1();  |         |  42  |           42  |         44  |          23  |
   470  |       className_ = className_ - 1;  |         |  42  |           42  |         44  |          22  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |  42  |           44  |         44  |          22  |
   477  |                         R = R + 2;  |      2  |  44  |           44  |         44  |          22  |
   478  |              resetPlaceHolder_1();  |         |  44  |           44  |         44  |          22  |
   491  |       className_ = className_ - 1;  |         |  44  |           44  |         44  |          21  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |  44  |           46  |         44  |          21  |
   498  |                         R = R + 2;  |      2  |  46  |           46  |         44  |          21  |
   499  |              resetPlaceHolder_1();  |         |  46  |           46  |         44  |          21  |
   512  |       className_ = className_ - 1;  |         |  46  |           46  |         44  |          20  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |  46  |           48  |         44  |          20  |
   519  |                         R = R + 2;  |      2  |  48  |           48  |         44  |          20  |
   520  |              resetPlaceHolder_1();  |         |  48  |           48  |         44  |          20  |
   533  |       className_ = className_ - 1;  |         |  48  |           48  |         44  |          19  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |  48  |           50  |         44  |          19  |
   540  |                         R = R + 2;  |      2  |  50  |           50  |         44  |          19  |
   541  |              resetPlaceHolder_1();  |         |  50  |           50  |         44  |          19  |
   554  |       className_ = className_ - 1;  |         |  50  |           50  |         44  |          18  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |  50  |           52  |         44  |          18  |
   561  |                         R = R + 2;  |      2  |  52  |           52  |         44  |          18  |
   562  |              resetPlaceHolder_1();  |         |  52  |           52  |         44  |          18  |
   575  |       className_ = className_ - 1;  |         |  52  |           52  |         44  |          17  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |  52  |           54  |         44  |          17  |
   582  |                         R = R + 2;  |      2  |  54  |           54  |         44  |          17  |
   583  |              resetPlaceHolder_1();  |         |  54  |           54  |         44  |          17  |
   596  |       className_ = className_ - 1;  |         |  54  |           54  |         44  |          16  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |  54  |           56  |         44  |          16  |
   603  |                         R = R + 2;  |      2  |  56  |           56  |         44  |          16  |
   604  |              resetPlaceHolder_1();  |         |  56  |           56  |         44  |          16  |
   617  |       className_ = className_ - 1;  |         |  56  |           56  |         44  |          15  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |  56  |           58  |         44  |          15  |
   624  |                         R = R + 2;  |      2  |  58  |           58  |         44  |          15  |
   625  |              resetPlaceHolder_1();  |         |  58  |           58  |         44  |          15  |
   638  |       className_ = className_ - 1;  |         |  58  |           58  |         44  |          14  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |  58  |           60  |         44  |          14  |
   645  |                         R = R + 2;  |      2  |  60  |           60  |         44  |          14  |
   646  |              resetPlaceHolder_1();  |         |  60  |           60  |         44  |          14  |
   659  |       className_ = className_ - 1;  |         |  60  |           60  |         44  |          13  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |  60  |           62  |         44  |          13  |
   666  |                         R = R + 2;  |      2  |  62  |           62  |         44  |          13  |
   667  |              resetPlaceHolder_1();  |         |  62  |           62  |         44  |          13  |
   680  |       className_ = className_ - 1;  |         |  62  |           62  |         44  |          12  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |  62  |           64  |         44  |          12  |
   687  |                         R = R + 2;  |      2  |  64  |           64  |         44  |          12  |
   688  |              resetPlaceHolder_1();  |         |  64  |           64  |         44  |          12  |
   701  |       className_ = className_ - 1;  |         |  64  |           64  |         44  |          11  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |  64  |           66  |         44  |          11  |
   708  |                         R = R + 2;  |      2  |  66  |           66  |         44  |          11  |
   709  |              resetPlaceHolder_1();  |         |  66  |           66  |         44  |          11  |
   722  |       className_ = className_ - 1;  |         |  66  |           66  |         44  |          10  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |  66  |           68  |         44  |          10  |
   729  |                         R = R + 2;  |      2  |  68  |           68  |         44  |          10  |
   730  |              resetPlaceHolder_1();  |         |  68  |           68  |         44  |          10  |
   743  |       className_ = className_ - 1;  |         |  68  |           68  |         44  |           9  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |  68  |           70  |         44  |           9  |
   750  |                         R = R + 2;  |      2  |  70  |           70  |         44  |           9  |
   751  |              resetPlaceHolder_1();  |         |  70  |           70  |         44  |           9  |
   764  |       className_ = className_ - 1;  |         |  70  |           70  |         44  |           8  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |  70  |           72  |         44  |           8  |
   771  |                         R = R + 2;  |      2  |  72  |           72  |         44  |           8  |
   772  |              resetPlaceHolder_1();  |         |  72  |           72  |         44  |           8  |
   785  |       className_ = className_ - 1;  |         |  72  |           72  |         44  |           7  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |  72  |           74  |         44  |           7  |
   792  |                         R = R + 2;  |      2  |  74  |           74  |         44  |           7  |
   793  |              resetPlaceHolder_1();  |         |  74  |           74  |         44  |           7  |
   806  |       className_ = className_ - 1;  |         |  74  |           74  |         44  |           6  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |  74  |           76  |         44  |           6  |
   813  |                         R = R + 2;  |      2  |  76  |           76  |         44  |           6  |
   814  |              resetPlaceHolder_1();  |         |  76  |           76  |         44  |           6  |
   827  |       className_ = className_ - 1;  |         |  76  |           76  |         44  |           5  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |  76  |           78  |         44  |           5  |
   834  |                         R = R + 2;  |      2  |  78  |           78  |         44  |           5  |
   835  |              resetPlaceHolder_1();  |         |  78  |           78  |         44  |           5  |
   848  |       className_ = className_ - 1;  |         |  78  |           78  |         44  |           4  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |  78  |           80  |         44  |           4  |
   855  |                         R = R + 2;  |      2  |  80  |           80  |         44  |           4  |
   856  |              resetPlaceHolder_1();  |         |  80  |           80  |         44  |           4  |
   869  |       className_ = className_ - 1;  |         |  80  |           80  |         44  |           3  |
   873  |     arrayPrefix = arrayPrefix + 2;  |         |  80  |           82  |         44  |           3  |
   876  |                         R = R + 2;  |      2  |  82  |           82  |         44  |           3  |
   877  |              resetPlaceHolder_1();  |         |  82  |           82  |         44  |           3  |
   890  |       className_ = className_ - 1;  |         |  82  |           82  |         44  |           2  |
   894  |     arrayPrefix = arrayPrefix + 2;  |         |  82  |           84  |         44  |           2  |
   897  |                         R = R + 2;  |      2  |  84  |           84  |         44  |           2  |
   898  |              resetPlaceHolder_1();  |         |  84  |           84  |         44  |           2  |
   911  |       className_ = className_ - 1;  |         |  84  |           84  |         44  |           1  |
   915  |     arrayPrefix = arrayPrefix + 2;  |         |  84  |           86  |         44  |           1  |
   918  |                         R = R + 2;  |      2  |  86  |           86  |         44  |           1  |
   919  |              resetPlaceHolder_1();  |         |  86  |           86  |         44  |           1  |
   932  |       className_ = className_ - 1;  |         |  86  |           86  |         44  |           0  |
   936  |     arrayPrefix = arrayPrefix + 2;  |         |  86  |           88  |         44  |           0  |
   939  |                         R = R + 2;  |      2  |  88  |           88  |         44  |           0  |
   940  |              resetPlaceHolder_1();  |         |  88  |           88  |         44  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 666, 582, 120, 288, 372, 57, 78, 834, 687, 561, 729, 435, 456, 519, 141, 225, 393, 792, 750, 204, 498, 540, 477, 330, 267, 162, 939, 855, 414, 876, 99, 771, 813, 351, 246, 36, 183, 603, 918, 897, 624, 309, 708]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {120}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {162}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {204}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {225}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {246}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {267}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {288}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {309}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {330}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {351}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {372}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {393}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {414}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {435}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {456}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {477}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {498}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {519}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {540}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {561}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {57}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {582}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {603}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {624}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {645}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {666}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {687}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {708}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {729}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {750}
INFO  brbo.backend2.learning.SegmentClustering - Segment 33: {771}
INFO  brbo.backend2.learning.SegmentClustering - Segment 34: {78}
INFO  brbo.backend2.learning.SegmentClustering - Segment 35: {792}
INFO  brbo.backend2.learning.SegmentClustering - Segment 36: {813}
INFO  brbo.backend2.learning.SegmentClustering - Segment 37: {834}
INFO  brbo.backend2.learning.SegmentClustering - Segment 38: {855}
INFO  brbo.backend2.learning.SegmentClustering - Segment 39: {876}
INFO  brbo.backend2.learning.SegmentClustering - Segment 40: {897}
INFO  brbo.backend2.learning.SegmentClustering - Segment 41: {918}
INFO  brbo.backend2.learning.SegmentClustering - Segment 42: {939}
INFO  brbo.backend2.learning.SegmentClustering - Segment 43: {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {99}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {120}; {141}; {162}; {183}; {204}; {225}; {246}; {267}; {288}; {309}; {330}; {351}; {36}; {372}; {393}; {414}; {435}; {456}; {477}; {498}; {519}; {540}; {561}; {57}; {582}; {603}; {624}; {645}; {666}; {687}; {708}; {729}; {750}; {771}; {78}; {792}; {813}; {834}; {855}; {876}; {897}; {918}; {939}; {99}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         1  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         2  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         3  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         4  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         5  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         6  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         7  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         8  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         9  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                        10  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                        11  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                        12  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                        13  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                        14  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                        15  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                        16  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                        17  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                        18  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                        19  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                        20  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                        21  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                        22  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                        23  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                        24  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                        25  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                        26  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                        27  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                        28  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                        29  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                        30  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                        31  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                        32  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                        33  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                        34  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                        35  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                        36  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                        37  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                        38  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                        39  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                        40  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                        41  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                        42  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                        43  |
   940  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(352, 730, 247, 142, 814, 898, 709, 436, 37, 184, 751, 289, 646, 121, 877, 793, 625, 583, 499, 457, 205, 541, 856, 562, 772, 919, 604, 520, 394, 226, 310, 331, 688, 58, 667, 478, 835, 373, 268, 79, 415, 163, 100)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m7.047s
user	0m14.515s
sys	0m1.815s

2023-01-26 13:09:39,261 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:09:47,951 INFO     Done. Execution time: 8.689842700958252 seconds
2023-01-26 13:09:47,951 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `6.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1309-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1309-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.682s
user	0m18.431s
sys	0m2.877s

2023-01-26 13:09:47,951 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-26 13:09:47,952 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:10:54,534 INFO     Done. Execution time: 66.5826210975647 seconds
2023-01-26 13:10:54,535 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz3909809600338697950/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3909809600338697950/bin -o /tmp/qfuzz3909809600338697950/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3909809600338697950/bin
Found file /tmp/qfuzz3909809600338697950/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz3909809600338697950/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3909809600338697950/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3909809600338697950/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3909809600338697950/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3909809600338697950/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 128925 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 39, exec speed = 122333 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m122k to 128k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3909809600338697950/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 15.00; [18.00,33.50]
2; /tmp/qfuzz3909809600338697950/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 15.00; [18.00,33.50]
3; /tmp/qfuzz3909809600338697950/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta; 2; 16.00; [18.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3909809600338697950/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz3909809600338697950/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3909809600338697950/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3909809600338697950/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(126, 115, 135, 7, 165, 4, 58, 132, 49, 169, 160, 115, 19, 150, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3909809600338697950/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3909809600338697950/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.572s
user	0m24.801s
sys	0m1.769s

2023-01-26 13:10:54,535 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-26 13:10:54,535 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-26 13:11:00,202 INFO     Done. Execution time: 5.667045593261719 seconds
2023-01-26 13:11:00,202 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m5.659s
user	0m11.222s
sys	0m1.682s

2023-01-26 13:11:00,202 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:11:07,474 INFO     Done. Execution time: 7.271762847900391 seconds
2023-01-26 13:11:07,475 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1311-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1311-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.264s
user	0m15.833s
sys	0m2.567s

2023-01-26 13:11:07,475 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-26 13:11:07,475 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:12:13,506 INFO     Done. Execution time: 66.03141927719116 seconds
2023-01-26 13:12:13,507 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz3247917492875941551/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3247917492875941551/bin -o /tmp/qfuzz3247917492875941551/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3247917492875941551/bin
Found file /tmp/qfuzz3247917492875941551/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz3247917492875941551/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3247917492875941551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3247917492875941551/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3247917492875941551/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3247917492875941551/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 28, exec speed = 119381 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 28, exec speed = 122980 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m119k to 122k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3247917492875941551/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 10.00; [31.00,41.00]
1; /tmp/qfuzz3247917492875941551/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 10.00; [31.00,41.00]
3; /tmp/qfuzz3247917492875941551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 1; 0.00; [41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3247917492875941551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz3247917492875941551/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3247917492875941551/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3247917492875941551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 108, 172, 67, 149, 68, 14, 6, 70, 112, 77, 161, 57, 52, 16, 27, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3247917492875941551/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3247917492875941551/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.023s
user	0m23.180s
sys	0m1.694s

2023-01-26 13:12:13,507 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-26 13:12:13,507 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-26 13:12:18,142 INFO     Done. Execution time: 4.63500189781189 seconds
2023-01-26 13:12:18,142 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

real	0m4.626s
user	0m7.673s
sys	0m0.958s

2023-01-26 13:12:18,142 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:12:24,830 INFO     Done. Execution time: 6.687101125717163 seconds
2023-01-26 13:12:24,830 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `4.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1312-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1312-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.680s
user	0m14.619s
sys	0m2.354s

2023-01-26 13:12:24,830 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-26 13:12:24,830 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:13:31,043 INFO     Done. Execution time: 66.2126247882843 seconds
2023-01-26 13:13:31,044 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz8738349142687544266/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8738349142687544266/bin -o /tmp/qfuzz8738349142687544266/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8738349142687544266/bin
Found file /tmp/qfuzz8738349142687544266/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz8738349142687544266/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8738349142687544266/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8738349142687544266/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8738349142687544266/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz8738349142687544266/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 131114 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 124149 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m124k to 131k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8738349142687544266/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz8738349142687544266/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz8738349142687544266/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8738349142687544266/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz8738349142687544266/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8738349142687544266/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8738349142687544266/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 14, 114, 110, 126, 166, 148, 10, 174, 189, 53, 14, 48, 167, 12, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8738349142687544266/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8738349142687544266/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.203s
user	0m23.361s
sys	0m1.770s

2023-01-26 13:13:31,044 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-26 13:13:31,044 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-26 13:13:37,072 INFO     Done. Execution time: 6.028304100036621 seconds
2023-01-26 13:13:37,073 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m6.019s
user	0m10.754s
sys	0m1.671s

2023-01-26 13:13:37,073 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:13:47,928 INFO     Done. Execution time: 10.855091333389282 seconds
2023-01-26 13:13:47,929 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `8.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1313-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1313-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.844s
user	0m23.061s
sys	0m3.744s

2023-01-26 13:13:47,930 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-26 13:13:47,930 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:14:54,524 INFO     Done. Execution time: 66.59442901611328 seconds
2023-01-26 13:14:54,525 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz4786025589727910353/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4786025589727910353/bin -o /tmp/qfuzz4786025589727910353/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4786025589727910353/bin
Found file /tmp/qfuzz4786025589727910353/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz4786025589727910353/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4786025589727910353/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4786025589727910353/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4786025589727910353/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz4786025589727910353/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 138283 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 131072 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m131k to 138k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4786025589727910353/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz4786025589727910353/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz4786025589727910353/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4786025589727910353/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz4786025589727910353/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4786025589727910353/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4786025589727910353/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(122, 4, 126, 12, 128, 116, 4, 121, 159, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4786025589727910353/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4786025589727910353/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.581s
user	0m24.595s
sys	0m1.882s

2023-01-26 13:14:54,525 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-26 13:14:54,525 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-26 13:14:59,827 INFO     Done. Execution time: 5.301278114318848 seconds
2023-01-26 13:14:59,827 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m5.292s
user	0m9.554s
sys	0m1.622s

2023-01-26 13:14:59,827 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:15:08,211 INFO     Done. Execution time: 8.383853912353516 seconds
2023-01-26 13:15:08,211 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `6.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1315-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1315-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.376s
user	0m17.666s
sys	0m2.800s

2023-01-26 13:15:08,211 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-26 13:15:08,211 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:16:14,523 INFO     Done. Execution time: 66.31117534637451 seconds
2023-01-26 13:16:14,523 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz2440379400052519607/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2440379400052519607/bin -o /tmp/qfuzz2440379400052519607/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2440379400052519607/bin
Found file /tmp/qfuzz2440379400052519607/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz2440379400052519607/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2440379400052519607/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2440379400052519607/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2440379400052519607/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2440379400052519607/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 21, exec speed = 133269 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 21, exec speed = 122397 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m21 to 21 bits (average: 21.00 bits)
[1;90m        Exec timing : [0m122k to 133k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2440379400052519607/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [34.00]
2; /tmp/qfuzz2440379400052519607/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [34.00]
3; /tmp/qfuzz2440379400052519607/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2440379400052519607/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
/tmp/qfuzz2440379400052519607/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2440379400052519607/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2440379400052519607/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 131, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2440379400052519607/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2440379400052519607/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.302s
user	0m23.635s
sys	0m1.758s

2023-01-26 13:16:14,523 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-26 13:16:14,523 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-26 13:16:17,235 INFO     Done. Execution time: 2.711012125015259 seconds
2023-01-26 13:16:17,235 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m2.703s
user	0m5.249s
sys	0m0.324s

2023-01-26 13:16:17,235 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:16:19,234 INFO     Done. Execution time: 1.999096393585205 seconds
2023-01-26 13:16:19,234 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1316-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1316-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.992s
user	0m3.565s
sys	0m0.205s

2023-01-26 13:16:19,235 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-26 13:16:19,235 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:17:25,167 INFO     Done. Execution time: 65.93175220489502 seconds
2023-01-26 13:17:25,167 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz2354762012905837254/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2354762012905837254/bin -o /tmp/qfuzz2354762012905837254/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2354762012905837254/bin
Found file /tmp/qfuzz2354762012905837254/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz2354762012905837254/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2354762012905837254/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2354762012905837254/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2354762012905837254/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2354762012905837254/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 119526 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 121613 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m119k to 121k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2354762012905837254/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [31.00,51.00,56.00]
1; /tmp/qfuzz2354762012905837254/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 5.00; [31.00,51.00,56.00]
3; /tmp/qfuzz2354762012905837254/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2354762012905837254/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz2354762012905837254/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2354762012905837254/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2354762012905837254/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 37, 4, 4, 35, 50, 31, 151, 196, 122, 4, 35, 113, 116, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2354762012905837254/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2354762012905837254/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.923s
user	0m22.602s
sys	0m1.598s

2023-01-26 13:17:25,167 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-26 13:17:25,167 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-26 13:17:31,657 INFO     Done. Execution time: 6.489116668701172 seconds
2023-01-26 13:17:31,657 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R1 = R1 + 1;
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m6.481s
user	0m11.988s
sys	0m2.491s

2023-01-26 13:17:31,657 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:17:42,335 INFO     Done. Execution time: 10.677582025527954 seconds
2023-01-26 13:17:42,335 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `8.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1317-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1317-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.669s
user	0m29.564s
sys	0m4.882s

2023-01-26 13:17:42,336 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-26 13:17:42,336 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:18:48,505 INFO     Done. Execution time: 66.16947722434998 seconds
2023-01-26 13:18:48,505 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz5841687532311076653/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5841687532311076653/bin -o /tmp/qfuzz5841687532311076653/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5841687532311076653/bin
Found file /tmp/qfuzz5841687532311076653/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz5841687532311076653/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5841687532311076653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5841687532311076653/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5841687532311076653/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz5841687532311076653/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 134309 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 113837 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m113k to 134k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5841687532311076653/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz5841687532311076653/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz5841687532311076653/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5841687532311076653/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz5841687532311076653/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5841687532311076653/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5841687532311076653/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(180, 106, 57, 57, 57, 11, 122, 4, 35, 80, 101)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5841687532311076653/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5841687532311076653/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.160s
user	0m23.117s
sys	0m1.747s

2023-01-26 13:18:48,506 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-26 13:18:48,506 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-26 13:18:53,672 INFO     Done. Execution time: 5.166277170181274 seconds
2023-01-26 13:18:53,673 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m5.157s
user	0m8.837s
sys	0m1.579s

2023-01-26 13:18:53,673 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:19:01,245 INFO     Done. Execution time: 7.5722010135650635 seconds
2023-01-26 13:19:01,245 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1318-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1318-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.565s
user	0m16.305s
sys	0m2.536s

2023-01-26 13:19:01,246 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-26 13:19:01,246 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:20:07,348 INFO     Done. Execution time: 66.10159730911255 seconds
2023-01-26 13:20:07,348 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz8928107809680873969/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8928107809680873969/bin -o /tmp/qfuzz8928107809680873969/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8928107809680873969/bin
Found file /tmp/qfuzz8928107809680873969/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz8928107809680873969/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8928107809680873969/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8928107809680873969/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8928107809680873969/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz8928107809680873969/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 124447 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 122882 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m122k to 124k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8928107809680873969/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz8928107809680873969/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]
3; /tmp/qfuzz8928107809680873969/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2; 1; 0.00; [36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8928107809680873969/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
/tmp/qfuzz8928107809680873969/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8928107809680873969/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8928107809680873969/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 200, 4, 4, 35, 16, 19, 185, 153, 135, 94, 134, 148, 72, 65, 32, 35, 167, 12, 128, 116, 23, 121, 134, 8)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8928107809680873969/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8928107809680873969/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.093s
user	0m23.486s
sys	0m1.739s

2023-01-26 13:20:07,348 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-26 13:20:07,348 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-26 13:20:11,520 INFO     Done. Execution time: 4.172088146209717 seconds
2023-01-26 13:20:11,521 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m4.163s
user	0m7.344s
sys	0m0.953s

2023-01-26 13:20:11,521 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:20:18,225 INFO     Done. Execution time: 6.703892230987549 seconds
2023-01-26 13:20:18,225 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `4.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1320-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1320-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.696s
user	0m14.031s
sys	0m2.258s

2023-01-26 13:20:18,225 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-26 13:20:18,225 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:21:24,244 INFO     Done. Execution time: 66.018559217453 seconds
2023-01-26 13:21:24,244 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz8162892327914624891/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8162892327914624891/bin -o /tmp/qfuzz8162892327914624891/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8162892327914624891/bin
Found file /tmp/qfuzz8162892327914624891/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz8162892327914624891/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8162892327914624891/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8162892327914624891/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8162892327914624891/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz8162892327914624891/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 121099 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 31, exec speed = 128237 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m31 to 32 bits (average: 31.50 bits)
[1;90m        Exec timing : [0m121k to 128k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [43.00]
1; /tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 8.00; [35.00,43.00]
3; /tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 8.00; [35.00,43.00]
9; /tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 2; 14.00; [35.00,49.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(73, 49, 192, 111, 200, 164, 16, 71, 161, 57, 131, 44, 120, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(152, 163, 171, 93, 171, 171, 171, 171, 171, 171, 171, 171, 5, 79, 52, 16, 85, 79, 133, 79, 79, 79, 79, 79, 37, 174, 103, 12, 101, 132, 8, 61, 123, 79, 73, 79, 79, 79, 37, 12, 101, 131, 49, 169, 10, 157, 192, 52, 160, 186, 50, 127, 166, 4, 19, 160, 142, 100, 103, 36, 160, 20, 23, 34, 194)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8162892327914624891/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [49,192,111,200,164]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [163,171,93,171,171]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [160,196,177,32,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [112,67,99,192,109]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.010s
user	0m23.065s
sys	0m1.688s

2023-01-26 13:21:24,244 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-26 13:21:24,245 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-26 13:21:28,563 INFO     Done. Execution time: 4.318739891052246 seconds
2023-01-26 13:21:28,564 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [49,192,111,200,164])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [163,171,93,171,171])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [160,196,177,32,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [112,67,99,192,109])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 73):
                                                                                                                               
 Index  |              Commands               |  Costs  |  R  |  choice  |        choices         |  i  |  str  |  strDigits  |
-------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [49,192,111,200,164]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [49,192,111,200,164]  |     |    2  |             |
    15  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [49,192,111,200,164]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [49,192,111,200,164]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [49,192,111,200,164]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [49,192,111,200,164]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [49,192,111,200,164]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |      49  |  [49,192,111,200,164]  |  0  |    2  |          0  |
    41  |                         i = i + 1;  |         |  0  |      49  |  [49,192,111,200,164]  |  1  |    2  |          0  |
    42  |              resetPlaceHolder_1();  |         |  0  |      49  |  [49,192,111,200,164]  |  1  |    2  |          0  |
    48  |  choice = arrayRead(choices, i)...  |         |  0  |     192  |  [49,192,111,200,164]  |  1  |    2  |          0  |
    61  |         strDigits = strDigits + 1;  |         |  0  |     192  |  [49,192,111,200,164]  |  1  |    2  |          1  |
    64  |                         R = R + 1;  |      1  |  1  |     192  |  [49,192,111,200,164]  |  1  |    2  |          1  |
    68  |                         i = i + 1;  |         |  1  |     192  |  [49,192,111,200,164]  |  2  |    2  |          1  |
    69  |              resetPlaceHolder_1();  |         |  1  |     192  |  [49,192,111,200,164]  |  2  |    2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {64}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    42  |  resetPlaceHolder_1();  |         |                            |
    64  |             R = R + 1;  |      1  |                         0  |
    69  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m4.310s
user	0m8.279s
sys	0m1.133s

2023-01-26 13:21:28,564 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:21:53,299 INFO     Done. Execution time: 24.7349591255188 seconds
2023-01-26 13:21:53,299 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 choices)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun choices () Int)
(declare-fun str () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> choices 0))
(assert (> str 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 1 1 choices))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 choices))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    15)  (define-fun str () Int    9)  (define-fun choices () Int    15)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `22.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1321-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1321-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m24.726s
user	0m47.789s
sys	0m4.453s

2023-01-26 13:21:53,299 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-26 13:21:53,300 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:22:59,446 INFO     Done. Execution time: 66.14622473716736 seconds
2023-01-26 13:22:59,446 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz8167556301009575842/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8167556301009575842/bin -o /tmp/qfuzz8167556301009575842/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8167556301009575842/bin
Found file /tmp/qfuzz8167556301009575842/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz8167556301009575842/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8167556301009575842/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8167556301009575842/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8167556301009575842/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz8167556301009575842/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 118499 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 9, exec speed = 122600 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m118k to 122k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8167556301009575842/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz8167556301009575842/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8167556301009575842/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8167556301009575842/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8167556301009575842/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8167556301009575842/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 47, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 109, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.137s
user	0m22.624s
sys	0m1.673s

2023-01-26 13:22:59,446 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-26 13:22:59,446 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-26 13:23:02,416 INFO     Done. Execution time: 2.9698548316955566 seconds
2023-01-26 13:23:02,417 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 47, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 109, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                             
 Index  |   Commands   |  Costs  |  R  |         array          |  endIndex  |  startIndex  |
---------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [193,160,196,177,32]  |         2  |          47  |
    48  |     return;  |         |  0  |  [193,160,196,177,32]  |         2  |          47  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m2.961s
user	0m5.966s
sys	0m0.290s

2023-01-26 13:23:02,417 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:23:04,634 INFO     Done. Execution time: 2.2165234088897705 seconds
2023-01-26 13:23:04,634 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1323-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1323-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.208s
user	0m3.828s
sys	0m0.295s

2023-01-26 13:23:04,634 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-26 13:23:04,634 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:24:10,694 INFO     Done. Execution time: 66.05949902534485 seconds
2023-01-26 13:24:10,694 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz801205670455098392/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz801205670455098392/bin -o /tmp/qfuzz801205670455098392/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz801205670455098392/bin
Found file /tmp/qfuzz801205670455098392/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz801205670455098392/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz801205670455098392/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz801205670455098392/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz801205670455098392/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz801205670455098392/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz801205670455098392/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz801205670455098392/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 132689 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 47, exec speed = 128018 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m128k to 132k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 260.00; [32.00,1351.00,1991.00,2251.00,3521.00,3851.00]
2; /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 6; 50.00; [32.00,651.00,3211.00,3551.00,3881.00,3931.00]
3; /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta; 6; 310.00; [32.00,491.00,2251.00,2671.00,3521.00,3831.00]
5; /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta; 6; 330.00; [32.00,1351.00,1991.00,2931.00,3521.00,3851.00]
6; /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta; 6; 340.00; [32.00,731.00,1071.00,1741.00,2651.00,3731.00]
7; /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 4; 79.00; [32.00,111.00,1251.00,3521.00]
9; /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta; 6; 359.00; [32.00,391.00,1351.00,1991.00,2511.00,3521.00]
13; /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128; 6; 219.00; [32.00,251.00,1301.00,2251.00,3131.00,3971.00]
32; /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta; 6; 400.00; [32.00,451.00,1131.00,1611.00,2011.00,2561.00]
47; /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta; 6; 420.00; [32.00,791.00,1351.00,1771.00,2261.00,3851.00]
58; /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta; 6; 440.00; [32.00,771.00,1351.00,1791.00,2251.00,3521.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
/tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 89, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 180, 16, 78, 56, 108, 103, 93, 121, 88, 85, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 185, 195, 35, 30, 41, 108, 55, 88, 120, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(112, 67, 39, 192, 88, 56, 191, 19, 119, 117, 157, 182, 16, 135, 104, 191, 76, 177, 191, 103, 93, 16, 52, 88, 142, 197, 108, 52, 117, 175, 111, 38, 70, 50, 79, 106, 175, 53, 142, 20, 15, 120, 78, 19)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(127, 80, 56, 22, 100, 4, 5, 132, 52, 4, 6, 74, 43, 4, 43, 135, 6, 74, 43, 4, 70, 194, 4, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(64, 156, 12, 198, 112, 134, 134, 100, 107, 154, 4, 178, 63, 191, 24, 193, 53, 6, 37, 134, 134, 99, 191, 24, 145, 5, 184, 23, 72, 110, 28, 122, 97, 5, 5, 5, 5, 5, 5, 6, 5, 5, 111, 47, 192, 100, 53, 119, 153, 55)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 125, 67, 99, 19, 61, 118, 180, 17, 157, 182, 16, 78, 136, 63, 4, 4, 19, 61, 52, 36, 4, 4, 137, 120, 6, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 62, 5, 5, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(86, 132, 186, 36, 53, 67, 67, 67, 134, 98, 6, 67, 77, 15, 163, 67, 67, 67, 134, 98, 129, 189)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 146, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 113, 20, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 24, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz801205670455098392/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,89,38]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [112,67,39,192,88]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [127,80,56,22,100]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [64,156,12,198,112]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,125,67,99,19]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,62,5,5,5]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [86,132,186,36,53]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,146,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,24,191,133]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.051s
user	0m24.584s
sys	0m1.722s

2023-01-26 13:24:10,695 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-26 13:24:10,695 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-26 13:24:20,231 INFO     Done. Execution time: 9.53645944595337 seconds
2023-01-26 13:24:20,232 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,89,38])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([127,80,56,22,100])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([112,67,39,192,88])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([64,156,12,198,112])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,125,67,99,19])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,62,5,5,5])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([86,132,186,36,53])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,146,67,99,192])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,24,191,133])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                        
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects        |
--------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [175,112,67,89,38]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [175,112,67,89,38]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [175,112,67,89,38]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [175,112,67,89,38]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [175,112,67,89,38]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [175,112,67,89,38]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    175  |  0  |  [175,112,67,89,38]  |
    22  |                     R = R + chunk;  |    175  |  175  |    175  |  0  |  [175,112,67,89,38]  |
    26  |                         i = i + 1;  |         |  175  |    175  |  1  |  [175,112,67,89,38]  |
    32  |                         R = R + 1;  |      1  |  176  |    175  |  1  |  [175,112,67,89,38]  |
    35  |     chunk = arrayRead(objects, i);  |         |  176  |    112  |  1  |  [175,112,67,89,38]  |
    38  |                     R = R + chunk;  |    112  |  288  |    112  |  1  |  [175,112,67,89,38]  |
    42  |                         i = i + 1;  |         |  288  |    112  |  2  |  [175,112,67,89,38]  |
    43  |              resetPlaceHolder_1();  |         |  288  |    112  |  2  |  [175,112,67,89,38]  |
    49  |                         R = R + 1;  |      1  |  289  |    112  |  2  |  [175,112,67,89,38]  |
    52  |     chunk = arrayRead(objects, i);  |         |  289  |     67  |  2  |  [175,112,67,89,38]  |
    55  |                     R = R + chunk;  |     67  |  356  |     67  |  2  |  [175,112,67,89,38]  |
    59  |                         i = i + 1;  |         |  356  |     67  |  3  |  [175,112,67,89,38]  |
    60  |              resetPlaceHolder_1();  |         |  356  |     67  |  3  |  [175,112,67,89,38]  |
    66  |                         R = R + 1;  |      1  |  357  |     67  |  3  |  [175,112,67,89,38]  |
    69  |     chunk = arrayRead(objects, i);  |         |  357  |     89  |  3  |  [175,112,67,89,38]  |
    72  |                     R = R + chunk;  |     89  |  446  |     89  |  3  |  [175,112,67,89,38]  |
    76  |                         i = i + 1;  |         |  446  |     89  |  4  |  [175,112,67,89,38]  |
    77  |              resetPlaceHolder_1();  |         |  446  |     89  |  4  |  [175,112,67,89,38]  |
    83  |                         R = R + 1;  |      1  |  447  |     89  |  4  |  [175,112,67,89,38]  |
    86  |     chunk = arrayRead(objects, i);  |         |  447  |     38  |  4  |  [175,112,67,89,38]  |
    89  |                     R = R + chunk;  |     38  |  485  |     38  |  4  |  [175,112,67,89,38]  |
    93  |                         i = i + 1;  |         |  485  |     38  |  5  |  [175,112,67,89,38]  |
    94  |              resetPlaceHolder_1();  |         |  485  |     38  |  5  |  [175,112,67,89,38]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    175  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |    112  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |     67  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |     89  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |     38  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    175  |                            |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |                            |
    38  |         R = R + chunk;  |    112  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |
    55  |         R = R + chunk;  |     67  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |
    72  |         R = R + chunk;  |     89  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |
    89  |         R = R + chunk;  |     38  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m9.526s
user	0m16.466s
sys	0m3.742s

2023-01-26 13:24:20,232 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:24:34,133 INFO     Done. Execution time: 13.900718450546265 seconds
2023-01-26 13:24:34,133 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `11.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1324-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1324-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.892s
user	0m38.646s
sys	0m5.148s

2023-01-26 13:24:34,133 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-26 13:24:34,133 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:25:40,356 INFO     Done. Execution time: 66.22295808792114 seconds
2023-01-26 13:25:40,357 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz2540027381348049210/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2540027381348049210/bin -o /tmp/qfuzz2540027381348049210/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2540027381348049210/bin
Found file /tmp/qfuzz2540027381348049210/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz2540027381348049210/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2540027381348049210/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2540027381348049210/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2540027381348049210/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2540027381348049210/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 140101 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 47, exec speed = 132714 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m132k to 140k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 59.00; [1351.00,1991.00,2192.00,2251.00,3521.00,3851.00]
2; /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 6; 50.00; [651.00,952.00,3211.00,3551.00,3881.00,3931.00]
3; /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 5; 370.00; [1092.00,1651.00,2021.00,3051.00,3791.00]
4; /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta; 6; 130.00; [511.00,1392.00,1771.00,2641.00,2771.00,3811.00]
7; /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 6; 100.00; [1351.00,1631.00,1731.00,2251.00,2912.00,3521.00]
8; /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta; 6; 201.00; [111.00,1471.00,1991.00,2192.00,2681.00,3851.00]
11; /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta; 6; 221.00; [991.00,1351.00,1572.00,1991.00,2251.00,3521.00]
16; /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta; 6; 310.00; [951.00,1351.00,2352.00,2671.00,3521.00,3831.00]
17; /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta; 6; 399.00; [121.00,531.00,972.00,1371.00,3091.00,3971.00]
34; /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64; 4; 19.00; [1811.00,2212.00,2231.00,3521.00]
35; /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta; 6; 459.00; [291.00,871.00,1711.00,2432.00,2891.00,3521.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
/tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 43, 85, 14, 144, 121, 184, 74, 16, 78, 185, 185, 185, 185, 185, 185, 165, 77, 172, 16, 125, 172, 172, 172, 79, 4, 136, 35, 30, 40, 40, 40, 80, 4, 45, 40, 40, 40, 40, 155, 40, 40, 51, 84, 96, 167, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 90, 111, 111, 111, 110, 146, 111, 128, 111, 111, 111, 79, 170)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 26, 154, 68, 198, 48, 154, 90, 154)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 47, 67, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 49, 78, 99, 61, 148, 144, 15, 120, 88, 71, 185, 195, 199, 30, 41, 108, 29, 20, 120, 166, 191, 30, 41, 108, 52, 88, 120, 191, 30, 41, 108, 52, 88, 120, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(133, 5, 73, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 19, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 81, 86, 145, 15, 120, 78, 19, 44, 186, 137, 15, 120, 111, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(131, 25, 88, 190, 138, 69, 68, 69, 119, 127, 69, 10, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 69, 194)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(100, 189, 189, 152, 82, 54, 112, 67, 99, 7, 109, 118, 20, 189, 189, 129, 189, 189, 189, 129, 189, 189, 144, 36, 66, 80, 19, 61, 19, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2540027381348049210/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,43,85,14,144], 121
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,90,111,111,111], 110
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,26,154,68,198], 48
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,49], 78
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [133,5,73,99,192], 109
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,81,86], 145
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [131,25,88,190,138], 69
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [100,189,189,152,82], 54
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 47
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 109
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.214s
user	0m25.773s
sys	0m1.636s

2023-01-26 13:25:40,357 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-26 13:25:40,357 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-26 13:25:49,168 INFO     Done. Execution time: 8.810630083084106 seconds
2023-01-26 13:25:49,168 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,43,85,14,144], 121)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 10 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,26,154,68,198], 48)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,49], 78)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,90,111,111,111], 110)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([133,5,73,99,192], 109)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,81,86], 145)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([131,25,88,190,138], 69)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([100,189,189,152,82], 54)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 47)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 10 (80.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 109)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 10)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 10 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |       objects        |  separator  |
----------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [175,43,85,14,144]  |        121  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [175,43,85,14,144]  |        121  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [175,43,85,14,144]  |        121  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [175,43,85,14,144]  |        121  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [175,43,85,14,144]  |        121  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [175,43,85,14,144]  |        121  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    175  |  0  |  [175,43,85,14,144]  |        121  |
    22  |                     R = R + chunk;  |    175  |  175  |    175  |  0  |  [175,43,85,14,144]  |        121  |
    26  |                         i = i + 1;  |         |  175  |    175  |  1  |  [175,43,85,14,144]  |        121  |
    32  |                 R = R + separator;  |    121  |  296  |    175  |  1  |  [175,43,85,14,144]  |        121  |
    35  |     chunk = arrayRead(objects, i);  |         |  296  |     43  |  1  |  [175,43,85,14,144]  |        121  |
    38  |                     R = R + chunk;  |     43  |  339  |     43  |  1  |  [175,43,85,14,144]  |        121  |
    42  |                         i = i + 1;  |         |  339  |     43  |  2  |  [175,43,85,14,144]  |        121  |
    43  |              resetPlaceHolder_1();  |         |  339  |     43  |  2  |  [175,43,85,14,144]  |        121  |
    49  |                 R = R + separator;  |    121  |  460  |     43  |  2  |  [175,43,85,14,144]  |        121  |
    52  |     chunk = arrayRead(objects, i);  |         |  460  |     85  |  2  |  [175,43,85,14,144]  |        121  |
    55  |                     R = R + chunk;  |     85  |  545  |     85  |  2  |  [175,43,85,14,144]  |        121  |
    59  |                         i = i + 1;  |         |  545  |     85  |  3  |  [175,43,85,14,144]  |        121  |
    60  |              resetPlaceHolder_1();  |         |  545  |     85  |  3  |  [175,43,85,14,144]  |        121  |
    66  |                 R = R + separator;  |    121  |  666  |     85  |  3  |  [175,43,85,14,144]  |        121  |
    69  |     chunk = arrayRead(objects, i);  |         |  666  |     14  |  3  |  [175,43,85,14,144]  |        121  |
    72  |                     R = R + chunk;  |     14  |  680  |     14  |  3  |  [175,43,85,14,144]  |        121  |
    76  |                         i = i + 1;  |         |  680  |     14  |  4  |  [175,43,85,14,144]  |        121  |
    77  |              resetPlaceHolder_1();  |         |  680  |     14  |  4  |  [175,43,85,14,144]  |        121  |
    83  |                 R = R + separator;  |    121  |  801  |     14  |  4  |  [175,43,85,14,144]  |        121  |
    86  |     chunk = arrayRead(objects, i);  |         |  801  |    144  |  4  |  [175,43,85,14,144]  |        121  |
    89  |                     R = R + chunk;  |    144  |  945  |    144  |  4  |  [175,43,85,14,144]  |        121  |
    93  |                         i = i + 1;  |         |  945  |    144  |  5  |  [175,43,85,14,144]  |        121  |
    94  |              resetPlaceHolder_1();  |         |  945  |    144  |  5  |  [175,43,85,14,144]  |        121  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    175  |                            |
    32  |     R = R + separator;  |    121  |                         0  |
    38  |         R = R + chunk;  |     43  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |    121  |                         1  |
    55  |         R = R + chunk;  |     85  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |    121  |                         2  |
    72  |         R = R + chunk;  |     14  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |    121  |                         3  |
    89  |         R = R + chunk;  |    144  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    175  |                            |                         0  |
    32  |     R = R + separator;  |    121  |                         0  |                            |
    38  |         R = R + chunk;  |     43  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |    121  |                         1  |                            |
    55  |         R = R + chunk;  |     85  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |    121  |                         2  |                            |
    72  |         R = R + chunk;  |     14  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |    121  |                         3  |                            |
    89  |         R = R + chunk;  |    144  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m8.803s
user	0m15.334s
sys	0m3.661s

2023-01-26 13:25:49,168 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:25:57,490 INFO     Done. Execution time: 8.321547269821167 seconds
2023-01-26 13:25:57,490 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1325-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1325-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.314s
user	0m16.018s
sys	0m2.087s

2023-01-26 13:25:57,490 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-26 13:25:57,491 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:27:03,696 INFO     Done. Execution time: 66.20508217811584 seconds
2023-01-26 13:27:03,696 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz90538208971814377/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz90538208971814377/bin -o /tmp/qfuzz90538208971814377/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz90538208971814377/bin
Found file /tmp/qfuzz90538208971814377/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz90538208971814377/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz90538208971814377/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz90538208971814377/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz90538208971814377/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz90538208971814377/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz90538208971814377/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz90538208971814377/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 128532 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 39, exec speed = 137807 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m128k to 137k us (average: 133k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 870.00; [1358.00,2228.00,3524.00]
2; /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 54.00; [3368.00,3884.00,3938.00]
3; /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta; 3; 1406.00; [218.00,1624.00,3208.00]
5; /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16; 3; 10.00; [1804.00,2788.00,2798.00]
6; /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 3; 430.00; [978.00,1408.00,2584.00]
9; /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta; 3; 1486.00; [488.00,2038.00,3524.00]
16; /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta; 3; 1674.00; [108.00,1784.00,3458.00]
30; /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4; 3; 830.00; [1408.00,2238.00,3524.00]
37; /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta; 3; 1836.00; [88.00,1924.00,3838.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
/tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
/tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
/tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(95, 186, 191, 174, 4, 9, 4, 42, 107, 9, 12, 5, 42, 19, 100, 99, 102, 100, 70, 100, 54, 65, 42, 4, 42, 107, 9, 12, 5, 42, 19, 100, 99, 102, 100, 9, 42, 5, 100, 100, 100, 100, 100, 100, 100, 100, 54, 66, 193, 100, 100, 104, 63, 63, 75, 160, 117)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 106, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 70, 120)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(88, 136, 172, 92, 5, 5, 5, 23, 62, 5, 40, 42, 36, 85, 33, 153, 38, 4, 123, 87, 13, 34, 187, 136, 172, 91, 56, 132, 111, 38, 99, 34, 34, 187, 136, 172, 91, 56, 132, 111, 38, 99, 4, 108, 23, 195, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 101, 190, 110, 111, 24, 111, 101, 190, 110, 111, 24, 111, 17, 70, 148, 79, 62, 59, 122, 95, 100, 191)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(128, 112, 48, 20, 111, 135, 70, 148, 43, 88, 19, 30, 113, 144, 15, 119, 151, 120, 30, 187, 42, 193, 56, 108, 39, 93, 121, 54, 85, 159, 21, 99, 93, 108, 52, 88, 64, 191, 110)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 139, 139, 139, 168, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 47, 187, 181, 191, 63, 78, 4, 5, 139, 6, 139, 63, 4, 139, 139, 182, 139, 139, 139, 168, 139, 139, 139, 139, 139, 139, 139, 139, 47, 152, 4, 69, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(80, 179, 10, 63, 198, 80, 160, 78, 147)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz90538208971814377/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [95,186,191,174,4], 9, 4, 42
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,106,111,20,111], 38, 70, 148
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [88,136,172,92,5], 5, 5, 23
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,101,190,110], 111, 24, 111
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [128,112,48,20,111], 135, 70, 148
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [89,139,139,139,168], 139, 139, 139
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [80,179,10,63,198], 80, 160, 78
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 47, 168, 24
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 109, 111, 20
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.195s
user	0m25.071s
sys	0m1.693s

2023-01-26 13:27:03,696 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-26 13:27:03,697 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-26 13:27:10,635 INFO     Done. Execution time: 6.93826961517334 seconds
2023-01-26 13:27:10,635 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([95,186,191,174,4], 9, 4, 42)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 9 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,106,111,20,111], 38, 70, 148)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([88,136,172,92,5], 5, 5, 23)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,101,190,110], 111, 24, 111)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([89,139,139,139,168], 139, 139, 139)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([128,112,48,20,111], 135, 70, 148)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([80,179,10,63,198], 80, 160, 78)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 47, 168, 24)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 109, 111, 20)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 9 (88.89%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 9)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 9 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |         text         |
-------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |   42  |            4  |             9  |  [95,186,191,174,4]  |
    34  |                      // int R = 0;  |         |    0  |         |     |   42  |            4  |             9  |  [95,186,191,174,4]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |   42  |            4  |             9  |  [95,186,191,174,4]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |   42  |            4  |             9  |  [95,186,191,174,4]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |   42  |            4  |             9  |  [95,186,191,174,4]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |     95  |  0  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    51  |                     R = R + chunk;  |     95  |   95  |     95  |  0  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    54  |               R = R + replacement;  |      4  |   99  |     95  |  0  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |   99  |    186  |  0  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    63  |                         i = i + 2;  |         |   99  |    186  |  2  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    64  |              resetPlaceHolder_1();  |         |   99  |    186  |  2  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    72  |        chunk = arrayRead(text, i);  |         |   99  |    191  |  2  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    75  |                     R = R + chunk;  |    191  |  290  |    191  |  2  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    78  |               R = R + replacement;  |      4  |  294  |    191  |  2  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  294  |    174  |  2  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    87  |                         i = i + 2;  |         |  294  |    174  |  4  |   42  |            4  |             9  |  [95,186,191,174,4]  |
    88  |              resetPlaceHolder_1();  |         |  294  |    174  |  4  |   42  |            4  |             9  |  [95,186,191,174,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [51, 54, 75, 78]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |     95  |                            |
    54  |   R = R + replacement;  |      4  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |    191  |                            |
    78  |   R = R + replacement;  |      4  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [51, 75]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}; {78}
GroupID(1): {51,75}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |     95  |                            |                         0  |
    54  |   R = R + replacement;  |      4  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |    191  |                            |                         0  |
    78  |   R = R + replacement;  |      4  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R replacement -> R0 = R0 + replacement;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m6.930s
user	0m13.257s
sys	0m2.351s

2023-01-26 13:27:10,635 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:28:36,008 INFO     Done. Execution time: 85.37213587760925 seconds
2023-01-26 13:28:36,008 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `83.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1327-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1327-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m25.364s
user	3m14.051s
sys	0m19.710s

2023-01-26 13:28:36,008 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-26 13:28:36,008 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:29:42,130 INFO     Done. Execution time: 66.12133765220642 seconds
2023-01-26 13:29:42,130 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz2506659314170587551/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2506659314170587551/bin -o /tmp/qfuzz2506659314170587551/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2506659314170587551/bin
Found file /tmp/qfuzz2506659314170587551/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz2506659314170587551/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2506659314170587551/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2506659314170587551/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2506659314170587551/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2506659314170587551/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 128946 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 37, exec speed = 122896 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m122k to 128k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2506659314170587551/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [32.00,40.00]
2; /tmp/qfuzz2506659314170587551/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 8.00; [32.00,40.00]
3; /tmp/qfuzz2506659314170587551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2506659314170587551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz2506659314170587551/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2506659314170587551/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2506659314170587551/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(86, 144, 15, 120, 78, 19, 61, 124, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2506659314170587551/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2506659314170587551/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 144
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 160
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 112
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.112s
user	0m22.508s
sys	0m1.715s

2023-01-26 13:29:42,130 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-26 13:29:42,131 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-26 13:29:47,838 INFO     Done. Execution time: 5.7073891162872314 seconds
2023-01-26 13:29:47,838 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 144)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 160)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 112)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |           144  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |           144  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |           144  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |           144  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |           144  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |           144  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |           144  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |           144  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |           144  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |           144  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |           144  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |           144  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m5.697s
user	0m11.048s
sys	0m1.826s

2023-01-26 13:29:47,839 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:30:10,660 INFO     Done. Execution time: 22.8212788105011 seconds
2023-01-26 13:30:10,660 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `20.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1329-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1329-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m22.813s
user	0m39.099s
sys	0m4.741s

2023-01-26 13:30:10,660 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 13:30:10,661 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:31:17,062 INFO     Done. Execution time: 66.40159916877747 seconds
2023-01-26 13:31:17,063 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz1263770006465486836/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1263770006465486836/bin -o /tmp/qfuzz1263770006465486836/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1263770006465486836/bin
Found file /tmp/qfuzz1263770006465486836/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz1263770006465486836/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1263770006465486836/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1263770006465486836/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1263770006465486836/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz1263770006465486836/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 126806 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 9, exec speed = 123673 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m123k to 126k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (4 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
3; /tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov; 1; 0.00; [110.00]
22; /tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:16; 1; 0.00; [3850.00]
56; /tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000004,src:000001+000003,op:splice,rep:4; 1; 0.00; [3890.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000004,src:000001+000003,op:splice,rep:4
/tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:16
/tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov
/tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000004,src:000001+000003,op:splice,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 4, 158, 4, 160, 114, 142, 158, 155, 155, 155, 155, 155, 155, 155, 97, 155, 155, 155, 155, 152, 126, 110, 171, 31, 12, 91, 70, 32, 155, 169, 61, 197, 119, 32, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000003,src:000000+000002,op:splice,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(191, 112, 90, 69, 55, 4, 158, 4, 160, 114, 189, 152, 126, 110, 171, 31, 12, 91, 70, 32, 155, 169, 61, 197, 119, 32, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 35, 4, 158, 4, 53, 11, 113, 145, 126, 90, 91, 183, 94, 112, 121, 134, 14, 77, 169, 197, 116, 119, 32, 35)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1263770006465486836/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 4, 158
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [191,112,90,69,55], 4, 158
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,35], 4, 158
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 47, 168
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 109, 111
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.391s
user	0m23.445s
sys	0m1.765s

2023-01-26 13:31:17,063 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 13:31:17,063 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 13:31:21,676 INFO     Done. Execution time: 4.6120569705963135 seconds
2023-01-26 13:31:21,676 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 4, 158)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([191,112,90,69,55], 4, 158)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,35], 4, 158)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 47, 168)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 109, 111)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 5)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 151):
                                                                                                                                                                           
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  isSeparator  |  isSeparatorChunk  |  max  |  numberOfStrings  |          str           |
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |            4  |                    |  158  |                   |  [193,160,196,177,32]  |
    28  |                      // int R = 0;  |         |    0  |         |     |            4  |                    |  158  |                   |  [193,160,196,177,32]  |
    29  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |            4  |                    |  158  |                   |  [193,160,196,177,32]  |
    30  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |            4  |                    |  158  |                   |  [193,160,196,177,32]  |
    32  |           int numberOfStrings = 0;  |         |    0  |         |     |            4  |                    |  158  |                0  |  [193,160,196,177,32]  |
    34  |                     int chunk = 0;  |         |    0  |      0  |     |            4  |                    |  158  |                0  |  [193,160,196,177,32]  |
    36  |          int isSeparatorChunk = 0;  |         |    0  |      0  |     |            4  |                 0  |  158  |                0  |  [193,160,196,177,32]  |
    38  |                         int i = 0;  |         |    0  |      0  |  0  |            4  |                 0  |  158  |                0  |  [193,160,196,177,32]  |
    44  |         chunk = arrayRead(str, i);  |         |    0  |    193  |  0  |            4  |                 0  |  158  |                0  |  [193,160,196,177,32]  |
    54  |                     R = R + chunk;  |    193  |  193  |    193  |  0  |            4  |                 0  |  158  |                0  |  [193,160,196,177,32]  |
    58  |                         i = i + 1;  |         |  193  |    193  |  1  |            4  |                 0  |  158  |                0  |  [193,160,196,177,32]  |
    59  |              resetPlaceHolder_1();  |         |  193  |    193  |  1  |            4  |                 0  |  158  |                0  |  [193,160,196,177,32]  |
    65  |         chunk = arrayRead(str, i);  |         |  193  |    160  |  1  |            4  |                 0  |  158  |                0  |  [193,160,196,177,32]  |
    76  |  numberOfStrings = numberOfStri...  |         |  193  |    160  |  1  |            4  |                 0  |  158  |                1  |  [193,160,196,177,32]  |
    80  |                         i = i + 1;  |         |  193  |    160  |  2  |            4  |                 0  |  158  |                1  |  [193,160,196,177,32]  |
    81  |              resetPlaceHolder_1();  |         |  193  |    160  |  2  |            4  |                 0  |  158  |                1  |  [193,160,196,177,32]  |
    87  |         chunk = arrayRead(str, i);  |         |  193  |    196  |  2  |            4  |                 0  |  158  |                1  |  [193,160,196,177,32]  |
    98  |  numberOfStrings = numberOfStri...  |         |  193  |    196  |  2  |            4  |                 0  |  158  |                2  |  [193,160,196,177,32]  |
   102  |                         i = i + 1;  |         |  193  |    196  |  3  |            4  |                 0  |  158  |                2  |  [193,160,196,177,32]  |
   103  |              resetPlaceHolder_1();  |         |  193  |    196  |  3  |            4  |                 0  |  158  |                2  |  [193,160,196,177,32]  |
   109  |         chunk = arrayRead(str, i);  |         |  193  |    177  |  3  |            4  |                 0  |  158  |                2  |  [193,160,196,177,32]  |
   120  |  numberOfStrings = numberOfStri...  |         |  193  |    177  |  3  |            4  |                 0  |  158  |                3  |  [193,160,196,177,32]  |
   124  |                         i = i + 1;  |         |  193  |    177  |  4  |            4  |                 0  |  158  |                3  |  [193,160,196,177,32]  |
   125  |              resetPlaceHolder_1();  |         |  193  |    177  |  4  |            4  |                 0  |  158  |                3  |  [193,160,196,177,32]  |
   131  |         chunk = arrayRead(str, i);  |         |  193  |     32  |  4  |            4  |                 0  |  158  |                3  |  [193,160,196,177,32]  |
   142  |  numberOfStrings = numberOfStri...  |         |  193  |     32  |  4  |            4  |                 0  |  158  |                4  |  [193,160,196,177,32]  |
   146  |                         i = i + 1;  |         |  193  |     32  |  5  |            4  |                 0  |  158  |                4  |  [193,160,196,177,32]  |
   147  |              resetPlaceHolder_1();  |         |  193  |     32  |  5  |            4  |                 0  |  158  |                4  |  [193,160,196,177,32]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [54]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |    193  |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |
    81  |  resetPlaceHolder_1();  |         |                            |
   103  |  resetPlaceHolder_1();  |         |                            |
   125  |  resetPlaceHolder_1();  |         |                            |
   147  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m4.601s
user	0m7.660s
sys	0m1.016s

2023-01-26 13:31:21,676 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:31:23,473 INFO     Done. Execution time: 1.7970995903015137 seconds
2023-01-26 13:31:23,473 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
        ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
//root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java:36: error: cannot find symbol
        R = R + chunk;
            ^
  symbol:   variable R
  location: class SplitByWholeSeparatorWorker
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.788s
user	0m3.106s
sys	0m0.210s

2023-01-26 13:31:23,474 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-26 13:31:23,474 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:32:29,482 INFO     Done. Execution time: 66.00857639312744 seconds
2023-01-26 13:32:29,483 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz8990992743742203636/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8990992743742203636/bin -o /tmp/qfuzz8990992743742203636/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8990992743742203636/bin
Found file /tmp/qfuzz8990992743742203636/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz8990992743742203636/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8990992743742203636/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8990992743742203636/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8990992743742203636/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz8990992743742203636/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 43, exec speed = 128610 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 43, exec speed = 125225 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m125k to 128k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8990992743742203636/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [76.00]
2; /tmp/qfuzz8990992743742203636/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [76.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8990992743742203636/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8990992743742203636/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8990992743742203636/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8990992743742203636/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.998s
user	0m23.821s
sys	0m1.575s

2023-01-26 13:32:29,483 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-26 13:32:29,483 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-26 13:32:32,350 INFO     Done. Execution time: 2.866611957550049 seconds
2023-01-26 13:32:32,350 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

real	0m2.857s
user	0m5.503s
sys	0m0.324s

2023-01-26 13:32:32,350 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:32:34,425 INFO     Done. Execution time: 2.074784517288208 seconds
2023-01-26 13:32:34,426 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1332-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1332-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.066s
user	0m3.691s
sys	0m0.223s

2023-01-26 13:32:34,426 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-26 13:32:34,426 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:33:40,633 INFO     Done. Execution time: 66.20707297325134 seconds
2023-01-26 13:33:40,633 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz3019802758646751209/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3019802758646751209/bin -o /tmp/qfuzz3019802758646751209/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3019802758646751209/bin
Found file /tmp/qfuzz3019802758646751209/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz3019802758646751209/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3019802758646751209/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3019802758646751209/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3019802758646751209/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3019802758646751209/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 121620 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 123486 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m121k to 123k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3019802758646751209/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz3019802758646751209/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3019802758646751209/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3019802758646751209/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3019802758646751209/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3019802758646751209/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 160, 196, false, 32
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 112, 67, false, 192
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.190s
user	0m24.388s
sys	0m1.585s

2023-01-26 13:33:40,634 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-26 13:33:40,634 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-26 13:33:43,922 INFO     Done. Execution time: 3.2878732681274414 seconds
2023-01-26 13:33:43,922 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 160, 196, false, 32)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 112, 67, false, 192)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      32  |  196  |              false  |             160  |    2  |
    32  |     return;  |         |  0  |      32  |  196  |              false  |             160  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m3.277s
user	0m7.183s
sys	0m0.345s

2023-01-26 13:33:43,923 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:33:46,239 INFO     Done. Execution time: 2.3161909580230713 seconds
2023-01-26 13:33:46,239 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1333-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1333-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.308s
user	0m4.267s
sys	0m0.263s

2023-01-26 13:33:46,239 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-26 13:33:46,239 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:34:52,207 INFO     Done. Execution time: 65.96744108200073 seconds
2023-01-26 13:34:52,207 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz2779199501910321772/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2779199501910321772/bin -o /tmp/qfuzz2779199501910321772/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2779199501910321772/bin
Found file /tmp/qfuzz2779199501910321772/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz2779199501910321772/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2779199501910321772/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2779199501910321772/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2779199501910321772/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2779199501910321772/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 114123 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 121442 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m114k to 121k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #2 (3 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2779199501910321772/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz2779199501910321772/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz2779199501910321772/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2779199501910321772/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+cov
/tmp/qfuzz2779199501910321772/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2779199501910321772/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2779199501910321772/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2779199501910321772/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2779199501910321772/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m5.960s
user	0m23.081s
sys	0m1.554s

2023-01-26 13:34:52,208 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-26 13:34:52,208 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-26 13:34:55,291 INFO     Done. Execution time: 3.082420825958252 seconds
2023-01-26 13:34:55,291 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

real	0m3.074s
user	0m6.181s
sys	0m0.396s

2023-01-26 13:34:55,291 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:34:57,405 INFO     Done. Execution time: 2.114025592803955 seconds
2023-01-26 13:34:57,406 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1334-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1334-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.105s
user	0m3.709s
sys	0m0.270s

2023-01-26 13:34:57,406 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-26 13:34:57,406 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:36:03,445 INFO     Done. Execution time: 66.03886675834656 seconds
2023-01-26 13:36:03,445 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz1659944244789017738/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1659944244789017738/bin -o /tmp/qfuzz1659944244789017738/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1659944244789017738/bin
Found file /tmp/qfuzz1659944244789017738/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz1659944244789017738/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1659944244789017738/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1659944244789017738/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1659944244789017738/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz1659944244789017738/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 125067 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 105603 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m105k to 125k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 336.00; [1358.00,3522.00,3858.00]
1; /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 56.00; [658.00,3882.00,3938.00]
3; /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta; 3; 1180.00; [178.00,1358.00,3522.00]
4; /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 3; 96.00; [1118.00,2102.00,2198.00]
8; /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 3; 304.00; [98.00,3438.00,3742.00]
11; /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 3; 164.00; [118.00,1318.00,1482.00]
23; /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128; 3; 336.00; [122.00,458.00,3618.00]
26; /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta; 3; 1280.00; [258.00,1538.00,3522.00]
31; /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta; 3; 1460.00; [98.00,1558.00,3522.00]
33; /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta; 3; 1496.00; [122.00,1618.00,3858.00]
43; /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64,+delta; 3; 1560.00; [98.00,1658.00,3622.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64,+delta
/tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
/tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
/tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:64,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(180, 43, 4, 4, 82, 4, 56, 169, 169, 4, 56, 169, 169, 4, 4, 169, 169, 117)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 80, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 37, 4, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 90, 77, 78, 4, 68, 88, 4, 5, 38, 52, 148, 79, 11, 86, 38, 13, 120, 91, 19, 63, 160, 137, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 70, 119, 76, 178, 12, 78, 19, 143, 112, 7, 5, 134, 137, 127, 127, 127, 127, 127, 127, 127, 77, 39, 45, 114, 4, 27, 88, 119, 90, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 70, 132, 22, 83, 180, 37, 162, 171, 63, 51, 5, 62, 176, 197, 63, 181, 60, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(73, 73, 65, 12, 5, 4, 94, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(186, 137, 4, 20, 171, 174, 30, 118, 12, 44, 168, 26, 40)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(70, 104, 67, 55, 61, 109, 111, 158, 111, 38, 70, 184, 79, 88, 79, 51, 41, 108, 13, 88, 120, 191, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 8, 109, 111, 20, 111, 14, 93, 121, 6, 85, 185, 195, 114, 70, 140, 176, 88, 79, 30, 86, 144)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1659944244789017738/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [180,43,4,4,82], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,80,99,192], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,90,77,78,4], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,70,119,76,178], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,70,132,22,83], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [73,73,65,12,5], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [186,137,4,20,171], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [70,104,67,55,61], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,8], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.029s
user	0m24.279s
sys	0m1.669s

2023-01-26 13:36:03,446 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-26 13:36:03,446 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-26 13:36:10,164 INFO     Done. Execution time: 6.718017339706421 seconds
2023-01-26 13:36:10,164 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([180,43,4,4,82], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,5,80,99,192], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,90,77,78,4], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,70,119,76,178], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,70,132,22,83], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([73,73,65,12,5], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([186,137,4,20,171], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([70,104,67,55,61], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,8], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 11)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 87):
                                                                                                                            
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |     template      |
----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [180,43,4,4,82]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [180,43,4,4,82]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [180,43,4,4,82]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [180,43,4,4,82]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [180,43,4,4,82]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [180,43,4,4,82]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [180,43,4,4,82]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |    180  |  0  |          0  |  [180,43,4,4,82]  |
    32  |                     R = R + chunk;  |    180  |  180  |     2  |    180  |  0  |          0  |  [180,43,4,4,82]  |
    36  |                         i = i + 1;  |         |  180  |     2  |    180  |  1  |          0  |  [180,43,4,4,82]  |
    44  |  separator = arrayRead(template...  |         |  180  |     2  |    180  |  1  |         43  |  [180,43,4,4,82]  |
    49  |  chunk = arrayRead(template, (i...  |         |  180  |     2  |      4  |  1  |         43  |  [180,43,4,4,82]  |
    52  |                     R = R + chunk;  |      4  |  184  |     2  |      4  |  1  |         43  |  [180,43,4,4,82]  |
    56  |                         i = i + 2;  |         |  184  |     2  |      4  |  3  |         43  |  [180,43,4,4,82]  |
    57  |              resetPlaceHolder_1();  |         |  184  |     2  |      4  |  3  |         43  |  [180,43,4,4,82]  |
    65  |  separator = arrayRead(template...  |         |  184  |     2  |      4  |  3  |          4  |  [180,43,4,4,82]  |
    70  |  chunk = arrayRead(template, (i...  |         |  184  |     2  |     82  |  3  |          4  |  [180,43,4,4,82]  |
    73  |                     R = R + chunk;  |     82  |  266  |     2  |     82  |  3  |          4  |  [180,43,4,4,82]  |
    77  |                         i = i + 2;  |         |  266  |     2  |     82  |  5  |          4  |  [180,43,4,4,82]  |
    78  |              resetPlaceHolder_1();  |         |  266  |     2  |     82  |  5  |          4  |  [180,43,4,4,82]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [32, 52, 73]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32,52,73}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |    180  |                         0  |
    52  |         R = R + chunk;  |      4  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |     82  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m6.709s
user	0m12.186s
sys	0m2.473s

2023-01-26 13:36:10,165 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:36:11,898 INFO     Done. Execution time: 1.732893705368042 seconds
2023-01-26 13:36:11,898 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.726s
user	0m3.042s
sys	0m0.209s

2023-01-26 13:36:11,898 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-26 13:36:11,899 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:37:17,931 INFO     Done. Execution time: 66.03210473060608 seconds
2023-01-26 13:37:17,931 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz7612648746337126006/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7612648746337126006/bin -o /tmp/qfuzz7612648746337126006/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7612648746337126006/bin
Found file /tmp/qfuzz7612648746337126006/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz7612648746337126006/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7612648746337126006/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7612648746337126006/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7612648746337126006/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz7612648746337126006/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 4 runnable tasks (utilization: 100%).[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 122536 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 122518 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (3 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7612648746337126006/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [3514.00]
1; /tmp/qfuzz7612648746337126006/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [3874.00]
3; /tmp/qfuzz7612648746337126006/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 1; 0.00; [94.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7612648746337126006/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz7612648746337126006/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7612648746337126006/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7612648746337126006/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 37, 35, 151, 185, 114, 121, 134, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7612648746337126006/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7612648746337126006/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 193, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 175, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.023s
user	0m23.445s
sys	0m1.711s

2023-01-26 13:37:17,932 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-26 13:37:17,932 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-26 13:37:21,972 INFO     Done. Execution time: 4.0396506786346436 seconds
2023-01-26 13:37:21,972 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(193, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(175, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 3)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                                     
 Index  |              Commands               |  Costs  |  R  |  i  |  minLength  |  sb  |  string  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |          2  |      |       4  |
    19  |                        int sb = 0;  |         |  0  |     |          2  |   0  |       4  |
    20  |                      // int R = 0;  |         |  0  |     |          2  |   0  |       4  |
    21  |  // mostPreciseBound(R <= minLe...  |         |  0  |     |          2  |   0  |       4  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |          2  |   0  |       4  |
    26  |                  sb = sb + string;  |         |  0  |     |          2  |   4  |       4  |
    29  |                    R = R + string;  |      4  |  4  |     |          2  |   4  |       4  |
    31  |                    int i = string;  |         |  4  |  4  |          2  |   4  |       4  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |      4  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m4.031s
user	0m7.233s
sys	0m0.859s

2023-01-26 13:37:21,972 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:37:23,591 INFO     Done. Execution time: 1.619283676147461 seconds
2023-01-26 13:37:23,592 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.611s
user	0m3.061s
sys	0m0.164s

2023-01-26 13:37:23,592 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-26 13:37:23,592 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 13:38:29,657 INFO     Done. Execution time: 66.06540274620056 seconds
2023-01-26 13:38:29,658 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 60 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz3505147200569552018/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3505147200569552018/bin -o /tmp/qfuzz3505147200569552018/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3505147200569552018/bin
Found file /tmp/qfuzz3505147200569552018/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz3505147200569552018/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3505147200569552018/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 63 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3505147200569552018/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3505147200569552018/fuzzer-out. Timeout: 60 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3505147200569552018/fuzzer-out -c quantify -K 100 -S afl -t 60000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 117363 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 7, exec speed = 124489 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m117k to 124k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3505147200569552018/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz3505147200569552018/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3505147200569552018/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3505147200569552018/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3505147200569552018/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3505147200569552018/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 193, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 175, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	1m6.056s
user	0m22.174s
sys	0m1.617s

2023-01-26 13:38:29,658 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-26 13:38:29,658 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-26 13:38:32,433 INFO     Done. Execution time: 2.7742977142333984 seconds
2023-01-26 13:38:32,433 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(193, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(175, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |     193  |
    22  |     return;  |         |  0  |          2  |     193  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

real	0m2.765s
user	0m5.415s
sys	0m0.253s

2023-01-26 13:38:32,433 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 13:38:34,724 INFO     Done. Execution time: 2.2902700901031494 seconds
2023-01-26 13:38:34,724 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1338-transparentAmortize-60s-mostPrecise/guava-raw-0126-1338-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.283s
user	0m3.957s
sys	0m0.246s

2023-01-26 13:38:34,724 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    65.90971994400024,
    4.181256294250488,
    1.8225882053375244
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    66.0685830116272,
    10.700203657150269,
    83.59393239021301
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    66.12397742271423,
    12.760834217071533,
    305.7743730545044
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    66.03106117248535,
    8.047217607498169,
    8.243672132492065
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    66.75141167640686,
    5.920934200286865,
    15.300667762756348
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    65.75308871269226,
    5.135205268859863,
    8.528743982315063
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    66.21479344367981,
    90.23819088935852,
    11.199995040893555
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.73067045211792,
    1.8086905479431152,
    0.9527106285095215
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    66.06742525100708,
    2.56699538230896,
    2.1126720905303955
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    66.10424900054932,
    3.0885543823242188,
    2.2956483364105225
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    66.08377361297607,
    5.825639009475708,
    8.489192247390747
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    66.80031538009644,
    8.898793697357178,
    8.261066913604736
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    66.09928727149963,
    10.262945175170898,
    63.49626064300537
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    66.09166669845581,
    5.419284105300903,
    8.435755491256714
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    66.41229319572449,
    9.45378851890564,
    23.074228048324585
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    66.0898597240448,
    7.057366132736206,
    8.689842700958252
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    66.5826210975647,
    5.667045593261719,
    7.271762847900391
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    66.03141927719116,
    4.63500189781189,
    6.687101125717163
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    66.2126247882843,
    6.028304100036621,
    10.855091333389282
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    66.59442901611328,
    5.301278114318848,
    8.383853912353516
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    66.31117534637451,
    2.711012125015259,
    1.999096393585205
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    65.93175220489502,
    6.489116668701172,
    10.677582025527954
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    66.16947722434998,
    5.166277170181274,
    7.5722010135650635
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    66.10159730911255,
    4.172088146209717,
    6.703892230987549
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    66.018559217453,
    4.318739891052246,
    24.7349591255188
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    66.14622473716736,
    2.9698548316955566,
    2.2165234088897705
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    66.05949902534485,
    9.53645944595337,
    13.900718450546265
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    66.22295808792114,
    8.810630083084106,
    8.321547269821167
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    66.20508217811584,
    6.93826961517334,
    85.37213587760925
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    66.12133765220642,
    5.7073891162872314,
    22.8212788105011
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    66.40159916877747,
    4.6120569705963135,
    1.7970995903015137
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    66.00857639312744,
    2.866611957550049,
    2.074784517288208
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    66.20707297325134,
    3.2878732681274414,
    2.3161909580230713
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    65.96744108200073,
    3.082420825958252,
    2.114025592803955
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    66.03886675834656,
    6.718017339706421,
    1.732893705368042
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    66.03210473060608,
    4.0396506786346436,
    1.619283676147461
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    66.06540274620056,
    2.7742977142333984,
    2.2902700901031494
  ]
}
2023-01-26 13:38:34,725 INFO     Total time elapsed: 3472.69393324852 seconds
2023-01-26 13:38:34,725 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-26 13:38:34,725 INFO     Number of verified programs: {
  "stac": 3,
  "lang3": 16,
  "stringutils": 7,
  "guava": 1
}
2023-01-26 13:38:34,725 INFO     Number of not verified programs: {
  "lang3": 3,
  "stringutils": 2
}
2023-01-26 13:38:34,725 INFO     Number of unknown programs: {
  "stac": 1,
  "lang3": 1,
  "stringutils": 1,
  "guava": 2
}
2023-01-26 13:38:34,725 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/timeout60_01.json

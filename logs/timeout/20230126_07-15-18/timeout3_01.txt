2023-01-26 11:04:36,203 INFO     Arguments:
2023-01-26 11:04:36,203 INFO     timeout	3
2023-01-26 11:04:36,203 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-26 11:04:36,203 INFO     samples	0
2023-01-26 11:04:36,203 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-26 11:04:36,203 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-26 11:04:36,203 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-26 11:04:36,203 INFO     dry	False
2023-01-26 11:04:36,203 INFO     log	/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/timeout3_01.txt
2023-01-26 11:04:36,203 INFO     mode	qfuzz
2023-01-26 11:04:36,203 INFO     version	master
2023-01-26 11:04:36,203 INFO     seed	/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
2023-01-26 11:04:36,203 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git log --format="%H" -n 1`
2023-01-26 11:04:36,211 INFO     Done. Execution time: 0.0070383548736572266 seconds
2023-01-26 11:04:36,211 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `git checkout "906d3928dcd751d5411cb4206c6c2f9923acd529"`
2023-01-26 11:04:36,216 INFO     Done. Execution time: 0.005067110061645508 seconds
2023-01-26 11:04:36,216 INFO     Build a new version: "906d3928dcd751d5411cb4206c6c2f9923acd529"
2023-01-26 11:04:36,216 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `sbt package`
2023-01-26 11:04:45,606 INFO     Done. Execution time: 9.389088153839111 seconds
2023-01-26 11:04:45,606 INFO     Output: [info] welcome to sbt 1.7.3 (Amazon.com Inc. Java 1.8.0_352)
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project/project
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project/project
[info] loading settings for project brbo2-impl-build from plugins.sbt ...
[info] loading project definition from /root/Documents/workspace/brbo2-impl/project
[info] loading settings for project brbo2-impl from build.sbt ...
[info] set current project to brbo2-impl (in build file:/root/Documents/workspace/brbo2-impl/)
[success] Total time: 2 s, completed Jan 26, 2023 11:04:45 AM

2023-01-26 11:04:45,609 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-26 11:04:45,609 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:04:54,902 INFO     Done. Execution time: 9.293012380599976 seconds
2023-01-26 11:04:54,903 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz2399750257072744155/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2399750257072744155/bin -o /tmp/qfuzz2399750257072744155/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2399750257072744155/bin
Found file /tmp/qfuzz2399750257072744155/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz2399750257072744155/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2399750257072744155/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2399750257072744155/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2399750257072744155/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2399750257072744155/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 138606 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 131856 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m131k to 138k us (average: 135k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2399750257072744155/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 337.00; [1359.00,3522.00,3859.00]
2; /tmp/qfuzz2399750257072744155/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 57.00; [659.00,3882.00,3939.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2399750257072744155/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2399750257072744155/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2399750257072744155/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2399750257072744155/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.284s
user	0m7.404s
sys	0m0.532s

2023-01-26 11:04:54,903 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-26 11:04:54,903 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-26 11:05:02,266 INFO     Done. Execution time: 7.362128973007202 seconds
2023-01-26 11:05:02,266 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |          text          |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [193,160,196,177,32]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [193,160,196,177,32]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [193,160,196,177,32]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [193,160,196,177,32]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [193,160,196,177,32]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [193,160,196,177,32]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [193,160,196,177,32]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    193  |  0  |    0  |  [193,160,196,177,32]  |
    24  |                     R = R + chunk;  |    193  |  193  |    193  |  0  |    0  |  [193,160,196,177,32]  |
    28  |                         i = i + 1;  |         |  193  |    193  |  1  |    0  |  [193,160,196,177,32]  |
    36  |          tag = arrayRead(text, i);  |         |  193  |    193  |  1  |  160  |  [193,160,196,177,32]  |
    40  |                         i = i + 1;  |         |  193  |    193  |  2  |  160  |  [193,160,196,177,32]  |
    43  |        chunk = arrayRead(text, i);  |         |  193  |    196  |  2  |  160  |  [193,160,196,177,32]  |
    46  |                     R = R + chunk;  |    196  |  389  |    196  |  2  |  160  |  [193,160,196,177,32]  |
    50  |                         i = i + 1;  |         |  389  |    196  |  3  |  160  |  [193,160,196,177,32]  |
    51  |              resetPlaceHolder_1();  |         |  389  |    196  |  3  |  160  |  [193,160,196,177,32]  |
    59  |          tag = arrayRead(text, i);  |         |  389  |    196  |  3  |  177  |  [193,160,196,177,32]  |
    63  |                         i = i + 1;  |         |  389  |    196  |  4  |  177  |  [193,160,196,177,32]  |
    66  |        chunk = arrayRead(text, i);  |         |  389  |     32  |  4  |  177  |  [193,160,196,177,32]  |
    69  |                     R = R + chunk;  |     32  |  421  |     32  |  4  |  177  |  [193,160,196,177,32]  |
    73  |                         i = i + 1;  |         |  421  |     32  |  5  |  177  |  [193,160,196,177,32]  |
    74  |              resetPlaceHolder_1();  |         |  421  |     32  |  5  |  177  |  [193,160,196,177,32]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 46, 69]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 46, 69]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,46,69}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    193  |                         0  |
    46  |         R = R + chunk;  |    196  |                         0  |
    51  |  resetPlaceHolder_1();  |         |                            |
    69  |         R = R + chunk;  |     32  |                         0  |
    74  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m7.353s
user	0m13.258s
sys	0m2.485s

2023-01-26 11:05:02,266 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:05:11,055 INFO     Done. Execution time: 8.78869891166687 seconds
2023-01-26 11:05:11,055 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 1;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1105-transparentAmortize-60s-mostPrecise/stac-raw-0126-1105-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.778s
user	0m19.316s
sys	0m2.536s

2023-01-26 11:05:11,055 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-26 11:05:11,055 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:05:20,265 INFO     Done. Execution time: 9.209715843200684 seconds
2023-01-26 11:05:20,266 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz1411064995898096592/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1411064995898096592/bin -o /tmp/qfuzz1411064995898096592/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1411064995898096592/bin
Found file /tmp/qfuzz1411064995898096592/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz1411064995898096592/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1411064995898096592/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1411064995898096592/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1411064995898096592/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz1411064995898096592/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 56, exec speed = 151020 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 56, exec speed = 146600 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m56 to 56 bits (average: 56.00 bits)
[1;90m        Exec timing : [0m146k to 151k us (average: 148k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1411064995898096592/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 12.00; [1359.00,2233.00,3513.00,3525.00,3859.00]
2; /tmp/qfuzz1411064995898096592/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 5; 12.00; [659.00,3373.00,3873.00,3885.00,3939.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1411064995898096592/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1411064995898096592/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1411064995898096592/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1411064995898096592/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 2, 168
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 2, 111
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.200s
user	0m7.111s
sys	0m0.529s

2023-01-26 11:05:20,266 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-26 11:05:20,266 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-26 11:05:31,029 INFO     Done. Execution time: 10.762704849243164 seconds
2023-01-26 11:05:31,029 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 2, 168)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 2, 111)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 188):
                                                                                                                                                      
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |          text          |
------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |        168  |       |           2  |  [193,160,196,177,32]  |
    26  |                      // int R = 0;  |         |     0  |         |     |     |        168  |       |           2  |  [193,160,196,177,32]  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |     |        168  |       |           2  |  [193,160,196,177,32]  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |        168  |       |           2  |  [193,160,196,177,32]  |
    30  |                         int i = 0;  |         |     0  |         |  0  |     |        168  |       |           2  |  [193,160,196,177,32]  |
    32  |                         int j = 0;  |         |     0  |         |  0  |  0  |        168  |       |           2  |  [193,160,196,177,32]  |
    34  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |        168  |       |           2  |  [193,160,196,177,32]  |
    36  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |        168  |    0  |           2  |  [193,160,196,177,32]  |
    41  |                             j = 0;  |         |     0  |      0  |  0  |  0  |        168  |    0  |           2  |  [193,160,196,177,32]  |
    44  |        chunk = arrayRead(text, j);  |         |     0  |    193  |  0  |  0  |        168  |    0  |           2  |  [193,160,196,177,32]  |
    47  |                     R = R + chunk;  |    193  |   193  |    193  |  0  |  0  |        168  |    0  |           2  |  [193,160,196,177,32]  |
    51  |                         j = j + 1;  |         |   193  |    193  |  0  |  1  |        168  |    0  |           2  |  [193,160,196,177,32]  |
    59  |          tag = arrayRead(text, j);  |         |   193  |    193  |  0  |  1  |        168  |  160  |           2  |  [193,160,196,177,32]  |
    63  |                         j = j + 1;  |         |   193  |    193  |  0  |  2  |        168  |  160  |           2  |  [193,160,196,177,32]  |
    66  |        chunk = arrayRead(text, j);  |         |   193  |    196  |  0  |  2  |        168  |  160  |           2  |  [193,160,196,177,32]  |
    69  |                     R = R + chunk;  |    196  |   389  |    196  |  0  |  2  |        168  |  160  |           2  |  [193,160,196,177,32]  |
    73  |                         j = j + 1;  |         |   389  |    196  |  0  |  3  |        168  |  160  |           2  |  [193,160,196,177,32]  |
    74  |              resetPlaceHolder_2();  |         |   389  |    196  |  0  |  3  |        168  |  160  |           2  |  [193,160,196,177,32]  |
    82  |          tag = arrayRead(text, j);  |         |   389  |    196  |  0  |  3  |        168  |  177  |           2  |  [193,160,196,177,32]  |
    86  |                         j = j + 1;  |         |   389  |    196  |  0  |  4  |        168  |  177  |           2  |  [193,160,196,177,32]  |
    89  |        chunk = arrayRead(text, j);  |         |   389  |     32  |  0  |  4  |        168  |  177  |           2  |  [193,160,196,177,32]  |
    92  |                     R = R + chunk;  |     32  |   421  |     32  |  0  |  4  |        168  |  177  |           2  |  [193,160,196,177,32]  |
    96  |                         j = j + 1;  |         |   421  |     32  |  0  |  5  |        168  |  177  |           2  |  [193,160,196,177,32]  |
    97  |              resetPlaceHolder_2();  |         |   421  |     32  |  0  |  5  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   106  |                         i = i + 1;  |         |   421  |     32  |  1  |  5  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   109  |                 R = R + separator;  |    168  |   589  |     32  |  1  |  5  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   110  |              resetPlaceHolder_1();  |         |   589  |     32  |  1  |  5  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   115  |                             j = 0;  |         |   589  |     32  |  1  |  0  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   118  |        chunk = arrayRead(text, j);  |         |   589  |    193  |  1  |  0  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   121  |                     R = R + chunk;  |    193  |   782  |    193  |  1  |  0  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   125  |                         j = j + 1;  |         |   782  |    193  |  1  |  1  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   133  |          tag = arrayRead(text, j);  |         |   782  |    193  |  1  |  1  |        168  |  160  |           2  |  [193,160,196,177,32]  |
   137  |                         j = j + 1;  |         |   782  |    193  |  1  |  2  |        168  |  160  |           2  |  [193,160,196,177,32]  |
   140  |        chunk = arrayRead(text, j);  |         |   782  |    196  |  1  |  2  |        168  |  160  |           2  |  [193,160,196,177,32]  |
   143  |                     R = R + chunk;  |    196  |   978  |    196  |  1  |  2  |        168  |  160  |           2  |  [193,160,196,177,32]  |
   147  |                         j = j + 1;  |         |   978  |    196  |  1  |  3  |        168  |  160  |           2  |  [193,160,196,177,32]  |
   148  |              resetPlaceHolder_2();  |         |   978  |    196  |  1  |  3  |        168  |  160  |           2  |  [193,160,196,177,32]  |
   156  |          tag = arrayRead(text, j);  |         |   978  |    196  |  1  |  3  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   160  |                         j = j + 1;  |         |   978  |    196  |  1  |  4  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   163  |        chunk = arrayRead(text, j);  |         |   978  |     32  |  1  |  4  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   166  |                     R = R + chunk;  |     32  |  1010  |     32  |  1  |  4  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   170  |                         j = j + 1;  |         |  1010  |     32  |  1  |  5  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   171  |              resetPlaceHolder_2();  |         |  1010  |     32  |  1  |  5  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   180  |                         i = i + 1;  |         |  1010  |     32  |  2  |  5  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   183  |                 R = R + separator;  |    168  |  1178  |     32  |  2  |  5  |        168  |  177  |           2  |  [193,160,196,177,32]  |
   184  |              resetPlaceHolder_1();  |         |  1178  |     32  |  2  |  5  |        168  |  177  |           2  |  [193,160,196,177,32]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [69, 121, 92, 109, 166, 143, 183, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 4 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {109}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {109}; {183} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    193  |                            |
    69  |         R = R + chunk;  |    196  |                            |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     32  |                            |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    168  |                         0  |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    193  |                            |
   143  |         R = R + chunk;  |    196  |                            |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     32  |                            |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    168  |                         1  |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121}; {47}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143}; {69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {166}; {92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {69,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,143}; {47,69}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,121}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {121,166}; {47,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {92,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {143,166}; {69,92}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [69, 121, 92, 166, 143, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {121,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {47,143,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47,69,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {47,92,143}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {69,121,166}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {69,92,121}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {92,121,143}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {121,143,166}; {47,69,92}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {121,143,166}; {47,69,92} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    47  |         R = R + chunk;  |    193  |                         0  |
    69  |         R = R + chunk;  |    196  |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |
    92  |         R = R + chunk;  |     32  |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |
   109  |     R = R + separator;  |    168  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |    193  |                         1  |
   143  |         R = R + chunk;  |    196  |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |
   166  |         R = R + chunk;  |     32  |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |
   183  |     R = R + separator;  |    168  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {109}; {183}
GroupID(1): {121,143,166}; {47,69,92}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    47  |         R = R + chunk;  |    193  |                            |                         0  |
    69  |         R = R + chunk;  |    196  |                            |                         0  |
    74  |  resetPlaceHolder_2();  |         |                            |                            |
    92  |         R = R + chunk;  |     32  |                            |                         0  |
    97  |  resetPlaceHolder_2();  |         |                            |                            |
   109  |     R = R + separator;  |    168  |                         0  |                            |
   110  |  resetPlaceHolder_1();  |         |                            |                            |
   121  |         R = R + chunk;  |    193  |                            |                         1  |
   143  |         R = R + chunk;  |    196  |                            |                         1  |
   148  |  resetPlaceHolder_2();  |         |                            |                            |
   166  |         R = R + chunk;  |     32  |                            |                         1  |
   171  |  resetPlaceHolder_2();  |         |                            |                            |
   183  |     R = R + separator;  |    168  |                         1  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(110)
GroupID(1): Set(110)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m10.752s
user	0m18.908s
sys	0m4.672s

2023-01-26 11:05:31,030 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:06:56,013 INFO     Done. Execution time: 84.98346519470215 seconds
2023-01-26 11:06:56,014 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((text * templateds) + (separator * templateds))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 1;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 templateds)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* text templateds) (* separator templateds)))
      (= a!1 (+ (* text templateds) (* separator templateds)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `82.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1105-transparentAmortize-60s-mostPrecise/stac-raw-0126-1105-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m24.975s
user	3m43.126s
sys	0m16.744s

2023-01-26 11:06:56,014 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-26 11:06:56,014 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:07:05,048 INFO     Done. Execution time: 9.034177303314209 seconds
2023-01-26 11:07:05,048 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz4156348498056817686/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4156348498056817686/bin -o /tmp/qfuzz4156348498056817686/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4156348498056817686/bin
Found file /tmp/qfuzz4156348498056817686/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz4156348498056817686/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4156348498056817686/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4156348498056817686/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4156348498056817686/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz4156348498056817686/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 63, exec speed = 143819 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 63, exec speed = 140475 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m63 to 63 bits (average: 63.00 bits)
[1;90m        Exec timing : [0m140k to 143k us (average: 142k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4156348498056817686/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 12.00; [408.00,1359.00,2233.00,3513.00,3525.00,3859.00]
2; /tmp/qfuzz4156348498056817686/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 6; 12.00; [488.00,659.00,3373.00,3873.00,3885.00,3939.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4156348498056817686/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4156348498056817686/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4156348498056817686/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4156348498056817686/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 2, 168, 24
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 2, 111, 20
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.026s
user	0m7.282s
sys	0m0.377s

2023-01-26 11:07:05,049 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-26 11:07:05,049 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-26 11:07:16,579 INFO     Done. Execution time: 11.529532670974731 seconds
2023-01-26 11:07:16,579 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 2, 168, 24)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 2, 111, 20)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 208):
                                                                                                                                                
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |          text          |  ts  |
------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     |   24  |  168  |       |  [193,160,196,177,32]  |   2  |
    34  |                      // int R = 0;  |         |     0  |         |     |     |   24  |  168  |       |  [193,160,196,177,32]  |   2  |
    35  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |   24  |  168  |       |  [193,160,196,177,32]  |   2  |
    36  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |   24  |  168  |       |  [193,160,196,177,32]  |   2  |
    38  |                         int i = 0;  |         |     0  |         |  0  |     |   24  |  168  |       |  [193,160,196,177,32]  |   2  |
    40  |                         int j = 0;  |         |     0  |         |  0  |  0  |   24  |  168  |       |  [193,160,196,177,32]  |   2  |
    42  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |   24  |  168  |       |  [193,160,196,177,32]  |   2  |
    44  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |   24  |  168  |    0  |  [193,160,196,177,32]  |   2  |
    49  |                             j = 0;  |         |     0  |      0  |  0  |  0  |   24  |  168  |    0  |  [193,160,196,177,32]  |   2  |
    52  |        chunk = arrayRead(text, j);  |         |     0  |    193  |  0  |  0  |   24  |  168  |    0  |  [193,160,196,177,32]  |   2  |
    55  |                     R = R + chunk;  |    193  |   193  |    193  |  0  |  0  |   24  |  168  |    0  |  [193,160,196,177,32]  |   2  |
    59  |                         j = j + 1;  |         |   193  |    193  |  0  |  1  |   24  |  168  |    0  |  [193,160,196,177,32]  |   2  |
    67  |          tag = arrayRead(text, j);  |         |   193  |    193  |  0  |  1  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
    71  |                         j = j + 1;  |         |   193  |    193  |  0  |  2  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
    74  |        chunk = arrayRead(text, j);  |         |   193  |    196  |  0  |  2  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
    77  |                     R = R + chunk;  |    196  |   389  |    196  |  0  |  2  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
    80  |                       R = R + rep;  |     24  |   413  |    196  |  0  |  2  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
    84  |                         j = j + 1;  |         |   413  |    196  |  0  |  3  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
    85  |              resetPlaceHolder_2();  |         |   413  |    196  |  0  |  3  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
    93  |          tag = arrayRead(text, j);  |         |   413  |    196  |  0  |  3  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
    97  |                         j = j + 1;  |         |   413  |    196  |  0  |  4  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   100  |        chunk = arrayRead(text, j);  |         |   413  |     32  |  0  |  4  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   103  |                     R = R + chunk;  |     32  |   445  |     32  |  0  |  4  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   106  |                       R = R + rep;  |     24  |   469  |     32  |  0  |  4  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   110  |                         j = j + 1;  |         |   469  |     32  |  0  |  5  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   111  |              resetPlaceHolder_2();  |         |   469  |     32  |  0  |  5  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   120  |                         i = i + 1;  |         |   469  |     32  |  1  |  5  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   123  |                       R = R + sep;  |    168  |   637  |     32  |  1  |  5  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   124  |              resetPlaceHolder_1();  |         |   637  |     32  |  1  |  5  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   129  |                             j = 0;  |         |   637  |     32  |  1  |  0  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   132  |        chunk = arrayRead(text, j);  |         |   637  |    193  |  1  |  0  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   135  |                     R = R + chunk;  |    193  |   830  |    193  |  1  |  0  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   139  |                         j = j + 1;  |         |   830  |    193  |  1  |  1  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   147  |          tag = arrayRead(text, j);  |         |   830  |    193  |  1  |  1  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
   151  |                         j = j + 1;  |         |   830  |    193  |  1  |  2  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
   154  |        chunk = arrayRead(text, j);  |         |   830  |    196  |  1  |  2  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
   157  |                     R = R + chunk;  |    196  |  1026  |    196  |  1  |  2  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
   160  |                       R = R + rep;  |     24  |  1050  |    196  |  1  |  2  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
   164  |                         j = j + 1;  |         |  1050  |    196  |  1  |  3  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
   165  |              resetPlaceHolder_2();  |         |  1050  |    196  |  1  |  3  |   24  |  168  |  160  |  [193,160,196,177,32]  |   2  |
   173  |          tag = arrayRead(text, j);  |         |  1050  |    196  |  1  |  3  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   177  |                         j = j + 1;  |         |  1050  |    196  |  1  |  4  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   180  |        chunk = arrayRead(text, j);  |         |  1050  |     32  |  1  |  4  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   183  |                     R = R + chunk;  |     32  |  1082  |     32  |  1  |  4  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   186  |                       R = R + rep;  |     24  |  1106  |     32  |  1  |  4  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   190  |                         j = j + 1;  |         |  1106  |     32  |  1  |  5  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   191  |              resetPlaceHolder_2();  |         |  1106  |     32  |  1  |  5  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   200  |                         i = i + 1;  |         |  1106  |     32  |  2  |  5  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   203  |                       R = R + sep;  |    168  |  1274  |     32  |  2  |  5  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
   204  |              resetPlaceHolder_1();  |         |  1274  |     32  |  2  |  5  |   24  |  168  |  177  |  [193,160,196,177,32]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [157, 106, 160, 77, 103, 135, 80, 123, 203, 186, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 5 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(4), Set(4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {103}; {183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {106}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {160}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {186}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {106}; {160}; {186}; {80}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {106}; {160}; {186}; {80} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    193  |                            |
    77  |         R = R + chunk;  |    196  |                            |
    80  |           R = R + rep;  |     24  |                         0  |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |     32  |                            |
   106  |           R = R + rep;  |     24  |                         1  |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    168  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    193  |                            |
   157  |         R = R + chunk;  |    196  |                            |
   160  |           R = R + rep;  |     24  |                         2  |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |     32  |                            |
   186  |           R = R + rep;  |     24  |                         3  |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    168  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {123}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {123}; {203}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {123}; {203} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    193  |                            |
    77  |         R = R + chunk;  |    196  |                            |
    80  |           R = R + rep;  |     24  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |     32  |                            |
   106  |           R = R + rep;  |     24  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    168  |                         0  |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    193  |                            |
   157  |         R = R + chunk;  |    196  |                            |
   160  |           R = R + rep;  |     24  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |     32  |                            |
   186  |           R = R + rep;  |     24  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    168  |                         1  |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 3-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0), Set(0)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135}; {55}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 4-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2), Set(2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157}; {77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 3 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 4), Set(0, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,183}; {55,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(2, 4), Set(2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {157,183}; {77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 2)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {55,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {77,135}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 2-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 3 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2), Set(0, 2)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Removed group {135,157}; {55,77}
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 77, 103, 135, 55, 183]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {103,135,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {135,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {55,103,157}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {55,157,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {55,77,183}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {77,103,135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {77,135,183}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Concrete array indices List(Set(0, 2, 4), Set(0, 2, 4)) inside group groupString
INFO  brbo.backend2.learning.SegmentClustering - Kept group {135,157,183}; {55,77,103}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {135,157,183}; {55,77,103} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    55  |         R = R + chunk;  |    193  |                         0  |
    77  |         R = R + chunk;  |    196  |                         0  |
    80  |           R = R + rep;  |     24  |                            |
    85  |  resetPlaceHolder_2();  |         |                            |
   103  |         R = R + chunk;  |     32  |                         0  |
   106  |           R = R + rep;  |     24  |                            |
   111  |  resetPlaceHolder_2();  |         |                            |
   123  |           R = R + sep;  |    168  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |
   135  |         R = R + chunk;  |    193  |                         1  |
   157  |         R = R + chunk;  |    196  |                         1  |
   160  |           R = R + rep;  |     24  |                            |
   165  |  resetPlaceHolder_2();  |         |                            |
   183  |         R = R + chunk;  |     32  |                         1  |
   186  |           R = R + rep;  |     24  |                            |
   191  |  resetPlaceHolder_2();  |         |                            |
   203  |           R = R + sep;  |    168  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {106}; {160}; {186}; {80}
GroupID(1): {123}; {203}
GroupID(2): {135,157,183}; {55,77,103}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    55  |         R = R + chunk;  |    193  |                            |                            |                         0  |
    77  |         R = R + chunk;  |    196  |                            |                            |                         0  |
    80  |           R = R + rep;  |     24  |                         0  |                            |                            |
    85  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   103  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   106  |           R = R + rep;  |     24  |                         1  |                            |                            |
   111  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   123  |           R = R + sep;  |    168  |                            |                         0  |                            |
   124  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   135  |         R = R + chunk;  |    193  |                            |                            |                         1  |
   157  |         R = R + chunk;  |    196  |                            |                            |                         1  |
   160  |           R = R + rep;  |     24  |                         2  |                            |                            |
   165  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   183  |         R = R + chunk;  |     32  |                            |                            |                         1  |
   186  |           R = R + rep;  |     24  |                         3  |                            |                            |
   191  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   203  |           R = R + sep;  |    168  |                            |                         1  |                            |
   204  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(85, 111, 165)
GroupID(1): Set(124)
GroupID(2): Set(124)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_2(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R sep -> R1 = R1 + sep;
use R rep -> R0 = R0 + rep;
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_1(); -> {
  if (S2 < R2)
  {
    S2 = R2;
  }
  else
  {
    ;
  }
  R2 = 0;
  C2 = C2 + 1;
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m11.521s
user	0m23.429s
sys	0m4.990s

2023-01-26 11:07:16,579 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:12:05,175 INFO     Done. Execution time: 288.5957407951355 seconds
2023-01-26 11:12:05,175 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        j = j + 1;
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 1;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 sep)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 rep)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 rep)))` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-302433539480343999.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3555852652977174161.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 sep)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p (+ 0 (* 1 1 text)))` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 (+ 0 (* 1 1 ts)))` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= 0 (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 output:
timeout
ERROR brbo.common.Z3Solver - Exception when executing command `/root/Documents/workspace/brbo-impl/lib/z3/z3 -T:10 -smt2 /tmp/prefix-2531567674995406985.smt2`
java.lang.Exception: Unknown Z3 output
	at brbo.common.Z3Solver$.checkSATCommandLine(Z3Solver.scala:255) ~[brbo-impl_2.12-0.1.jar:0.1]
	at brbo.verification.BoundChecking$.checkBound(BoundChecking.scala:471) ~[brbo-impl_2.12-0.1.jar:0.1]
	at brbo.BrboMain$.$anonfun$checkBound$1(BrboMain.scala:197) ~[brbo-impl_2.12-0.1.jar:0.1]
	at scala.collection.immutable.List.map(List.scala:293) ~[scala-library.jar:?]
	at brbo.BrboMain$.checkBound(BrboMain.scala:179) ~[brbo-impl_2.12-0.1.jar:0.1]
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:100) ~[brbo-impl_2.12-0.1.jar:0.1]
	at scala.collection.immutable.List.map(List.scala:293) ~[scala-library.jar:?]
	at brbo.BrboMain$.runBatch(BrboMain.scala:94) ~[brbo-impl_2.12-0.1.jar:0.1]
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82) ~[brbo-impl_2.12-0.1.jar:0.1]
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81) ~[brbo-impl_2.12-0.1.jar:0.1]
	at scala.collection.Iterator.foreach(Iterator.scala:943) ~[scala-library.jar:?]
	at scala.collection.Iterator.foreach$(Iterator.scala:943) ~[scala-library.jar:?]
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431) ~[scala-library.jar:?]
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81) ~[brbo-impl_2.12-0.1.jar:0.1]
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77) ~[brbo-impl_2.12-0.1.jar:0.1]
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179) [scala-library.jar:?]
	at brbo.BrboMain$.main(BrboMain.scala:77) [brbo-impl_2.12-0.1.jar:0.1]
	at brbo.BrboMain.main(BrboMain.scala) [brbo-impl_2.12-0.1.jar:0.1]
ERROR brbo.common.Z3Solver - stdout:
timeout
ERROR brbo.common.Z3Solver - stderr:

FATAL brbo.verification.BoundChecking - Bound check - Unknown exception when running Z3: Error when running Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `286.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1107-transparentAmortize-60s-mostPrecise/stac-raw-0126-1107-transparentAmortize-60s-mostPrecise-000-099.csv`

real	4m48.588s
user	15m33.650s
sys	0m42.771s

2023-01-26 11:12:05,176 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-26 11:12:05,176 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:12:14,030 INFO     Done. Execution time: 8.854392290115356 seconds
2023-01-26 11:12:14,031 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz7558903672950374564/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7558903672950374564/bin -o /tmp/qfuzz7558903672950374564/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7558903672950374564/bin
Found file /tmp/qfuzz7558903672950374564/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz7558903672950374564/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7558903672950374564/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7558903672950374564/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7558903672950374564/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz7558903672950374564/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 41, exec speed = 128716 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 41, exec speed = 117129 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m117k to 128k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7558903672950374564/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 260.00; [1355.00,1995.00,2255.00,3522.00,3855.00]
1; /tmp/qfuzz7558903672950374564/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 5; 53.00; [655.00,3215.00,3555.00,3882.00,3935.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7558903672950374564/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7558903672950374564/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7558903672950374564/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7558903672950374564/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.845s
user	0m6.513s
sys	0m0.505s

2023-01-26 11:12:14,031 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-26 11:12:14,031 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-26 11:12:21,364 INFO     Done. Execution time: 7.33213996887207 seconds
2023-01-26 11:12:21,364 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 88):
                                                                                                                  
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |          text          |
------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |       |  [193,160,196,177,32]  |
    10  |                      // int R = 0;  |         |    0  |         |     |       |  [193,160,196,177,32]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [193,160,196,177,32]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [193,160,196,177,32]  |
    14  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [193,160,196,177,32]  |
    16  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [193,160,196,177,32]  |
    18  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [193,160,196,177,32]  |
    21  |        chunk = arrayRead(text, i);  |         |    0  |    193  |  0  |    0  |  [193,160,196,177,32]  |
    24  |                     R = R + chunk;  |    193  |  193  |    193  |  0  |    0  |  [193,160,196,177,32]  |
    28  |                         i = i + 1;  |         |  193  |    193  |  1  |    0  |  [193,160,196,177,32]  |
    34  |        chunk = arrayRead(text, i);  |         |  193  |    160  |  1  |    0  |  [193,160,196,177,32]  |
    37  |                     R = R + chunk;  |    160  |  353  |    160  |  1  |    0  |  [193,160,196,177,32]  |
    41  |                         i = i + 1;  |         |  353  |    160  |  2  |    0  |  [193,160,196,177,32]  |
    42  |              resetPlaceHolder_1();  |         |  353  |    160  |  2  |    0  |  [193,160,196,177,32]  |
    48  |        chunk = arrayRead(text, i);  |         |  353  |    196  |  2  |    0  |  [193,160,196,177,32]  |
    51  |                     R = R + chunk;  |    196  |  549  |    196  |  2  |    0  |  [193,160,196,177,32]  |
    55  |                         i = i + 1;  |         |  549  |    196  |  3  |    0  |  [193,160,196,177,32]  |
    56  |              resetPlaceHolder_1();  |         |  549  |    196  |  3  |    0  |  [193,160,196,177,32]  |
    62  |        chunk = arrayRead(text, i);  |         |  549  |    177  |  3  |    0  |  [193,160,196,177,32]  |
    65  |                     R = R + chunk;  |    177  |  726  |    177  |  3  |    0  |  [193,160,196,177,32]  |
    69  |                         i = i + 1;  |         |  726  |    177  |  4  |    0  |  [193,160,196,177,32]  |
    70  |              resetPlaceHolder_1();  |         |  726  |    177  |  4  |    0  |  [193,160,196,177,32]  |
    76  |        chunk = arrayRead(text, i);  |         |  726  |     32  |  4  |    0  |  [193,160,196,177,32]  |
    79  |                     R = R + chunk;  |     32  |  758  |     32  |  4  |    0  |  [193,160,196,177,32]  |
    83  |                         i = i + 1;  |         |  758  |     32  |  5  |    0  |  [193,160,196,177,32]  |
    84  |              resetPlaceHolder_1();  |         |  758  |     32  |  5  |    0  |  [193,160,196,177,32]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [24, 37, 65, 51, 79]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {24,37,51,65,79}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    24  |         R = R + chunk;  |    193  |                         0  |
    37  |         R = R + chunk;  |    160  |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |
    51  |         R = R + chunk;  |    196  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |         R = R + chunk;  |    177  |                         0  |
    70  |  resetPlaceHolder_1();  |         |                            |
    79  |         R = R + chunk;  |     32  |                         0  |
    84  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m7.324s
user	0m12.759s
sys	0m2.787s

2023-01-26 11:12:21,364 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:12:29,083 INFO     Done. Execution time: 7.718683242797852 seconds
2023-01-26 11:12:29,083 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * text) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < text) || ((0 + (D0 + (D0p * (C0 - 1)))) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) text))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) text)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1112-transparentAmortize-60s-mostPrecise/stac-raw-0126-1112-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.710s
user	0m16.638s
sys	0m2.469s

2023-01-26 11:12:29,083 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-26 11:12:29,083 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:12:37,899 INFO     Done. Execution time: 8.815399885177612 seconds
2023-01-26 11:12:37,899 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz1088051982289183681/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1088051982289183681/bin -o /tmp/qfuzz1088051982289183681/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1088051982289183681/bin
Found file /tmp/qfuzz1088051982289183681/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz1088051982289183681/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1088051982289183681/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1088051982289183681/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1088051982289183681/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz1088051982289183681/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 40, exec speed = 129156 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 40, exec speed = 122709 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m40 to 40 bits (average: 40.00 bits)
[1;90m        Exec timing : [0m122k to 129k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1088051982289183681/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [29.00,34.00,3511.00]
2; /tmp/qfuzz1088051982289183681/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 5.00; [29.00,34.00,3871.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1088051982289183681/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1088051982289183681/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1088051982289183681/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1088051982289183681/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 193, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 175, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.806s
user	0m6.388s
sys	0m0.579s

2023-01-26 11:12:37,900 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
2023-01-26 11:12:37,900 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-26 11:12:43,459 INFO     Done. Execution time: 5.559285402297974 seconds
2023-01-26 11:12:43,459 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(193, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(175, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                                     
 Index  |              Commands               |  Costs  |   R   |  builder  |  i  |  sep  |  types  |
-----------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |           |     |  193  |      2  |
    19  |                   int builder = 0;  |         |    0  |        0  |     |  193  |      2  |
    20  |                      // int R = 0;  |         |    0  |        0  |     |  193  |      2  |
    21  |  // mostPreciseBound(R <= types...  |         |    0  |        0  |     |  193  |      2  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |    0  |        0  |     |  193  |      2  |
    26  |             builder = builder + 1;  |         |    0  |        1  |     |  193  |      2  |
    29  |                         R = R + 1;  |      1  |    1  |        1  |     |  193  |      2  |
    31  |                         int i = 1;  |         |    1  |        1  |  1  |  193  |      2  |
    38  |           builder = builder + sep;  |         |    1  |      194  |  1  |  193  |      2  |
    41  |                       R = R + sep;  |    193  |  194  |      194  |  1  |  193  |      2  |
    45  |             builder = builder + 1;  |         |  194  |      195  |  1  |  193  |      2  |
    48  |                         R = R + 1;  |      1  |  195  |      195  |  1  |  193  |      2  |
    52  |                         i = i + 1;  |         |  195  |      195  |  2  |  193  |      2  |
    53  |              resetPlaceHolder_1();  |         |  195  |      195  |  2  |  193  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29, 41, 48]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {29}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {29}; {48}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {29}; {48} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |
    41  |           R = R + sep;  |    193  |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    53  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}; {48}
GroupID(1): {41}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    193  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [30, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    29  |             R = R + 1;  |      1  |                         0  |                            |
    41  |           R = R + sep;  |    193  |                            |                         0  |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    53  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R sep -> R1 = R1 + sep;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m5.550s
user	0m11.415s
sys	0m1.686s

2023-01-26 11:12:43,460 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:12:57,679 INFO     Done. Execution time: 14.21876335144043 seconds
2023-01-26 11:12:57,679 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (((types * sep) + types) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun sep () Int)
(declare-fun types () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C20 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> sep 0))
(assert (> types 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!3 (or (<= D0p (+ 0 (* 1 1 types))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1 D1 a!2)) (<= D0p 0) a!3 (<= D1p 0) (or true (= D1p 0)))))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 1 1 types))) (= D0 0))))
  (and a!1 (or true (= D1 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)
     (<= C1 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ (* types sep) types 1))
               (= a!1 (+ (* types sep) types 1)))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    7)  (define-fun D0 () Int    1)  (define-fun types () Int    2)  (define-fun sep () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D1p () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C20 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* types sep) types 1)) (= a!1 (+ (* types sep) types 1))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `12.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1112-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1112-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m14.212s
user	0m36.424s
sys	0m6.264s

2023-01-26 11:12:57,679 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-26 11:12:57,679 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:13:06,945 INFO     Done. Execution time: 9.265700817108154 seconds
2023-01-26 11:13:06,945 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz819164888955535823/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz819164888955535823/bin -o /tmp/qfuzz819164888955535823/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz819164888955535823/bin
Found file /tmp/qfuzz819164888955535823/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz819164888955535823/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz819164888955535823/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz819164888955535823/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz819164888955535823/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz819164888955535823/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz819164888955535823/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz819164888955535823/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 34, exec speed = 111314 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 34, exec speed = 120841 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m34 to 34 bits (average: 34.00 bits)
[1;90m        Exec timing : [0m111k to 120k us (average: 116k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz819164888955535823/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 3.00; [29.00,32.00,37.00]
1; /tmp/qfuzz819164888955535823/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 3.00; [29.00,32.00,37.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz819164888955535823/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz819164888955535823/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz819164888955535823/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz819164888955535823/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.257s
user	0m6.942s
sys	0m0.488s

2023-01-26 11:13:06,945 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
2023-01-26 11:13:06,946 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-26 11:13:12,211 INFO     Done. Execution time: 5.265587091445923 seconds
2023-01-26 11:13:12,211 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |      2  |          |     |
    11  |                    int buffer = 0;  |         |  0  |      2  |       0  |     |
    12  |                      // int R = 0;  |         |  0  |      2  |       0  |     |
    13  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    16  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    32  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    35  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    39  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    40  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    56  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    59  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    63  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    66  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    70  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    71  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [35, 59, 66]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {35}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {59}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {35}; {59}; {66}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {35}; {59}; {66} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35}; {59}; {66}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [60, 65])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 1;  |      1  |                         0  |
    40  |  resetPlaceHolder_1();  |         |                            |
    59  |             R = R + 1;  |      1  |                         1  |
    66  |             R = R + 1;  |      1  |                         2  |
    71  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(40)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m5.257s
user	0m9.887s
sys	0m1.822s

2023-01-26 11:13:12,212 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:13:19,781 INFO     Done. Execution time: 7.5697009563446045 seconds
2023-01-26 11:13:19,782 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 + (8 * array))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (1 + array)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ 1 array)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ 1 array))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `5.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1113-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1113-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.563s
user	0m16.005s
sys	0m2.497s

2023-01-26 11:13:19,782 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-26 11:13:19,782 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:13:28,984 INFO     Done. Execution time: 9.201865911483765 seconds
2023-01-26 11:13:28,984 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz708192751860288983/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz708192751860288983/bin -o /tmp/qfuzz708192751860288983/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz708192751860288983/bin
Found file /tmp/qfuzz708192751860288983/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz708192751860288983/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz708192751860288983/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz708192751860288983/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz708192751860288983/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz708192751860288983/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz708192751860288983/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz708192751860288983/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 42, exec speed = 156132 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 42, exec speed = 142777 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m142k to 156k us (average: 149k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz708192751860288983/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 4; 8.00; [30.00,50.00,58.00,66.00]
2; /tmp/qfuzz708192751860288983/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 4; 8.00; [30.00,50.00,58.00,66.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz708192751860288983/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz708192751860288983/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz708192751860288983/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz708192751860288983/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.194s
user	0m7.608s
sys	0m0.589s

2023-01-26 11:13:28,985 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
2023-01-26 11:13:28,985 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-26 11:17:57,148 INFO     Done. Execution time: 268.163357257843 seconds
2023-01-26 11:17:57,149 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 8453):
                                                                                                                   
 Index  |              Commands               |  Costs  |   R    |  entry  |  i  |   j   |         sorted         |
-------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |       |  [193,160,196,177,32]  |
    10  |                      // int R = 0;  |         |     0  |         |     |       |  [193,160,196,177,32]  |
    11  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |       |  [193,160,196,177,32]  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |       |  [193,160,196,177,32]  |
    14  |                     int entry = 0;  |         |     0  |      0  |     |       |  [193,160,196,177,32]  |
    16  |                         int i = 0;  |         |     0  |      0  |  0  |       |  [193,160,196,177,32]  |
    22  |      entry = arrayRead(sorted, i);  |         |     0  |    193  |  0  |       |  [193,160,196,177,32]  |
    24  |                         int j = 0;  |         |     0  |    193  |  0  |    0  |  [193,160,196,177,32]  |
    30  |                         R = R + 2;  |      2  |     2  |    193  |  0  |    0  |  [193,160,196,177,32]  |
    34  |                         j = j + 1;  |         |     2  |    193  |  0  |    1  |  [193,160,196,177,32]  |
    35  |              resetPlaceHolder_2();  |         |     2  |    193  |  0  |    1  |  [193,160,196,177,32]  |
    41  |                         R = R + 2;  |      2  |     4  |    193  |  0  |    1  |  [193,160,196,177,32]  |
    45  |                         j = j + 1;  |         |     4  |    193  |  0  |    2  |  [193,160,196,177,32]  |
    46  |              resetPlaceHolder_2();  |         |     4  |    193  |  0  |    2  |  [193,160,196,177,32]  |
    52  |                         R = R + 2;  |      2  |     6  |    193  |  0  |    2  |  [193,160,196,177,32]  |
    56  |                         j = j + 1;  |         |     6  |    193  |  0  |    3  |  [193,160,196,177,32]  |
    57  |              resetPlaceHolder_2();  |         |     6  |    193  |  0  |    3  |  [193,160,196,177,32]  |
    63  |                         R = R + 2;  |      2  |     8  |    193  |  0  |    3  |  [193,160,196,177,32]  |
    67  |                         j = j + 1;  |         |     8  |    193  |  0  |    4  |  [193,160,196,177,32]  |
    68  |              resetPlaceHolder_2();  |         |     8  |    193  |  0  |    4  |  [193,160,196,177,32]  |
    74  |                         R = R + 2;  |      2  |    10  |    193  |  0  |    4  |  [193,160,196,177,32]  |
    78  |                         j = j + 1;  |         |    10  |    193  |  0  |    5  |  [193,160,196,177,32]  |
    79  |              resetPlaceHolder_2();  |         |    10  |    193  |  0  |    5  |  [193,160,196,177,32]  |
    85  |                         R = R + 2;  |      2  |    12  |    193  |  0  |    5  |  [193,160,196,177,32]  |
    89  |                         j = j + 1;  |         |    12  |    193  |  0  |    6  |  [193,160,196,177,32]  |
    90  |              resetPlaceHolder_2();  |         |    12  |    193  |  0  |    6  |  [193,160,196,177,32]  |
    96  |                         R = R + 2;  |      2  |    14  |    193  |  0  |    6  |  [193,160,196,177,32]  |
   100  |                         j = j + 1;  |         |    14  |    193  |  0  |    7  |  [193,160,196,177,32]  |
   101  |              resetPlaceHolder_2();  |         |    14  |    193  |  0  |    7  |  [193,160,196,177,32]  |
   107  |                         R = R + 2;  |      2  |    16  |    193  |  0  |    7  |  [193,160,196,177,32]  |
   111  |                         j = j + 1;  |         |    16  |    193  |  0  |    8  |  [193,160,196,177,32]  |
   112  |              resetPlaceHolder_2();  |         |    16  |    193  |  0  |    8  |  [193,160,196,177,32]  |
   118  |                         R = R + 2;  |      2  |    18  |    193  |  0  |    8  |  [193,160,196,177,32]  |
   122  |                         j = j + 1;  |         |    18  |    193  |  0  |    9  |  [193,160,196,177,32]  |
   123  |              resetPlaceHolder_2();  |         |    18  |    193  |  0  |    9  |  [193,160,196,177,32]  |
   129  |                         R = R + 2;  |      2  |    20  |    193  |  0  |    9  |  [193,160,196,177,32]  |
   133  |                         j = j + 1;  |         |    20  |    193  |  0  |   10  |  [193,160,196,177,32]  |
   134  |              resetPlaceHolder_2();  |         |    20  |    193  |  0  |   10  |  [193,160,196,177,32]  |
   140  |                         R = R + 2;  |      2  |    22  |    193  |  0  |   10  |  [193,160,196,177,32]  |
   144  |                         j = j + 1;  |         |    22  |    193  |  0  |   11  |  [193,160,196,177,32]  |
   145  |              resetPlaceHolder_2();  |         |    22  |    193  |  0  |   11  |  [193,160,196,177,32]  |
   151  |                         R = R + 2;  |      2  |    24  |    193  |  0  |   11  |  [193,160,196,177,32]  |
   155  |                         j = j + 1;  |         |    24  |    193  |  0  |   12  |  [193,160,196,177,32]  |
   156  |              resetPlaceHolder_2();  |         |    24  |    193  |  0  |   12  |  [193,160,196,177,32]  |
   162  |                         R = R + 2;  |      2  |    26  |    193  |  0  |   12  |  [193,160,196,177,32]  |
   166  |                         j = j + 1;  |         |    26  |    193  |  0  |   13  |  [193,160,196,177,32]  |
   167  |              resetPlaceHolder_2();  |         |    26  |    193  |  0  |   13  |  [193,160,196,177,32]  |
   173  |                         R = R + 2;  |      2  |    28  |    193  |  0  |   13  |  [193,160,196,177,32]  |
   177  |                         j = j + 1;  |         |    28  |    193  |  0  |   14  |  [193,160,196,177,32]  |
   178  |              resetPlaceHolder_2();  |         |    28  |    193  |  0  |   14  |  [193,160,196,177,32]  |
   184  |                         R = R + 2;  |      2  |    30  |    193  |  0  |   14  |  [193,160,196,177,32]  |
   188  |                         j = j + 1;  |         |    30  |    193  |  0  |   15  |  [193,160,196,177,32]  |
   189  |              resetPlaceHolder_2();  |         |    30  |    193  |  0  |   15  |  [193,160,196,177,32]  |
   195  |                         R = R + 2;  |      2  |    32  |    193  |  0  |   15  |  [193,160,196,177,32]  |
   199  |                         j = j + 1;  |         |    32  |    193  |  0  |   16  |  [193,160,196,177,32]  |
   200  |              resetPlaceHolder_2();  |         |    32  |    193  |  0  |   16  |  [193,160,196,177,32]  |
   206  |                         R = R + 2;  |      2  |    34  |    193  |  0  |   16  |  [193,160,196,177,32]  |
   210  |                         j = j + 1;  |         |    34  |    193  |  0  |   17  |  [193,160,196,177,32]  |
   211  |              resetPlaceHolder_2();  |         |    34  |    193  |  0  |   17  |  [193,160,196,177,32]  |
   217  |                         R = R + 2;  |      2  |    36  |    193  |  0  |   17  |  [193,160,196,177,32]  |
   221  |                         j = j + 1;  |         |    36  |    193  |  0  |   18  |  [193,160,196,177,32]  |
   222  |              resetPlaceHolder_2();  |         |    36  |    193  |  0  |   18  |  [193,160,196,177,32]  |
   228  |                         R = R + 2;  |      2  |    38  |    193  |  0  |   18  |  [193,160,196,177,32]  |
   232  |                         j = j + 1;  |         |    38  |    193  |  0  |   19  |  [193,160,196,177,32]  |
   233  |              resetPlaceHolder_2();  |         |    38  |    193  |  0  |   19  |  [193,160,196,177,32]  |
   239  |                         R = R + 2;  |      2  |    40  |    193  |  0  |   19  |  [193,160,196,177,32]  |
   243  |                         j = j + 1;  |         |    40  |    193  |  0  |   20  |  [193,160,196,177,32]  |
   244  |              resetPlaceHolder_2();  |         |    40  |    193  |  0  |   20  |  [193,160,196,177,32]  |
   250  |                         R = R + 2;  |      2  |    42  |    193  |  0  |   20  |  [193,160,196,177,32]  |
   254  |                         j = j + 1;  |         |    42  |    193  |  0  |   21  |  [193,160,196,177,32]  |
   255  |              resetPlaceHolder_2();  |         |    42  |    193  |  0  |   21  |  [193,160,196,177,32]  |
   261  |                         R = R + 2;  |      2  |    44  |    193  |  0  |   21  |  [193,160,196,177,32]  |
   265  |                         j = j + 1;  |         |    44  |    193  |  0  |   22  |  [193,160,196,177,32]  |
   266  |              resetPlaceHolder_2();  |         |    44  |    193  |  0  |   22  |  [193,160,196,177,32]  |
   272  |                         R = R + 2;  |      2  |    46  |    193  |  0  |   22  |  [193,160,196,177,32]  |
   276  |                         j = j + 1;  |         |    46  |    193  |  0  |   23  |  [193,160,196,177,32]  |
   277  |              resetPlaceHolder_2();  |         |    46  |    193  |  0  |   23  |  [193,160,196,177,32]  |
   283  |                         R = R + 2;  |      2  |    48  |    193  |  0  |   23  |  [193,160,196,177,32]  |
   287  |                         j = j + 1;  |         |    48  |    193  |  0  |   24  |  [193,160,196,177,32]  |
   288  |              resetPlaceHolder_2();  |         |    48  |    193  |  0  |   24  |  [193,160,196,177,32]  |
   294  |                         R = R + 2;  |      2  |    50  |    193  |  0  |   24  |  [193,160,196,177,32]  |
   298  |                         j = j + 1;  |         |    50  |    193  |  0  |   25  |  [193,160,196,177,32]  |
   299  |              resetPlaceHolder_2();  |         |    50  |    193  |  0  |   25  |  [193,160,196,177,32]  |
   305  |                         R = R + 2;  |      2  |    52  |    193  |  0  |   25  |  [193,160,196,177,32]  |
   309  |                         j = j + 1;  |         |    52  |    193  |  0  |   26  |  [193,160,196,177,32]  |
   310  |              resetPlaceHolder_2();  |         |    52  |    193  |  0  |   26  |  [193,160,196,177,32]  |
   316  |                         R = R + 2;  |      2  |    54  |    193  |  0  |   26  |  [193,160,196,177,32]  |
   320  |                         j = j + 1;  |         |    54  |    193  |  0  |   27  |  [193,160,196,177,32]  |
   321  |              resetPlaceHolder_2();  |         |    54  |    193  |  0  |   27  |  [193,160,196,177,32]  |
   327  |                         R = R + 2;  |      2  |    56  |    193  |  0  |   27  |  [193,160,196,177,32]  |
   331  |                         j = j + 1;  |         |    56  |    193  |  0  |   28  |  [193,160,196,177,32]  |
   332  |              resetPlaceHolder_2();  |         |    56  |    193  |  0  |   28  |  [193,160,196,177,32]  |
   338  |                         R = R + 2;  |      2  |    58  |    193  |  0  |   28  |  [193,160,196,177,32]  |
   342  |                         j = j + 1;  |         |    58  |    193  |  0  |   29  |  [193,160,196,177,32]  |
   343  |              resetPlaceHolder_2();  |         |    58  |    193  |  0  |   29  |  [193,160,196,177,32]  |
   349  |                         R = R + 2;  |      2  |    60  |    193  |  0  |   29  |  [193,160,196,177,32]  |
   353  |                         j = j + 1;  |         |    60  |    193  |  0  |   30  |  [193,160,196,177,32]  |
   354  |              resetPlaceHolder_2();  |         |    60  |    193  |  0  |   30  |  [193,160,196,177,32]  |
   360  |                         R = R + 2;  |      2  |    62  |    193  |  0  |   30  |  [193,160,196,177,32]  |
   364  |                         j = j + 1;  |         |    62  |    193  |  0  |   31  |  [193,160,196,177,32]  |
   365  |              resetPlaceHolder_2();  |         |    62  |    193  |  0  |   31  |  [193,160,196,177,32]  |
   371  |                         R = R + 2;  |      2  |    64  |    193  |  0  |   31  |  [193,160,196,177,32]  |
   375  |                         j = j + 1;  |         |    64  |    193  |  0  |   32  |  [193,160,196,177,32]  |
   376  |              resetPlaceHolder_2();  |         |    64  |    193  |  0  |   32  |  [193,160,196,177,32]  |
   382  |                         R = R + 2;  |      2  |    66  |    193  |  0  |   32  |  [193,160,196,177,32]  |
   386  |                         j = j + 1;  |         |    66  |    193  |  0  |   33  |  [193,160,196,177,32]  |
   387  |              resetPlaceHolder_2();  |         |    66  |    193  |  0  |   33  |  [193,160,196,177,32]  |
   393  |                         R = R + 2;  |      2  |    68  |    193  |  0  |   33  |  [193,160,196,177,32]  |
   397  |                         j = j + 1;  |         |    68  |    193  |  0  |   34  |  [193,160,196,177,32]  |
   398  |              resetPlaceHolder_2();  |         |    68  |    193  |  0  |   34  |  [193,160,196,177,32]  |
   404  |                         R = R + 2;  |      2  |    70  |    193  |  0  |   34  |  [193,160,196,177,32]  |
   408  |                         j = j + 1;  |         |    70  |    193  |  0  |   35  |  [193,160,196,177,32]  |
   409  |              resetPlaceHolder_2();  |         |    70  |    193  |  0  |   35  |  [193,160,196,177,32]  |
   415  |                         R = R + 2;  |      2  |    72  |    193  |  0  |   35  |  [193,160,196,177,32]  |
   419  |                         j = j + 1;  |         |    72  |    193  |  0  |   36  |  [193,160,196,177,32]  |
   420  |              resetPlaceHolder_2();  |         |    72  |    193  |  0  |   36  |  [193,160,196,177,32]  |
   426  |                         R = R + 2;  |      2  |    74  |    193  |  0  |   36  |  [193,160,196,177,32]  |
   430  |                         j = j + 1;  |         |    74  |    193  |  0  |   37  |  [193,160,196,177,32]  |
   431  |              resetPlaceHolder_2();  |         |    74  |    193  |  0  |   37  |  [193,160,196,177,32]  |
   437  |                         R = R + 2;  |      2  |    76  |    193  |  0  |   37  |  [193,160,196,177,32]  |
   441  |                         j = j + 1;  |         |    76  |    193  |  0  |   38  |  [193,160,196,177,32]  |
   442  |              resetPlaceHolder_2();  |         |    76  |    193  |  0  |   38  |  [193,160,196,177,32]  |
   448  |                         R = R + 2;  |      2  |    78  |    193  |  0  |   38  |  [193,160,196,177,32]  |
   452  |                         j = j + 1;  |         |    78  |    193  |  0  |   39  |  [193,160,196,177,32]  |
   453  |              resetPlaceHolder_2();  |         |    78  |    193  |  0  |   39  |  [193,160,196,177,32]  |
   459  |                         R = R + 2;  |      2  |    80  |    193  |  0  |   39  |  [193,160,196,177,32]  |
   463  |                         j = j + 1;  |         |    80  |    193  |  0  |   40  |  [193,160,196,177,32]  |
   464  |              resetPlaceHolder_2();  |         |    80  |    193  |  0  |   40  |  [193,160,196,177,32]  |
   470  |                         R = R + 2;  |      2  |    82  |    193  |  0  |   40  |  [193,160,196,177,32]  |
   474  |                         j = j + 1;  |         |    82  |    193  |  0  |   41  |  [193,160,196,177,32]  |
   475  |              resetPlaceHolder_2();  |         |    82  |    193  |  0  |   41  |  [193,160,196,177,32]  |
   481  |                         R = R + 2;  |      2  |    84  |    193  |  0  |   41  |  [193,160,196,177,32]  |
   485  |                         j = j + 1;  |         |    84  |    193  |  0  |   42  |  [193,160,196,177,32]  |
   486  |              resetPlaceHolder_2();  |         |    84  |    193  |  0  |   42  |  [193,160,196,177,32]  |
   492  |                         R = R + 2;  |      2  |    86  |    193  |  0  |   42  |  [193,160,196,177,32]  |
   496  |                         j = j + 1;  |         |    86  |    193  |  0  |   43  |  [193,160,196,177,32]  |
   497  |              resetPlaceHolder_2();  |         |    86  |    193  |  0  |   43  |  [193,160,196,177,32]  |
   503  |                         R = R + 2;  |      2  |    88  |    193  |  0  |   43  |  [193,160,196,177,32]  |
   507  |                         j = j + 1;  |         |    88  |    193  |  0  |   44  |  [193,160,196,177,32]  |
   508  |              resetPlaceHolder_2();  |         |    88  |    193  |  0  |   44  |  [193,160,196,177,32]  |
   514  |                         R = R + 2;  |      2  |    90  |    193  |  0  |   44  |  [193,160,196,177,32]  |
   518  |                         j = j + 1;  |         |    90  |    193  |  0  |   45  |  [193,160,196,177,32]  |
   519  |              resetPlaceHolder_2();  |         |    90  |    193  |  0  |   45  |  [193,160,196,177,32]  |
   525  |                         R = R + 2;  |      2  |    92  |    193  |  0  |   45  |  [193,160,196,177,32]  |
   529  |                         j = j + 1;  |         |    92  |    193  |  0  |   46  |  [193,160,196,177,32]  |
   530  |              resetPlaceHolder_2();  |         |    92  |    193  |  0  |   46  |  [193,160,196,177,32]  |
   536  |                         R = R + 2;  |      2  |    94  |    193  |  0  |   46  |  [193,160,196,177,32]  |
   540  |                         j = j + 1;  |         |    94  |    193  |  0  |   47  |  [193,160,196,177,32]  |
   541  |              resetPlaceHolder_2();  |         |    94  |    193  |  0  |   47  |  [193,160,196,177,32]  |
   547  |                         R = R + 2;  |      2  |    96  |    193  |  0  |   47  |  [193,160,196,177,32]  |
   551  |                         j = j + 1;  |         |    96  |    193  |  0  |   48  |  [193,160,196,177,32]  |
   552  |              resetPlaceHolder_2();  |         |    96  |    193  |  0  |   48  |  [193,160,196,177,32]  |
   558  |                         R = R + 2;  |      2  |    98  |    193  |  0  |   48  |  [193,160,196,177,32]  |
   562  |                         j = j + 1;  |         |    98  |    193  |  0  |   49  |  [193,160,196,177,32]  |
   563  |              resetPlaceHolder_2();  |         |    98  |    193  |  0  |   49  |  [193,160,196,177,32]  |
   569  |                         R = R + 2;  |      2  |   100  |    193  |  0  |   49  |  [193,160,196,177,32]  |
   573  |                         j = j + 1;  |         |   100  |    193  |  0  |   50  |  [193,160,196,177,32]  |
   574  |              resetPlaceHolder_2();  |         |   100  |    193  |  0  |   50  |  [193,160,196,177,32]  |
   580  |                         R = R + 2;  |      2  |   102  |    193  |  0  |   50  |  [193,160,196,177,32]  |
   584  |                         j = j + 1;  |         |   102  |    193  |  0  |   51  |  [193,160,196,177,32]  |
   585  |              resetPlaceHolder_2();  |         |   102  |    193  |  0  |   51  |  [193,160,196,177,32]  |
   591  |                         R = R + 2;  |      2  |   104  |    193  |  0  |   51  |  [193,160,196,177,32]  |
   595  |                         j = j + 1;  |         |   104  |    193  |  0  |   52  |  [193,160,196,177,32]  |
   596  |              resetPlaceHolder_2();  |         |   104  |    193  |  0  |   52  |  [193,160,196,177,32]  |
   602  |                         R = R + 2;  |      2  |   106  |    193  |  0  |   52  |  [193,160,196,177,32]  |
   606  |                         j = j + 1;  |         |   106  |    193  |  0  |   53  |  [193,160,196,177,32]  |
   607  |              resetPlaceHolder_2();  |         |   106  |    193  |  0  |   53  |  [193,160,196,177,32]  |
   613  |                         R = R + 2;  |      2  |   108  |    193  |  0  |   53  |  [193,160,196,177,32]  |
   617  |                         j = j + 1;  |         |   108  |    193  |  0  |   54  |  [193,160,196,177,32]  |
   618  |              resetPlaceHolder_2();  |         |   108  |    193  |  0  |   54  |  [193,160,196,177,32]  |
   624  |                         R = R + 2;  |      2  |   110  |    193  |  0  |   54  |  [193,160,196,177,32]  |
   628  |                         j = j + 1;  |         |   110  |    193  |  0  |   55  |  [193,160,196,177,32]  |
   629  |              resetPlaceHolder_2();  |         |   110  |    193  |  0  |   55  |  [193,160,196,177,32]  |
   635  |                         R = R + 2;  |      2  |   112  |    193  |  0  |   55  |  [193,160,196,177,32]  |
   639  |                         j = j + 1;  |         |   112  |    193  |  0  |   56  |  [193,160,196,177,32]  |
   640  |              resetPlaceHolder_2();  |         |   112  |    193  |  0  |   56  |  [193,160,196,177,32]  |
   646  |                         R = R + 2;  |      2  |   114  |    193  |  0  |   56  |  [193,160,196,177,32]  |
   650  |                         j = j + 1;  |         |   114  |    193  |  0  |   57  |  [193,160,196,177,32]  |
   651  |              resetPlaceHolder_2();  |         |   114  |    193  |  0  |   57  |  [193,160,196,177,32]  |
   657  |                         R = R + 2;  |      2  |   116  |    193  |  0  |   57  |  [193,160,196,177,32]  |
   661  |                         j = j + 1;  |         |   116  |    193  |  0  |   58  |  [193,160,196,177,32]  |
   662  |              resetPlaceHolder_2();  |         |   116  |    193  |  0  |   58  |  [193,160,196,177,32]  |
   668  |                         R = R + 2;  |      2  |   118  |    193  |  0  |   58  |  [193,160,196,177,32]  |
   672  |                         j = j + 1;  |         |   118  |    193  |  0  |   59  |  [193,160,196,177,32]  |
   673  |              resetPlaceHolder_2();  |         |   118  |    193  |  0  |   59  |  [193,160,196,177,32]  |
   679  |                         R = R + 2;  |      2  |   120  |    193  |  0  |   59  |  [193,160,196,177,32]  |
   683  |                         j = j + 1;  |         |   120  |    193  |  0  |   60  |  [193,160,196,177,32]  |
   684  |              resetPlaceHolder_2();  |         |   120  |    193  |  0  |   60  |  [193,160,196,177,32]  |
   690  |                         R = R + 2;  |      2  |   122  |    193  |  0  |   60  |  [193,160,196,177,32]  |
   694  |                         j = j + 1;  |         |   122  |    193  |  0  |   61  |  [193,160,196,177,32]  |
   695  |              resetPlaceHolder_2();  |         |   122  |    193  |  0  |   61  |  [193,160,196,177,32]  |
   701  |                         R = R + 2;  |      2  |   124  |    193  |  0  |   61  |  [193,160,196,177,32]  |
   705  |                         j = j + 1;  |         |   124  |    193  |  0  |   62  |  [193,160,196,177,32]  |
   706  |              resetPlaceHolder_2();  |         |   124  |    193  |  0  |   62  |  [193,160,196,177,32]  |
   712  |                         R = R + 2;  |      2  |   126  |    193  |  0  |   62  |  [193,160,196,177,32]  |
   716  |                         j = j + 1;  |         |   126  |    193  |  0  |   63  |  [193,160,196,177,32]  |
   717  |              resetPlaceHolder_2();  |         |   126  |    193  |  0  |   63  |  [193,160,196,177,32]  |
   723  |                         R = R + 2;  |      2  |   128  |    193  |  0  |   63  |  [193,160,196,177,32]  |
   727  |                         j = j + 1;  |         |   128  |    193  |  0  |   64  |  [193,160,196,177,32]  |
   728  |              resetPlaceHolder_2();  |         |   128  |    193  |  0  |   64  |  [193,160,196,177,32]  |
   734  |                         R = R + 2;  |      2  |   130  |    193  |  0  |   64  |  [193,160,196,177,32]  |
   738  |                         j = j + 1;  |         |   130  |    193  |  0  |   65  |  [193,160,196,177,32]  |
   739  |              resetPlaceHolder_2();  |         |   130  |    193  |  0  |   65  |  [193,160,196,177,32]  |
   745  |                         R = R + 2;  |      2  |   132  |    193  |  0  |   65  |  [193,160,196,177,32]  |
   749  |                         j = j + 1;  |         |   132  |    193  |  0  |   66  |  [193,160,196,177,32]  |
   750  |              resetPlaceHolder_2();  |         |   132  |    193  |  0  |   66  |  [193,160,196,177,32]  |
   756  |                         R = R + 2;  |      2  |   134  |    193  |  0  |   66  |  [193,160,196,177,32]  |
   760  |                         j = j + 1;  |         |   134  |    193  |  0  |   67  |  [193,160,196,177,32]  |
   761  |              resetPlaceHolder_2();  |         |   134  |    193  |  0  |   67  |  [193,160,196,177,32]  |
   767  |                         R = R + 2;  |      2  |   136  |    193  |  0  |   67  |  [193,160,196,177,32]  |
   771  |                         j = j + 1;  |         |   136  |    193  |  0  |   68  |  [193,160,196,177,32]  |
   772  |              resetPlaceHolder_2();  |         |   136  |    193  |  0  |   68  |  [193,160,196,177,32]  |
   778  |                         R = R + 2;  |      2  |   138  |    193  |  0  |   68  |  [193,160,196,177,32]  |
   782  |                         j = j + 1;  |         |   138  |    193  |  0  |   69  |  [193,160,196,177,32]  |
   783  |              resetPlaceHolder_2();  |         |   138  |    193  |  0  |   69  |  [193,160,196,177,32]  |
   789  |                         R = R + 2;  |      2  |   140  |    193  |  0  |   69  |  [193,160,196,177,32]  |
   793  |                         j = j + 1;  |         |   140  |    193  |  0  |   70  |  [193,160,196,177,32]  |
   794  |              resetPlaceHolder_2();  |         |   140  |    193  |  0  |   70  |  [193,160,196,177,32]  |
   800  |                         R = R + 2;  |      2  |   142  |    193  |  0  |   70  |  [193,160,196,177,32]  |
   804  |                         j = j + 1;  |         |   142  |    193  |  0  |   71  |  [193,160,196,177,32]  |
   805  |              resetPlaceHolder_2();  |         |   142  |    193  |  0  |   71  |  [193,160,196,177,32]  |
   811  |                         R = R + 2;  |      2  |   144  |    193  |  0  |   71  |  [193,160,196,177,32]  |
   815  |                         j = j + 1;  |         |   144  |    193  |  0  |   72  |  [193,160,196,177,32]  |
   816  |              resetPlaceHolder_2();  |         |   144  |    193  |  0  |   72  |  [193,160,196,177,32]  |
   822  |                         R = R + 2;  |      2  |   146  |    193  |  0  |   72  |  [193,160,196,177,32]  |
   826  |                         j = j + 1;  |         |   146  |    193  |  0  |   73  |  [193,160,196,177,32]  |
   827  |              resetPlaceHolder_2();  |         |   146  |    193  |  0  |   73  |  [193,160,196,177,32]  |
   833  |                         R = R + 2;  |      2  |   148  |    193  |  0  |   73  |  [193,160,196,177,32]  |
   837  |                         j = j + 1;  |         |   148  |    193  |  0  |   74  |  [193,160,196,177,32]  |
   838  |              resetPlaceHolder_2();  |         |   148  |    193  |  0  |   74  |  [193,160,196,177,32]  |
   844  |                         R = R + 2;  |      2  |   150  |    193  |  0  |   74  |  [193,160,196,177,32]  |
   848  |                         j = j + 1;  |         |   150  |    193  |  0  |   75  |  [193,160,196,177,32]  |
   849  |              resetPlaceHolder_2();  |         |   150  |    193  |  0  |   75  |  [193,160,196,177,32]  |
   855  |                         R = R + 2;  |      2  |   152  |    193  |  0  |   75  |  [193,160,196,177,32]  |
   859  |                         j = j + 1;  |         |   152  |    193  |  0  |   76  |  [193,160,196,177,32]  |
   860  |              resetPlaceHolder_2();  |         |   152  |    193  |  0  |   76  |  [193,160,196,177,32]  |
   866  |                         R = R + 2;  |      2  |   154  |    193  |  0  |   76  |  [193,160,196,177,32]  |
   870  |                         j = j + 1;  |         |   154  |    193  |  0  |   77  |  [193,160,196,177,32]  |
   871  |              resetPlaceHolder_2();  |         |   154  |    193  |  0  |   77  |  [193,160,196,177,32]  |
   877  |                         R = R + 2;  |      2  |   156  |    193  |  0  |   77  |  [193,160,196,177,32]  |
   881  |                         j = j + 1;  |         |   156  |    193  |  0  |   78  |  [193,160,196,177,32]  |
   882  |              resetPlaceHolder_2();  |         |   156  |    193  |  0  |   78  |  [193,160,196,177,32]  |
   888  |                         R = R + 2;  |      2  |   158  |    193  |  0  |   78  |  [193,160,196,177,32]  |
   892  |                         j = j + 1;  |         |   158  |    193  |  0  |   79  |  [193,160,196,177,32]  |
   893  |              resetPlaceHolder_2();  |         |   158  |    193  |  0  |   79  |  [193,160,196,177,32]  |
   899  |                         R = R + 2;  |      2  |   160  |    193  |  0  |   79  |  [193,160,196,177,32]  |
   903  |                         j = j + 1;  |         |   160  |    193  |  0  |   80  |  [193,160,196,177,32]  |
   904  |              resetPlaceHolder_2();  |         |   160  |    193  |  0  |   80  |  [193,160,196,177,32]  |
   910  |                         R = R + 2;  |      2  |   162  |    193  |  0  |   80  |  [193,160,196,177,32]  |
   914  |                         j = j + 1;  |         |   162  |    193  |  0  |   81  |  [193,160,196,177,32]  |
   915  |              resetPlaceHolder_2();  |         |   162  |    193  |  0  |   81  |  [193,160,196,177,32]  |
   921  |                         R = R + 2;  |      2  |   164  |    193  |  0  |   81  |  [193,160,196,177,32]  |
   925  |                         j = j + 1;  |         |   164  |    193  |  0  |   82  |  [193,160,196,177,32]  |
   926  |              resetPlaceHolder_2();  |         |   164  |    193  |  0  |   82  |  [193,160,196,177,32]  |
   932  |                         R = R + 2;  |      2  |   166  |    193  |  0  |   82  |  [193,160,196,177,32]  |
   936  |                         j = j + 1;  |         |   166  |    193  |  0  |   83  |  [193,160,196,177,32]  |
   937  |              resetPlaceHolder_2();  |         |   166  |    193  |  0  |   83  |  [193,160,196,177,32]  |
   943  |                         R = R + 2;  |      2  |   168  |    193  |  0  |   83  |  [193,160,196,177,32]  |
   947  |                         j = j + 1;  |         |   168  |    193  |  0  |   84  |  [193,160,196,177,32]  |
   948  |              resetPlaceHolder_2();  |         |   168  |    193  |  0  |   84  |  [193,160,196,177,32]  |
   954  |                         R = R + 2;  |      2  |   170  |    193  |  0  |   84  |  [193,160,196,177,32]  |
   958  |                         j = j + 1;  |         |   170  |    193  |  0  |   85  |  [193,160,196,177,32]  |
   959  |              resetPlaceHolder_2();  |         |   170  |    193  |  0  |   85  |  [193,160,196,177,32]  |
   965  |                         R = R + 2;  |      2  |   172  |    193  |  0  |   85  |  [193,160,196,177,32]  |
   969  |                         j = j + 1;  |         |   172  |    193  |  0  |   86  |  [193,160,196,177,32]  |
   970  |              resetPlaceHolder_2();  |         |   172  |    193  |  0  |   86  |  [193,160,196,177,32]  |
   976  |                         R = R + 2;  |      2  |   174  |    193  |  0  |   86  |  [193,160,196,177,32]  |
   980  |                         j = j + 1;  |         |   174  |    193  |  0  |   87  |  [193,160,196,177,32]  |
   981  |              resetPlaceHolder_2();  |         |   174  |    193  |  0  |   87  |  [193,160,196,177,32]  |
   987  |                         R = R + 2;  |      2  |   176  |    193  |  0  |   87  |  [193,160,196,177,32]  |
   991  |                         j = j + 1;  |         |   176  |    193  |  0  |   88  |  [193,160,196,177,32]  |
   992  |              resetPlaceHolder_2();  |         |   176  |    193  |  0  |   88  |  [193,160,196,177,32]  |
   998  |                         R = R + 2;  |      2  |   178  |    193  |  0  |   88  |  [193,160,196,177,32]  |
  1002  |                         j = j + 1;  |         |   178  |    193  |  0  |   89  |  [193,160,196,177,32]  |
  1003  |              resetPlaceHolder_2();  |         |   178  |    193  |  0  |   89  |  [193,160,196,177,32]  |
  1009  |                         R = R + 2;  |      2  |   180  |    193  |  0  |   89  |  [193,160,196,177,32]  |
  1013  |                         j = j + 1;  |         |   180  |    193  |  0  |   90  |  [193,160,196,177,32]  |
  1014  |              resetPlaceHolder_2();  |         |   180  |    193  |  0  |   90  |  [193,160,196,177,32]  |
  1020  |                         R = R + 2;  |      2  |   182  |    193  |  0  |   90  |  [193,160,196,177,32]  |
  1024  |                         j = j + 1;  |         |   182  |    193  |  0  |   91  |  [193,160,196,177,32]  |
  1025  |              resetPlaceHolder_2();  |         |   182  |    193  |  0  |   91  |  [193,160,196,177,32]  |
  1031  |                         R = R + 2;  |      2  |   184  |    193  |  0  |   91  |  [193,160,196,177,32]  |
  1035  |                         j = j + 1;  |         |   184  |    193  |  0  |   92  |  [193,160,196,177,32]  |
  1036  |              resetPlaceHolder_2();  |         |   184  |    193  |  0  |   92  |  [193,160,196,177,32]  |
  1042  |                         R = R + 2;  |      2  |   186  |    193  |  0  |   92  |  [193,160,196,177,32]  |
  1046  |                         j = j + 1;  |         |   186  |    193  |  0  |   93  |  [193,160,196,177,32]  |
  1047  |              resetPlaceHolder_2();  |         |   186  |    193  |  0  |   93  |  [193,160,196,177,32]  |
  1053  |                         R = R + 2;  |      2  |   188  |    193  |  0  |   93  |  [193,160,196,177,32]  |
  1057  |                         j = j + 1;  |         |   188  |    193  |  0  |   94  |  [193,160,196,177,32]  |
  1058  |              resetPlaceHolder_2();  |         |   188  |    193  |  0  |   94  |  [193,160,196,177,32]  |
  1064  |                         R = R + 2;  |      2  |   190  |    193  |  0  |   94  |  [193,160,196,177,32]  |
  1068  |                         j = j + 1;  |         |   190  |    193  |  0  |   95  |  [193,160,196,177,32]  |
  1069  |              resetPlaceHolder_2();  |         |   190  |    193  |  0  |   95  |  [193,160,196,177,32]  |
  1075  |                         R = R + 2;  |      2  |   192  |    193  |  0  |   95  |  [193,160,196,177,32]  |
  1079  |                         j = j + 1;  |         |   192  |    193  |  0  |   96  |  [193,160,196,177,32]  |
  1080  |              resetPlaceHolder_2();  |         |   192  |    193  |  0  |   96  |  [193,160,196,177,32]  |
  1086  |                         R = R + 2;  |      2  |   194  |    193  |  0  |   96  |  [193,160,196,177,32]  |
  1090  |                         j = j + 1;  |         |   194  |    193  |  0  |   97  |  [193,160,196,177,32]  |
  1091  |              resetPlaceHolder_2();  |         |   194  |    193  |  0  |   97  |  [193,160,196,177,32]  |
  1097  |                         R = R + 2;  |      2  |   196  |    193  |  0  |   97  |  [193,160,196,177,32]  |
  1101  |                         j = j + 1;  |         |   196  |    193  |  0  |   98  |  [193,160,196,177,32]  |
  1102  |              resetPlaceHolder_2();  |         |   196  |    193  |  0  |   98  |  [193,160,196,177,32]  |
  1108  |                         R = R + 2;  |      2  |   198  |    193  |  0  |   98  |  [193,160,196,177,32]  |
  1112  |                         j = j + 1;  |         |   198  |    193  |  0  |   99  |  [193,160,196,177,32]  |
  1113  |              resetPlaceHolder_2();  |         |   198  |    193  |  0  |   99  |  [193,160,196,177,32]  |
  1119  |                         R = R + 2;  |      2  |   200  |    193  |  0  |   99  |  [193,160,196,177,32]  |
  1123  |                         j = j + 1;  |         |   200  |    193  |  0  |  100  |  [193,160,196,177,32]  |
  1124  |              resetPlaceHolder_2();  |         |   200  |    193  |  0  |  100  |  [193,160,196,177,32]  |
  1130  |                         R = R + 2;  |      2  |   202  |    193  |  0  |  100  |  [193,160,196,177,32]  |
  1134  |                         j = j + 1;  |         |   202  |    193  |  0  |  101  |  [193,160,196,177,32]  |
  1135  |              resetPlaceHolder_2();  |         |   202  |    193  |  0  |  101  |  [193,160,196,177,32]  |
  1141  |                         R = R + 2;  |      2  |   204  |    193  |  0  |  101  |  [193,160,196,177,32]  |
  1145  |                         j = j + 1;  |         |   204  |    193  |  0  |  102  |  [193,160,196,177,32]  |
  1146  |              resetPlaceHolder_2();  |         |   204  |    193  |  0  |  102  |  [193,160,196,177,32]  |
  1152  |                         R = R + 2;  |      2  |   206  |    193  |  0  |  102  |  [193,160,196,177,32]  |
  1156  |                         j = j + 1;  |         |   206  |    193  |  0  |  103  |  [193,160,196,177,32]  |
  1157  |              resetPlaceHolder_2();  |         |   206  |    193  |  0  |  103  |  [193,160,196,177,32]  |
  1163  |                         R = R + 2;  |      2  |   208  |    193  |  0  |  103  |  [193,160,196,177,32]  |
  1167  |                         j = j + 1;  |         |   208  |    193  |  0  |  104  |  [193,160,196,177,32]  |
  1168  |              resetPlaceHolder_2();  |         |   208  |    193  |  0  |  104  |  [193,160,196,177,32]  |
  1174  |                         R = R + 2;  |      2  |   210  |    193  |  0  |  104  |  [193,160,196,177,32]  |
  1178  |                         j = j + 1;  |         |   210  |    193  |  0  |  105  |  [193,160,196,177,32]  |
  1179  |              resetPlaceHolder_2();  |         |   210  |    193  |  0  |  105  |  [193,160,196,177,32]  |
  1185  |                         R = R + 2;  |      2  |   212  |    193  |  0  |  105  |  [193,160,196,177,32]  |
  1189  |                         j = j + 1;  |         |   212  |    193  |  0  |  106  |  [193,160,196,177,32]  |
  1190  |              resetPlaceHolder_2();  |         |   212  |    193  |  0  |  106  |  [193,160,196,177,32]  |
  1196  |                         R = R + 2;  |      2  |   214  |    193  |  0  |  106  |  [193,160,196,177,32]  |
  1200  |                         j = j + 1;  |         |   214  |    193  |  0  |  107  |  [193,160,196,177,32]  |
  1201  |              resetPlaceHolder_2();  |         |   214  |    193  |  0  |  107  |  [193,160,196,177,32]  |
  1207  |                         R = R + 2;  |      2  |   216  |    193  |  0  |  107  |  [193,160,196,177,32]  |
  1211  |                         j = j + 1;  |         |   216  |    193  |  0  |  108  |  [193,160,196,177,32]  |
  1212  |              resetPlaceHolder_2();  |         |   216  |    193  |  0  |  108  |  [193,160,196,177,32]  |
  1218  |                         R = R + 2;  |      2  |   218  |    193  |  0  |  108  |  [193,160,196,177,32]  |
  1222  |                         j = j + 1;  |         |   218  |    193  |  0  |  109  |  [193,160,196,177,32]  |
  1223  |              resetPlaceHolder_2();  |         |   218  |    193  |  0  |  109  |  [193,160,196,177,32]  |
  1229  |                         R = R + 2;  |      2  |   220  |    193  |  0  |  109  |  [193,160,196,177,32]  |
  1233  |                         j = j + 1;  |         |   220  |    193  |  0  |  110  |  [193,160,196,177,32]  |
  1234  |              resetPlaceHolder_2();  |         |   220  |    193  |  0  |  110  |  [193,160,196,177,32]  |
  1240  |                         R = R + 2;  |      2  |   222  |    193  |  0  |  110  |  [193,160,196,177,32]  |
  1244  |                         j = j + 1;  |         |   222  |    193  |  0  |  111  |  [193,160,196,177,32]  |
  1245  |              resetPlaceHolder_2();  |         |   222  |    193  |  0  |  111  |  [193,160,196,177,32]  |
  1251  |                         R = R + 2;  |      2  |   224  |    193  |  0  |  111  |  [193,160,196,177,32]  |
  1255  |                         j = j + 1;  |         |   224  |    193  |  0  |  112  |  [193,160,196,177,32]  |
  1256  |              resetPlaceHolder_2();  |         |   224  |    193  |  0  |  112  |  [193,160,196,177,32]  |
  1262  |                         R = R + 2;  |      2  |   226  |    193  |  0  |  112  |  [193,160,196,177,32]  |
  1266  |                         j = j + 1;  |         |   226  |    193  |  0  |  113  |  [193,160,196,177,32]  |
  1267  |              resetPlaceHolder_2();  |         |   226  |    193  |  0  |  113  |  [193,160,196,177,32]  |
  1273  |                         R = R + 2;  |      2  |   228  |    193  |  0  |  113  |  [193,160,196,177,32]  |
  1277  |                         j = j + 1;  |         |   228  |    193  |  0  |  114  |  [193,160,196,177,32]  |
  1278  |              resetPlaceHolder_2();  |         |   228  |    193  |  0  |  114  |  [193,160,196,177,32]  |
  1284  |                         R = R + 2;  |      2  |   230  |    193  |  0  |  114  |  [193,160,196,177,32]  |
  1288  |                         j = j + 1;  |         |   230  |    193  |  0  |  115  |  [193,160,196,177,32]  |
  1289  |              resetPlaceHolder_2();  |         |   230  |    193  |  0  |  115  |  [193,160,196,177,32]  |
  1295  |                         R = R + 2;  |      2  |   232  |    193  |  0  |  115  |  [193,160,196,177,32]  |
  1299  |                         j = j + 1;  |         |   232  |    193  |  0  |  116  |  [193,160,196,177,32]  |
  1300  |              resetPlaceHolder_2();  |         |   232  |    193  |  0  |  116  |  [193,160,196,177,32]  |
  1306  |                         R = R + 2;  |      2  |   234  |    193  |  0  |  116  |  [193,160,196,177,32]  |
  1310  |                         j = j + 1;  |         |   234  |    193  |  0  |  117  |  [193,160,196,177,32]  |
  1311  |              resetPlaceHolder_2();  |         |   234  |    193  |  0  |  117  |  [193,160,196,177,32]  |
  1317  |                         R = R + 2;  |      2  |   236  |    193  |  0  |  117  |  [193,160,196,177,32]  |
  1321  |                         j = j + 1;  |         |   236  |    193  |  0  |  118  |  [193,160,196,177,32]  |
  1322  |              resetPlaceHolder_2();  |         |   236  |    193  |  0  |  118  |  [193,160,196,177,32]  |
  1328  |                         R = R + 2;  |      2  |   238  |    193  |  0  |  118  |  [193,160,196,177,32]  |
  1332  |                         j = j + 1;  |         |   238  |    193  |  0  |  119  |  [193,160,196,177,32]  |
  1333  |              resetPlaceHolder_2();  |         |   238  |    193  |  0  |  119  |  [193,160,196,177,32]  |
  1339  |                         R = R + 2;  |      2  |   240  |    193  |  0  |  119  |  [193,160,196,177,32]  |
  1343  |                         j = j + 1;  |         |   240  |    193  |  0  |  120  |  [193,160,196,177,32]  |
  1344  |              resetPlaceHolder_2();  |         |   240  |    193  |  0  |  120  |  [193,160,196,177,32]  |
  1350  |                         R = R + 2;  |      2  |   242  |    193  |  0  |  120  |  [193,160,196,177,32]  |
  1354  |                         j = j + 1;  |         |   242  |    193  |  0  |  121  |  [193,160,196,177,32]  |
  1355  |              resetPlaceHolder_2();  |         |   242  |    193  |  0  |  121  |  [193,160,196,177,32]  |
  1361  |                         R = R + 2;  |      2  |   244  |    193  |  0  |  121  |  [193,160,196,177,32]  |
  1365  |                         j = j + 1;  |         |   244  |    193  |  0  |  122  |  [193,160,196,177,32]  |
  1366  |              resetPlaceHolder_2();  |         |   244  |    193  |  0  |  122  |  [193,160,196,177,32]  |
  1372  |                         R = R + 2;  |      2  |   246  |    193  |  0  |  122  |  [193,160,196,177,32]  |
  1376  |                         j = j + 1;  |         |   246  |    193  |  0  |  123  |  [193,160,196,177,32]  |
  1377  |              resetPlaceHolder_2();  |         |   246  |    193  |  0  |  123  |  [193,160,196,177,32]  |
  1383  |                         R = R + 2;  |      2  |   248  |    193  |  0  |  123  |  [193,160,196,177,32]  |
  1387  |                         j = j + 1;  |         |   248  |    193  |  0  |  124  |  [193,160,196,177,32]  |
  1388  |              resetPlaceHolder_2();  |         |   248  |    193  |  0  |  124  |  [193,160,196,177,32]  |
  1394  |                         R = R + 2;  |      2  |   250  |    193  |  0  |  124  |  [193,160,196,177,32]  |
  1398  |                         j = j + 1;  |         |   250  |    193  |  0  |  125  |  [193,160,196,177,32]  |
  1399  |              resetPlaceHolder_2();  |         |   250  |    193  |  0  |  125  |  [193,160,196,177,32]  |
  1405  |                         R = R + 2;  |      2  |   252  |    193  |  0  |  125  |  [193,160,196,177,32]  |
  1409  |                         j = j + 1;  |         |   252  |    193  |  0  |  126  |  [193,160,196,177,32]  |
  1410  |              resetPlaceHolder_2();  |         |   252  |    193  |  0  |  126  |  [193,160,196,177,32]  |
  1416  |                         R = R + 2;  |      2  |   254  |    193  |  0  |  126  |  [193,160,196,177,32]  |
  1420  |                         j = j + 1;  |         |   254  |    193  |  0  |  127  |  [193,160,196,177,32]  |
  1421  |              resetPlaceHolder_2();  |         |   254  |    193  |  0  |  127  |  [193,160,196,177,32]  |
  1427  |                         R = R + 2;  |      2  |   256  |    193  |  0  |  127  |  [193,160,196,177,32]  |
  1431  |                         j = j + 1;  |         |   256  |    193  |  0  |  128  |  [193,160,196,177,32]  |
  1432  |              resetPlaceHolder_2();  |         |   256  |    193  |  0  |  128  |  [193,160,196,177,32]  |
  1438  |                         R = R + 2;  |      2  |   258  |    193  |  0  |  128  |  [193,160,196,177,32]  |
  1442  |                         j = j + 1;  |         |   258  |    193  |  0  |  129  |  [193,160,196,177,32]  |
  1443  |              resetPlaceHolder_2();  |         |   258  |    193  |  0  |  129  |  [193,160,196,177,32]  |
  1449  |                         R = R + 2;  |      2  |   260  |    193  |  0  |  129  |  [193,160,196,177,32]  |
  1453  |                         j = j + 1;  |         |   260  |    193  |  0  |  130  |  [193,160,196,177,32]  |
  1454  |              resetPlaceHolder_2();  |         |   260  |    193  |  0  |  130  |  [193,160,196,177,32]  |
  1460  |                         R = R + 2;  |      2  |   262  |    193  |  0  |  130  |  [193,160,196,177,32]  |
  1464  |                         j = j + 1;  |         |   262  |    193  |  0  |  131  |  [193,160,196,177,32]  |
  1465  |              resetPlaceHolder_2();  |         |   262  |    193  |  0  |  131  |  [193,160,196,177,32]  |
  1471  |                         R = R + 2;  |      2  |   264  |    193  |  0  |  131  |  [193,160,196,177,32]  |
  1475  |                         j = j + 1;  |         |   264  |    193  |  0  |  132  |  [193,160,196,177,32]  |
  1476  |              resetPlaceHolder_2();  |         |   264  |    193  |  0  |  132  |  [193,160,196,177,32]  |
  1482  |                         R = R + 2;  |      2  |   266  |    193  |  0  |  132  |  [193,160,196,177,32]  |
  1486  |                         j = j + 1;  |         |   266  |    193  |  0  |  133  |  [193,160,196,177,32]  |
  1487  |              resetPlaceHolder_2();  |         |   266  |    193  |  0  |  133  |  [193,160,196,177,32]  |
  1493  |                         R = R + 2;  |      2  |   268  |    193  |  0  |  133  |  [193,160,196,177,32]  |
  1497  |                         j = j + 1;  |         |   268  |    193  |  0  |  134  |  [193,160,196,177,32]  |
  1498  |              resetPlaceHolder_2();  |         |   268  |    193  |  0  |  134  |  [193,160,196,177,32]  |
  1504  |                         R = R + 2;  |      2  |   270  |    193  |  0  |  134  |  [193,160,196,177,32]  |
  1508  |                         j = j + 1;  |         |   270  |    193  |  0  |  135  |  [193,160,196,177,32]  |
  1509  |              resetPlaceHolder_2();  |         |   270  |    193  |  0  |  135  |  [193,160,196,177,32]  |
  1515  |                         R = R + 2;  |      2  |   272  |    193  |  0  |  135  |  [193,160,196,177,32]  |
  1519  |                         j = j + 1;  |         |   272  |    193  |  0  |  136  |  [193,160,196,177,32]  |
  1520  |              resetPlaceHolder_2();  |         |   272  |    193  |  0  |  136  |  [193,160,196,177,32]  |
  1526  |                         R = R + 2;  |      2  |   274  |    193  |  0  |  136  |  [193,160,196,177,32]  |
  1530  |                         j = j + 1;  |         |   274  |    193  |  0  |  137  |  [193,160,196,177,32]  |
  1531  |              resetPlaceHolder_2();  |         |   274  |    193  |  0  |  137  |  [193,160,196,177,32]  |
  1537  |                         R = R + 2;  |      2  |   276  |    193  |  0  |  137  |  [193,160,196,177,32]  |
  1541  |                         j = j + 1;  |         |   276  |    193  |  0  |  138  |  [193,160,196,177,32]  |
  1542  |              resetPlaceHolder_2();  |         |   276  |    193  |  0  |  138  |  [193,160,196,177,32]  |
  1548  |                         R = R + 2;  |      2  |   278  |    193  |  0  |  138  |  [193,160,196,177,32]  |
  1552  |                         j = j + 1;  |         |   278  |    193  |  0  |  139  |  [193,160,196,177,32]  |
  1553  |              resetPlaceHolder_2();  |         |   278  |    193  |  0  |  139  |  [193,160,196,177,32]  |
  1559  |                         R = R + 2;  |      2  |   280  |    193  |  0  |  139  |  [193,160,196,177,32]  |
  1563  |                         j = j + 1;  |         |   280  |    193  |  0  |  140  |  [193,160,196,177,32]  |
  1564  |              resetPlaceHolder_2();  |         |   280  |    193  |  0  |  140  |  [193,160,196,177,32]  |
  1570  |                         R = R + 2;  |      2  |   282  |    193  |  0  |  140  |  [193,160,196,177,32]  |
  1574  |                         j = j + 1;  |         |   282  |    193  |  0  |  141  |  [193,160,196,177,32]  |
  1575  |              resetPlaceHolder_2();  |         |   282  |    193  |  0  |  141  |  [193,160,196,177,32]  |
  1581  |                         R = R + 2;  |      2  |   284  |    193  |  0  |  141  |  [193,160,196,177,32]  |
  1585  |                         j = j + 1;  |         |   284  |    193  |  0  |  142  |  [193,160,196,177,32]  |
  1586  |              resetPlaceHolder_2();  |         |   284  |    193  |  0  |  142  |  [193,160,196,177,32]  |
  1592  |                         R = R + 2;  |      2  |   286  |    193  |  0  |  142  |  [193,160,196,177,32]  |
  1596  |                         j = j + 1;  |         |   286  |    193  |  0  |  143  |  [193,160,196,177,32]  |
  1597  |              resetPlaceHolder_2();  |         |   286  |    193  |  0  |  143  |  [193,160,196,177,32]  |
  1603  |                         R = R + 2;  |      2  |   288  |    193  |  0  |  143  |  [193,160,196,177,32]  |
  1607  |                         j = j + 1;  |         |   288  |    193  |  0  |  144  |  [193,160,196,177,32]  |
  1608  |              resetPlaceHolder_2();  |         |   288  |    193  |  0  |  144  |  [193,160,196,177,32]  |
  1614  |                         R = R + 2;  |      2  |   290  |    193  |  0  |  144  |  [193,160,196,177,32]  |
  1618  |                         j = j + 1;  |         |   290  |    193  |  0  |  145  |  [193,160,196,177,32]  |
  1619  |              resetPlaceHolder_2();  |         |   290  |    193  |  0  |  145  |  [193,160,196,177,32]  |
  1625  |                         R = R + 2;  |      2  |   292  |    193  |  0  |  145  |  [193,160,196,177,32]  |
  1629  |                         j = j + 1;  |         |   292  |    193  |  0  |  146  |  [193,160,196,177,32]  |
  1630  |              resetPlaceHolder_2();  |         |   292  |    193  |  0  |  146  |  [193,160,196,177,32]  |
  1636  |                         R = R + 2;  |      2  |   294  |    193  |  0  |  146  |  [193,160,196,177,32]  |
  1640  |                         j = j + 1;  |         |   294  |    193  |  0  |  147  |  [193,160,196,177,32]  |
  1641  |              resetPlaceHolder_2();  |         |   294  |    193  |  0  |  147  |  [193,160,196,177,32]  |
  1647  |                         R = R + 2;  |      2  |   296  |    193  |  0  |  147  |  [193,160,196,177,32]  |
  1651  |                         j = j + 1;  |         |   296  |    193  |  0  |  148  |  [193,160,196,177,32]  |
  1652  |              resetPlaceHolder_2();  |         |   296  |    193  |  0  |  148  |  [193,160,196,177,32]  |
  1658  |                         R = R + 2;  |      2  |   298  |    193  |  0  |  148  |  [193,160,196,177,32]  |
  1662  |                         j = j + 1;  |         |   298  |    193  |  0  |  149  |  [193,160,196,177,32]  |
  1663  |              resetPlaceHolder_2();  |         |   298  |    193  |  0  |  149  |  [193,160,196,177,32]  |
  1669  |                         R = R + 2;  |      2  |   300  |    193  |  0  |  149  |  [193,160,196,177,32]  |
  1673  |                         j = j + 1;  |         |   300  |    193  |  0  |  150  |  [193,160,196,177,32]  |
  1674  |              resetPlaceHolder_2();  |         |   300  |    193  |  0  |  150  |  [193,160,196,177,32]  |
  1680  |                         R = R + 2;  |      2  |   302  |    193  |  0  |  150  |  [193,160,196,177,32]  |
  1684  |                         j = j + 1;  |         |   302  |    193  |  0  |  151  |  [193,160,196,177,32]  |
  1685  |              resetPlaceHolder_2();  |         |   302  |    193  |  0  |  151  |  [193,160,196,177,32]  |
  1691  |                         R = R + 2;  |      2  |   304  |    193  |  0  |  151  |  [193,160,196,177,32]  |
  1695  |                         j = j + 1;  |         |   304  |    193  |  0  |  152  |  [193,160,196,177,32]  |
  1696  |              resetPlaceHolder_2();  |         |   304  |    193  |  0  |  152  |  [193,160,196,177,32]  |
  1702  |                         R = R + 2;  |      2  |   306  |    193  |  0  |  152  |  [193,160,196,177,32]  |
  1706  |                         j = j + 1;  |         |   306  |    193  |  0  |  153  |  [193,160,196,177,32]  |
  1707  |              resetPlaceHolder_2();  |         |   306  |    193  |  0  |  153  |  [193,160,196,177,32]  |
  1713  |                         R = R + 2;  |      2  |   308  |    193  |  0  |  153  |  [193,160,196,177,32]  |
  1717  |                         j = j + 1;  |         |   308  |    193  |  0  |  154  |  [193,160,196,177,32]  |
  1718  |              resetPlaceHolder_2();  |         |   308  |    193  |  0  |  154  |  [193,160,196,177,32]  |
  1724  |                         R = R + 2;  |      2  |   310  |    193  |  0  |  154  |  [193,160,196,177,32]  |
  1728  |                         j = j + 1;  |         |   310  |    193  |  0  |  155  |  [193,160,196,177,32]  |
  1729  |              resetPlaceHolder_2();  |         |   310  |    193  |  0  |  155  |  [193,160,196,177,32]  |
  1735  |                         R = R + 2;  |      2  |   312  |    193  |  0  |  155  |  [193,160,196,177,32]  |
  1739  |                         j = j + 1;  |         |   312  |    193  |  0  |  156  |  [193,160,196,177,32]  |
  1740  |              resetPlaceHolder_2();  |         |   312  |    193  |  0  |  156  |  [193,160,196,177,32]  |
  1746  |                         R = R + 2;  |      2  |   314  |    193  |  0  |  156  |  [193,160,196,177,32]  |
  1750  |                         j = j + 1;  |         |   314  |    193  |  0  |  157  |  [193,160,196,177,32]  |
  1751  |              resetPlaceHolder_2();  |         |   314  |    193  |  0  |  157  |  [193,160,196,177,32]  |
  1757  |                         R = R + 2;  |      2  |   316  |    193  |  0  |  157  |  [193,160,196,177,32]  |
  1761  |                         j = j + 1;  |         |   316  |    193  |  0  |  158  |  [193,160,196,177,32]  |
  1762  |              resetPlaceHolder_2();  |         |   316  |    193  |  0  |  158  |  [193,160,196,177,32]  |
  1768  |                         R = R + 2;  |      2  |   318  |    193  |  0  |  158  |  [193,160,196,177,32]  |
  1772  |                         j = j + 1;  |         |   318  |    193  |  0  |  159  |  [193,160,196,177,32]  |
  1773  |              resetPlaceHolder_2();  |         |   318  |    193  |  0  |  159  |  [193,160,196,177,32]  |
  1779  |                         R = R + 2;  |      2  |   320  |    193  |  0  |  159  |  [193,160,196,177,32]  |
  1783  |                         j = j + 1;  |         |   320  |    193  |  0  |  160  |  [193,160,196,177,32]  |
  1784  |              resetPlaceHolder_2();  |         |   320  |    193  |  0  |  160  |  [193,160,196,177,32]  |
  1790  |                         R = R + 2;  |      2  |   322  |    193  |  0  |  160  |  [193,160,196,177,32]  |
  1794  |                         j = j + 1;  |         |   322  |    193  |  0  |  161  |  [193,160,196,177,32]  |
  1795  |              resetPlaceHolder_2();  |         |   322  |    193  |  0  |  161  |  [193,160,196,177,32]  |
  1801  |                         R = R + 2;  |      2  |   324  |    193  |  0  |  161  |  [193,160,196,177,32]  |
  1805  |                         j = j + 1;  |         |   324  |    193  |  0  |  162  |  [193,160,196,177,32]  |
  1806  |              resetPlaceHolder_2();  |         |   324  |    193  |  0  |  162  |  [193,160,196,177,32]  |
  1812  |                         R = R + 2;  |      2  |   326  |    193  |  0  |  162  |  [193,160,196,177,32]  |
  1816  |                         j = j + 1;  |         |   326  |    193  |  0  |  163  |  [193,160,196,177,32]  |
  1817  |              resetPlaceHolder_2();  |         |   326  |    193  |  0  |  163  |  [193,160,196,177,32]  |
  1823  |                         R = R + 2;  |      2  |   328  |    193  |  0  |  163  |  [193,160,196,177,32]  |
  1827  |                         j = j + 1;  |         |   328  |    193  |  0  |  164  |  [193,160,196,177,32]  |
  1828  |              resetPlaceHolder_2();  |         |   328  |    193  |  0  |  164  |  [193,160,196,177,32]  |
  1834  |                         R = R + 2;  |      2  |   330  |    193  |  0  |  164  |  [193,160,196,177,32]  |
  1838  |                         j = j + 1;  |         |   330  |    193  |  0  |  165  |  [193,160,196,177,32]  |
  1839  |              resetPlaceHolder_2();  |         |   330  |    193  |  0  |  165  |  [193,160,196,177,32]  |
  1845  |                         R = R + 2;  |      2  |   332  |    193  |  0  |  165  |  [193,160,196,177,32]  |
  1849  |                         j = j + 1;  |         |   332  |    193  |  0  |  166  |  [193,160,196,177,32]  |
  1850  |              resetPlaceHolder_2();  |         |   332  |    193  |  0  |  166  |  [193,160,196,177,32]  |
  1856  |                         R = R + 2;  |      2  |   334  |    193  |  0  |  166  |  [193,160,196,177,32]  |
  1860  |                         j = j + 1;  |         |   334  |    193  |  0  |  167  |  [193,160,196,177,32]  |
  1861  |              resetPlaceHolder_2();  |         |   334  |    193  |  0  |  167  |  [193,160,196,177,32]  |
  1867  |                         R = R + 2;  |      2  |   336  |    193  |  0  |  167  |  [193,160,196,177,32]  |
  1871  |                         j = j + 1;  |         |   336  |    193  |  0  |  168  |  [193,160,196,177,32]  |
  1872  |              resetPlaceHolder_2();  |         |   336  |    193  |  0  |  168  |  [193,160,196,177,32]  |
  1878  |                         R = R + 2;  |      2  |   338  |    193  |  0  |  168  |  [193,160,196,177,32]  |
  1882  |                         j = j + 1;  |         |   338  |    193  |  0  |  169  |  [193,160,196,177,32]  |
  1883  |              resetPlaceHolder_2();  |         |   338  |    193  |  0  |  169  |  [193,160,196,177,32]  |
  1889  |                         R = R + 2;  |      2  |   340  |    193  |  0  |  169  |  [193,160,196,177,32]  |
  1893  |                         j = j + 1;  |         |   340  |    193  |  0  |  170  |  [193,160,196,177,32]  |
  1894  |              resetPlaceHolder_2();  |         |   340  |    193  |  0  |  170  |  [193,160,196,177,32]  |
  1900  |                         R = R + 2;  |      2  |   342  |    193  |  0  |  170  |  [193,160,196,177,32]  |
  1904  |                         j = j + 1;  |         |   342  |    193  |  0  |  171  |  [193,160,196,177,32]  |
  1905  |              resetPlaceHolder_2();  |         |   342  |    193  |  0  |  171  |  [193,160,196,177,32]  |
  1911  |                         R = R + 2;  |      2  |   344  |    193  |  0  |  171  |  [193,160,196,177,32]  |
  1915  |                         j = j + 1;  |         |   344  |    193  |  0  |  172  |  [193,160,196,177,32]  |
  1916  |              resetPlaceHolder_2();  |         |   344  |    193  |  0  |  172  |  [193,160,196,177,32]  |
  1922  |                         R = R + 2;  |      2  |   346  |    193  |  0  |  172  |  [193,160,196,177,32]  |
  1926  |                         j = j + 1;  |         |   346  |    193  |  0  |  173  |  [193,160,196,177,32]  |
  1927  |              resetPlaceHolder_2();  |         |   346  |    193  |  0  |  173  |  [193,160,196,177,32]  |
  1933  |                         R = R + 2;  |      2  |   348  |    193  |  0  |  173  |  [193,160,196,177,32]  |
  1937  |                         j = j + 1;  |         |   348  |    193  |  0  |  174  |  [193,160,196,177,32]  |
  1938  |              resetPlaceHolder_2();  |         |   348  |    193  |  0  |  174  |  [193,160,196,177,32]  |
  1944  |                         R = R + 2;  |      2  |   350  |    193  |  0  |  174  |  [193,160,196,177,32]  |
  1948  |                         j = j + 1;  |         |   350  |    193  |  0  |  175  |  [193,160,196,177,32]  |
  1949  |              resetPlaceHolder_2();  |         |   350  |    193  |  0  |  175  |  [193,160,196,177,32]  |
  1955  |                         R = R + 2;  |      2  |   352  |    193  |  0  |  175  |  [193,160,196,177,32]  |
  1959  |                         j = j + 1;  |         |   352  |    193  |  0  |  176  |  [193,160,196,177,32]  |
  1960  |              resetPlaceHolder_2();  |         |   352  |    193  |  0  |  176  |  [193,160,196,177,32]  |
  1966  |                         R = R + 2;  |      2  |   354  |    193  |  0  |  176  |  [193,160,196,177,32]  |
  1970  |                         j = j + 1;  |         |   354  |    193  |  0  |  177  |  [193,160,196,177,32]  |
  1971  |              resetPlaceHolder_2();  |         |   354  |    193  |  0  |  177  |  [193,160,196,177,32]  |
  1977  |                         R = R + 2;  |      2  |   356  |    193  |  0  |  177  |  [193,160,196,177,32]  |
  1981  |                         j = j + 1;  |         |   356  |    193  |  0  |  178  |  [193,160,196,177,32]  |
  1982  |              resetPlaceHolder_2();  |         |   356  |    193  |  0  |  178  |  [193,160,196,177,32]  |
  1988  |                         R = R + 2;  |      2  |   358  |    193  |  0  |  178  |  [193,160,196,177,32]  |
  1992  |                         j = j + 1;  |         |   358  |    193  |  0  |  179  |  [193,160,196,177,32]  |
  1993  |              resetPlaceHolder_2();  |         |   358  |    193  |  0  |  179  |  [193,160,196,177,32]  |
  1999  |                         R = R + 2;  |      2  |   360  |    193  |  0  |  179  |  [193,160,196,177,32]  |
  2003  |                         j = j + 1;  |         |   360  |    193  |  0  |  180  |  [193,160,196,177,32]  |
  2004  |              resetPlaceHolder_2();  |         |   360  |    193  |  0  |  180  |  [193,160,196,177,32]  |
  2010  |                         R = R + 2;  |      2  |   362  |    193  |  0  |  180  |  [193,160,196,177,32]  |
  2014  |                         j = j + 1;  |         |   362  |    193  |  0  |  181  |  [193,160,196,177,32]  |
  2015  |              resetPlaceHolder_2();  |         |   362  |    193  |  0  |  181  |  [193,160,196,177,32]  |
  2021  |                         R = R + 2;  |      2  |   364  |    193  |  0  |  181  |  [193,160,196,177,32]  |
  2025  |                         j = j + 1;  |         |   364  |    193  |  0  |  182  |  [193,160,196,177,32]  |
  2026  |              resetPlaceHolder_2();  |         |   364  |    193  |  0  |  182  |  [193,160,196,177,32]  |
  2032  |                         R = R + 2;  |      2  |   366  |    193  |  0  |  182  |  [193,160,196,177,32]  |
  2036  |                         j = j + 1;  |         |   366  |    193  |  0  |  183  |  [193,160,196,177,32]  |
  2037  |              resetPlaceHolder_2();  |         |   366  |    193  |  0  |  183  |  [193,160,196,177,32]  |
  2043  |                         R = R + 2;  |      2  |   368  |    193  |  0  |  183  |  [193,160,196,177,32]  |
  2047  |                         j = j + 1;  |         |   368  |    193  |  0  |  184  |  [193,160,196,177,32]  |
  2048  |              resetPlaceHolder_2();  |         |   368  |    193  |  0  |  184  |  [193,160,196,177,32]  |
  2054  |                         R = R + 2;  |      2  |   370  |    193  |  0  |  184  |  [193,160,196,177,32]  |
  2058  |                         j = j + 1;  |         |   370  |    193  |  0  |  185  |  [193,160,196,177,32]  |
  2059  |              resetPlaceHolder_2();  |         |   370  |    193  |  0  |  185  |  [193,160,196,177,32]  |
  2065  |                         R = R + 2;  |      2  |   372  |    193  |  0  |  185  |  [193,160,196,177,32]  |
  2069  |                         j = j + 1;  |         |   372  |    193  |  0  |  186  |  [193,160,196,177,32]  |
  2070  |              resetPlaceHolder_2();  |         |   372  |    193  |  0  |  186  |  [193,160,196,177,32]  |
  2076  |                         R = R + 2;  |      2  |   374  |    193  |  0  |  186  |  [193,160,196,177,32]  |
  2080  |                         j = j + 1;  |         |   374  |    193  |  0  |  187  |  [193,160,196,177,32]  |
  2081  |              resetPlaceHolder_2();  |         |   374  |    193  |  0  |  187  |  [193,160,196,177,32]  |
  2087  |                         R = R + 2;  |      2  |   376  |    193  |  0  |  187  |  [193,160,196,177,32]  |
  2091  |                         j = j + 1;  |         |   376  |    193  |  0  |  188  |  [193,160,196,177,32]  |
  2092  |              resetPlaceHolder_2();  |         |   376  |    193  |  0  |  188  |  [193,160,196,177,32]  |
  2098  |                         R = R + 2;  |      2  |   378  |    193  |  0  |  188  |  [193,160,196,177,32]  |
  2102  |                         j = j + 1;  |         |   378  |    193  |  0  |  189  |  [193,160,196,177,32]  |
  2103  |              resetPlaceHolder_2();  |         |   378  |    193  |  0  |  189  |  [193,160,196,177,32]  |
  2109  |                         R = R + 2;  |      2  |   380  |    193  |  0  |  189  |  [193,160,196,177,32]  |
  2113  |                         j = j + 1;  |         |   380  |    193  |  0  |  190  |  [193,160,196,177,32]  |
  2114  |              resetPlaceHolder_2();  |         |   380  |    193  |  0  |  190  |  [193,160,196,177,32]  |
  2120  |                         R = R + 2;  |      2  |   382  |    193  |  0  |  190  |  [193,160,196,177,32]  |
  2124  |                         j = j + 1;  |         |   382  |    193  |  0  |  191  |  [193,160,196,177,32]  |
  2125  |              resetPlaceHolder_2();  |         |   382  |    193  |  0  |  191  |  [193,160,196,177,32]  |
  2131  |                         R = R + 2;  |      2  |   384  |    193  |  0  |  191  |  [193,160,196,177,32]  |
  2135  |                         j = j + 1;  |         |   384  |    193  |  0  |  192  |  [193,160,196,177,32]  |
  2136  |              resetPlaceHolder_2();  |         |   384  |    193  |  0  |  192  |  [193,160,196,177,32]  |
  2142  |                         R = R + 2;  |      2  |   386  |    193  |  0  |  192  |  [193,160,196,177,32]  |
  2146  |                         j = j + 1;  |         |   386  |    193  |  0  |  193  |  [193,160,196,177,32]  |
  2147  |              resetPlaceHolder_2();  |         |   386  |    193  |  0  |  193  |  [193,160,196,177,32]  |
  2153  |                         R = R + 1;  |      1  |   387  |    193  |  0  |  193  |  [193,160,196,177,32]  |
  2157  |                         i = i + 1;  |         |   387  |    193  |  1  |  193  |  [193,160,196,177,32]  |
  2158  |              resetPlaceHolder_1();  |         |   387  |    193  |  1  |  193  |  [193,160,196,177,32]  |
  2164  |      entry = arrayRead(sorted, i);  |         |   387  |    160  |  1  |  193  |  [193,160,196,177,32]  |
  2166  |                         int j = 0;  |         |   387  |    160  |  1  |    0  |  [193,160,196,177,32]  |
  2172  |                         R = R + 2;  |      2  |   389  |    160  |  1  |    0  |  [193,160,196,177,32]  |
  2176  |                         j = j + 1;  |         |   389  |    160  |  1  |    1  |  [193,160,196,177,32]  |
  2177  |              resetPlaceHolder_2();  |         |   389  |    160  |  1  |    1  |  [193,160,196,177,32]  |
  2183  |                         R = R + 2;  |      2  |   391  |    160  |  1  |    1  |  [193,160,196,177,32]  |
  2187  |                         j = j + 1;  |         |   391  |    160  |  1  |    2  |  [193,160,196,177,32]  |
  2188  |              resetPlaceHolder_2();  |         |   391  |    160  |  1  |    2  |  [193,160,196,177,32]  |
  2194  |                         R = R + 2;  |      2  |   393  |    160  |  1  |    2  |  [193,160,196,177,32]  |
  2198  |                         j = j + 1;  |         |   393  |    160  |  1  |    3  |  [193,160,196,177,32]  |
  2199  |              resetPlaceHolder_2();  |         |   393  |    160  |  1  |    3  |  [193,160,196,177,32]  |
  2205  |                         R = R + 2;  |      2  |   395  |    160  |  1  |    3  |  [193,160,196,177,32]  |
  2209  |                         j = j + 1;  |         |   395  |    160  |  1  |    4  |  [193,160,196,177,32]  |
  2210  |              resetPlaceHolder_2();  |         |   395  |    160  |  1  |    4  |  [193,160,196,177,32]  |
  2216  |                         R = R + 2;  |      2  |   397  |    160  |  1  |    4  |  [193,160,196,177,32]  |
  2220  |                         j = j + 1;  |         |   397  |    160  |  1  |    5  |  [193,160,196,177,32]  |
  2221  |              resetPlaceHolder_2();  |         |   397  |    160  |  1  |    5  |  [193,160,196,177,32]  |
  2227  |                         R = R + 2;  |      2  |   399  |    160  |  1  |    5  |  [193,160,196,177,32]  |
  2231  |                         j = j + 1;  |         |   399  |    160  |  1  |    6  |  [193,160,196,177,32]  |
  2232  |              resetPlaceHolder_2();  |         |   399  |    160  |  1  |    6  |  [193,160,196,177,32]  |
  2238  |                         R = R + 2;  |      2  |   401  |    160  |  1  |    6  |  [193,160,196,177,32]  |
  2242  |                         j = j + 1;  |         |   401  |    160  |  1  |    7  |  [193,160,196,177,32]  |
  2243  |              resetPlaceHolder_2();  |         |   401  |    160  |  1  |    7  |  [193,160,196,177,32]  |
  2249  |                         R = R + 2;  |      2  |   403  |    160  |  1  |    7  |  [193,160,196,177,32]  |
  2253  |                         j = j + 1;  |         |   403  |    160  |  1  |    8  |  [193,160,196,177,32]  |
  2254  |              resetPlaceHolder_2();  |         |   403  |    160  |  1  |    8  |  [193,160,196,177,32]  |
  2260  |                         R = R + 2;  |      2  |   405  |    160  |  1  |    8  |  [193,160,196,177,32]  |
  2264  |                         j = j + 1;  |         |   405  |    160  |  1  |    9  |  [193,160,196,177,32]  |
  2265  |              resetPlaceHolder_2();  |         |   405  |    160  |  1  |    9  |  [193,160,196,177,32]  |
  2271  |                         R = R + 2;  |      2  |   407  |    160  |  1  |    9  |  [193,160,196,177,32]  |
  2275  |                         j = j + 1;  |         |   407  |    160  |  1  |   10  |  [193,160,196,177,32]  |
  2276  |              resetPlaceHolder_2();  |         |   407  |    160  |  1  |   10  |  [193,160,196,177,32]  |
  2282  |                         R = R + 2;  |      2  |   409  |    160  |  1  |   10  |  [193,160,196,177,32]  |
  2286  |                         j = j + 1;  |         |   409  |    160  |  1  |   11  |  [193,160,196,177,32]  |
  2287  |              resetPlaceHolder_2();  |         |   409  |    160  |  1  |   11  |  [193,160,196,177,32]  |
  2293  |                         R = R + 2;  |      2  |   411  |    160  |  1  |   11  |  [193,160,196,177,32]  |
  2297  |                         j = j + 1;  |         |   411  |    160  |  1  |   12  |  [193,160,196,177,32]  |
  2298  |              resetPlaceHolder_2();  |         |   411  |    160  |  1  |   12  |  [193,160,196,177,32]  |
  2304  |                         R = R + 2;  |      2  |   413  |    160  |  1  |   12  |  [193,160,196,177,32]  |
  2308  |                         j = j + 1;  |         |   413  |    160  |  1  |   13  |  [193,160,196,177,32]  |
  2309  |              resetPlaceHolder_2();  |         |   413  |    160  |  1  |   13  |  [193,160,196,177,32]  |
  2315  |                         R = R + 2;  |      2  |   415  |    160  |  1  |   13  |  [193,160,196,177,32]  |
  2319  |                         j = j + 1;  |         |   415  |    160  |  1  |   14  |  [193,160,196,177,32]  |
  2320  |              resetPlaceHolder_2();  |         |   415  |    160  |  1  |   14  |  [193,160,196,177,32]  |
  2326  |                         R = R + 2;  |      2  |   417  |    160  |  1  |   14  |  [193,160,196,177,32]  |
  2330  |                         j = j + 1;  |         |   417  |    160  |  1  |   15  |  [193,160,196,177,32]  |
  2331  |              resetPlaceHolder_2();  |         |   417  |    160  |  1  |   15  |  [193,160,196,177,32]  |
  2337  |                         R = R + 2;  |      2  |   419  |    160  |  1  |   15  |  [193,160,196,177,32]  |
  2341  |                         j = j + 1;  |         |   419  |    160  |  1  |   16  |  [193,160,196,177,32]  |
  2342  |              resetPlaceHolder_2();  |         |   419  |    160  |  1  |   16  |  [193,160,196,177,32]  |
  2348  |                         R = R + 2;  |      2  |   421  |    160  |  1  |   16  |  [193,160,196,177,32]  |
  2352  |                         j = j + 1;  |         |   421  |    160  |  1  |   17  |  [193,160,196,177,32]  |
  2353  |              resetPlaceHolder_2();  |         |   421  |    160  |  1  |   17  |  [193,160,196,177,32]  |
  2359  |                         R = R + 2;  |      2  |   423  |    160  |  1  |   17  |  [193,160,196,177,32]  |
  2363  |                         j = j + 1;  |         |   423  |    160  |  1  |   18  |  [193,160,196,177,32]  |
  2364  |              resetPlaceHolder_2();  |         |   423  |    160  |  1  |   18  |  [193,160,196,177,32]  |
  2370  |                         R = R + 2;  |      2  |   425  |    160  |  1  |   18  |  [193,160,196,177,32]  |
  2374  |                         j = j + 1;  |         |   425  |    160  |  1  |   19  |  [193,160,196,177,32]  |
  2375  |              resetPlaceHolder_2();  |         |   425  |    160  |  1  |   19  |  [193,160,196,177,32]  |
  2381  |                         R = R + 2;  |      2  |   427  |    160  |  1  |   19  |  [193,160,196,177,32]  |
  2385  |                         j = j + 1;  |         |   427  |    160  |  1  |   20  |  [193,160,196,177,32]  |
  2386  |              resetPlaceHolder_2();  |         |   427  |    160  |  1  |   20  |  [193,160,196,177,32]  |
  2392  |                         R = R + 2;  |      2  |   429  |    160  |  1  |   20  |  [193,160,196,177,32]  |
  2396  |                         j = j + 1;  |         |   429  |    160  |  1  |   21  |  [193,160,196,177,32]  |
  2397  |              resetPlaceHolder_2();  |         |   429  |    160  |  1  |   21  |  [193,160,196,177,32]  |
  2403  |                         R = R + 2;  |      2  |   431  |    160  |  1  |   21  |  [193,160,196,177,32]  |
  2407  |                         j = j + 1;  |         |   431  |    160  |  1  |   22  |  [193,160,196,177,32]  |
  2408  |              resetPlaceHolder_2();  |         |   431  |    160  |  1  |   22  |  [193,160,196,177,32]  |
  2414  |                         R = R + 2;  |      2  |   433  |    160  |  1  |   22  |  [193,160,196,177,32]  |
  2418  |                         j = j + 1;  |         |   433  |    160  |  1  |   23  |  [193,160,196,177,32]  |
  2419  |              resetPlaceHolder_2();  |         |   433  |    160  |  1  |   23  |  [193,160,196,177,32]  |
  2425  |                         R = R + 2;  |      2  |   435  |    160  |  1  |   23  |  [193,160,196,177,32]  |
  2429  |                         j = j + 1;  |         |   435  |    160  |  1  |   24  |  [193,160,196,177,32]  |
  2430  |              resetPlaceHolder_2();  |         |   435  |    160  |  1  |   24  |  [193,160,196,177,32]  |
  2436  |                         R = R + 2;  |      2  |   437  |    160  |  1  |   24  |  [193,160,196,177,32]  |
  2440  |                         j = j + 1;  |         |   437  |    160  |  1  |   25  |  [193,160,196,177,32]  |
  2441  |              resetPlaceHolder_2();  |         |   437  |    160  |  1  |   25  |  [193,160,196,177,32]  |
  2447  |                         R = R + 2;  |      2  |   439  |    160  |  1  |   25  |  [193,160,196,177,32]  |
  2451  |                         j = j + 1;  |         |   439  |    160  |  1  |   26  |  [193,160,196,177,32]  |
  2452  |              resetPlaceHolder_2();  |         |   439  |    160  |  1  |   26  |  [193,160,196,177,32]  |
  2458  |                         R = R + 2;  |      2  |   441  |    160  |  1  |   26  |  [193,160,196,177,32]  |
  2462  |                         j = j + 1;  |         |   441  |    160  |  1  |   27  |  [193,160,196,177,32]  |
  2463  |              resetPlaceHolder_2();  |         |   441  |    160  |  1  |   27  |  [193,160,196,177,32]  |
  2469  |                         R = R + 2;  |      2  |   443  |    160  |  1  |   27  |  [193,160,196,177,32]  |
  2473  |                         j = j + 1;  |         |   443  |    160  |  1  |   28  |  [193,160,196,177,32]  |
  2474  |              resetPlaceHolder_2();  |         |   443  |    160  |  1  |   28  |  [193,160,196,177,32]  |
  2480  |                         R = R + 2;  |      2  |   445  |    160  |  1  |   28  |  [193,160,196,177,32]  |
  2484  |                         j = j + 1;  |         |   445  |    160  |  1  |   29  |  [193,160,196,177,32]  |
  2485  |              resetPlaceHolder_2();  |         |   445  |    160  |  1  |   29  |  [193,160,196,177,32]  |
  2491  |                         R = R + 2;  |      2  |   447  |    160  |  1  |   29  |  [193,160,196,177,32]  |
  2495  |                         j = j + 1;  |         |   447  |    160  |  1  |   30  |  [193,160,196,177,32]  |
  2496  |              resetPlaceHolder_2();  |         |   447  |    160  |  1  |   30  |  [193,160,196,177,32]  |
  2502  |                         R = R + 2;  |      2  |   449  |    160  |  1  |   30  |  [193,160,196,177,32]  |
  2506  |                         j = j + 1;  |         |   449  |    160  |  1  |   31  |  [193,160,196,177,32]  |
  2507  |              resetPlaceHolder_2();  |         |   449  |    160  |  1  |   31  |  [193,160,196,177,32]  |
  2513  |                         R = R + 2;  |      2  |   451  |    160  |  1  |   31  |  [193,160,196,177,32]  |
  2517  |                         j = j + 1;  |         |   451  |    160  |  1  |   32  |  [193,160,196,177,32]  |
  2518  |              resetPlaceHolder_2();  |         |   451  |    160  |  1  |   32  |  [193,160,196,177,32]  |
  2524  |                         R = R + 2;  |      2  |   453  |    160  |  1  |   32  |  [193,160,196,177,32]  |
  2528  |                         j = j + 1;  |         |   453  |    160  |  1  |   33  |  [193,160,196,177,32]  |
  2529  |              resetPlaceHolder_2();  |         |   453  |    160  |  1  |   33  |  [193,160,196,177,32]  |
  2535  |                         R = R + 2;  |      2  |   455  |    160  |  1  |   33  |  [193,160,196,177,32]  |
  2539  |                         j = j + 1;  |         |   455  |    160  |  1  |   34  |  [193,160,196,177,32]  |
  2540  |              resetPlaceHolder_2();  |         |   455  |    160  |  1  |   34  |  [193,160,196,177,32]  |
  2546  |                         R = R + 2;  |      2  |   457  |    160  |  1  |   34  |  [193,160,196,177,32]  |
  2550  |                         j = j + 1;  |         |   457  |    160  |  1  |   35  |  [193,160,196,177,32]  |
  2551  |              resetPlaceHolder_2();  |         |   457  |    160  |  1  |   35  |  [193,160,196,177,32]  |
  2557  |                         R = R + 2;  |      2  |   459  |    160  |  1  |   35  |  [193,160,196,177,32]  |
  2561  |                         j = j + 1;  |         |   459  |    160  |  1  |   36  |  [193,160,196,177,32]  |
  2562  |              resetPlaceHolder_2();  |         |   459  |    160  |  1  |   36  |  [193,160,196,177,32]  |
  2568  |                         R = R + 2;  |      2  |   461  |    160  |  1  |   36  |  [193,160,196,177,32]  |
  2572  |                         j = j + 1;  |         |   461  |    160  |  1  |   37  |  [193,160,196,177,32]  |
  2573  |              resetPlaceHolder_2();  |         |   461  |    160  |  1  |   37  |  [193,160,196,177,32]  |
  2579  |                         R = R + 2;  |      2  |   463  |    160  |  1  |   37  |  [193,160,196,177,32]  |
  2583  |                         j = j + 1;  |         |   463  |    160  |  1  |   38  |  [193,160,196,177,32]  |
  2584  |              resetPlaceHolder_2();  |         |   463  |    160  |  1  |   38  |  [193,160,196,177,32]  |
  2590  |                         R = R + 2;  |      2  |   465  |    160  |  1  |   38  |  [193,160,196,177,32]  |
  2594  |                         j = j + 1;  |         |   465  |    160  |  1  |   39  |  [193,160,196,177,32]  |
  2595  |              resetPlaceHolder_2();  |         |   465  |    160  |  1  |   39  |  [193,160,196,177,32]  |
  2601  |                         R = R + 2;  |      2  |   467  |    160  |  1  |   39  |  [193,160,196,177,32]  |
  2605  |                         j = j + 1;  |         |   467  |    160  |  1  |   40  |  [193,160,196,177,32]  |
  2606  |              resetPlaceHolder_2();  |         |   467  |    160  |  1  |   40  |  [193,160,196,177,32]  |
  2612  |                         R = R + 2;  |      2  |   469  |    160  |  1  |   40  |  [193,160,196,177,32]  |
  2616  |                         j = j + 1;  |         |   469  |    160  |  1  |   41  |  [193,160,196,177,32]  |
  2617  |              resetPlaceHolder_2();  |         |   469  |    160  |  1  |   41  |  [193,160,196,177,32]  |
  2623  |                         R = R + 2;  |      2  |   471  |    160  |  1  |   41  |  [193,160,196,177,32]  |
  2627  |                         j = j + 1;  |         |   471  |    160  |  1  |   42  |  [193,160,196,177,32]  |
  2628  |              resetPlaceHolder_2();  |         |   471  |    160  |  1  |   42  |  [193,160,196,177,32]  |
  2634  |                         R = R + 2;  |      2  |   473  |    160  |  1  |   42  |  [193,160,196,177,32]  |
  2638  |                         j = j + 1;  |         |   473  |    160  |  1  |   43  |  [193,160,196,177,32]  |
  2639  |              resetPlaceHolder_2();  |         |   473  |    160  |  1  |   43  |  [193,160,196,177,32]  |
  2645  |                         R = R + 2;  |      2  |   475  |    160  |  1  |   43  |  [193,160,196,177,32]  |
  2649  |                         j = j + 1;  |         |   475  |    160  |  1  |   44  |  [193,160,196,177,32]  |
  2650  |              resetPlaceHolder_2();  |         |   475  |    160  |  1  |   44  |  [193,160,196,177,32]  |
  2656  |                         R = R + 2;  |      2  |   477  |    160  |  1  |   44  |  [193,160,196,177,32]  |
  2660  |                         j = j + 1;  |         |   477  |    160  |  1  |   45  |  [193,160,196,177,32]  |
  2661  |              resetPlaceHolder_2();  |         |   477  |    160  |  1  |   45  |  [193,160,196,177,32]  |
  2667  |                         R = R + 2;  |      2  |   479  |    160  |  1  |   45  |  [193,160,196,177,32]  |
  2671  |                         j = j + 1;  |         |   479  |    160  |  1  |   46  |  [193,160,196,177,32]  |
  2672  |              resetPlaceHolder_2();  |         |   479  |    160  |  1  |   46  |  [193,160,196,177,32]  |
  2678  |                         R = R + 2;  |      2  |   481  |    160  |  1  |   46  |  [193,160,196,177,32]  |
  2682  |                         j = j + 1;  |         |   481  |    160  |  1  |   47  |  [193,160,196,177,32]  |
  2683  |              resetPlaceHolder_2();  |         |   481  |    160  |  1  |   47  |  [193,160,196,177,32]  |
  2689  |                         R = R + 2;  |      2  |   483  |    160  |  1  |   47  |  [193,160,196,177,32]  |
  2693  |                         j = j + 1;  |         |   483  |    160  |  1  |   48  |  [193,160,196,177,32]  |
  2694  |              resetPlaceHolder_2();  |         |   483  |    160  |  1  |   48  |  [193,160,196,177,32]  |
  2700  |                         R = R + 2;  |      2  |   485  |    160  |  1  |   48  |  [193,160,196,177,32]  |
  2704  |                         j = j + 1;  |         |   485  |    160  |  1  |   49  |  [193,160,196,177,32]  |
  2705  |              resetPlaceHolder_2();  |         |   485  |    160  |  1  |   49  |  [193,160,196,177,32]  |
  2711  |                         R = R + 2;  |      2  |   487  |    160  |  1  |   49  |  [193,160,196,177,32]  |
  2715  |                         j = j + 1;  |         |   487  |    160  |  1  |   50  |  [193,160,196,177,32]  |
  2716  |              resetPlaceHolder_2();  |         |   487  |    160  |  1  |   50  |  [193,160,196,177,32]  |
  2722  |                         R = R + 2;  |      2  |   489  |    160  |  1  |   50  |  [193,160,196,177,32]  |
  2726  |                         j = j + 1;  |         |   489  |    160  |  1  |   51  |  [193,160,196,177,32]  |
  2727  |              resetPlaceHolder_2();  |         |   489  |    160  |  1  |   51  |  [193,160,196,177,32]  |
  2733  |                         R = R + 2;  |      2  |   491  |    160  |  1  |   51  |  [193,160,196,177,32]  |
  2737  |                         j = j + 1;  |         |   491  |    160  |  1  |   52  |  [193,160,196,177,32]  |
  2738  |              resetPlaceHolder_2();  |         |   491  |    160  |  1  |   52  |  [193,160,196,177,32]  |
  2744  |                         R = R + 2;  |      2  |   493  |    160  |  1  |   52  |  [193,160,196,177,32]  |
  2748  |                         j = j + 1;  |         |   493  |    160  |  1  |   53  |  [193,160,196,177,32]  |
  2749  |              resetPlaceHolder_2();  |         |   493  |    160  |  1  |   53  |  [193,160,196,177,32]  |
  2755  |                         R = R + 2;  |      2  |   495  |    160  |  1  |   53  |  [193,160,196,177,32]  |
  2759  |                         j = j + 1;  |         |   495  |    160  |  1  |   54  |  [193,160,196,177,32]  |
  2760  |              resetPlaceHolder_2();  |         |   495  |    160  |  1  |   54  |  [193,160,196,177,32]  |
  2766  |                         R = R + 2;  |      2  |   497  |    160  |  1  |   54  |  [193,160,196,177,32]  |
  2770  |                         j = j + 1;  |         |   497  |    160  |  1  |   55  |  [193,160,196,177,32]  |
  2771  |              resetPlaceHolder_2();  |         |   497  |    160  |  1  |   55  |  [193,160,196,177,32]  |
  2777  |                         R = R + 2;  |      2  |   499  |    160  |  1  |   55  |  [193,160,196,177,32]  |
  2781  |                         j = j + 1;  |         |   499  |    160  |  1  |   56  |  [193,160,196,177,32]  |
  2782  |              resetPlaceHolder_2();  |         |   499  |    160  |  1  |   56  |  [193,160,196,177,32]  |
  2788  |                         R = R + 2;  |      2  |   501  |    160  |  1  |   56  |  [193,160,196,177,32]  |
  2792  |                         j = j + 1;  |         |   501  |    160  |  1  |   57  |  [193,160,196,177,32]  |
  2793  |              resetPlaceHolder_2();  |         |   501  |    160  |  1  |   57  |  [193,160,196,177,32]  |
  2799  |                         R = R + 2;  |      2  |   503  |    160  |  1  |   57  |  [193,160,196,177,32]  |
  2803  |                         j = j + 1;  |         |   503  |    160  |  1  |   58  |  [193,160,196,177,32]  |
  2804  |              resetPlaceHolder_2();  |         |   503  |    160  |  1  |   58  |  [193,160,196,177,32]  |
  2810  |                         R = R + 2;  |      2  |   505  |    160  |  1  |   58  |  [193,160,196,177,32]  |
  2814  |                         j = j + 1;  |         |   505  |    160  |  1  |   59  |  [193,160,196,177,32]  |
  2815  |              resetPlaceHolder_2();  |         |   505  |    160  |  1  |   59  |  [193,160,196,177,32]  |
  2821  |                         R = R + 2;  |      2  |   507  |    160  |  1  |   59  |  [193,160,196,177,32]  |
  2825  |                         j = j + 1;  |         |   507  |    160  |  1  |   60  |  [193,160,196,177,32]  |
  2826  |              resetPlaceHolder_2();  |         |   507  |    160  |  1  |   60  |  [193,160,196,177,32]  |
  2832  |                         R = R + 2;  |      2  |   509  |    160  |  1  |   60  |  [193,160,196,177,32]  |
  2836  |                         j = j + 1;  |         |   509  |    160  |  1  |   61  |  [193,160,196,177,32]  |
  2837  |              resetPlaceHolder_2();  |         |   509  |    160  |  1  |   61  |  [193,160,196,177,32]  |
  2843  |                         R = R + 2;  |      2  |   511  |    160  |  1  |   61  |  [193,160,196,177,32]  |
  2847  |                         j = j + 1;  |         |   511  |    160  |  1  |   62  |  [193,160,196,177,32]  |
  2848  |              resetPlaceHolder_2();  |         |   511  |    160  |  1  |   62  |  [193,160,196,177,32]  |
  2854  |                         R = R + 2;  |      2  |   513  |    160  |  1  |   62  |  [193,160,196,177,32]  |
  2858  |                         j = j + 1;  |         |   513  |    160  |  1  |   63  |  [193,160,196,177,32]  |
  2859  |              resetPlaceHolder_2();  |         |   513  |    160  |  1  |   63  |  [193,160,196,177,32]  |
  2865  |                         R = R + 2;  |      2  |   515  |    160  |  1  |   63  |  [193,160,196,177,32]  |
  2869  |                         j = j + 1;  |         |   515  |    160  |  1  |   64  |  [193,160,196,177,32]  |
  2870  |              resetPlaceHolder_2();  |         |   515  |    160  |  1  |   64  |  [193,160,196,177,32]  |
  2876  |                         R = R + 2;  |      2  |   517  |    160  |  1  |   64  |  [193,160,196,177,32]  |
  2880  |                         j = j + 1;  |         |   517  |    160  |  1  |   65  |  [193,160,196,177,32]  |
  2881  |              resetPlaceHolder_2();  |         |   517  |    160  |  1  |   65  |  [193,160,196,177,32]  |
  2887  |                         R = R + 2;  |      2  |   519  |    160  |  1  |   65  |  [193,160,196,177,32]  |
  2891  |                         j = j + 1;  |         |   519  |    160  |  1  |   66  |  [193,160,196,177,32]  |
  2892  |              resetPlaceHolder_2();  |         |   519  |    160  |  1  |   66  |  [193,160,196,177,32]  |
  2898  |                         R = R + 2;  |      2  |   521  |    160  |  1  |   66  |  [193,160,196,177,32]  |
  2902  |                         j = j + 1;  |         |   521  |    160  |  1  |   67  |  [193,160,196,177,32]  |
  2903  |              resetPlaceHolder_2();  |         |   521  |    160  |  1  |   67  |  [193,160,196,177,32]  |
  2909  |                         R = R + 2;  |      2  |   523  |    160  |  1  |   67  |  [193,160,196,177,32]  |
  2913  |                         j = j + 1;  |         |   523  |    160  |  1  |   68  |  [193,160,196,177,32]  |
  2914  |              resetPlaceHolder_2();  |         |   523  |    160  |  1  |   68  |  [193,160,196,177,32]  |
  2920  |                         R = R + 2;  |      2  |   525  |    160  |  1  |   68  |  [193,160,196,177,32]  |
  2924  |                         j = j + 1;  |         |   525  |    160  |  1  |   69  |  [193,160,196,177,32]  |
  2925  |              resetPlaceHolder_2();  |         |   525  |    160  |  1  |   69  |  [193,160,196,177,32]  |
  2931  |                         R = R + 2;  |      2  |   527  |    160  |  1  |   69  |  [193,160,196,177,32]  |
  2935  |                         j = j + 1;  |         |   527  |    160  |  1  |   70  |  [193,160,196,177,32]  |
  2936  |              resetPlaceHolder_2();  |         |   527  |    160  |  1  |   70  |  [193,160,196,177,32]  |
  2942  |                         R = R + 2;  |      2  |   529  |    160  |  1  |   70  |  [193,160,196,177,32]  |
  2946  |                         j = j + 1;  |         |   529  |    160  |  1  |   71  |  [193,160,196,177,32]  |
  2947  |              resetPlaceHolder_2();  |         |   529  |    160  |  1  |   71  |  [193,160,196,177,32]  |
  2953  |                         R = R + 2;  |      2  |   531  |    160  |  1  |   71  |  [193,160,196,177,32]  |
  2957  |                         j = j + 1;  |         |   531  |    160  |  1  |   72  |  [193,160,196,177,32]  |
  2958  |              resetPlaceHolder_2();  |         |   531  |    160  |  1  |   72  |  [193,160,196,177,32]  |
  2964  |                         R = R + 2;  |      2  |   533  |    160  |  1  |   72  |  [193,160,196,177,32]  |
  2968  |                         j = j + 1;  |         |   533  |    160  |  1  |   73  |  [193,160,196,177,32]  |
  2969  |              resetPlaceHolder_2();  |         |   533  |    160  |  1  |   73  |  [193,160,196,177,32]  |
  2975  |                         R = R + 2;  |      2  |   535  |    160  |  1  |   73  |  [193,160,196,177,32]  |
  2979  |                         j = j + 1;  |         |   535  |    160  |  1  |   74  |  [193,160,196,177,32]  |
  2980  |              resetPlaceHolder_2();  |         |   535  |    160  |  1  |   74  |  [193,160,196,177,32]  |
  2986  |                         R = R + 2;  |      2  |   537  |    160  |  1  |   74  |  [193,160,196,177,32]  |
  2990  |                         j = j + 1;  |         |   537  |    160  |  1  |   75  |  [193,160,196,177,32]  |
  2991  |              resetPlaceHolder_2();  |         |   537  |    160  |  1  |   75  |  [193,160,196,177,32]  |
  2997  |                         R = R + 2;  |      2  |   539  |    160  |  1  |   75  |  [193,160,196,177,32]  |
  3001  |                         j = j + 1;  |         |   539  |    160  |  1  |   76  |  [193,160,196,177,32]  |
  3002  |              resetPlaceHolder_2();  |         |   539  |    160  |  1  |   76  |  [193,160,196,177,32]  |
  3008  |                         R = R + 2;  |      2  |   541  |    160  |  1  |   76  |  [193,160,196,177,32]  |
  3012  |                         j = j + 1;  |         |   541  |    160  |  1  |   77  |  [193,160,196,177,32]  |
  3013  |              resetPlaceHolder_2();  |         |   541  |    160  |  1  |   77  |  [193,160,196,177,32]  |
  3019  |                         R = R + 2;  |      2  |   543  |    160  |  1  |   77  |  [193,160,196,177,32]  |
  3023  |                         j = j + 1;  |         |   543  |    160  |  1  |   78  |  [193,160,196,177,32]  |
  3024  |              resetPlaceHolder_2();  |         |   543  |    160  |  1  |   78  |  [193,160,196,177,32]  |
  3030  |                         R = R + 2;  |      2  |   545  |    160  |  1  |   78  |  [193,160,196,177,32]  |
  3034  |                         j = j + 1;  |         |   545  |    160  |  1  |   79  |  [193,160,196,177,32]  |
  3035  |              resetPlaceHolder_2();  |         |   545  |    160  |  1  |   79  |  [193,160,196,177,32]  |
  3041  |                         R = R + 2;  |      2  |   547  |    160  |  1  |   79  |  [193,160,196,177,32]  |
  3045  |                         j = j + 1;  |         |   547  |    160  |  1  |   80  |  [193,160,196,177,32]  |
  3046  |              resetPlaceHolder_2();  |         |   547  |    160  |  1  |   80  |  [193,160,196,177,32]  |
  3052  |                         R = R + 2;  |      2  |   549  |    160  |  1  |   80  |  [193,160,196,177,32]  |
  3056  |                         j = j + 1;  |         |   549  |    160  |  1  |   81  |  [193,160,196,177,32]  |
  3057  |              resetPlaceHolder_2();  |         |   549  |    160  |  1  |   81  |  [193,160,196,177,32]  |
  3063  |                         R = R + 2;  |      2  |   551  |    160  |  1  |   81  |  [193,160,196,177,32]  |
  3067  |                         j = j + 1;  |         |   551  |    160  |  1  |   82  |  [193,160,196,177,32]  |
  3068  |              resetPlaceHolder_2();  |         |   551  |    160  |  1  |   82  |  [193,160,196,177,32]  |
  3074  |                         R = R + 2;  |      2  |   553  |    160  |  1  |   82  |  [193,160,196,177,32]  |
  3078  |                         j = j + 1;  |         |   553  |    160  |  1  |   83  |  [193,160,196,177,32]  |
  3079  |              resetPlaceHolder_2();  |         |   553  |    160  |  1  |   83  |  [193,160,196,177,32]  |
  3085  |                         R = R + 2;  |      2  |   555  |    160  |  1  |   83  |  [193,160,196,177,32]  |
  3089  |                         j = j + 1;  |         |   555  |    160  |  1  |   84  |  [193,160,196,177,32]  |
  3090  |              resetPlaceHolder_2();  |         |   555  |    160  |  1  |   84  |  [193,160,196,177,32]  |
  3096  |                         R = R + 2;  |      2  |   557  |    160  |  1  |   84  |  [193,160,196,177,32]  |
  3100  |                         j = j + 1;  |         |   557  |    160  |  1  |   85  |  [193,160,196,177,32]  |
  3101  |              resetPlaceHolder_2();  |         |   557  |    160  |  1  |   85  |  [193,160,196,177,32]  |
  3107  |                         R = R + 2;  |      2  |   559  |    160  |  1  |   85  |  [193,160,196,177,32]  |
  3111  |                         j = j + 1;  |         |   559  |    160  |  1  |   86  |  [193,160,196,177,32]  |
  3112  |              resetPlaceHolder_2();  |         |   559  |    160  |  1  |   86  |  [193,160,196,177,32]  |
  3118  |                         R = R + 2;  |      2  |   561  |    160  |  1  |   86  |  [193,160,196,177,32]  |
  3122  |                         j = j + 1;  |         |   561  |    160  |  1  |   87  |  [193,160,196,177,32]  |
  3123  |              resetPlaceHolder_2();  |         |   561  |    160  |  1  |   87  |  [193,160,196,177,32]  |
  3129  |                         R = R + 2;  |      2  |   563  |    160  |  1  |   87  |  [193,160,196,177,32]  |
  3133  |                         j = j + 1;  |         |   563  |    160  |  1  |   88  |  [193,160,196,177,32]  |
  3134  |              resetPlaceHolder_2();  |         |   563  |    160  |  1  |   88  |  [193,160,196,177,32]  |
  3140  |                         R = R + 2;  |      2  |   565  |    160  |  1  |   88  |  [193,160,196,177,32]  |
  3144  |                         j = j + 1;  |         |   565  |    160  |  1  |   89  |  [193,160,196,177,32]  |
  3145  |              resetPlaceHolder_2();  |         |   565  |    160  |  1  |   89  |  [193,160,196,177,32]  |
  3151  |                         R = R + 2;  |      2  |   567  |    160  |  1  |   89  |  [193,160,196,177,32]  |
  3155  |                         j = j + 1;  |         |   567  |    160  |  1  |   90  |  [193,160,196,177,32]  |
  3156  |              resetPlaceHolder_2();  |         |   567  |    160  |  1  |   90  |  [193,160,196,177,32]  |
  3162  |                         R = R + 2;  |      2  |   569  |    160  |  1  |   90  |  [193,160,196,177,32]  |
  3166  |                         j = j + 1;  |         |   569  |    160  |  1  |   91  |  [193,160,196,177,32]  |
  3167  |              resetPlaceHolder_2();  |         |   569  |    160  |  1  |   91  |  [193,160,196,177,32]  |
  3173  |                         R = R + 2;  |      2  |   571  |    160  |  1  |   91  |  [193,160,196,177,32]  |
  3177  |                         j = j + 1;  |         |   571  |    160  |  1  |   92  |  [193,160,196,177,32]  |
  3178  |              resetPlaceHolder_2();  |         |   571  |    160  |  1  |   92  |  [193,160,196,177,32]  |
  3184  |                         R = R + 2;  |      2  |   573  |    160  |  1  |   92  |  [193,160,196,177,32]  |
  3188  |                         j = j + 1;  |         |   573  |    160  |  1  |   93  |  [193,160,196,177,32]  |
  3189  |              resetPlaceHolder_2();  |         |   573  |    160  |  1  |   93  |  [193,160,196,177,32]  |
  3195  |                         R = R + 2;  |      2  |   575  |    160  |  1  |   93  |  [193,160,196,177,32]  |
  3199  |                         j = j + 1;  |         |   575  |    160  |  1  |   94  |  [193,160,196,177,32]  |
  3200  |              resetPlaceHolder_2();  |         |   575  |    160  |  1  |   94  |  [193,160,196,177,32]  |
  3206  |                         R = R + 2;  |      2  |   577  |    160  |  1  |   94  |  [193,160,196,177,32]  |
  3210  |                         j = j + 1;  |         |   577  |    160  |  1  |   95  |  [193,160,196,177,32]  |
  3211  |              resetPlaceHolder_2();  |         |   577  |    160  |  1  |   95  |  [193,160,196,177,32]  |
  3217  |                         R = R + 2;  |      2  |   579  |    160  |  1  |   95  |  [193,160,196,177,32]  |
  3221  |                         j = j + 1;  |         |   579  |    160  |  1  |   96  |  [193,160,196,177,32]  |
  3222  |              resetPlaceHolder_2();  |         |   579  |    160  |  1  |   96  |  [193,160,196,177,32]  |
  3228  |                         R = R + 2;  |      2  |   581  |    160  |  1  |   96  |  [193,160,196,177,32]  |
  3232  |                         j = j + 1;  |         |   581  |    160  |  1  |   97  |  [193,160,196,177,32]  |
  3233  |              resetPlaceHolder_2();  |         |   581  |    160  |  1  |   97  |  [193,160,196,177,32]  |
  3239  |                         R = R + 2;  |      2  |   583  |    160  |  1  |   97  |  [193,160,196,177,32]  |
  3243  |                         j = j + 1;  |         |   583  |    160  |  1  |   98  |  [193,160,196,177,32]  |
  3244  |              resetPlaceHolder_2();  |         |   583  |    160  |  1  |   98  |  [193,160,196,177,32]  |
  3250  |                         R = R + 2;  |      2  |   585  |    160  |  1  |   98  |  [193,160,196,177,32]  |
  3254  |                         j = j + 1;  |         |   585  |    160  |  1  |   99  |  [193,160,196,177,32]  |
  3255  |              resetPlaceHolder_2();  |         |   585  |    160  |  1  |   99  |  [193,160,196,177,32]  |
  3261  |                         R = R + 2;  |      2  |   587  |    160  |  1  |   99  |  [193,160,196,177,32]  |
  3265  |                         j = j + 1;  |         |   587  |    160  |  1  |  100  |  [193,160,196,177,32]  |
  3266  |              resetPlaceHolder_2();  |         |   587  |    160  |  1  |  100  |  [193,160,196,177,32]  |
  3272  |                         R = R + 2;  |      2  |   589  |    160  |  1  |  100  |  [193,160,196,177,32]  |
  3276  |                         j = j + 1;  |         |   589  |    160  |  1  |  101  |  [193,160,196,177,32]  |
  3277  |              resetPlaceHolder_2();  |         |   589  |    160  |  1  |  101  |  [193,160,196,177,32]  |
  3283  |                         R = R + 2;  |      2  |   591  |    160  |  1  |  101  |  [193,160,196,177,32]  |
  3287  |                         j = j + 1;  |         |   591  |    160  |  1  |  102  |  [193,160,196,177,32]  |
  3288  |              resetPlaceHolder_2();  |         |   591  |    160  |  1  |  102  |  [193,160,196,177,32]  |
  3294  |                         R = R + 2;  |      2  |   593  |    160  |  1  |  102  |  [193,160,196,177,32]  |
  3298  |                         j = j + 1;  |         |   593  |    160  |  1  |  103  |  [193,160,196,177,32]  |
  3299  |              resetPlaceHolder_2();  |         |   593  |    160  |  1  |  103  |  [193,160,196,177,32]  |
  3305  |                         R = R + 2;  |      2  |   595  |    160  |  1  |  103  |  [193,160,196,177,32]  |
  3309  |                         j = j + 1;  |         |   595  |    160  |  1  |  104  |  [193,160,196,177,32]  |
  3310  |              resetPlaceHolder_2();  |         |   595  |    160  |  1  |  104  |  [193,160,196,177,32]  |
  3316  |                         R = R + 2;  |      2  |   597  |    160  |  1  |  104  |  [193,160,196,177,32]  |
  3320  |                         j = j + 1;  |         |   597  |    160  |  1  |  105  |  [193,160,196,177,32]  |
  3321  |              resetPlaceHolder_2();  |         |   597  |    160  |  1  |  105  |  [193,160,196,177,32]  |
  3327  |                         R = R + 2;  |      2  |   599  |    160  |  1  |  105  |  [193,160,196,177,32]  |
  3331  |                         j = j + 1;  |         |   599  |    160  |  1  |  106  |  [193,160,196,177,32]  |
  3332  |              resetPlaceHolder_2();  |         |   599  |    160  |  1  |  106  |  [193,160,196,177,32]  |
  3338  |                         R = R + 2;  |      2  |   601  |    160  |  1  |  106  |  [193,160,196,177,32]  |
  3342  |                         j = j + 1;  |         |   601  |    160  |  1  |  107  |  [193,160,196,177,32]  |
  3343  |              resetPlaceHolder_2();  |         |   601  |    160  |  1  |  107  |  [193,160,196,177,32]  |
  3349  |                         R = R + 2;  |      2  |   603  |    160  |  1  |  107  |  [193,160,196,177,32]  |
  3353  |                         j = j + 1;  |         |   603  |    160  |  1  |  108  |  [193,160,196,177,32]  |
  3354  |              resetPlaceHolder_2();  |         |   603  |    160  |  1  |  108  |  [193,160,196,177,32]  |
  3360  |                         R = R + 2;  |      2  |   605  |    160  |  1  |  108  |  [193,160,196,177,32]  |
  3364  |                         j = j + 1;  |         |   605  |    160  |  1  |  109  |  [193,160,196,177,32]  |
  3365  |              resetPlaceHolder_2();  |         |   605  |    160  |  1  |  109  |  [193,160,196,177,32]  |
  3371  |                         R = R + 2;  |      2  |   607  |    160  |  1  |  109  |  [193,160,196,177,32]  |
  3375  |                         j = j + 1;  |         |   607  |    160  |  1  |  110  |  [193,160,196,177,32]  |
  3376  |              resetPlaceHolder_2();  |         |   607  |    160  |  1  |  110  |  [193,160,196,177,32]  |
  3382  |                         R = R + 2;  |      2  |   609  |    160  |  1  |  110  |  [193,160,196,177,32]  |
  3386  |                         j = j + 1;  |         |   609  |    160  |  1  |  111  |  [193,160,196,177,32]  |
  3387  |              resetPlaceHolder_2();  |         |   609  |    160  |  1  |  111  |  [193,160,196,177,32]  |
  3393  |                         R = R + 2;  |      2  |   611  |    160  |  1  |  111  |  [193,160,196,177,32]  |
  3397  |                         j = j + 1;  |         |   611  |    160  |  1  |  112  |  [193,160,196,177,32]  |
  3398  |              resetPlaceHolder_2();  |         |   611  |    160  |  1  |  112  |  [193,160,196,177,32]  |
  3404  |                         R = R + 2;  |      2  |   613  |    160  |  1  |  112  |  [193,160,196,177,32]  |
  3408  |                         j = j + 1;  |         |   613  |    160  |  1  |  113  |  [193,160,196,177,32]  |
  3409  |              resetPlaceHolder_2();  |         |   613  |    160  |  1  |  113  |  [193,160,196,177,32]  |
  3415  |                         R = R + 2;  |      2  |   615  |    160  |  1  |  113  |  [193,160,196,177,32]  |
  3419  |                         j = j + 1;  |         |   615  |    160  |  1  |  114  |  [193,160,196,177,32]  |
  3420  |              resetPlaceHolder_2();  |         |   615  |    160  |  1  |  114  |  [193,160,196,177,32]  |
  3426  |                         R = R + 2;  |      2  |   617  |    160  |  1  |  114  |  [193,160,196,177,32]  |
  3430  |                         j = j + 1;  |         |   617  |    160  |  1  |  115  |  [193,160,196,177,32]  |
  3431  |              resetPlaceHolder_2();  |         |   617  |    160  |  1  |  115  |  [193,160,196,177,32]  |
  3437  |                         R = R + 2;  |      2  |   619  |    160  |  1  |  115  |  [193,160,196,177,32]  |
  3441  |                         j = j + 1;  |         |   619  |    160  |  1  |  116  |  [193,160,196,177,32]  |
  3442  |              resetPlaceHolder_2();  |         |   619  |    160  |  1  |  116  |  [193,160,196,177,32]  |
  3448  |                         R = R + 2;  |      2  |   621  |    160  |  1  |  116  |  [193,160,196,177,32]  |
  3452  |                         j = j + 1;  |         |   621  |    160  |  1  |  117  |  [193,160,196,177,32]  |
  3453  |              resetPlaceHolder_2();  |         |   621  |    160  |  1  |  117  |  [193,160,196,177,32]  |
  3459  |                         R = R + 2;  |      2  |   623  |    160  |  1  |  117  |  [193,160,196,177,32]  |
  3463  |                         j = j + 1;  |         |   623  |    160  |  1  |  118  |  [193,160,196,177,32]  |
  3464  |              resetPlaceHolder_2();  |         |   623  |    160  |  1  |  118  |  [193,160,196,177,32]  |
  3470  |                         R = R + 2;  |      2  |   625  |    160  |  1  |  118  |  [193,160,196,177,32]  |
  3474  |                         j = j + 1;  |         |   625  |    160  |  1  |  119  |  [193,160,196,177,32]  |
  3475  |              resetPlaceHolder_2();  |         |   625  |    160  |  1  |  119  |  [193,160,196,177,32]  |
  3481  |                         R = R + 2;  |      2  |   627  |    160  |  1  |  119  |  [193,160,196,177,32]  |
  3485  |                         j = j + 1;  |         |   627  |    160  |  1  |  120  |  [193,160,196,177,32]  |
  3486  |              resetPlaceHolder_2();  |         |   627  |    160  |  1  |  120  |  [193,160,196,177,32]  |
  3492  |                         R = R + 2;  |      2  |   629  |    160  |  1  |  120  |  [193,160,196,177,32]  |
  3496  |                         j = j + 1;  |         |   629  |    160  |  1  |  121  |  [193,160,196,177,32]  |
  3497  |              resetPlaceHolder_2();  |         |   629  |    160  |  1  |  121  |  [193,160,196,177,32]  |
  3503  |                         R = R + 2;  |      2  |   631  |    160  |  1  |  121  |  [193,160,196,177,32]  |
  3507  |                         j = j + 1;  |         |   631  |    160  |  1  |  122  |  [193,160,196,177,32]  |
  3508  |              resetPlaceHolder_2();  |         |   631  |    160  |  1  |  122  |  [193,160,196,177,32]  |
  3514  |                         R = R + 2;  |      2  |   633  |    160  |  1  |  122  |  [193,160,196,177,32]  |
  3518  |                         j = j + 1;  |         |   633  |    160  |  1  |  123  |  [193,160,196,177,32]  |
  3519  |              resetPlaceHolder_2();  |         |   633  |    160  |  1  |  123  |  [193,160,196,177,32]  |
  3525  |                         R = R + 2;  |      2  |   635  |    160  |  1  |  123  |  [193,160,196,177,32]  |
  3529  |                         j = j + 1;  |         |   635  |    160  |  1  |  124  |  [193,160,196,177,32]  |
  3530  |              resetPlaceHolder_2();  |         |   635  |    160  |  1  |  124  |  [193,160,196,177,32]  |
  3536  |                         R = R + 2;  |      2  |   637  |    160  |  1  |  124  |  [193,160,196,177,32]  |
  3540  |                         j = j + 1;  |         |   637  |    160  |  1  |  125  |  [193,160,196,177,32]  |
  3541  |              resetPlaceHolder_2();  |         |   637  |    160  |  1  |  125  |  [193,160,196,177,32]  |
  3547  |                         R = R + 2;  |      2  |   639  |    160  |  1  |  125  |  [193,160,196,177,32]  |
  3551  |                         j = j + 1;  |         |   639  |    160  |  1  |  126  |  [193,160,196,177,32]  |
  3552  |              resetPlaceHolder_2();  |         |   639  |    160  |  1  |  126  |  [193,160,196,177,32]  |
  3558  |                         R = R + 2;  |      2  |   641  |    160  |  1  |  126  |  [193,160,196,177,32]  |
  3562  |                         j = j + 1;  |         |   641  |    160  |  1  |  127  |  [193,160,196,177,32]  |
  3563  |              resetPlaceHolder_2();  |         |   641  |    160  |  1  |  127  |  [193,160,196,177,32]  |
  3569  |                         R = R + 2;  |      2  |   643  |    160  |  1  |  127  |  [193,160,196,177,32]  |
  3573  |                         j = j + 1;  |         |   643  |    160  |  1  |  128  |  [193,160,196,177,32]  |
  3574  |              resetPlaceHolder_2();  |         |   643  |    160  |  1  |  128  |  [193,160,196,177,32]  |
  3580  |                         R = R + 2;  |      2  |   645  |    160  |  1  |  128  |  [193,160,196,177,32]  |
  3584  |                         j = j + 1;  |         |   645  |    160  |  1  |  129  |  [193,160,196,177,32]  |
  3585  |              resetPlaceHolder_2();  |         |   645  |    160  |  1  |  129  |  [193,160,196,177,32]  |
  3591  |                         R = R + 2;  |      2  |   647  |    160  |  1  |  129  |  [193,160,196,177,32]  |
  3595  |                         j = j + 1;  |         |   647  |    160  |  1  |  130  |  [193,160,196,177,32]  |
  3596  |              resetPlaceHolder_2();  |         |   647  |    160  |  1  |  130  |  [193,160,196,177,32]  |
  3602  |                         R = R + 2;  |      2  |   649  |    160  |  1  |  130  |  [193,160,196,177,32]  |
  3606  |                         j = j + 1;  |         |   649  |    160  |  1  |  131  |  [193,160,196,177,32]  |
  3607  |              resetPlaceHolder_2();  |         |   649  |    160  |  1  |  131  |  [193,160,196,177,32]  |
  3613  |                         R = R + 2;  |      2  |   651  |    160  |  1  |  131  |  [193,160,196,177,32]  |
  3617  |                         j = j + 1;  |         |   651  |    160  |  1  |  132  |  [193,160,196,177,32]  |
  3618  |              resetPlaceHolder_2();  |         |   651  |    160  |  1  |  132  |  [193,160,196,177,32]  |
  3624  |                         R = R + 2;  |      2  |   653  |    160  |  1  |  132  |  [193,160,196,177,32]  |
  3628  |                         j = j + 1;  |         |   653  |    160  |  1  |  133  |  [193,160,196,177,32]  |
  3629  |              resetPlaceHolder_2();  |         |   653  |    160  |  1  |  133  |  [193,160,196,177,32]  |
  3635  |                         R = R + 2;  |      2  |   655  |    160  |  1  |  133  |  [193,160,196,177,32]  |
  3639  |                         j = j + 1;  |         |   655  |    160  |  1  |  134  |  [193,160,196,177,32]  |
  3640  |              resetPlaceHolder_2();  |         |   655  |    160  |  1  |  134  |  [193,160,196,177,32]  |
  3646  |                         R = R + 2;  |      2  |   657  |    160  |  1  |  134  |  [193,160,196,177,32]  |
  3650  |                         j = j + 1;  |         |   657  |    160  |  1  |  135  |  [193,160,196,177,32]  |
  3651  |              resetPlaceHolder_2();  |         |   657  |    160  |  1  |  135  |  [193,160,196,177,32]  |
  3657  |                         R = R + 2;  |      2  |   659  |    160  |  1  |  135  |  [193,160,196,177,32]  |
  3661  |                         j = j + 1;  |         |   659  |    160  |  1  |  136  |  [193,160,196,177,32]  |
  3662  |              resetPlaceHolder_2();  |         |   659  |    160  |  1  |  136  |  [193,160,196,177,32]  |
  3668  |                         R = R + 2;  |      2  |   661  |    160  |  1  |  136  |  [193,160,196,177,32]  |
  3672  |                         j = j + 1;  |         |   661  |    160  |  1  |  137  |  [193,160,196,177,32]  |
  3673  |              resetPlaceHolder_2();  |         |   661  |    160  |  1  |  137  |  [193,160,196,177,32]  |
  3679  |                         R = R + 2;  |      2  |   663  |    160  |  1  |  137  |  [193,160,196,177,32]  |
  3683  |                         j = j + 1;  |         |   663  |    160  |  1  |  138  |  [193,160,196,177,32]  |
  3684  |              resetPlaceHolder_2();  |         |   663  |    160  |  1  |  138  |  [193,160,196,177,32]  |
  3690  |                         R = R + 2;  |      2  |   665  |    160  |  1  |  138  |  [193,160,196,177,32]  |
  3694  |                         j = j + 1;  |         |   665  |    160  |  1  |  139  |  [193,160,196,177,32]  |
  3695  |              resetPlaceHolder_2();  |         |   665  |    160  |  1  |  139  |  [193,160,196,177,32]  |
  3701  |                         R = R + 2;  |      2  |   667  |    160  |  1  |  139  |  [193,160,196,177,32]  |
  3705  |                         j = j + 1;  |         |   667  |    160  |  1  |  140  |  [193,160,196,177,32]  |
  3706  |              resetPlaceHolder_2();  |         |   667  |    160  |  1  |  140  |  [193,160,196,177,32]  |
  3712  |                         R = R + 2;  |      2  |   669  |    160  |  1  |  140  |  [193,160,196,177,32]  |
  3716  |                         j = j + 1;  |         |   669  |    160  |  1  |  141  |  [193,160,196,177,32]  |
  3717  |              resetPlaceHolder_2();  |         |   669  |    160  |  1  |  141  |  [193,160,196,177,32]  |
  3723  |                         R = R + 2;  |      2  |   671  |    160  |  1  |  141  |  [193,160,196,177,32]  |
  3727  |                         j = j + 1;  |         |   671  |    160  |  1  |  142  |  [193,160,196,177,32]  |
  3728  |              resetPlaceHolder_2();  |         |   671  |    160  |  1  |  142  |  [193,160,196,177,32]  |
  3734  |                         R = R + 2;  |      2  |   673  |    160  |  1  |  142  |  [193,160,196,177,32]  |
  3738  |                         j = j + 1;  |         |   673  |    160  |  1  |  143  |  [193,160,196,177,32]  |
  3739  |              resetPlaceHolder_2();  |         |   673  |    160  |  1  |  143  |  [193,160,196,177,32]  |
  3745  |                         R = R + 2;  |      2  |   675  |    160  |  1  |  143  |  [193,160,196,177,32]  |
  3749  |                         j = j + 1;  |         |   675  |    160  |  1  |  144  |  [193,160,196,177,32]  |
  3750  |              resetPlaceHolder_2();  |         |   675  |    160  |  1  |  144  |  [193,160,196,177,32]  |
  3756  |                         R = R + 2;  |      2  |   677  |    160  |  1  |  144  |  [193,160,196,177,32]  |
  3760  |                         j = j + 1;  |         |   677  |    160  |  1  |  145  |  [193,160,196,177,32]  |
  3761  |              resetPlaceHolder_2();  |         |   677  |    160  |  1  |  145  |  [193,160,196,177,32]  |
  3767  |                         R = R + 2;  |      2  |   679  |    160  |  1  |  145  |  [193,160,196,177,32]  |
  3771  |                         j = j + 1;  |         |   679  |    160  |  1  |  146  |  [193,160,196,177,32]  |
  3772  |              resetPlaceHolder_2();  |         |   679  |    160  |  1  |  146  |  [193,160,196,177,32]  |
  3778  |                         R = R + 2;  |      2  |   681  |    160  |  1  |  146  |  [193,160,196,177,32]  |
  3782  |                         j = j + 1;  |         |   681  |    160  |  1  |  147  |  [193,160,196,177,32]  |
  3783  |              resetPlaceHolder_2();  |         |   681  |    160  |  1  |  147  |  [193,160,196,177,32]  |
  3789  |                         R = R + 2;  |      2  |   683  |    160  |  1  |  147  |  [193,160,196,177,32]  |
  3793  |                         j = j + 1;  |         |   683  |    160  |  1  |  148  |  [193,160,196,177,32]  |
  3794  |              resetPlaceHolder_2();  |         |   683  |    160  |  1  |  148  |  [193,160,196,177,32]  |
  3800  |                         R = R + 2;  |      2  |   685  |    160  |  1  |  148  |  [193,160,196,177,32]  |
  3804  |                         j = j + 1;  |         |   685  |    160  |  1  |  149  |  [193,160,196,177,32]  |
  3805  |              resetPlaceHolder_2();  |         |   685  |    160  |  1  |  149  |  [193,160,196,177,32]  |
  3811  |                         R = R + 2;  |      2  |   687  |    160  |  1  |  149  |  [193,160,196,177,32]  |
  3815  |                         j = j + 1;  |         |   687  |    160  |  1  |  150  |  [193,160,196,177,32]  |
  3816  |              resetPlaceHolder_2();  |         |   687  |    160  |  1  |  150  |  [193,160,196,177,32]  |
  3822  |                         R = R + 2;  |      2  |   689  |    160  |  1  |  150  |  [193,160,196,177,32]  |
  3826  |                         j = j + 1;  |         |   689  |    160  |  1  |  151  |  [193,160,196,177,32]  |
  3827  |              resetPlaceHolder_2();  |         |   689  |    160  |  1  |  151  |  [193,160,196,177,32]  |
  3833  |                         R = R + 2;  |      2  |   691  |    160  |  1  |  151  |  [193,160,196,177,32]  |
  3837  |                         j = j + 1;  |         |   691  |    160  |  1  |  152  |  [193,160,196,177,32]  |
  3838  |              resetPlaceHolder_2();  |         |   691  |    160  |  1  |  152  |  [193,160,196,177,32]  |
  3844  |                         R = R + 2;  |      2  |   693  |    160  |  1  |  152  |  [193,160,196,177,32]  |
  3848  |                         j = j + 1;  |         |   693  |    160  |  1  |  153  |  [193,160,196,177,32]  |
  3849  |              resetPlaceHolder_2();  |         |   693  |    160  |  1  |  153  |  [193,160,196,177,32]  |
  3855  |                         R = R + 2;  |      2  |   695  |    160  |  1  |  153  |  [193,160,196,177,32]  |
  3859  |                         j = j + 1;  |         |   695  |    160  |  1  |  154  |  [193,160,196,177,32]  |
  3860  |              resetPlaceHolder_2();  |         |   695  |    160  |  1  |  154  |  [193,160,196,177,32]  |
  3866  |                         R = R + 2;  |      2  |   697  |    160  |  1  |  154  |  [193,160,196,177,32]  |
  3870  |                         j = j + 1;  |         |   697  |    160  |  1  |  155  |  [193,160,196,177,32]  |
  3871  |              resetPlaceHolder_2();  |         |   697  |    160  |  1  |  155  |  [193,160,196,177,32]  |
  3877  |                         R = R + 2;  |      2  |   699  |    160  |  1  |  155  |  [193,160,196,177,32]  |
  3881  |                         j = j + 1;  |         |   699  |    160  |  1  |  156  |  [193,160,196,177,32]  |
  3882  |              resetPlaceHolder_2();  |         |   699  |    160  |  1  |  156  |  [193,160,196,177,32]  |
  3888  |                         R = R + 2;  |      2  |   701  |    160  |  1  |  156  |  [193,160,196,177,32]  |
  3892  |                         j = j + 1;  |         |   701  |    160  |  1  |  157  |  [193,160,196,177,32]  |
  3893  |              resetPlaceHolder_2();  |         |   701  |    160  |  1  |  157  |  [193,160,196,177,32]  |
  3899  |                         R = R + 2;  |      2  |   703  |    160  |  1  |  157  |  [193,160,196,177,32]  |
  3903  |                         j = j + 1;  |         |   703  |    160  |  1  |  158  |  [193,160,196,177,32]  |
  3904  |              resetPlaceHolder_2();  |         |   703  |    160  |  1  |  158  |  [193,160,196,177,32]  |
  3910  |                         R = R + 2;  |      2  |   705  |    160  |  1  |  158  |  [193,160,196,177,32]  |
  3914  |                         j = j + 1;  |         |   705  |    160  |  1  |  159  |  [193,160,196,177,32]  |
  3915  |              resetPlaceHolder_2();  |         |   705  |    160  |  1  |  159  |  [193,160,196,177,32]  |
  3921  |                         R = R + 2;  |      2  |   707  |    160  |  1  |  159  |  [193,160,196,177,32]  |
  3925  |                         j = j + 1;  |         |   707  |    160  |  1  |  160  |  [193,160,196,177,32]  |
  3926  |              resetPlaceHolder_2();  |         |   707  |    160  |  1  |  160  |  [193,160,196,177,32]  |
  3932  |                         R = R + 1;  |      1  |   708  |    160  |  1  |  160  |  [193,160,196,177,32]  |
  3936  |                         i = i + 1;  |         |   708  |    160  |  2  |  160  |  [193,160,196,177,32]  |
  3937  |              resetPlaceHolder_1();  |         |   708  |    160  |  2  |  160  |  [193,160,196,177,32]  |
  3943  |      entry = arrayRead(sorted, i);  |         |   708  |    196  |  2  |  160  |  [193,160,196,177,32]  |
  3945  |                         int j = 0;  |         |   708  |    196  |  2  |    0  |  [193,160,196,177,32]  |
  3951  |                         R = R + 2;  |      2  |   710  |    196  |  2  |    0  |  [193,160,196,177,32]  |
  3955  |                         j = j + 1;  |         |   710  |    196  |  2  |    1  |  [193,160,196,177,32]  |
  3956  |              resetPlaceHolder_2();  |         |   710  |    196  |  2  |    1  |  [193,160,196,177,32]  |
  3962  |                         R = R + 2;  |      2  |   712  |    196  |  2  |    1  |  [193,160,196,177,32]  |
  3966  |                         j = j + 1;  |         |   712  |    196  |  2  |    2  |  [193,160,196,177,32]  |
  3967  |              resetPlaceHolder_2();  |         |   712  |    196  |  2  |    2  |  [193,160,196,177,32]  |
  3973  |                         R = R + 2;  |      2  |   714  |    196  |  2  |    2  |  [193,160,196,177,32]  |
  3977  |                         j = j + 1;  |         |   714  |    196  |  2  |    3  |  [193,160,196,177,32]  |
  3978  |              resetPlaceHolder_2();  |         |   714  |    196  |  2  |    3  |  [193,160,196,177,32]  |
  3984  |                         R = R + 2;  |      2  |   716  |    196  |  2  |    3  |  [193,160,196,177,32]  |
  3988  |                         j = j + 1;  |         |   716  |    196  |  2  |    4  |  [193,160,196,177,32]  |
  3989  |              resetPlaceHolder_2();  |         |   716  |    196  |  2  |    4  |  [193,160,196,177,32]  |
  3995  |                         R = R + 2;  |      2  |   718  |    196  |  2  |    4  |  [193,160,196,177,32]  |
  3999  |                         j = j + 1;  |         |   718  |    196  |  2  |    5  |  [193,160,196,177,32]  |
  4000  |              resetPlaceHolder_2();  |         |   718  |    196  |  2  |    5  |  [193,160,196,177,32]  |
  4006  |                         R = R + 2;  |      2  |   720  |    196  |  2  |    5  |  [193,160,196,177,32]  |
  4010  |                         j = j + 1;  |         |   720  |    196  |  2  |    6  |  [193,160,196,177,32]  |
  4011  |              resetPlaceHolder_2();  |         |   720  |    196  |  2  |    6  |  [193,160,196,177,32]  |
  4017  |                         R = R + 2;  |      2  |   722  |    196  |  2  |    6  |  [193,160,196,177,32]  |
  4021  |                         j = j + 1;  |         |   722  |    196  |  2  |    7  |  [193,160,196,177,32]  |
  4022  |              resetPlaceHolder_2();  |         |   722  |    196  |  2  |    7  |  [193,160,196,177,32]  |
  4028  |                         R = R + 2;  |      2  |   724  |    196  |  2  |    7  |  [193,160,196,177,32]  |
  4032  |                         j = j + 1;  |         |   724  |    196  |  2  |    8  |  [193,160,196,177,32]  |
  4033  |              resetPlaceHolder_2();  |         |   724  |    196  |  2  |    8  |  [193,160,196,177,32]  |
  4039  |                         R = R + 2;  |      2  |   726  |    196  |  2  |    8  |  [193,160,196,177,32]  |
  4043  |                         j = j + 1;  |         |   726  |    196  |  2  |    9  |  [193,160,196,177,32]  |
  4044  |              resetPlaceHolder_2();  |         |   726  |    196  |  2  |    9  |  [193,160,196,177,32]  |
  4050  |                         R = R + 2;  |      2  |   728  |    196  |  2  |    9  |  [193,160,196,177,32]  |
  4054  |                         j = j + 1;  |         |   728  |    196  |  2  |   10  |  [193,160,196,177,32]  |
  4055  |              resetPlaceHolder_2();  |         |   728  |    196  |  2  |   10  |  [193,160,196,177,32]  |
  4061  |                         R = R + 2;  |      2  |   730  |    196  |  2  |   10  |  [193,160,196,177,32]  |
  4065  |                         j = j + 1;  |         |   730  |    196  |  2  |   11  |  [193,160,196,177,32]  |
  4066  |              resetPlaceHolder_2();  |         |   730  |    196  |  2  |   11  |  [193,160,196,177,32]  |
  4072  |                         R = R + 2;  |      2  |   732  |    196  |  2  |   11  |  [193,160,196,177,32]  |
  4076  |                         j = j + 1;  |         |   732  |    196  |  2  |   12  |  [193,160,196,177,32]  |
  4077  |              resetPlaceHolder_2();  |         |   732  |    196  |  2  |   12  |  [193,160,196,177,32]  |
  4083  |                         R = R + 2;  |      2  |   734  |    196  |  2  |   12  |  [193,160,196,177,32]  |
  4087  |                         j = j + 1;  |         |   734  |    196  |  2  |   13  |  [193,160,196,177,32]  |
  4088  |              resetPlaceHolder_2();  |         |   734  |    196  |  2  |   13  |  [193,160,196,177,32]  |
  4094  |                         R = R + 2;  |      2  |   736  |    196  |  2  |   13  |  [193,160,196,177,32]  |
  4098  |                         j = j + 1;  |         |   736  |    196  |  2  |   14  |  [193,160,196,177,32]  |
  4099  |              resetPlaceHolder_2();  |         |   736  |    196  |  2  |   14  |  [193,160,196,177,32]  |
  4105  |                         R = R + 2;  |      2  |   738  |    196  |  2  |   14  |  [193,160,196,177,32]  |
  4109  |                         j = j + 1;  |         |   738  |    196  |  2  |   15  |  [193,160,196,177,32]  |
  4110  |              resetPlaceHolder_2();  |         |   738  |    196  |  2  |   15  |  [193,160,196,177,32]  |
  4116  |                         R = R + 2;  |      2  |   740  |    196  |  2  |   15  |  [193,160,196,177,32]  |
  4120  |                         j = j + 1;  |         |   740  |    196  |  2  |   16  |  [193,160,196,177,32]  |
  4121  |              resetPlaceHolder_2();  |         |   740  |    196  |  2  |   16  |  [193,160,196,177,32]  |
  4127  |                         R = R + 2;  |      2  |   742  |    196  |  2  |   16  |  [193,160,196,177,32]  |
  4131  |                         j = j + 1;  |         |   742  |    196  |  2  |   17  |  [193,160,196,177,32]  |
  4132  |              resetPlaceHolder_2();  |         |   742  |    196  |  2  |   17  |  [193,160,196,177,32]  |
  4138  |                         R = R + 2;  |      2  |   744  |    196  |  2  |   17  |  [193,160,196,177,32]  |
  4142  |                         j = j + 1;  |         |   744  |    196  |  2  |   18  |  [193,160,196,177,32]  |
  4143  |              resetPlaceHolder_2();  |         |   744  |    196  |  2  |   18  |  [193,160,196,177,32]  |
  4149  |                         R = R + 2;  |      2  |   746  |    196  |  2  |   18  |  [193,160,196,177,32]  |
  4153  |                         j = j + 1;  |         |   746  |    196  |  2  |   19  |  [193,160,196,177,32]  |
  4154  |              resetPlaceHolder_2();  |         |   746  |    196  |  2  |   19  |  [193,160,196,177,32]  |
  4160  |                         R = R + 2;  |      2  |   748  |    196  |  2  |   19  |  [193,160,196,177,32]  |
  4164  |                         j = j + 1;  |         |   748  |    196  |  2  |   20  |  [193,160,196,177,32]  |
  4165  |              resetPlaceHolder_2();  |         |   748  |    196  |  2  |   20  |  [193,160,196,177,32]  |
  4171  |                         R = R + 2;  |      2  |   750  |    196  |  2  |   20  |  [193,160,196,177,32]  |
  4175  |                         j = j + 1;  |         |   750  |    196  |  2  |   21  |  [193,160,196,177,32]  |
  4176  |              resetPlaceHolder_2();  |         |   750  |    196  |  2  |   21  |  [193,160,196,177,32]  |
  4182  |                         R = R + 2;  |      2  |   752  |    196  |  2  |   21  |  [193,160,196,177,32]  |
  4186  |                         j = j + 1;  |         |   752  |    196  |  2  |   22  |  [193,160,196,177,32]  |
  4187  |              resetPlaceHolder_2();  |         |   752  |    196  |  2  |   22  |  [193,160,196,177,32]  |
  4193  |                         R = R + 2;  |      2  |   754  |    196  |  2  |   22  |  [193,160,196,177,32]  |
  4197  |                         j = j + 1;  |         |   754  |    196  |  2  |   23  |  [193,160,196,177,32]  |
  4198  |              resetPlaceHolder_2();  |         |   754  |    196  |  2  |   23  |  [193,160,196,177,32]  |
  4204  |                         R = R + 2;  |      2  |   756  |    196  |  2  |   23  |  [193,160,196,177,32]  |
  4208  |                         j = j + 1;  |         |   756  |    196  |  2  |   24  |  [193,160,196,177,32]  |
  4209  |              resetPlaceHolder_2();  |         |   756  |    196  |  2  |   24  |  [193,160,196,177,32]  |
  4215  |                         R = R + 2;  |      2  |   758  |    196  |  2  |   24  |  [193,160,196,177,32]  |
  4219  |                         j = j + 1;  |         |   758  |    196  |  2  |   25  |  [193,160,196,177,32]  |
  4220  |              resetPlaceHolder_2();  |         |   758  |    196  |  2  |   25  |  [193,160,196,177,32]  |
  4226  |                         R = R + 2;  |      2  |   760  |    196  |  2  |   25  |  [193,160,196,177,32]  |
  4230  |                         j = j + 1;  |         |   760  |    196  |  2  |   26  |  [193,160,196,177,32]  |
  4231  |              resetPlaceHolder_2();  |         |   760  |    196  |  2  |   26  |  [193,160,196,177,32]  |
  4237  |                         R = R + 2;  |      2  |   762  |    196  |  2  |   26  |  [193,160,196,177,32]  |
  4241  |                         j = j + 1;  |         |   762  |    196  |  2  |   27  |  [193,160,196,177,32]  |
  4242  |              resetPlaceHolder_2();  |         |   762  |    196  |  2  |   27  |  [193,160,196,177,32]  |
  4248  |                         R = R + 2;  |      2  |   764  |    196  |  2  |   27  |  [193,160,196,177,32]  |
  4252  |                         j = j + 1;  |         |   764  |    196  |  2  |   28  |  [193,160,196,177,32]  |
  4253  |              resetPlaceHolder_2();  |         |   764  |    196  |  2  |   28  |  [193,160,196,177,32]  |
  4259  |                         R = R + 2;  |      2  |   766  |    196  |  2  |   28  |  [193,160,196,177,32]  |
  4263  |                         j = j + 1;  |         |   766  |    196  |  2  |   29  |  [193,160,196,177,32]  |
  4264  |              resetPlaceHolder_2();  |         |   766  |    196  |  2  |   29  |  [193,160,196,177,32]  |
  4270  |                         R = R + 2;  |      2  |   768  |    196  |  2  |   29  |  [193,160,196,177,32]  |
  4274  |                         j = j + 1;  |         |   768  |    196  |  2  |   30  |  [193,160,196,177,32]  |
  4275  |              resetPlaceHolder_2();  |         |   768  |    196  |  2  |   30  |  [193,160,196,177,32]  |
  4281  |                         R = R + 2;  |      2  |   770  |    196  |  2  |   30  |  [193,160,196,177,32]  |
  4285  |                         j = j + 1;  |         |   770  |    196  |  2  |   31  |  [193,160,196,177,32]  |
  4286  |              resetPlaceHolder_2();  |         |   770  |    196  |  2  |   31  |  [193,160,196,177,32]  |
  4292  |                         R = R + 2;  |      2  |   772  |    196  |  2  |   31  |  [193,160,196,177,32]  |
  4296  |                         j = j + 1;  |         |   772  |    196  |  2  |   32  |  [193,160,196,177,32]  |
  4297  |              resetPlaceHolder_2();  |         |   772  |    196  |  2  |   32  |  [193,160,196,177,32]  |
  4303  |                         R = R + 2;  |      2  |   774  |    196  |  2  |   32  |  [193,160,196,177,32]  |
  4307  |                         j = j + 1;  |         |   774  |    196  |  2  |   33  |  [193,160,196,177,32]  |
  4308  |              resetPlaceHolder_2();  |         |   774  |    196  |  2  |   33  |  [193,160,196,177,32]  |
  4314  |                         R = R + 2;  |      2  |   776  |    196  |  2  |   33  |  [193,160,196,177,32]  |
  4318  |                         j = j + 1;  |         |   776  |    196  |  2  |   34  |  [193,160,196,177,32]  |
  4319  |              resetPlaceHolder_2();  |         |   776  |    196  |  2  |   34  |  [193,160,196,177,32]  |
  4325  |                         R = R + 2;  |      2  |   778  |    196  |  2  |   34  |  [193,160,196,177,32]  |
  4329  |                         j = j + 1;  |         |   778  |    196  |  2  |   35  |  [193,160,196,177,32]  |
  4330  |              resetPlaceHolder_2();  |         |   778  |    196  |  2  |   35  |  [193,160,196,177,32]  |
  4336  |                         R = R + 2;  |      2  |   780  |    196  |  2  |   35  |  [193,160,196,177,32]  |
  4340  |                         j = j + 1;  |         |   780  |    196  |  2  |   36  |  [193,160,196,177,32]  |
  4341  |              resetPlaceHolder_2();  |         |   780  |    196  |  2  |   36  |  [193,160,196,177,32]  |
  4347  |                         R = R + 2;  |      2  |   782  |    196  |  2  |   36  |  [193,160,196,177,32]  |
  4351  |                         j = j + 1;  |         |   782  |    196  |  2  |   37  |  [193,160,196,177,32]  |
  4352  |              resetPlaceHolder_2();  |         |   782  |    196  |  2  |   37  |  [193,160,196,177,32]  |
  4358  |                         R = R + 2;  |      2  |   784  |    196  |  2  |   37  |  [193,160,196,177,32]  |
  4362  |                         j = j + 1;  |         |   784  |    196  |  2  |   38  |  [193,160,196,177,32]  |
  4363  |              resetPlaceHolder_2();  |         |   784  |    196  |  2  |   38  |  [193,160,196,177,32]  |
  4369  |                         R = R + 2;  |      2  |   786  |    196  |  2  |   38  |  [193,160,196,177,32]  |
  4373  |                         j = j + 1;  |         |   786  |    196  |  2  |   39  |  [193,160,196,177,32]  |
  4374  |              resetPlaceHolder_2();  |         |   786  |    196  |  2  |   39  |  [193,160,196,177,32]  |
  4380  |                         R = R + 2;  |      2  |   788  |    196  |  2  |   39  |  [193,160,196,177,32]  |
  4384  |                         j = j + 1;  |         |   788  |    196  |  2  |   40  |  [193,160,196,177,32]  |
  4385  |              resetPlaceHolder_2();  |         |   788  |    196  |  2  |   40  |  [193,160,196,177,32]  |
  4391  |                         R = R + 2;  |      2  |   790  |    196  |  2  |   40  |  [193,160,196,177,32]  |
  4395  |                         j = j + 1;  |         |   790  |    196  |  2  |   41  |  [193,160,196,177,32]  |
  4396  |              resetPlaceHolder_2();  |         |   790  |    196  |  2  |   41  |  [193,160,196,177,32]  |
  4402  |                         R = R + 2;  |      2  |   792  |    196  |  2  |   41  |  [193,160,196,177,32]  |
  4406  |                         j = j + 1;  |         |   792  |    196  |  2  |   42  |  [193,160,196,177,32]  |
  4407  |              resetPlaceHolder_2();  |         |   792  |    196  |  2  |   42  |  [193,160,196,177,32]  |
  4413  |                         R = R + 2;  |      2  |   794  |    196  |  2  |   42  |  [193,160,196,177,32]  |
  4417  |                         j = j + 1;  |         |   794  |    196  |  2  |   43  |  [193,160,196,177,32]  |
  4418  |              resetPlaceHolder_2();  |         |   794  |    196  |  2  |   43  |  [193,160,196,177,32]  |
  4424  |                         R = R + 2;  |      2  |   796  |    196  |  2  |   43  |  [193,160,196,177,32]  |
  4428  |                         j = j + 1;  |         |   796  |    196  |  2  |   44  |  [193,160,196,177,32]  |
  4429  |              resetPlaceHolder_2();  |         |   796  |    196  |  2  |   44  |  [193,160,196,177,32]  |
  4435  |                         R = R + 2;  |      2  |   798  |    196  |  2  |   44  |  [193,160,196,177,32]  |
  4439  |                         j = j + 1;  |         |   798  |    196  |  2  |   45  |  [193,160,196,177,32]  |
  4440  |              resetPlaceHolder_2();  |         |   798  |    196  |  2  |   45  |  [193,160,196,177,32]  |
  4446  |                         R = R + 2;  |      2  |   800  |    196  |  2  |   45  |  [193,160,196,177,32]  |
  4450  |                         j = j + 1;  |         |   800  |    196  |  2  |   46  |  [193,160,196,177,32]  |
  4451  |              resetPlaceHolder_2();  |         |   800  |    196  |  2  |   46  |  [193,160,196,177,32]  |
  4457  |                         R = R + 2;  |      2  |   802  |    196  |  2  |   46  |  [193,160,196,177,32]  |
  4461  |                         j = j + 1;  |         |   802  |    196  |  2  |   47  |  [193,160,196,177,32]  |
  4462  |              resetPlaceHolder_2();  |         |   802  |    196  |  2  |   47  |  [193,160,196,177,32]  |
  4468  |                         R = R + 2;  |      2  |   804  |    196  |  2  |   47  |  [193,160,196,177,32]  |
  4472  |                         j = j + 1;  |         |   804  |    196  |  2  |   48  |  [193,160,196,177,32]  |
  4473  |              resetPlaceHolder_2();  |         |   804  |    196  |  2  |   48  |  [193,160,196,177,32]  |
  4479  |                         R = R + 2;  |      2  |   806  |    196  |  2  |   48  |  [193,160,196,177,32]  |
  4483  |                         j = j + 1;  |         |   806  |    196  |  2  |   49  |  [193,160,196,177,32]  |
  4484  |              resetPlaceHolder_2();  |         |   806  |    196  |  2  |   49  |  [193,160,196,177,32]  |
  4490  |                         R = R + 2;  |      2  |   808  |    196  |  2  |   49  |  [193,160,196,177,32]  |
  4494  |                         j = j + 1;  |         |   808  |    196  |  2  |   50  |  [193,160,196,177,32]  |
  4495  |              resetPlaceHolder_2();  |         |   808  |    196  |  2  |   50  |  [193,160,196,177,32]  |
  4501  |                         R = R + 2;  |      2  |   810  |    196  |  2  |   50  |  [193,160,196,177,32]  |
  4505  |                         j = j + 1;  |         |   810  |    196  |  2  |   51  |  [193,160,196,177,32]  |
  4506  |              resetPlaceHolder_2();  |         |   810  |    196  |  2  |   51  |  [193,160,196,177,32]  |
  4512  |                         R = R + 2;  |      2  |   812  |    196  |  2  |   51  |  [193,160,196,177,32]  |
  4516  |                         j = j + 1;  |         |   812  |    196  |  2  |   52  |  [193,160,196,177,32]  |
  4517  |              resetPlaceHolder_2();  |         |   812  |    196  |  2  |   52  |  [193,160,196,177,32]  |
  4523  |                         R = R + 2;  |      2  |   814  |    196  |  2  |   52  |  [193,160,196,177,32]  |
  4527  |                         j = j + 1;  |         |   814  |    196  |  2  |   53  |  [193,160,196,177,32]  |
  4528  |              resetPlaceHolder_2();  |         |   814  |    196  |  2  |   53  |  [193,160,196,177,32]  |
  4534  |                         R = R + 2;  |      2  |   816  |    196  |  2  |   53  |  [193,160,196,177,32]  |
  4538  |                         j = j + 1;  |         |   816  |    196  |  2  |   54  |  [193,160,196,177,32]  |
  4539  |              resetPlaceHolder_2();  |         |   816  |    196  |  2  |   54  |  [193,160,196,177,32]  |
  4545  |                         R = R + 2;  |      2  |   818  |    196  |  2  |   54  |  [193,160,196,177,32]  |
  4549  |                         j = j + 1;  |         |   818  |    196  |  2  |   55  |  [193,160,196,177,32]  |
  4550  |              resetPlaceHolder_2();  |         |   818  |    196  |  2  |   55  |  [193,160,196,177,32]  |
  4556  |                         R = R + 2;  |      2  |   820  |    196  |  2  |   55  |  [193,160,196,177,32]  |
  4560  |                         j = j + 1;  |         |   820  |    196  |  2  |   56  |  [193,160,196,177,32]  |
  4561  |              resetPlaceHolder_2();  |         |   820  |    196  |  2  |   56  |  [193,160,196,177,32]  |
  4567  |                         R = R + 2;  |      2  |   822  |    196  |  2  |   56  |  [193,160,196,177,32]  |
  4571  |                         j = j + 1;  |         |   822  |    196  |  2  |   57  |  [193,160,196,177,32]  |
  4572  |              resetPlaceHolder_2();  |         |   822  |    196  |  2  |   57  |  [193,160,196,177,32]  |
  4578  |                         R = R + 2;  |      2  |   824  |    196  |  2  |   57  |  [193,160,196,177,32]  |
  4582  |                         j = j + 1;  |         |   824  |    196  |  2  |   58  |  [193,160,196,177,32]  |
  4583  |              resetPlaceHolder_2();  |         |   824  |    196  |  2  |   58  |  [193,160,196,177,32]  |
  4589  |                         R = R + 2;  |      2  |   826  |    196  |  2  |   58  |  [193,160,196,177,32]  |
  4593  |                         j = j + 1;  |         |   826  |    196  |  2  |   59  |  [193,160,196,177,32]  |
  4594  |              resetPlaceHolder_2();  |         |   826  |    196  |  2  |   59  |  [193,160,196,177,32]  |
  4600  |                         R = R + 2;  |      2  |   828  |    196  |  2  |   59  |  [193,160,196,177,32]  |
  4604  |                         j = j + 1;  |         |   828  |    196  |  2  |   60  |  [193,160,196,177,32]  |
  4605  |              resetPlaceHolder_2();  |         |   828  |    196  |  2  |   60  |  [193,160,196,177,32]  |
  4611  |                         R = R + 2;  |      2  |   830  |    196  |  2  |   60  |  [193,160,196,177,32]  |
  4615  |                         j = j + 1;  |         |   830  |    196  |  2  |   61  |  [193,160,196,177,32]  |
  4616  |              resetPlaceHolder_2();  |         |   830  |    196  |  2  |   61  |  [193,160,196,177,32]  |
  4622  |                         R = R + 2;  |      2  |   832  |    196  |  2  |   61  |  [193,160,196,177,32]  |
  4626  |                         j = j + 1;  |         |   832  |    196  |  2  |   62  |  [193,160,196,177,32]  |
  4627  |              resetPlaceHolder_2();  |         |   832  |    196  |  2  |   62  |  [193,160,196,177,32]  |
  4633  |                         R = R + 2;  |      2  |   834  |    196  |  2  |   62  |  [193,160,196,177,32]  |
  4637  |                         j = j + 1;  |         |   834  |    196  |  2  |   63  |  [193,160,196,177,32]  |
  4638  |              resetPlaceHolder_2();  |         |   834  |    196  |  2  |   63  |  [193,160,196,177,32]  |
  4644  |                         R = R + 2;  |      2  |   836  |    196  |  2  |   63  |  [193,160,196,177,32]  |
  4648  |                         j = j + 1;  |         |   836  |    196  |  2  |   64  |  [193,160,196,177,32]  |
  4649  |              resetPlaceHolder_2();  |         |   836  |    196  |  2  |   64  |  [193,160,196,177,32]  |
  4655  |                         R = R + 2;  |      2  |   838  |    196  |  2  |   64  |  [193,160,196,177,32]  |
  4659  |                         j = j + 1;  |         |   838  |    196  |  2  |   65  |  [193,160,196,177,32]  |
  4660  |              resetPlaceHolder_2();  |         |   838  |    196  |  2  |   65  |  [193,160,196,177,32]  |
  4666  |                         R = R + 2;  |      2  |   840  |    196  |  2  |   65  |  [193,160,196,177,32]  |
  4670  |                         j = j + 1;  |         |   840  |    196  |  2  |   66  |  [193,160,196,177,32]  |
  4671  |              resetPlaceHolder_2();  |         |   840  |    196  |  2  |   66  |  [193,160,196,177,32]  |
  4677  |                         R = R + 2;  |      2  |   842  |    196  |  2  |   66  |  [193,160,196,177,32]  |
  4681  |                         j = j + 1;  |         |   842  |    196  |  2  |   67  |  [193,160,196,177,32]  |
  4682  |              resetPlaceHolder_2();  |         |   842  |    196  |  2  |   67  |  [193,160,196,177,32]  |
  4688  |                         R = R + 2;  |      2  |   844  |    196  |  2  |   67  |  [193,160,196,177,32]  |
  4692  |                         j = j + 1;  |         |   844  |    196  |  2  |   68  |  [193,160,196,177,32]  |
  4693  |              resetPlaceHolder_2();  |         |   844  |    196  |  2  |   68  |  [193,160,196,177,32]  |
  4699  |                         R = R + 2;  |      2  |   846  |    196  |  2  |   68  |  [193,160,196,177,32]  |
  4703  |                         j = j + 1;  |         |   846  |    196  |  2  |   69  |  [193,160,196,177,32]  |
  4704  |              resetPlaceHolder_2();  |         |   846  |    196  |  2  |   69  |  [193,160,196,177,32]  |
  4710  |                         R = R + 2;  |      2  |   848  |    196  |  2  |   69  |  [193,160,196,177,32]  |
  4714  |                         j = j + 1;  |         |   848  |    196  |  2  |   70  |  [193,160,196,177,32]  |
  4715  |              resetPlaceHolder_2();  |         |   848  |    196  |  2  |   70  |  [193,160,196,177,32]  |
  4721  |                         R = R + 2;  |      2  |   850  |    196  |  2  |   70  |  [193,160,196,177,32]  |
  4725  |                         j = j + 1;  |         |   850  |    196  |  2  |   71  |  [193,160,196,177,32]  |
  4726  |              resetPlaceHolder_2();  |         |   850  |    196  |  2  |   71  |  [193,160,196,177,32]  |
  4732  |                         R = R + 2;  |      2  |   852  |    196  |  2  |   71  |  [193,160,196,177,32]  |
  4736  |                         j = j + 1;  |         |   852  |    196  |  2  |   72  |  [193,160,196,177,32]  |
  4737  |              resetPlaceHolder_2();  |         |   852  |    196  |  2  |   72  |  [193,160,196,177,32]  |
  4743  |                         R = R + 2;  |      2  |   854  |    196  |  2  |   72  |  [193,160,196,177,32]  |
  4747  |                         j = j + 1;  |         |   854  |    196  |  2  |   73  |  [193,160,196,177,32]  |
  4748  |              resetPlaceHolder_2();  |         |   854  |    196  |  2  |   73  |  [193,160,196,177,32]  |
  4754  |                         R = R + 2;  |      2  |   856  |    196  |  2  |   73  |  [193,160,196,177,32]  |
  4758  |                         j = j + 1;  |         |   856  |    196  |  2  |   74  |  [193,160,196,177,32]  |
  4759  |              resetPlaceHolder_2();  |         |   856  |    196  |  2  |   74  |  [193,160,196,177,32]  |
  4765  |                         R = R + 2;  |      2  |   858  |    196  |  2  |   74  |  [193,160,196,177,32]  |
  4769  |                         j = j + 1;  |         |   858  |    196  |  2  |   75  |  [193,160,196,177,32]  |
  4770  |              resetPlaceHolder_2();  |         |   858  |    196  |  2  |   75  |  [193,160,196,177,32]  |
  4776  |                         R = R + 2;  |      2  |   860  |    196  |  2  |   75  |  [193,160,196,177,32]  |
  4780  |                         j = j + 1;  |         |   860  |    196  |  2  |   76  |  [193,160,196,177,32]  |
  4781  |              resetPlaceHolder_2();  |         |   860  |    196  |  2  |   76  |  [193,160,196,177,32]  |
  4787  |                         R = R + 2;  |      2  |   862  |    196  |  2  |   76  |  [193,160,196,177,32]  |
  4791  |                         j = j + 1;  |         |   862  |    196  |  2  |   77  |  [193,160,196,177,32]  |
  4792  |              resetPlaceHolder_2();  |         |   862  |    196  |  2  |   77  |  [193,160,196,177,32]  |
  4798  |                         R = R + 2;  |      2  |   864  |    196  |  2  |   77  |  [193,160,196,177,32]  |
  4802  |                         j = j + 1;  |         |   864  |    196  |  2  |   78  |  [193,160,196,177,32]  |
  4803  |              resetPlaceHolder_2();  |         |   864  |    196  |  2  |   78  |  [193,160,196,177,32]  |
  4809  |                         R = R + 2;  |      2  |   866  |    196  |  2  |   78  |  [193,160,196,177,32]  |
  4813  |                         j = j + 1;  |         |   866  |    196  |  2  |   79  |  [193,160,196,177,32]  |
  4814  |              resetPlaceHolder_2();  |         |   866  |    196  |  2  |   79  |  [193,160,196,177,32]  |
  4820  |                         R = R + 2;  |      2  |   868  |    196  |  2  |   79  |  [193,160,196,177,32]  |
  4824  |                         j = j + 1;  |         |   868  |    196  |  2  |   80  |  [193,160,196,177,32]  |
  4825  |              resetPlaceHolder_2();  |         |   868  |    196  |  2  |   80  |  [193,160,196,177,32]  |
  4831  |                         R = R + 2;  |      2  |   870  |    196  |  2  |   80  |  [193,160,196,177,32]  |
  4835  |                         j = j + 1;  |         |   870  |    196  |  2  |   81  |  [193,160,196,177,32]  |
  4836  |              resetPlaceHolder_2();  |         |   870  |    196  |  2  |   81  |  [193,160,196,177,32]  |
  4842  |                         R = R + 2;  |      2  |   872  |    196  |  2  |   81  |  [193,160,196,177,32]  |
  4846  |                         j = j + 1;  |         |   872  |    196  |  2  |   82  |  [193,160,196,177,32]  |
  4847  |              resetPlaceHolder_2();  |         |   872  |    196  |  2  |   82  |  [193,160,196,177,32]  |
  4853  |                         R = R + 2;  |      2  |   874  |    196  |  2  |   82  |  [193,160,196,177,32]  |
  4857  |                         j = j + 1;  |         |   874  |    196  |  2  |   83  |  [193,160,196,177,32]  |
  4858  |              resetPlaceHolder_2();  |         |   874  |    196  |  2  |   83  |  [193,160,196,177,32]  |
  4864  |                         R = R + 2;  |      2  |   876  |    196  |  2  |   83  |  [193,160,196,177,32]  |
  4868  |                         j = j + 1;  |         |   876  |    196  |  2  |   84  |  [193,160,196,177,32]  |
  4869  |              resetPlaceHolder_2();  |         |   876  |    196  |  2  |   84  |  [193,160,196,177,32]  |
  4875  |                         R = R + 2;  |      2  |   878  |    196  |  2  |   84  |  [193,160,196,177,32]  |
  4879  |                         j = j + 1;  |         |   878  |    196  |  2  |   85  |  [193,160,196,177,32]  |
  4880  |              resetPlaceHolder_2();  |         |   878  |    196  |  2  |   85  |  [193,160,196,177,32]  |
  4886  |                         R = R + 2;  |      2  |   880  |    196  |  2  |   85  |  [193,160,196,177,32]  |
  4890  |                         j = j + 1;  |         |   880  |    196  |  2  |   86  |  [193,160,196,177,32]  |
  4891  |              resetPlaceHolder_2();  |         |   880  |    196  |  2  |   86  |  [193,160,196,177,32]  |
  4897  |                         R = R + 2;  |      2  |   882  |    196  |  2  |   86  |  [193,160,196,177,32]  |
  4901  |                         j = j + 1;  |         |   882  |    196  |  2  |   87  |  [193,160,196,177,32]  |
  4902  |              resetPlaceHolder_2();  |         |   882  |    196  |  2  |   87  |  [193,160,196,177,32]  |
  4908  |                         R = R + 2;  |      2  |   884  |    196  |  2  |   87  |  [193,160,196,177,32]  |
  4912  |                         j = j + 1;  |         |   884  |    196  |  2  |   88  |  [193,160,196,177,32]  |
  4913  |              resetPlaceHolder_2();  |         |   884  |    196  |  2  |   88  |  [193,160,196,177,32]  |
  4919  |                         R = R + 2;  |      2  |   886  |    196  |  2  |   88  |  [193,160,196,177,32]  |
  4923  |                         j = j + 1;  |         |   886  |    196  |  2  |   89  |  [193,160,196,177,32]  |
  4924  |              resetPlaceHolder_2();  |         |   886  |    196  |  2  |   89  |  [193,160,196,177,32]  |
  4930  |                         R = R + 2;  |      2  |   888  |    196  |  2  |   89  |  [193,160,196,177,32]  |
  4934  |                         j = j + 1;  |         |   888  |    196  |  2  |   90  |  [193,160,196,177,32]  |
  4935  |              resetPlaceHolder_2();  |         |   888  |    196  |  2  |   90  |  [193,160,196,177,32]  |
  4941  |                         R = R + 2;  |      2  |   890  |    196  |  2  |   90  |  [193,160,196,177,32]  |
  4945  |                         j = j + 1;  |         |   890  |    196  |  2  |   91  |  [193,160,196,177,32]  |
  4946  |              resetPlaceHolder_2();  |         |   890  |    196  |  2  |   91  |  [193,160,196,177,32]  |
  4952  |                         R = R + 2;  |      2  |   892  |    196  |  2  |   91  |  [193,160,196,177,32]  |
  4956  |                         j = j + 1;  |         |   892  |    196  |  2  |   92  |  [193,160,196,177,32]  |
  4957  |              resetPlaceHolder_2();  |         |   892  |    196  |  2  |   92  |  [193,160,196,177,32]  |
  4963  |                         R = R + 2;  |      2  |   894  |    196  |  2  |   92  |  [193,160,196,177,32]  |
  4967  |                         j = j + 1;  |         |   894  |    196  |  2  |   93  |  [193,160,196,177,32]  |
  4968  |              resetPlaceHolder_2();  |         |   894  |    196  |  2  |   93  |  [193,160,196,177,32]  |
  4974  |                         R = R + 2;  |      2  |   896  |    196  |  2  |   93  |  [193,160,196,177,32]  |
  4978  |                         j = j + 1;  |         |   896  |    196  |  2  |   94  |  [193,160,196,177,32]  |
  4979  |              resetPlaceHolder_2();  |         |   896  |    196  |  2  |   94  |  [193,160,196,177,32]  |
  4985  |                         R = R + 2;  |      2  |   898  |    196  |  2  |   94  |  [193,160,196,177,32]  |
  4989  |                         j = j + 1;  |         |   898  |    196  |  2  |   95  |  [193,160,196,177,32]  |
  4990  |              resetPlaceHolder_2();  |         |   898  |    196  |  2  |   95  |  [193,160,196,177,32]  |
  4996  |                         R = R + 2;  |      2  |   900  |    196  |  2  |   95  |  [193,160,196,177,32]  |
  5000  |                         j = j + 1;  |         |   900  |    196  |  2  |   96  |  [193,160,196,177,32]  |
  5001  |              resetPlaceHolder_2();  |         |   900  |    196  |  2  |   96  |  [193,160,196,177,32]  |
  5007  |                         R = R + 2;  |      2  |   902  |    196  |  2  |   96  |  [193,160,196,177,32]  |
  5011  |                         j = j + 1;  |         |   902  |    196  |  2  |   97  |  [193,160,196,177,32]  |
  5012  |              resetPlaceHolder_2();  |         |   902  |    196  |  2  |   97  |  [193,160,196,177,32]  |
  5018  |                         R = R + 2;  |      2  |   904  |    196  |  2  |   97  |  [193,160,196,177,32]  |
  5022  |                         j = j + 1;  |         |   904  |    196  |  2  |   98  |  [193,160,196,177,32]  |
  5023  |              resetPlaceHolder_2();  |         |   904  |    196  |  2  |   98  |  [193,160,196,177,32]  |
  5029  |                         R = R + 2;  |      2  |   906  |    196  |  2  |   98  |  [193,160,196,177,32]  |
  5033  |                         j = j + 1;  |         |   906  |    196  |  2  |   99  |  [193,160,196,177,32]  |
  5034  |              resetPlaceHolder_2();  |         |   906  |    196  |  2  |   99  |  [193,160,196,177,32]  |
  5040  |                         R = R + 2;  |      2  |   908  |    196  |  2  |   99  |  [193,160,196,177,32]  |
  5044  |                         j = j + 1;  |         |   908  |    196  |  2  |  100  |  [193,160,196,177,32]  |
  5045  |              resetPlaceHolder_2();  |         |   908  |    196  |  2  |  100  |  [193,160,196,177,32]  |
  5051  |                         R = R + 2;  |      2  |   910  |    196  |  2  |  100  |  [193,160,196,177,32]  |
  5055  |                         j = j + 1;  |         |   910  |    196  |  2  |  101  |  [193,160,196,177,32]  |
  5056  |              resetPlaceHolder_2();  |         |   910  |    196  |  2  |  101  |  [193,160,196,177,32]  |
  5062  |                         R = R + 2;  |      2  |   912  |    196  |  2  |  101  |  [193,160,196,177,32]  |
  5066  |                         j = j + 1;  |         |   912  |    196  |  2  |  102  |  [193,160,196,177,32]  |
  5067  |              resetPlaceHolder_2();  |         |   912  |    196  |  2  |  102  |  [193,160,196,177,32]  |
  5073  |                         R = R + 2;  |      2  |   914  |    196  |  2  |  102  |  [193,160,196,177,32]  |
  5077  |                         j = j + 1;  |         |   914  |    196  |  2  |  103  |  [193,160,196,177,32]  |
  5078  |              resetPlaceHolder_2();  |         |   914  |    196  |  2  |  103  |  [193,160,196,177,32]  |
  5084  |                         R = R + 2;  |      2  |   916  |    196  |  2  |  103  |  [193,160,196,177,32]  |
  5088  |                         j = j + 1;  |         |   916  |    196  |  2  |  104  |  [193,160,196,177,32]  |
  5089  |              resetPlaceHolder_2();  |         |   916  |    196  |  2  |  104  |  [193,160,196,177,32]  |
  5095  |                         R = R + 2;  |      2  |   918  |    196  |  2  |  104  |  [193,160,196,177,32]  |
  5099  |                         j = j + 1;  |         |   918  |    196  |  2  |  105  |  [193,160,196,177,32]  |
  5100  |              resetPlaceHolder_2();  |         |   918  |    196  |  2  |  105  |  [193,160,196,177,32]  |
  5106  |                         R = R + 2;  |      2  |   920  |    196  |  2  |  105  |  [193,160,196,177,32]  |
  5110  |                         j = j + 1;  |         |   920  |    196  |  2  |  106  |  [193,160,196,177,32]  |
  5111  |              resetPlaceHolder_2();  |         |   920  |    196  |  2  |  106  |  [193,160,196,177,32]  |
  5117  |                         R = R + 2;  |      2  |   922  |    196  |  2  |  106  |  [193,160,196,177,32]  |
  5121  |                         j = j + 1;  |         |   922  |    196  |  2  |  107  |  [193,160,196,177,32]  |
  5122  |              resetPlaceHolder_2();  |         |   922  |    196  |  2  |  107  |  [193,160,196,177,32]  |
  5128  |                         R = R + 2;  |      2  |   924  |    196  |  2  |  107  |  [193,160,196,177,32]  |
  5132  |                         j = j + 1;  |         |   924  |    196  |  2  |  108  |  [193,160,196,177,32]  |
  5133  |              resetPlaceHolder_2();  |         |   924  |    196  |  2  |  108  |  [193,160,196,177,32]  |
  5139  |                         R = R + 2;  |      2  |   926  |    196  |  2  |  108  |  [193,160,196,177,32]  |
  5143  |                         j = j + 1;  |         |   926  |    196  |  2  |  109  |  [193,160,196,177,32]  |
  5144  |              resetPlaceHolder_2();  |         |   926  |    196  |  2  |  109  |  [193,160,196,177,32]  |
  5150  |                         R = R + 2;  |      2  |   928  |    196  |  2  |  109  |  [193,160,196,177,32]  |
  5154  |                         j = j + 1;  |         |   928  |    196  |  2  |  110  |  [193,160,196,177,32]  |
  5155  |              resetPlaceHolder_2();  |         |   928  |    196  |  2  |  110  |  [193,160,196,177,32]  |
  5161  |                         R = R + 2;  |      2  |   930  |    196  |  2  |  110  |  [193,160,196,177,32]  |
  5165  |                         j = j + 1;  |         |   930  |    196  |  2  |  111  |  [193,160,196,177,32]  |
  5166  |              resetPlaceHolder_2();  |         |   930  |    196  |  2  |  111  |  [193,160,196,177,32]  |
  5172  |                         R = R + 2;  |      2  |   932  |    196  |  2  |  111  |  [193,160,196,177,32]  |
  5176  |                         j = j + 1;  |         |   932  |    196  |  2  |  112  |  [193,160,196,177,32]  |
  5177  |              resetPlaceHolder_2();  |         |   932  |    196  |  2  |  112  |  [193,160,196,177,32]  |
  5183  |                         R = R + 2;  |      2  |   934  |    196  |  2  |  112  |  [193,160,196,177,32]  |
  5187  |                         j = j + 1;  |         |   934  |    196  |  2  |  113  |  [193,160,196,177,32]  |
  5188  |              resetPlaceHolder_2();  |         |   934  |    196  |  2  |  113  |  [193,160,196,177,32]  |
  5194  |                         R = R + 2;  |      2  |   936  |    196  |  2  |  113  |  [193,160,196,177,32]  |
  5198  |                         j = j + 1;  |         |   936  |    196  |  2  |  114  |  [193,160,196,177,32]  |
  5199  |              resetPlaceHolder_2();  |         |   936  |    196  |  2  |  114  |  [193,160,196,177,32]  |
  5205  |                         R = R + 2;  |      2  |   938  |    196  |  2  |  114  |  [193,160,196,177,32]  |
  5209  |                         j = j + 1;  |         |   938  |    196  |  2  |  115  |  [193,160,196,177,32]  |
  5210  |              resetPlaceHolder_2();  |         |   938  |    196  |  2  |  115  |  [193,160,196,177,32]  |
  5216  |                         R = R + 2;  |      2  |   940  |    196  |  2  |  115  |  [193,160,196,177,32]  |
  5220  |                         j = j + 1;  |         |   940  |    196  |  2  |  116  |  [193,160,196,177,32]  |
  5221  |              resetPlaceHolder_2();  |         |   940  |    196  |  2  |  116  |  [193,160,196,177,32]  |
  5227  |                         R = R + 2;  |      2  |   942  |    196  |  2  |  116  |  [193,160,196,177,32]  |
  5231  |                         j = j + 1;  |         |   942  |    196  |  2  |  117  |  [193,160,196,177,32]  |
  5232  |              resetPlaceHolder_2();  |         |   942  |    196  |  2  |  117  |  [193,160,196,177,32]  |
  5238  |                         R = R + 2;  |      2  |   944  |    196  |  2  |  117  |  [193,160,196,177,32]  |
  5242  |                         j = j + 1;  |         |   944  |    196  |  2  |  118  |  [193,160,196,177,32]  |
  5243  |              resetPlaceHolder_2();  |         |   944  |    196  |  2  |  118  |  [193,160,196,177,32]  |
  5249  |                         R = R + 2;  |      2  |   946  |    196  |  2  |  118  |  [193,160,196,177,32]  |
  5253  |                         j = j + 1;  |         |   946  |    196  |  2  |  119  |  [193,160,196,177,32]  |
  5254  |              resetPlaceHolder_2();  |         |   946  |    196  |  2  |  119  |  [193,160,196,177,32]  |
  5260  |                         R = R + 2;  |      2  |   948  |    196  |  2  |  119  |  [193,160,196,177,32]  |
  5264  |                         j = j + 1;  |         |   948  |    196  |  2  |  120  |  [193,160,196,177,32]  |
  5265  |              resetPlaceHolder_2();  |         |   948  |    196  |  2  |  120  |  [193,160,196,177,32]  |
  5271  |                         R = R + 2;  |      2  |   950  |    196  |  2  |  120  |  [193,160,196,177,32]  |
  5275  |                         j = j + 1;  |         |   950  |    196  |  2  |  121  |  [193,160,196,177,32]  |
  5276  |              resetPlaceHolder_2();  |         |   950  |    196  |  2  |  121  |  [193,160,196,177,32]  |
  5282  |                         R = R + 2;  |      2  |   952  |    196  |  2  |  121  |  [193,160,196,177,32]  |
  5286  |                         j = j + 1;  |         |   952  |    196  |  2  |  122  |  [193,160,196,177,32]  |
  5287  |              resetPlaceHolder_2();  |         |   952  |    196  |  2  |  122  |  [193,160,196,177,32]  |
  5293  |                         R = R + 2;  |      2  |   954  |    196  |  2  |  122  |  [193,160,196,177,32]  |
  5297  |                         j = j + 1;  |         |   954  |    196  |  2  |  123  |  [193,160,196,177,32]  |
  5298  |              resetPlaceHolder_2();  |         |   954  |    196  |  2  |  123  |  [193,160,196,177,32]  |
  5304  |                         R = R + 2;  |      2  |   956  |    196  |  2  |  123  |  [193,160,196,177,32]  |
  5308  |                         j = j + 1;  |         |   956  |    196  |  2  |  124  |  [193,160,196,177,32]  |
  5309  |              resetPlaceHolder_2();  |         |   956  |    196  |  2  |  124  |  [193,160,196,177,32]  |
  5315  |                         R = R + 2;  |      2  |   958  |    196  |  2  |  124  |  [193,160,196,177,32]  |
  5319  |                         j = j + 1;  |         |   958  |    196  |  2  |  125  |  [193,160,196,177,32]  |
  5320  |              resetPlaceHolder_2();  |         |   958  |    196  |  2  |  125  |  [193,160,196,177,32]  |
  5326  |                         R = R + 2;  |      2  |   960  |    196  |  2  |  125  |  [193,160,196,177,32]  |
  5330  |                         j = j + 1;  |         |   960  |    196  |  2  |  126  |  [193,160,196,177,32]  |
  5331  |              resetPlaceHolder_2();  |         |   960  |    196  |  2  |  126  |  [193,160,196,177,32]  |
  5337  |                         R = R + 2;  |      2  |   962  |    196  |  2  |  126  |  [193,160,196,177,32]  |
  5341  |                         j = j + 1;  |         |   962  |    196  |  2  |  127  |  [193,160,196,177,32]  |
  5342  |              resetPlaceHolder_2();  |         |   962  |    196  |  2  |  127  |  [193,160,196,177,32]  |
  5348  |                         R = R + 2;  |      2  |   964  |    196  |  2  |  127  |  [193,160,196,177,32]  |
  5352  |                         j = j + 1;  |         |   964  |    196  |  2  |  128  |  [193,160,196,177,32]  |
  5353  |              resetPlaceHolder_2();  |         |   964  |    196  |  2  |  128  |  [193,160,196,177,32]  |
  5359  |                         R = R + 2;  |      2  |   966  |    196  |  2  |  128  |  [193,160,196,177,32]  |
  5363  |                         j = j + 1;  |         |   966  |    196  |  2  |  129  |  [193,160,196,177,32]  |
  5364  |              resetPlaceHolder_2();  |         |   966  |    196  |  2  |  129  |  [193,160,196,177,32]  |
  5370  |                         R = R + 2;  |      2  |   968  |    196  |  2  |  129  |  [193,160,196,177,32]  |
  5374  |                         j = j + 1;  |         |   968  |    196  |  2  |  130  |  [193,160,196,177,32]  |
  5375  |              resetPlaceHolder_2();  |         |   968  |    196  |  2  |  130  |  [193,160,196,177,32]  |
  5381  |                         R = R + 2;  |      2  |   970  |    196  |  2  |  130  |  [193,160,196,177,32]  |
  5385  |                         j = j + 1;  |         |   970  |    196  |  2  |  131  |  [193,160,196,177,32]  |
  5386  |              resetPlaceHolder_2();  |         |   970  |    196  |  2  |  131  |  [193,160,196,177,32]  |
  5392  |                         R = R + 2;  |      2  |   972  |    196  |  2  |  131  |  [193,160,196,177,32]  |
  5396  |                         j = j + 1;  |         |   972  |    196  |  2  |  132  |  [193,160,196,177,32]  |
  5397  |              resetPlaceHolder_2();  |         |   972  |    196  |  2  |  132  |  [193,160,196,177,32]  |
  5403  |                         R = R + 2;  |      2  |   974  |    196  |  2  |  132  |  [193,160,196,177,32]  |
  5407  |                         j = j + 1;  |         |   974  |    196  |  2  |  133  |  [193,160,196,177,32]  |
  5408  |              resetPlaceHolder_2();  |         |   974  |    196  |  2  |  133  |  [193,160,196,177,32]  |
  5414  |                         R = R + 2;  |      2  |   976  |    196  |  2  |  133  |  [193,160,196,177,32]  |
  5418  |                         j = j + 1;  |         |   976  |    196  |  2  |  134  |  [193,160,196,177,32]  |
  5419  |              resetPlaceHolder_2();  |         |   976  |    196  |  2  |  134  |  [193,160,196,177,32]  |
  5425  |                         R = R + 2;  |      2  |   978  |    196  |  2  |  134  |  [193,160,196,177,32]  |
  5429  |                         j = j + 1;  |         |   978  |    196  |  2  |  135  |  [193,160,196,177,32]  |
  5430  |              resetPlaceHolder_2();  |         |   978  |    196  |  2  |  135  |  [193,160,196,177,32]  |
  5436  |                         R = R + 2;  |      2  |   980  |    196  |  2  |  135  |  [193,160,196,177,32]  |
  5440  |                         j = j + 1;  |         |   980  |    196  |  2  |  136  |  [193,160,196,177,32]  |
  5441  |              resetPlaceHolder_2();  |         |   980  |    196  |  2  |  136  |  [193,160,196,177,32]  |
  5447  |                         R = R + 2;  |      2  |   982  |    196  |  2  |  136  |  [193,160,196,177,32]  |
  5451  |                         j = j + 1;  |         |   982  |    196  |  2  |  137  |  [193,160,196,177,32]  |
  5452  |              resetPlaceHolder_2();  |         |   982  |    196  |  2  |  137  |  [193,160,196,177,32]  |
  5458  |                         R = R + 2;  |      2  |   984  |    196  |  2  |  137  |  [193,160,196,177,32]  |
  5462  |                         j = j + 1;  |         |   984  |    196  |  2  |  138  |  [193,160,196,177,32]  |
  5463  |              resetPlaceHolder_2();  |         |   984  |    196  |  2  |  138  |  [193,160,196,177,32]  |
  5469  |                         R = R + 2;  |      2  |   986  |    196  |  2  |  138  |  [193,160,196,177,32]  |
  5473  |                         j = j + 1;  |         |   986  |    196  |  2  |  139  |  [193,160,196,177,32]  |
  5474  |              resetPlaceHolder_2();  |         |   986  |    196  |  2  |  139  |  [193,160,196,177,32]  |
  5480  |                         R = R + 2;  |      2  |   988  |    196  |  2  |  139  |  [193,160,196,177,32]  |
  5484  |                         j = j + 1;  |         |   988  |    196  |  2  |  140  |  [193,160,196,177,32]  |
  5485  |              resetPlaceHolder_2();  |         |   988  |    196  |  2  |  140  |  [193,160,196,177,32]  |
  5491  |                         R = R + 2;  |      2  |   990  |    196  |  2  |  140  |  [193,160,196,177,32]  |
  5495  |                         j = j + 1;  |         |   990  |    196  |  2  |  141  |  [193,160,196,177,32]  |
  5496  |              resetPlaceHolder_2();  |         |   990  |    196  |  2  |  141  |  [193,160,196,177,32]  |
  5502  |                         R = R + 2;  |      2  |   992  |    196  |  2  |  141  |  [193,160,196,177,32]  |
  5506  |                         j = j + 1;  |         |   992  |    196  |  2  |  142  |  [193,160,196,177,32]  |
  5507  |              resetPlaceHolder_2();  |         |   992  |    196  |  2  |  142  |  [193,160,196,177,32]  |
  5513  |                         R = R + 2;  |      2  |   994  |    196  |  2  |  142  |  [193,160,196,177,32]  |
  5517  |                         j = j + 1;  |         |   994  |    196  |  2  |  143  |  [193,160,196,177,32]  |
  5518  |              resetPlaceHolder_2();  |         |   994  |    196  |  2  |  143  |  [193,160,196,177,32]  |
  5524  |                         R = R + 2;  |      2  |   996  |    196  |  2  |  143  |  [193,160,196,177,32]  |
  5528  |                         j = j + 1;  |         |   996  |    196  |  2  |  144  |  [193,160,196,177,32]  |
  5529  |              resetPlaceHolder_2();  |         |   996  |    196  |  2  |  144  |  [193,160,196,177,32]  |
  5535  |                         R = R + 2;  |      2  |   998  |    196  |  2  |  144  |  [193,160,196,177,32]  |
  5539  |                         j = j + 1;  |         |   998  |    196  |  2  |  145  |  [193,160,196,177,32]  |
  5540  |              resetPlaceHolder_2();  |         |   998  |    196  |  2  |  145  |  [193,160,196,177,32]  |
  5546  |                         R = R + 2;  |      2  |  1000  |    196  |  2  |  145  |  [193,160,196,177,32]  |
  5550  |                         j = j + 1;  |         |  1000  |    196  |  2  |  146  |  [193,160,196,177,32]  |
  5551  |              resetPlaceHolder_2();  |         |  1000  |    196  |  2  |  146  |  [193,160,196,177,32]  |
  5557  |                         R = R + 2;  |      2  |  1002  |    196  |  2  |  146  |  [193,160,196,177,32]  |
  5561  |                         j = j + 1;  |         |  1002  |    196  |  2  |  147  |  [193,160,196,177,32]  |
  5562  |              resetPlaceHolder_2();  |         |  1002  |    196  |  2  |  147  |  [193,160,196,177,32]  |
  5568  |                         R = R + 2;  |      2  |  1004  |    196  |  2  |  147  |  [193,160,196,177,32]  |
  5572  |                         j = j + 1;  |         |  1004  |    196  |  2  |  148  |  [193,160,196,177,32]  |
  5573  |              resetPlaceHolder_2();  |         |  1004  |    196  |  2  |  148  |  [193,160,196,177,32]  |
  5579  |                         R = R + 2;  |      2  |  1006  |    196  |  2  |  148  |  [193,160,196,177,32]  |
  5583  |                         j = j + 1;  |         |  1006  |    196  |  2  |  149  |  [193,160,196,177,32]  |
  5584  |              resetPlaceHolder_2();  |         |  1006  |    196  |  2  |  149  |  [193,160,196,177,32]  |
  5590  |                         R = R + 2;  |      2  |  1008  |    196  |  2  |  149  |  [193,160,196,177,32]  |
  5594  |                         j = j + 1;  |         |  1008  |    196  |  2  |  150  |  [193,160,196,177,32]  |
  5595  |              resetPlaceHolder_2();  |         |  1008  |    196  |  2  |  150  |  [193,160,196,177,32]  |
  5601  |                         R = R + 2;  |      2  |  1010  |    196  |  2  |  150  |  [193,160,196,177,32]  |
  5605  |                         j = j + 1;  |         |  1010  |    196  |  2  |  151  |  [193,160,196,177,32]  |
  5606  |              resetPlaceHolder_2();  |         |  1010  |    196  |  2  |  151  |  [193,160,196,177,32]  |
  5612  |                         R = R + 2;  |      2  |  1012  |    196  |  2  |  151  |  [193,160,196,177,32]  |
  5616  |                         j = j + 1;  |         |  1012  |    196  |  2  |  152  |  [193,160,196,177,32]  |
  5617  |              resetPlaceHolder_2();  |         |  1012  |    196  |  2  |  152  |  [193,160,196,177,32]  |
  5623  |                         R = R + 2;  |      2  |  1014  |    196  |  2  |  152  |  [193,160,196,177,32]  |
  5627  |                         j = j + 1;  |         |  1014  |    196  |  2  |  153  |  [193,160,196,177,32]  |
  5628  |              resetPlaceHolder_2();  |         |  1014  |    196  |  2  |  153  |  [193,160,196,177,32]  |
  5634  |                         R = R + 2;  |      2  |  1016  |    196  |  2  |  153  |  [193,160,196,177,32]  |
  5638  |                         j = j + 1;  |         |  1016  |    196  |  2  |  154  |  [193,160,196,177,32]  |
  5639  |              resetPlaceHolder_2();  |         |  1016  |    196  |  2  |  154  |  [193,160,196,177,32]  |
  5645  |                         R = R + 2;  |      2  |  1018  |    196  |  2  |  154  |  [193,160,196,177,32]  |
  5649  |                         j = j + 1;  |         |  1018  |    196  |  2  |  155  |  [193,160,196,177,32]  |
  5650  |              resetPlaceHolder_2();  |         |  1018  |    196  |  2  |  155  |  [193,160,196,177,32]  |
  5656  |                         R = R + 2;  |      2  |  1020  |    196  |  2  |  155  |  [193,160,196,177,32]  |
  5660  |                         j = j + 1;  |         |  1020  |    196  |  2  |  156  |  [193,160,196,177,32]  |
  5661  |              resetPlaceHolder_2();  |         |  1020  |    196  |  2  |  156  |  [193,160,196,177,32]  |
  5667  |                         R = R + 2;  |      2  |  1022  |    196  |  2  |  156  |  [193,160,196,177,32]  |
  5671  |                         j = j + 1;  |         |  1022  |    196  |  2  |  157  |  [193,160,196,177,32]  |
  5672  |              resetPlaceHolder_2();  |         |  1022  |    196  |  2  |  157  |  [193,160,196,177,32]  |
  5678  |                         R = R + 2;  |      2  |  1024  |    196  |  2  |  157  |  [193,160,196,177,32]  |
  5682  |                         j = j + 1;  |         |  1024  |    196  |  2  |  158  |  [193,160,196,177,32]  |
  5683  |              resetPlaceHolder_2();  |         |  1024  |    196  |  2  |  158  |  [193,160,196,177,32]  |
  5689  |                         R = R + 2;  |      2  |  1026  |    196  |  2  |  158  |  [193,160,196,177,32]  |
  5693  |                         j = j + 1;  |         |  1026  |    196  |  2  |  159  |  [193,160,196,177,32]  |
  5694  |              resetPlaceHolder_2();  |         |  1026  |    196  |  2  |  159  |  [193,160,196,177,32]  |
  5700  |                         R = R + 2;  |      2  |  1028  |    196  |  2  |  159  |  [193,160,196,177,32]  |
  5704  |                         j = j + 1;  |         |  1028  |    196  |  2  |  160  |  [193,160,196,177,32]  |
  5705  |              resetPlaceHolder_2();  |         |  1028  |    196  |  2  |  160  |  [193,160,196,177,32]  |
  5711  |                         R = R + 2;  |      2  |  1030  |    196  |  2  |  160  |  [193,160,196,177,32]  |
  5715  |                         j = j + 1;  |         |  1030  |    196  |  2  |  161  |  [193,160,196,177,32]  |
  5716  |              resetPlaceHolder_2();  |         |  1030  |    196  |  2  |  161  |  [193,160,196,177,32]  |
  5722  |                         R = R + 2;  |      2  |  1032  |    196  |  2  |  161  |  [193,160,196,177,32]  |
  5726  |                         j = j + 1;  |         |  1032  |    196  |  2  |  162  |  [193,160,196,177,32]  |
  5727  |              resetPlaceHolder_2();  |         |  1032  |    196  |  2  |  162  |  [193,160,196,177,32]  |
  5733  |                         R = R + 2;  |      2  |  1034  |    196  |  2  |  162  |  [193,160,196,177,32]  |
  5737  |                         j = j + 1;  |         |  1034  |    196  |  2  |  163  |  [193,160,196,177,32]  |
  5738  |              resetPlaceHolder_2();  |         |  1034  |    196  |  2  |  163  |  [193,160,196,177,32]  |
  5744  |                         R = R + 2;  |      2  |  1036  |    196  |  2  |  163  |  [193,160,196,177,32]  |
  5748  |                         j = j + 1;  |         |  1036  |    196  |  2  |  164  |  [193,160,196,177,32]  |
  5749  |              resetPlaceHolder_2();  |         |  1036  |    196  |  2  |  164  |  [193,160,196,177,32]  |
  5755  |                         R = R + 2;  |      2  |  1038  |    196  |  2  |  164  |  [193,160,196,177,32]  |
  5759  |                         j = j + 1;  |         |  1038  |    196  |  2  |  165  |  [193,160,196,177,32]  |
  5760  |              resetPlaceHolder_2();  |         |  1038  |    196  |  2  |  165  |  [193,160,196,177,32]  |
  5766  |                         R = R + 2;  |      2  |  1040  |    196  |  2  |  165  |  [193,160,196,177,32]  |
  5770  |                         j = j + 1;  |         |  1040  |    196  |  2  |  166  |  [193,160,196,177,32]  |
  5771  |              resetPlaceHolder_2();  |         |  1040  |    196  |  2  |  166  |  [193,160,196,177,32]  |
  5777  |                         R = R + 2;  |      2  |  1042  |    196  |  2  |  166  |  [193,160,196,177,32]  |
  5781  |                         j = j + 1;  |         |  1042  |    196  |  2  |  167  |  [193,160,196,177,32]  |
  5782  |              resetPlaceHolder_2();  |         |  1042  |    196  |  2  |  167  |  [193,160,196,177,32]  |
  5788  |                         R = R + 2;  |      2  |  1044  |    196  |  2  |  167  |  [193,160,196,177,32]  |
  5792  |                         j = j + 1;  |         |  1044  |    196  |  2  |  168  |  [193,160,196,177,32]  |
  5793  |              resetPlaceHolder_2();  |         |  1044  |    196  |  2  |  168  |  [193,160,196,177,32]  |
  5799  |                         R = R + 2;  |      2  |  1046  |    196  |  2  |  168  |  [193,160,196,177,32]  |
  5803  |                         j = j + 1;  |         |  1046  |    196  |  2  |  169  |  [193,160,196,177,32]  |
  5804  |              resetPlaceHolder_2();  |         |  1046  |    196  |  2  |  169  |  [193,160,196,177,32]  |
  5810  |                         R = R + 2;  |      2  |  1048  |    196  |  2  |  169  |  [193,160,196,177,32]  |
  5814  |                         j = j + 1;  |         |  1048  |    196  |  2  |  170  |  [193,160,196,177,32]  |
  5815  |              resetPlaceHolder_2();  |         |  1048  |    196  |  2  |  170  |  [193,160,196,177,32]  |
  5821  |                         R = R + 2;  |      2  |  1050  |    196  |  2  |  170  |  [193,160,196,177,32]  |
  5825  |                         j = j + 1;  |         |  1050  |    196  |  2  |  171  |  [193,160,196,177,32]  |
  5826  |              resetPlaceHolder_2();  |         |  1050  |    196  |  2  |  171  |  [193,160,196,177,32]  |
  5832  |                         R = R + 2;  |      2  |  1052  |    196  |  2  |  171  |  [193,160,196,177,32]  |
  5836  |                         j = j + 1;  |         |  1052  |    196  |  2  |  172  |  [193,160,196,177,32]  |
  5837  |              resetPlaceHolder_2();  |         |  1052  |    196  |  2  |  172  |  [193,160,196,177,32]  |
  5843  |                         R = R + 2;  |      2  |  1054  |    196  |  2  |  172  |  [193,160,196,177,32]  |
  5847  |                         j = j + 1;  |         |  1054  |    196  |  2  |  173  |  [193,160,196,177,32]  |
  5848  |              resetPlaceHolder_2();  |         |  1054  |    196  |  2  |  173  |  [193,160,196,177,32]  |
  5854  |                         R = R + 2;  |      2  |  1056  |    196  |  2  |  173  |  [193,160,196,177,32]  |
  5858  |                         j = j + 1;  |         |  1056  |    196  |  2  |  174  |  [193,160,196,177,32]  |
  5859  |              resetPlaceHolder_2();  |         |  1056  |    196  |  2  |  174  |  [193,160,196,177,32]  |
  5865  |                         R = R + 2;  |      2  |  1058  |    196  |  2  |  174  |  [193,160,196,177,32]  |
  5869  |                         j = j + 1;  |         |  1058  |    196  |  2  |  175  |  [193,160,196,177,32]  |
  5870  |              resetPlaceHolder_2();  |         |  1058  |    196  |  2  |  175  |  [193,160,196,177,32]  |
  5876  |                         R = R + 2;  |      2  |  1060  |    196  |  2  |  175  |  [193,160,196,177,32]  |
  5880  |                         j = j + 1;  |         |  1060  |    196  |  2  |  176  |  [193,160,196,177,32]  |
  5881  |              resetPlaceHolder_2();  |         |  1060  |    196  |  2  |  176  |  [193,160,196,177,32]  |
  5887  |                         R = R + 2;  |      2  |  1062  |    196  |  2  |  176  |  [193,160,196,177,32]  |
  5891  |                         j = j + 1;  |         |  1062  |    196  |  2  |  177  |  [193,160,196,177,32]  |
  5892  |              resetPlaceHolder_2();  |         |  1062  |    196  |  2  |  177  |  [193,160,196,177,32]  |
  5898  |                         R = R + 2;  |      2  |  1064  |    196  |  2  |  177  |  [193,160,196,177,32]  |
  5902  |                         j = j + 1;  |         |  1064  |    196  |  2  |  178  |  [193,160,196,177,32]  |
  5903  |              resetPlaceHolder_2();  |         |  1064  |    196  |  2  |  178  |  [193,160,196,177,32]  |
  5909  |                         R = R + 2;  |      2  |  1066  |    196  |  2  |  178  |  [193,160,196,177,32]  |
  5913  |                         j = j + 1;  |         |  1066  |    196  |  2  |  179  |  [193,160,196,177,32]  |
  5914  |              resetPlaceHolder_2();  |         |  1066  |    196  |  2  |  179  |  [193,160,196,177,32]  |
  5920  |                         R = R + 2;  |      2  |  1068  |    196  |  2  |  179  |  [193,160,196,177,32]  |
  5924  |                         j = j + 1;  |         |  1068  |    196  |  2  |  180  |  [193,160,196,177,32]  |
  5925  |              resetPlaceHolder_2();  |         |  1068  |    196  |  2  |  180  |  [193,160,196,177,32]  |
  5931  |                         R = R + 2;  |      2  |  1070  |    196  |  2  |  180  |  [193,160,196,177,32]  |
  5935  |                         j = j + 1;  |         |  1070  |    196  |  2  |  181  |  [193,160,196,177,32]  |
  5936  |              resetPlaceHolder_2();  |         |  1070  |    196  |  2  |  181  |  [193,160,196,177,32]  |
  5942  |                         R = R + 2;  |      2  |  1072  |    196  |  2  |  181  |  [193,160,196,177,32]  |
  5946  |                         j = j + 1;  |         |  1072  |    196  |  2  |  182  |  [193,160,196,177,32]  |
  5947  |              resetPlaceHolder_2();  |         |  1072  |    196  |  2  |  182  |  [193,160,196,177,32]  |
  5953  |                         R = R + 2;  |      2  |  1074  |    196  |  2  |  182  |  [193,160,196,177,32]  |
  5957  |                         j = j + 1;  |         |  1074  |    196  |  2  |  183  |  [193,160,196,177,32]  |
  5958  |              resetPlaceHolder_2();  |         |  1074  |    196  |  2  |  183  |  [193,160,196,177,32]  |
  5964  |                         R = R + 2;  |      2  |  1076  |    196  |  2  |  183  |  [193,160,196,177,32]  |
  5968  |                         j = j + 1;  |         |  1076  |    196  |  2  |  184  |  [193,160,196,177,32]  |
  5969  |              resetPlaceHolder_2();  |         |  1076  |    196  |  2  |  184  |  [193,160,196,177,32]  |
  5975  |                         R = R + 2;  |      2  |  1078  |    196  |  2  |  184  |  [193,160,196,177,32]  |
  5979  |                         j = j + 1;  |         |  1078  |    196  |  2  |  185  |  [193,160,196,177,32]  |
  5980  |              resetPlaceHolder_2();  |         |  1078  |    196  |  2  |  185  |  [193,160,196,177,32]  |
  5986  |                         R = R + 2;  |      2  |  1080  |    196  |  2  |  185  |  [193,160,196,177,32]  |
  5990  |                         j = j + 1;  |         |  1080  |    196  |  2  |  186  |  [193,160,196,177,32]  |
  5991  |              resetPlaceHolder_2();  |         |  1080  |    196  |  2  |  186  |  [193,160,196,177,32]  |
  5997  |                         R = R + 2;  |      2  |  1082  |    196  |  2  |  186  |  [193,160,196,177,32]  |
  6001  |                         j = j + 1;  |         |  1082  |    196  |  2  |  187  |  [193,160,196,177,32]  |
  6002  |              resetPlaceHolder_2();  |         |  1082  |    196  |  2  |  187  |  [193,160,196,177,32]  |
  6008  |                         R = R + 2;  |      2  |  1084  |    196  |  2  |  187  |  [193,160,196,177,32]  |
  6012  |                         j = j + 1;  |         |  1084  |    196  |  2  |  188  |  [193,160,196,177,32]  |
  6013  |              resetPlaceHolder_2();  |         |  1084  |    196  |  2  |  188  |  [193,160,196,177,32]  |
  6019  |                         R = R + 2;  |      2  |  1086  |    196  |  2  |  188  |  [193,160,196,177,32]  |
  6023  |                         j = j + 1;  |         |  1086  |    196  |  2  |  189  |  [193,160,196,177,32]  |
  6024  |              resetPlaceHolder_2();  |         |  1086  |    196  |  2  |  189  |  [193,160,196,177,32]  |
  6030  |                         R = R + 2;  |      2  |  1088  |    196  |  2  |  189  |  [193,160,196,177,32]  |
  6034  |                         j = j + 1;  |         |  1088  |    196  |  2  |  190  |  [193,160,196,177,32]  |
  6035  |              resetPlaceHolder_2();  |         |  1088  |    196  |  2  |  190  |  [193,160,196,177,32]  |
  6041  |                         R = R + 2;  |      2  |  1090  |    196  |  2  |  190  |  [193,160,196,177,32]  |
  6045  |                         j = j + 1;  |         |  1090  |    196  |  2  |  191  |  [193,160,196,177,32]  |
  6046  |              resetPlaceHolder_2();  |         |  1090  |    196  |  2  |  191  |  [193,160,196,177,32]  |
  6052  |                         R = R + 2;  |      2  |  1092  |    196  |  2  |  191  |  [193,160,196,177,32]  |
  6056  |                         j = j + 1;  |         |  1092  |    196  |  2  |  192  |  [193,160,196,177,32]  |
  6057  |              resetPlaceHolder_2();  |         |  1092  |    196  |  2  |  192  |  [193,160,196,177,32]  |
  6063  |                         R = R + 2;  |      2  |  1094  |    196  |  2  |  192  |  [193,160,196,177,32]  |
  6067  |                         j = j + 1;  |         |  1094  |    196  |  2  |  193  |  [193,160,196,177,32]  |
  6068  |              resetPlaceHolder_2();  |         |  1094  |    196  |  2  |  193  |  [193,160,196,177,32]  |
  6074  |                         R = R + 2;  |      2  |  1096  |    196  |  2  |  193  |  [193,160,196,177,32]  |
  6078  |                         j = j + 1;  |         |  1096  |    196  |  2  |  194  |  [193,160,196,177,32]  |
  6079  |              resetPlaceHolder_2();  |         |  1096  |    196  |  2  |  194  |  [193,160,196,177,32]  |
  6085  |                         R = R + 2;  |      2  |  1098  |    196  |  2  |  194  |  [193,160,196,177,32]  |
  6089  |                         j = j + 1;  |         |  1098  |    196  |  2  |  195  |  [193,160,196,177,32]  |
  6090  |              resetPlaceHolder_2();  |         |  1098  |    196  |  2  |  195  |  [193,160,196,177,32]  |
  6096  |                         R = R + 2;  |      2  |  1100  |    196  |  2  |  195  |  [193,160,196,177,32]  |
  6100  |                         j = j + 1;  |         |  1100  |    196  |  2  |  196  |  [193,160,196,177,32]  |
  6101  |              resetPlaceHolder_2();  |         |  1100  |    196  |  2  |  196  |  [193,160,196,177,32]  |
  6107  |                         R = R + 1;  |      1  |  1101  |    196  |  2  |  196  |  [193,160,196,177,32]  |
  6111  |                         i = i + 1;  |         |  1101  |    196  |  3  |  196  |  [193,160,196,177,32]  |
  6112  |              resetPlaceHolder_1();  |         |  1101  |    196  |  3  |  196  |  [193,160,196,177,32]  |
  6118  |      entry = arrayRead(sorted, i);  |         |  1101  |    177  |  3  |  196  |  [193,160,196,177,32]  |
  6120  |                         int j = 0;  |         |  1101  |    177  |  3  |    0  |  [193,160,196,177,32]  |
  6126  |                         R = R + 2;  |      2  |  1103  |    177  |  3  |    0  |  [193,160,196,177,32]  |
  6130  |                         j = j + 1;  |         |  1103  |    177  |  3  |    1  |  [193,160,196,177,32]  |
  6131  |              resetPlaceHolder_2();  |         |  1103  |    177  |  3  |    1  |  [193,160,196,177,32]  |
  6137  |                         R = R + 2;  |      2  |  1105  |    177  |  3  |    1  |  [193,160,196,177,32]  |
  6141  |                         j = j + 1;  |         |  1105  |    177  |  3  |    2  |  [193,160,196,177,32]  |
  6142  |              resetPlaceHolder_2();  |         |  1105  |    177  |  3  |    2  |  [193,160,196,177,32]  |
  6148  |                         R = R + 2;  |      2  |  1107  |    177  |  3  |    2  |  [193,160,196,177,32]  |
  6152  |                         j = j + 1;  |         |  1107  |    177  |  3  |    3  |  [193,160,196,177,32]  |
  6153  |              resetPlaceHolder_2();  |         |  1107  |    177  |  3  |    3  |  [193,160,196,177,32]  |
  6159  |                         R = R + 2;  |      2  |  1109  |    177  |  3  |    3  |  [193,160,196,177,32]  |
  6163  |                         j = j + 1;  |         |  1109  |    177  |  3  |    4  |  [193,160,196,177,32]  |
  6164  |              resetPlaceHolder_2();  |         |  1109  |    177  |  3  |    4  |  [193,160,196,177,32]  |
  6170  |                         R = R + 2;  |      2  |  1111  |    177  |  3  |    4  |  [193,160,196,177,32]  |
  6174  |                         j = j + 1;  |         |  1111  |    177  |  3  |    5  |  [193,160,196,177,32]  |
  6175  |              resetPlaceHolder_2();  |         |  1111  |    177  |  3  |    5  |  [193,160,196,177,32]  |
  6181  |                         R = R + 2;  |      2  |  1113  |    177  |  3  |    5  |  [193,160,196,177,32]  |
  6185  |                         j = j + 1;  |         |  1113  |    177  |  3  |    6  |  [193,160,196,177,32]  |
  6186  |              resetPlaceHolder_2();  |         |  1113  |    177  |  3  |    6  |  [193,160,196,177,32]  |
  6192  |                         R = R + 2;  |      2  |  1115  |    177  |  3  |    6  |  [193,160,196,177,32]  |
  6196  |                         j = j + 1;  |         |  1115  |    177  |  3  |    7  |  [193,160,196,177,32]  |
  6197  |              resetPlaceHolder_2();  |         |  1115  |    177  |  3  |    7  |  [193,160,196,177,32]  |
  6203  |                         R = R + 2;  |      2  |  1117  |    177  |  3  |    7  |  [193,160,196,177,32]  |
  6207  |                         j = j + 1;  |         |  1117  |    177  |  3  |    8  |  [193,160,196,177,32]  |
  6208  |              resetPlaceHolder_2();  |         |  1117  |    177  |  3  |    8  |  [193,160,196,177,32]  |
  6214  |                         R = R + 2;  |      2  |  1119  |    177  |  3  |    8  |  [193,160,196,177,32]  |
  6218  |                         j = j + 1;  |         |  1119  |    177  |  3  |    9  |  [193,160,196,177,32]  |
  6219  |              resetPlaceHolder_2();  |         |  1119  |    177  |  3  |    9  |  [193,160,196,177,32]  |
  6225  |                         R = R + 2;  |      2  |  1121  |    177  |  3  |    9  |  [193,160,196,177,32]  |
  6229  |                         j = j + 1;  |         |  1121  |    177  |  3  |   10  |  [193,160,196,177,32]  |
  6230  |              resetPlaceHolder_2();  |         |  1121  |    177  |  3  |   10  |  [193,160,196,177,32]  |
  6236  |                         R = R + 2;  |      2  |  1123  |    177  |  3  |   10  |  [193,160,196,177,32]  |
  6240  |                         j = j + 1;  |         |  1123  |    177  |  3  |   11  |  [193,160,196,177,32]  |
  6241  |              resetPlaceHolder_2();  |         |  1123  |    177  |  3  |   11  |  [193,160,196,177,32]  |
  6247  |                         R = R + 2;  |      2  |  1125  |    177  |  3  |   11  |  [193,160,196,177,32]  |
  6251  |                         j = j + 1;  |         |  1125  |    177  |  3  |   12  |  [193,160,196,177,32]  |
  6252  |              resetPlaceHolder_2();  |         |  1125  |    177  |  3  |   12  |  [193,160,196,177,32]  |
  6258  |                         R = R + 2;  |      2  |  1127  |    177  |  3  |   12  |  [193,160,196,177,32]  |
  6262  |                         j = j + 1;  |         |  1127  |    177  |  3  |   13  |  [193,160,196,177,32]  |
  6263  |              resetPlaceHolder_2();  |         |  1127  |    177  |  3  |   13  |  [193,160,196,177,32]  |
  6269  |                         R = R + 2;  |      2  |  1129  |    177  |  3  |   13  |  [193,160,196,177,32]  |
  6273  |                         j = j + 1;  |         |  1129  |    177  |  3  |   14  |  [193,160,196,177,32]  |
  6274  |              resetPlaceHolder_2();  |         |  1129  |    177  |  3  |   14  |  [193,160,196,177,32]  |
  6280  |                         R = R + 2;  |      2  |  1131  |    177  |  3  |   14  |  [193,160,196,177,32]  |
  6284  |                         j = j + 1;  |         |  1131  |    177  |  3  |   15  |  [193,160,196,177,32]  |
  6285  |              resetPlaceHolder_2();  |         |  1131  |    177  |  3  |   15  |  [193,160,196,177,32]  |
  6291  |                         R = R + 2;  |      2  |  1133  |    177  |  3  |   15  |  [193,160,196,177,32]  |
  6295  |                         j = j + 1;  |         |  1133  |    177  |  3  |   16  |  [193,160,196,177,32]  |
  6296  |              resetPlaceHolder_2();  |         |  1133  |    177  |  3  |   16  |  [193,160,196,177,32]  |
  6302  |                         R = R + 2;  |      2  |  1135  |    177  |  3  |   16  |  [193,160,196,177,32]  |
  6306  |                         j = j + 1;  |         |  1135  |    177  |  3  |   17  |  [193,160,196,177,32]  |
  6307  |              resetPlaceHolder_2();  |         |  1135  |    177  |  3  |   17  |  [193,160,196,177,32]  |
  6313  |                         R = R + 2;  |      2  |  1137  |    177  |  3  |   17  |  [193,160,196,177,32]  |
  6317  |                         j = j + 1;  |         |  1137  |    177  |  3  |   18  |  [193,160,196,177,32]  |
  6318  |              resetPlaceHolder_2();  |         |  1137  |    177  |  3  |   18  |  [193,160,196,177,32]  |
  6324  |                         R = R + 2;  |      2  |  1139  |    177  |  3  |   18  |  [193,160,196,177,32]  |
  6328  |                         j = j + 1;  |         |  1139  |    177  |  3  |   19  |  [193,160,196,177,32]  |
  6329  |              resetPlaceHolder_2();  |         |  1139  |    177  |  3  |   19  |  [193,160,196,177,32]  |
  6335  |                         R = R + 2;  |      2  |  1141  |    177  |  3  |   19  |  [193,160,196,177,32]  |
  6339  |                         j = j + 1;  |         |  1141  |    177  |  3  |   20  |  [193,160,196,177,32]  |
  6340  |              resetPlaceHolder_2();  |         |  1141  |    177  |  3  |   20  |  [193,160,196,177,32]  |
  6346  |                         R = R + 2;  |      2  |  1143  |    177  |  3  |   20  |  [193,160,196,177,32]  |
  6350  |                         j = j + 1;  |         |  1143  |    177  |  3  |   21  |  [193,160,196,177,32]  |
  6351  |              resetPlaceHolder_2();  |         |  1143  |    177  |  3  |   21  |  [193,160,196,177,32]  |
  6357  |                         R = R + 2;  |      2  |  1145  |    177  |  3  |   21  |  [193,160,196,177,32]  |
  6361  |                         j = j + 1;  |         |  1145  |    177  |  3  |   22  |  [193,160,196,177,32]  |
  6362  |              resetPlaceHolder_2();  |         |  1145  |    177  |  3  |   22  |  [193,160,196,177,32]  |
  6368  |                         R = R + 2;  |      2  |  1147  |    177  |  3  |   22  |  [193,160,196,177,32]  |
  6372  |                         j = j + 1;  |         |  1147  |    177  |  3  |   23  |  [193,160,196,177,32]  |
  6373  |              resetPlaceHolder_2();  |         |  1147  |    177  |  3  |   23  |  [193,160,196,177,32]  |
  6379  |                         R = R + 2;  |      2  |  1149  |    177  |  3  |   23  |  [193,160,196,177,32]  |
  6383  |                         j = j + 1;  |         |  1149  |    177  |  3  |   24  |  [193,160,196,177,32]  |
  6384  |              resetPlaceHolder_2();  |         |  1149  |    177  |  3  |   24  |  [193,160,196,177,32]  |
  6390  |                         R = R + 2;  |      2  |  1151  |    177  |  3  |   24  |  [193,160,196,177,32]  |
  6394  |                         j = j + 1;  |         |  1151  |    177  |  3  |   25  |  [193,160,196,177,32]  |
  6395  |              resetPlaceHolder_2();  |         |  1151  |    177  |  3  |   25  |  [193,160,196,177,32]  |
  6401  |                         R = R + 2;  |      2  |  1153  |    177  |  3  |   25  |  [193,160,196,177,32]  |
  6405  |                         j = j + 1;  |         |  1153  |    177  |  3  |   26  |  [193,160,196,177,32]  |
  6406  |              resetPlaceHolder_2();  |         |  1153  |    177  |  3  |   26  |  [193,160,196,177,32]  |
  6412  |                         R = R + 2;  |      2  |  1155  |    177  |  3  |   26  |  [193,160,196,177,32]  |
  6416  |                         j = j + 1;  |         |  1155  |    177  |  3  |   27  |  [193,160,196,177,32]  |
  6417  |              resetPlaceHolder_2();  |         |  1155  |    177  |  3  |   27  |  [193,160,196,177,32]  |
  6423  |                         R = R + 2;  |      2  |  1157  |    177  |  3  |   27  |  [193,160,196,177,32]  |
  6427  |                         j = j + 1;  |         |  1157  |    177  |  3  |   28  |  [193,160,196,177,32]  |
  6428  |              resetPlaceHolder_2();  |         |  1157  |    177  |  3  |   28  |  [193,160,196,177,32]  |
  6434  |                         R = R + 2;  |      2  |  1159  |    177  |  3  |   28  |  [193,160,196,177,32]  |
  6438  |                         j = j + 1;  |         |  1159  |    177  |  3  |   29  |  [193,160,196,177,32]  |
  6439  |              resetPlaceHolder_2();  |         |  1159  |    177  |  3  |   29  |  [193,160,196,177,32]  |
  6445  |                         R = R + 2;  |      2  |  1161  |    177  |  3  |   29  |  [193,160,196,177,32]  |
  6449  |                         j = j + 1;  |         |  1161  |    177  |  3  |   30  |  [193,160,196,177,32]  |
  6450  |              resetPlaceHolder_2();  |         |  1161  |    177  |  3  |   30  |  [193,160,196,177,32]  |
  6456  |                         R = R + 2;  |      2  |  1163  |    177  |  3  |   30  |  [193,160,196,177,32]  |
  6460  |                         j = j + 1;  |         |  1163  |    177  |  3  |   31  |  [193,160,196,177,32]  |
  6461  |              resetPlaceHolder_2();  |         |  1163  |    177  |  3  |   31  |  [193,160,196,177,32]  |
  6467  |                         R = R + 2;  |      2  |  1165  |    177  |  3  |   31  |  [193,160,196,177,32]  |
  6471  |                         j = j + 1;  |         |  1165  |    177  |  3  |   32  |  [193,160,196,177,32]  |
  6472  |              resetPlaceHolder_2();  |         |  1165  |    177  |  3  |   32  |  [193,160,196,177,32]  |
  6478  |                         R = R + 2;  |      2  |  1167  |    177  |  3  |   32  |  [193,160,196,177,32]  |
  6482  |                         j = j + 1;  |         |  1167  |    177  |  3  |   33  |  [193,160,196,177,32]  |
  6483  |              resetPlaceHolder_2();  |         |  1167  |    177  |  3  |   33  |  [193,160,196,177,32]  |
  6489  |                         R = R + 2;  |      2  |  1169  |    177  |  3  |   33  |  [193,160,196,177,32]  |
  6493  |                         j = j + 1;  |         |  1169  |    177  |  3  |   34  |  [193,160,196,177,32]  |
  6494  |              resetPlaceHolder_2();  |         |  1169  |    177  |  3  |   34  |  [193,160,196,177,32]  |
  6500  |                         R = R + 2;  |      2  |  1171  |    177  |  3  |   34  |  [193,160,196,177,32]  |
  6504  |                         j = j + 1;  |         |  1171  |    177  |  3  |   35  |  [193,160,196,177,32]  |
  6505  |              resetPlaceHolder_2();  |         |  1171  |    177  |  3  |   35  |  [193,160,196,177,32]  |
  6511  |                         R = R + 2;  |      2  |  1173  |    177  |  3  |   35  |  [193,160,196,177,32]  |
  6515  |                         j = j + 1;  |         |  1173  |    177  |  3  |   36  |  [193,160,196,177,32]  |
  6516  |              resetPlaceHolder_2();  |         |  1173  |    177  |  3  |   36  |  [193,160,196,177,32]  |
  6522  |                         R = R + 2;  |      2  |  1175  |    177  |  3  |   36  |  [193,160,196,177,32]  |
  6526  |                         j = j + 1;  |         |  1175  |    177  |  3  |   37  |  [193,160,196,177,32]  |
  6527  |              resetPlaceHolder_2();  |         |  1175  |    177  |  3  |   37  |  [193,160,196,177,32]  |
  6533  |                         R = R + 2;  |      2  |  1177  |    177  |  3  |   37  |  [193,160,196,177,32]  |
  6537  |                         j = j + 1;  |         |  1177  |    177  |  3  |   38  |  [193,160,196,177,32]  |
  6538  |              resetPlaceHolder_2();  |         |  1177  |    177  |  3  |   38  |  [193,160,196,177,32]  |
  6544  |                         R = R + 2;  |      2  |  1179  |    177  |  3  |   38  |  [193,160,196,177,32]  |
  6548  |                         j = j + 1;  |         |  1179  |    177  |  3  |   39  |  [193,160,196,177,32]  |
  6549  |              resetPlaceHolder_2();  |         |  1179  |    177  |  3  |   39  |  [193,160,196,177,32]  |
  6555  |                         R = R + 2;  |      2  |  1181  |    177  |  3  |   39  |  [193,160,196,177,32]  |
  6559  |                         j = j + 1;  |         |  1181  |    177  |  3  |   40  |  [193,160,196,177,32]  |
  6560  |              resetPlaceHolder_2();  |         |  1181  |    177  |  3  |   40  |  [193,160,196,177,32]  |
  6566  |                         R = R + 2;  |      2  |  1183  |    177  |  3  |   40  |  [193,160,196,177,32]  |
  6570  |                         j = j + 1;  |         |  1183  |    177  |  3  |   41  |  [193,160,196,177,32]  |
  6571  |              resetPlaceHolder_2();  |         |  1183  |    177  |  3  |   41  |  [193,160,196,177,32]  |
  6577  |                         R = R + 2;  |      2  |  1185  |    177  |  3  |   41  |  [193,160,196,177,32]  |
  6581  |                         j = j + 1;  |         |  1185  |    177  |  3  |   42  |  [193,160,196,177,32]  |
  6582  |              resetPlaceHolder_2();  |         |  1185  |    177  |  3  |   42  |  [193,160,196,177,32]  |
  6588  |                         R = R + 2;  |      2  |  1187  |    177  |  3  |   42  |  [193,160,196,177,32]  |
  6592  |                         j = j + 1;  |         |  1187  |    177  |  3  |   43  |  [193,160,196,177,32]  |
  6593  |              resetPlaceHolder_2();  |         |  1187  |    177  |  3  |   43  |  [193,160,196,177,32]  |
  6599  |                         R = R + 2;  |      2  |  1189  |    177  |  3  |   43  |  [193,160,196,177,32]  |
  6603  |                         j = j + 1;  |         |  1189  |    177  |  3  |   44  |  [193,160,196,177,32]  |
  6604  |              resetPlaceHolder_2();  |         |  1189  |    177  |  3  |   44  |  [193,160,196,177,32]  |
  6610  |                         R = R + 2;  |      2  |  1191  |    177  |  3  |   44  |  [193,160,196,177,32]  |
  6614  |                         j = j + 1;  |         |  1191  |    177  |  3  |   45  |  [193,160,196,177,32]  |
  6615  |              resetPlaceHolder_2();  |         |  1191  |    177  |  3  |   45  |  [193,160,196,177,32]  |
  6621  |                         R = R + 2;  |      2  |  1193  |    177  |  3  |   45  |  [193,160,196,177,32]  |
  6625  |                         j = j + 1;  |         |  1193  |    177  |  3  |   46  |  [193,160,196,177,32]  |
  6626  |              resetPlaceHolder_2();  |         |  1193  |    177  |  3  |   46  |  [193,160,196,177,32]  |
  6632  |                         R = R + 2;  |      2  |  1195  |    177  |  3  |   46  |  [193,160,196,177,32]  |
  6636  |                         j = j + 1;  |         |  1195  |    177  |  3  |   47  |  [193,160,196,177,32]  |
  6637  |              resetPlaceHolder_2();  |         |  1195  |    177  |  3  |   47  |  [193,160,196,177,32]  |
  6643  |                         R = R + 2;  |      2  |  1197  |    177  |  3  |   47  |  [193,160,196,177,32]  |
  6647  |                         j = j + 1;  |         |  1197  |    177  |  3  |   48  |  [193,160,196,177,32]  |
  6648  |              resetPlaceHolder_2();  |         |  1197  |    177  |  3  |   48  |  [193,160,196,177,32]  |
  6654  |                         R = R + 2;  |      2  |  1199  |    177  |  3  |   48  |  [193,160,196,177,32]  |
  6658  |                         j = j + 1;  |         |  1199  |    177  |  3  |   49  |  [193,160,196,177,32]  |
  6659  |              resetPlaceHolder_2();  |         |  1199  |    177  |  3  |   49  |  [193,160,196,177,32]  |
  6665  |                         R = R + 2;  |      2  |  1201  |    177  |  3  |   49  |  [193,160,196,177,32]  |
  6669  |                         j = j + 1;  |         |  1201  |    177  |  3  |   50  |  [193,160,196,177,32]  |
  6670  |              resetPlaceHolder_2();  |         |  1201  |    177  |  3  |   50  |  [193,160,196,177,32]  |
  6676  |                         R = R + 2;  |      2  |  1203  |    177  |  3  |   50  |  [193,160,196,177,32]  |
  6680  |                         j = j + 1;  |         |  1203  |    177  |  3  |   51  |  [193,160,196,177,32]  |
  6681  |              resetPlaceHolder_2();  |         |  1203  |    177  |  3  |   51  |  [193,160,196,177,32]  |
  6687  |                         R = R + 2;  |      2  |  1205  |    177  |  3  |   51  |  [193,160,196,177,32]  |
  6691  |                         j = j + 1;  |         |  1205  |    177  |  3  |   52  |  [193,160,196,177,32]  |
  6692  |              resetPlaceHolder_2();  |         |  1205  |    177  |  3  |   52  |  [193,160,196,177,32]  |
  6698  |                         R = R + 2;  |      2  |  1207  |    177  |  3  |   52  |  [193,160,196,177,32]  |
  6702  |                         j = j + 1;  |         |  1207  |    177  |  3  |   53  |  [193,160,196,177,32]  |
  6703  |              resetPlaceHolder_2();  |         |  1207  |    177  |  3  |   53  |  [193,160,196,177,32]  |
  6709  |                         R = R + 2;  |      2  |  1209  |    177  |  3  |   53  |  [193,160,196,177,32]  |
  6713  |                         j = j + 1;  |         |  1209  |    177  |  3  |   54  |  [193,160,196,177,32]  |
  6714  |              resetPlaceHolder_2();  |         |  1209  |    177  |  3  |   54  |  [193,160,196,177,32]  |
  6720  |                         R = R + 2;  |      2  |  1211  |    177  |  3  |   54  |  [193,160,196,177,32]  |
  6724  |                         j = j + 1;  |         |  1211  |    177  |  3  |   55  |  [193,160,196,177,32]  |
  6725  |              resetPlaceHolder_2();  |         |  1211  |    177  |  3  |   55  |  [193,160,196,177,32]  |
  6731  |                         R = R + 2;  |      2  |  1213  |    177  |  3  |   55  |  [193,160,196,177,32]  |
  6735  |                         j = j + 1;  |         |  1213  |    177  |  3  |   56  |  [193,160,196,177,32]  |
  6736  |              resetPlaceHolder_2();  |         |  1213  |    177  |  3  |   56  |  [193,160,196,177,32]  |
  6742  |                         R = R + 2;  |      2  |  1215  |    177  |  3  |   56  |  [193,160,196,177,32]  |
  6746  |                         j = j + 1;  |         |  1215  |    177  |  3  |   57  |  [193,160,196,177,32]  |
  6747  |              resetPlaceHolder_2();  |         |  1215  |    177  |  3  |   57  |  [193,160,196,177,32]  |
  6753  |                         R = R + 2;  |      2  |  1217  |    177  |  3  |   57  |  [193,160,196,177,32]  |
  6757  |                         j = j + 1;  |         |  1217  |    177  |  3  |   58  |  [193,160,196,177,32]  |
  6758  |              resetPlaceHolder_2();  |         |  1217  |    177  |  3  |   58  |  [193,160,196,177,32]  |
  6764  |                         R = R + 2;  |      2  |  1219  |    177  |  3  |   58  |  [193,160,196,177,32]  |
  6768  |                         j = j + 1;  |         |  1219  |    177  |  3  |   59  |  [193,160,196,177,32]  |
  6769  |              resetPlaceHolder_2();  |         |  1219  |    177  |  3  |   59  |  [193,160,196,177,32]  |
  6775  |                         R = R + 2;  |      2  |  1221  |    177  |  3  |   59  |  [193,160,196,177,32]  |
  6779  |                         j = j + 1;  |         |  1221  |    177  |  3  |   60  |  [193,160,196,177,32]  |
  6780  |              resetPlaceHolder_2();  |         |  1221  |    177  |  3  |   60  |  [193,160,196,177,32]  |
  6786  |                         R = R + 2;  |      2  |  1223  |    177  |  3  |   60  |  [193,160,196,177,32]  |
  6790  |                         j = j + 1;  |         |  1223  |    177  |  3  |   61  |  [193,160,196,177,32]  |
  6791  |              resetPlaceHolder_2();  |         |  1223  |    177  |  3  |   61  |  [193,160,196,177,32]  |
  6797  |                         R = R + 2;  |      2  |  1225  |    177  |  3  |   61  |  [193,160,196,177,32]  |
  6801  |                         j = j + 1;  |         |  1225  |    177  |  3  |   62  |  [193,160,196,177,32]  |
  6802  |              resetPlaceHolder_2();  |         |  1225  |    177  |  3  |   62  |  [193,160,196,177,32]  |
  6808  |                         R = R + 2;  |      2  |  1227  |    177  |  3  |   62  |  [193,160,196,177,32]  |
  6812  |                         j = j + 1;  |         |  1227  |    177  |  3  |   63  |  [193,160,196,177,32]  |
  6813  |              resetPlaceHolder_2();  |         |  1227  |    177  |  3  |   63  |  [193,160,196,177,32]  |
  6819  |                         R = R + 2;  |      2  |  1229  |    177  |  3  |   63  |  [193,160,196,177,32]  |
  6823  |                         j = j + 1;  |         |  1229  |    177  |  3  |   64  |  [193,160,196,177,32]  |
  6824  |              resetPlaceHolder_2();  |         |  1229  |    177  |  3  |   64  |  [193,160,196,177,32]  |
  6830  |                         R = R + 2;  |      2  |  1231  |    177  |  3  |   64  |  [193,160,196,177,32]  |
  6834  |                         j = j + 1;  |         |  1231  |    177  |  3  |   65  |  [193,160,196,177,32]  |
  6835  |              resetPlaceHolder_2();  |         |  1231  |    177  |  3  |   65  |  [193,160,196,177,32]  |
  6841  |                         R = R + 2;  |      2  |  1233  |    177  |  3  |   65  |  [193,160,196,177,32]  |
  6845  |                         j = j + 1;  |         |  1233  |    177  |  3  |   66  |  [193,160,196,177,32]  |
  6846  |              resetPlaceHolder_2();  |         |  1233  |    177  |  3  |   66  |  [193,160,196,177,32]  |
  6852  |                         R = R + 2;  |      2  |  1235  |    177  |  3  |   66  |  [193,160,196,177,32]  |
  6856  |                         j = j + 1;  |         |  1235  |    177  |  3  |   67  |  [193,160,196,177,32]  |
  6857  |              resetPlaceHolder_2();  |         |  1235  |    177  |  3  |   67  |  [193,160,196,177,32]  |
  6863  |                         R = R + 2;  |      2  |  1237  |    177  |  3  |   67  |  [193,160,196,177,32]  |
  6867  |                         j = j + 1;  |         |  1237  |    177  |  3  |   68  |  [193,160,196,177,32]  |
  6868  |              resetPlaceHolder_2();  |         |  1237  |    177  |  3  |   68  |  [193,160,196,177,32]  |
  6874  |                         R = R + 2;  |      2  |  1239  |    177  |  3  |   68  |  [193,160,196,177,32]  |
  6878  |                         j = j + 1;  |         |  1239  |    177  |  3  |   69  |  [193,160,196,177,32]  |
  6879  |              resetPlaceHolder_2();  |         |  1239  |    177  |  3  |   69  |  [193,160,196,177,32]  |
  6885  |                         R = R + 2;  |      2  |  1241  |    177  |  3  |   69  |  [193,160,196,177,32]  |
  6889  |                         j = j + 1;  |         |  1241  |    177  |  3  |   70  |  [193,160,196,177,32]  |
  6890  |              resetPlaceHolder_2();  |         |  1241  |    177  |  3  |   70  |  [193,160,196,177,32]  |
  6896  |                         R = R + 2;  |      2  |  1243  |    177  |  3  |   70  |  [193,160,196,177,32]  |
  6900  |                         j = j + 1;  |         |  1243  |    177  |  3  |   71  |  [193,160,196,177,32]  |
  6901  |              resetPlaceHolder_2();  |         |  1243  |    177  |  3  |   71  |  [193,160,196,177,32]  |
  6907  |                         R = R + 2;  |      2  |  1245  |    177  |  3  |   71  |  [193,160,196,177,32]  |
  6911  |                         j = j + 1;  |         |  1245  |    177  |  3  |   72  |  [193,160,196,177,32]  |
  6912  |              resetPlaceHolder_2();  |         |  1245  |    177  |  3  |   72  |  [193,160,196,177,32]  |
  6918  |                         R = R + 2;  |      2  |  1247  |    177  |  3  |   72  |  [193,160,196,177,32]  |
  6922  |                         j = j + 1;  |         |  1247  |    177  |  3  |   73  |  [193,160,196,177,32]  |
  6923  |              resetPlaceHolder_2();  |         |  1247  |    177  |  3  |   73  |  [193,160,196,177,32]  |
  6929  |                         R = R + 2;  |      2  |  1249  |    177  |  3  |   73  |  [193,160,196,177,32]  |
  6933  |                         j = j + 1;  |         |  1249  |    177  |  3  |   74  |  [193,160,196,177,32]  |
  6934  |              resetPlaceHolder_2();  |         |  1249  |    177  |  3  |   74  |  [193,160,196,177,32]  |
  6940  |                         R = R + 2;  |      2  |  1251  |    177  |  3  |   74  |  [193,160,196,177,32]  |
  6944  |                         j = j + 1;  |         |  1251  |    177  |  3  |   75  |  [193,160,196,177,32]  |
  6945  |              resetPlaceHolder_2();  |         |  1251  |    177  |  3  |   75  |  [193,160,196,177,32]  |
  6951  |                         R = R + 2;  |      2  |  1253  |    177  |  3  |   75  |  [193,160,196,177,32]  |
  6955  |                         j = j + 1;  |         |  1253  |    177  |  3  |   76  |  [193,160,196,177,32]  |
  6956  |              resetPlaceHolder_2();  |         |  1253  |    177  |  3  |   76  |  [193,160,196,177,32]  |
  6962  |                         R = R + 2;  |      2  |  1255  |    177  |  3  |   76  |  [193,160,196,177,32]  |
  6966  |                         j = j + 1;  |         |  1255  |    177  |  3  |   77  |  [193,160,196,177,32]  |
  6967  |              resetPlaceHolder_2();  |         |  1255  |    177  |  3  |   77  |  [193,160,196,177,32]  |
  6973  |                         R = R + 2;  |      2  |  1257  |    177  |  3  |   77  |  [193,160,196,177,32]  |
  6977  |                         j = j + 1;  |         |  1257  |    177  |  3  |   78  |  [193,160,196,177,32]  |
  6978  |              resetPlaceHolder_2();  |         |  1257  |    177  |  3  |   78  |  [193,160,196,177,32]  |
  6984  |                         R = R + 2;  |      2  |  1259  |    177  |  3  |   78  |  [193,160,196,177,32]  |
  6988  |                         j = j + 1;  |         |  1259  |    177  |  3  |   79  |  [193,160,196,177,32]  |
  6989  |              resetPlaceHolder_2();  |         |  1259  |    177  |  3  |   79  |  [193,160,196,177,32]  |
  6995  |                         R = R + 2;  |      2  |  1261  |    177  |  3  |   79  |  [193,160,196,177,32]  |
  6999  |                         j = j + 1;  |         |  1261  |    177  |  3  |   80  |  [193,160,196,177,32]  |
  7000  |              resetPlaceHolder_2();  |         |  1261  |    177  |  3  |   80  |  [193,160,196,177,32]  |
  7006  |                         R = R + 2;  |      2  |  1263  |    177  |  3  |   80  |  [193,160,196,177,32]  |
  7010  |                         j = j + 1;  |         |  1263  |    177  |  3  |   81  |  [193,160,196,177,32]  |
  7011  |              resetPlaceHolder_2();  |         |  1263  |    177  |  3  |   81  |  [193,160,196,177,32]  |
  7017  |                         R = R + 2;  |      2  |  1265  |    177  |  3  |   81  |  [193,160,196,177,32]  |
  7021  |                         j = j + 1;  |         |  1265  |    177  |  3  |   82  |  [193,160,196,177,32]  |
  7022  |              resetPlaceHolder_2();  |         |  1265  |    177  |  3  |   82  |  [193,160,196,177,32]  |
  7028  |                         R = R + 2;  |      2  |  1267  |    177  |  3  |   82  |  [193,160,196,177,32]  |
  7032  |                         j = j + 1;  |         |  1267  |    177  |  3  |   83  |  [193,160,196,177,32]  |
  7033  |              resetPlaceHolder_2();  |         |  1267  |    177  |  3  |   83  |  [193,160,196,177,32]  |
  7039  |                         R = R + 2;  |      2  |  1269  |    177  |  3  |   83  |  [193,160,196,177,32]  |
  7043  |                         j = j + 1;  |         |  1269  |    177  |  3  |   84  |  [193,160,196,177,32]  |
  7044  |              resetPlaceHolder_2();  |         |  1269  |    177  |  3  |   84  |  [193,160,196,177,32]  |
  7050  |                         R = R + 2;  |      2  |  1271  |    177  |  3  |   84  |  [193,160,196,177,32]  |
  7054  |                         j = j + 1;  |         |  1271  |    177  |  3  |   85  |  [193,160,196,177,32]  |
  7055  |              resetPlaceHolder_2();  |         |  1271  |    177  |  3  |   85  |  [193,160,196,177,32]  |
  7061  |                         R = R + 2;  |      2  |  1273  |    177  |  3  |   85  |  [193,160,196,177,32]  |
  7065  |                         j = j + 1;  |         |  1273  |    177  |  3  |   86  |  [193,160,196,177,32]  |
  7066  |              resetPlaceHolder_2();  |         |  1273  |    177  |  3  |   86  |  [193,160,196,177,32]  |
  7072  |                         R = R + 2;  |      2  |  1275  |    177  |  3  |   86  |  [193,160,196,177,32]  |
  7076  |                         j = j + 1;  |         |  1275  |    177  |  3  |   87  |  [193,160,196,177,32]  |
  7077  |              resetPlaceHolder_2();  |         |  1275  |    177  |  3  |   87  |  [193,160,196,177,32]  |
  7083  |                         R = R + 2;  |      2  |  1277  |    177  |  3  |   87  |  [193,160,196,177,32]  |
  7087  |                         j = j + 1;  |         |  1277  |    177  |  3  |   88  |  [193,160,196,177,32]  |
  7088  |              resetPlaceHolder_2();  |         |  1277  |    177  |  3  |   88  |  [193,160,196,177,32]  |
  7094  |                         R = R + 2;  |      2  |  1279  |    177  |  3  |   88  |  [193,160,196,177,32]  |
  7098  |                         j = j + 1;  |         |  1279  |    177  |  3  |   89  |  [193,160,196,177,32]  |
  7099  |              resetPlaceHolder_2();  |         |  1279  |    177  |  3  |   89  |  [193,160,196,177,32]  |
  7105  |                         R = R + 2;  |      2  |  1281  |    177  |  3  |   89  |  [193,160,196,177,32]  |
  7109  |                         j = j + 1;  |         |  1281  |    177  |  3  |   90  |  [193,160,196,177,32]  |
  7110  |              resetPlaceHolder_2();  |         |  1281  |    177  |  3  |   90  |  [193,160,196,177,32]  |
  7116  |                         R = R + 2;  |      2  |  1283  |    177  |  3  |   90  |  [193,160,196,177,32]  |
  7120  |                         j = j + 1;  |         |  1283  |    177  |  3  |   91  |  [193,160,196,177,32]  |
  7121  |              resetPlaceHolder_2();  |         |  1283  |    177  |  3  |   91  |  [193,160,196,177,32]  |
  7127  |                         R = R + 2;  |      2  |  1285  |    177  |  3  |   91  |  [193,160,196,177,32]  |
  7131  |                         j = j + 1;  |         |  1285  |    177  |  3  |   92  |  [193,160,196,177,32]  |
  7132  |              resetPlaceHolder_2();  |         |  1285  |    177  |  3  |   92  |  [193,160,196,177,32]  |
  7138  |                         R = R + 2;  |      2  |  1287  |    177  |  3  |   92  |  [193,160,196,177,32]  |
  7142  |                         j = j + 1;  |         |  1287  |    177  |  3  |   93  |  [193,160,196,177,32]  |
  7143  |              resetPlaceHolder_2();  |         |  1287  |    177  |  3  |   93  |  [193,160,196,177,32]  |
  7149  |                         R = R + 2;  |      2  |  1289  |    177  |  3  |   93  |  [193,160,196,177,32]  |
  7153  |                         j = j + 1;  |         |  1289  |    177  |  3  |   94  |  [193,160,196,177,32]  |
  7154  |              resetPlaceHolder_2();  |         |  1289  |    177  |  3  |   94  |  [193,160,196,177,32]  |
  7160  |                         R = R + 2;  |      2  |  1291  |    177  |  3  |   94  |  [193,160,196,177,32]  |
  7164  |                         j = j + 1;  |         |  1291  |    177  |  3  |   95  |  [193,160,196,177,32]  |
  7165  |              resetPlaceHolder_2();  |         |  1291  |    177  |  3  |   95  |  [193,160,196,177,32]  |
  7171  |                         R = R + 2;  |      2  |  1293  |    177  |  3  |   95  |  [193,160,196,177,32]  |
  7175  |                         j = j + 1;  |         |  1293  |    177  |  3  |   96  |  [193,160,196,177,32]  |
  7176  |              resetPlaceHolder_2();  |         |  1293  |    177  |  3  |   96  |  [193,160,196,177,32]  |
  7182  |                         R = R + 2;  |      2  |  1295  |    177  |  3  |   96  |  [193,160,196,177,32]  |
  7186  |                         j = j + 1;  |         |  1295  |    177  |  3  |   97  |  [193,160,196,177,32]  |
  7187  |              resetPlaceHolder_2();  |         |  1295  |    177  |  3  |   97  |  [193,160,196,177,32]  |
  7193  |                         R = R + 2;  |      2  |  1297  |    177  |  3  |   97  |  [193,160,196,177,32]  |
  7197  |                         j = j + 1;  |         |  1297  |    177  |  3  |   98  |  [193,160,196,177,32]  |
  7198  |              resetPlaceHolder_2();  |         |  1297  |    177  |  3  |   98  |  [193,160,196,177,32]  |
  7204  |                         R = R + 2;  |      2  |  1299  |    177  |  3  |   98  |  [193,160,196,177,32]  |
  7208  |                         j = j + 1;  |         |  1299  |    177  |  3  |   99  |  [193,160,196,177,32]  |
  7209  |              resetPlaceHolder_2();  |         |  1299  |    177  |  3  |   99  |  [193,160,196,177,32]  |
  7215  |                         R = R + 2;  |      2  |  1301  |    177  |  3  |   99  |  [193,160,196,177,32]  |
  7219  |                         j = j + 1;  |         |  1301  |    177  |  3  |  100  |  [193,160,196,177,32]  |
  7220  |              resetPlaceHolder_2();  |         |  1301  |    177  |  3  |  100  |  [193,160,196,177,32]  |
  7226  |                         R = R + 2;  |      2  |  1303  |    177  |  3  |  100  |  [193,160,196,177,32]  |
  7230  |                         j = j + 1;  |         |  1303  |    177  |  3  |  101  |  [193,160,196,177,32]  |
  7231  |              resetPlaceHolder_2();  |         |  1303  |    177  |  3  |  101  |  [193,160,196,177,32]  |
  7237  |                         R = R + 2;  |      2  |  1305  |    177  |  3  |  101  |  [193,160,196,177,32]  |
  7241  |                         j = j + 1;  |         |  1305  |    177  |  3  |  102  |  [193,160,196,177,32]  |
  7242  |              resetPlaceHolder_2();  |         |  1305  |    177  |  3  |  102  |  [193,160,196,177,32]  |
  7248  |                         R = R + 2;  |      2  |  1307  |    177  |  3  |  102  |  [193,160,196,177,32]  |
  7252  |                         j = j + 1;  |         |  1307  |    177  |  3  |  103  |  [193,160,196,177,32]  |
  7253  |              resetPlaceHolder_2();  |         |  1307  |    177  |  3  |  103  |  [193,160,196,177,32]  |
  7259  |                         R = R + 2;  |      2  |  1309  |    177  |  3  |  103  |  [193,160,196,177,32]  |
  7263  |                         j = j + 1;  |         |  1309  |    177  |  3  |  104  |  [193,160,196,177,32]  |
  7264  |              resetPlaceHolder_2();  |         |  1309  |    177  |  3  |  104  |  [193,160,196,177,32]  |
  7270  |                         R = R + 2;  |      2  |  1311  |    177  |  3  |  104  |  [193,160,196,177,32]  |
  7274  |                         j = j + 1;  |         |  1311  |    177  |  3  |  105  |  [193,160,196,177,32]  |
  7275  |              resetPlaceHolder_2();  |         |  1311  |    177  |  3  |  105  |  [193,160,196,177,32]  |
  7281  |                         R = R + 2;  |      2  |  1313  |    177  |  3  |  105  |  [193,160,196,177,32]  |
  7285  |                         j = j + 1;  |         |  1313  |    177  |  3  |  106  |  [193,160,196,177,32]  |
  7286  |              resetPlaceHolder_2();  |         |  1313  |    177  |  3  |  106  |  [193,160,196,177,32]  |
  7292  |                         R = R + 2;  |      2  |  1315  |    177  |  3  |  106  |  [193,160,196,177,32]  |
  7296  |                         j = j + 1;  |         |  1315  |    177  |  3  |  107  |  [193,160,196,177,32]  |
  7297  |              resetPlaceHolder_2();  |         |  1315  |    177  |  3  |  107  |  [193,160,196,177,32]  |
  7303  |                         R = R + 2;  |      2  |  1317  |    177  |  3  |  107  |  [193,160,196,177,32]  |
  7307  |                         j = j + 1;  |         |  1317  |    177  |  3  |  108  |  [193,160,196,177,32]  |
  7308  |              resetPlaceHolder_2();  |         |  1317  |    177  |  3  |  108  |  [193,160,196,177,32]  |
  7314  |                         R = R + 2;  |      2  |  1319  |    177  |  3  |  108  |  [193,160,196,177,32]  |
  7318  |                         j = j + 1;  |         |  1319  |    177  |  3  |  109  |  [193,160,196,177,32]  |
  7319  |              resetPlaceHolder_2();  |         |  1319  |    177  |  3  |  109  |  [193,160,196,177,32]  |
  7325  |                         R = R + 2;  |      2  |  1321  |    177  |  3  |  109  |  [193,160,196,177,32]  |
  7329  |                         j = j + 1;  |         |  1321  |    177  |  3  |  110  |  [193,160,196,177,32]  |
  7330  |              resetPlaceHolder_2();  |         |  1321  |    177  |  3  |  110  |  [193,160,196,177,32]  |
  7336  |                         R = R + 2;  |      2  |  1323  |    177  |  3  |  110  |  [193,160,196,177,32]  |
  7340  |                         j = j + 1;  |         |  1323  |    177  |  3  |  111  |  [193,160,196,177,32]  |
  7341  |              resetPlaceHolder_2();  |         |  1323  |    177  |  3  |  111  |  [193,160,196,177,32]  |
  7347  |                         R = R + 2;  |      2  |  1325  |    177  |  3  |  111  |  [193,160,196,177,32]  |
  7351  |                         j = j + 1;  |         |  1325  |    177  |  3  |  112  |  [193,160,196,177,32]  |
  7352  |              resetPlaceHolder_2();  |         |  1325  |    177  |  3  |  112  |  [193,160,196,177,32]  |
  7358  |                         R = R + 2;  |      2  |  1327  |    177  |  3  |  112  |  [193,160,196,177,32]  |
  7362  |                         j = j + 1;  |         |  1327  |    177  |  3  |  113  |  [193,160,196,177,32]  |
  7363  |              resetPlaceHolder_2();  |         |  1327  |    177  |  3  |  113  |  [193,160,196,177,32]  |
  7369  |                         R = R + 2;  |      2  |  1329  |    177  |  3  |  113  |  [193,160,196,177,32]  |
  7373  |                         j = j + 1;  |         |  1329  |    177  |  3  |  114  |  [193,160,196,177,32]  |
  7374  |              resetPlaceHolder_2();  |         |  1329  |    177  |  3  |  114  |  [193,160,196,177,32]  |
  7380  |                         R = R + 2;  |      2  |  1331  |    177  |  3  |  114  |  [193,160,196,177,32]  |
  7384  |                         j = j + 1;  |         |  1331  |    177  |  3  |  115  |  [193,160,196,177,32]  |
  7385  |              resetPlaceHolder_2();  |         |  1331  |    177  |  3  |  115  |  [193,160,196,177,32]  |
  7391  |                         R = R + 2;  |      2  |  1333  |    177  |  3  |  115  |  [193,160,196,177,32]  |
  7395  |                         j = j + 1;  |         |  1333  |    177  |  3  |  116  |  [193,160,196,177,32]  |
  7396  |              resetPlaceHolder_2();  |         |  1333  |    177  |  3  |  116  |  [193,160,196,177,32]  |
  7402  |                         R = R + 2;  |      2  |  1335  |    177  |  3  |  116  |  [193,160,196,177,32]  |
  7406  |                         j = j + 1;  |         |  1335  |    177  |  3  |  117  |  [193,160,196,177,32]  |
  7407  |              resetPlaceHolder_2();  |         |  1335  |    177  |  3  |  117  |  [193,160,196,177,32]  |
  7413  |                         R = R + 2;  |      2  |  1337  |    177  |  3  |  117  |  [193,160,196,177,32]  |
  7417  |                         j = j + 1;  |         |  1337  |    177  |  3  |  118  |  [193,160,196,177,32]  |
  7418  |              resetPlaceHolder_2();  |         |  1337  |    177  |  3  |  118  |  [193,160,196,177,32]  |
  7424  |                         R = R + 2;  |      2  |  1339  |    177  |  3  |  118  |  [193,160,196,177,32]  |
  7428  |                         j = j + 1;  |         |  1339  |    177  |  3  |  119  |  [193,160,196,177,32]  |
  7429  |              resetPlaceHolder_2();  |         |  1339  |    177  |  3  |  119  |  [193,160,196,177,32]  |
  7435  |                         R = R + 2;  |      2  |  1341  |    177  |  3  |  119  |  [193,160,196,177,32]  |
  7439  |                         j = j + 1;  |         |  1341  |    177  |  3  |  120  |  [193,160,196,177,32]  |
  7440  |              resetPlaceHolder_2();  |         |  1341  |    177  |  3  |  120  |  [193,160,196,177,32]  |
  7446  |                         R = R + 2;  |      2  |  1343  |    177  |  3  |  120  |  [193,160,196,177,32]  |
  7450  |                         j = j + 1;  |         |  1343  |    177  |  3  |  121  |  [193,160,196,177,32]  |
  7451  |              resetPlaceHolder_2();  |         |  1343  |    177  |  3  |  121  |  [193,160,196,177,32]  |
  7457  |                         R = R + 2;  |      2  |  1345  |    177  |  3  |  121  |  [193,160,196,177,32]  |
  7461  |                         j = j + 1;  |         |  1345  |    177  |  3  |  122  |  [193,160,196,177,32]  |
  7462  |              resetPlaceHolder_2();  |         |  1345  |    177  |  3  |  122  |  [193,160,196,177,32]  |
  7468  |                         R = R + 2;  |      2  |  1347  |    177  |  3  |  122  |  [193,160,196,177,32]  |
  7472  |                         j = j + 1;  |         |  1347  |    177  |  3  |  123  |  [193,160,196,177,32]  |
  7473  |              resetPlaceHolder_2();  |         |  1347  |    177  |  3  |  123  |  [193,160,196,177,32]  |
  7479  |                         R = R + 2;  |      2  |  1349  |    177  |  3  |  123  |  [193,160,196,177,32]  |
  7483  |                         j = j + 1;  |         |  1349  |    177  |  3  |  124  |  [193,160,196,177,32]  |
  7484  |              resetPlaceHolder_2();  |         |  1349  |    177  |  3  |  124  |  [193,160,196,177,32]  |
  7490  |                         R = R + 2;  |      2  |  1351  |    177  |  3  |  124  |  [193,160,196,177,32]  |
  7494  |                         j = j + 1;  |         |  1351  |    177  |  3  |  125  |  [193,160,196,177,32]  |
  7495  |              resetPlaceHolder_2();  |         |  1351  |    177  |  3  |  125  |  [193,160,196,177,32]  |
  7501  |                         R = R + 2;  |      2  |  1353  |    177  |  3  |  125  |  [193,160,196,177,32]  |
  7505  |                         j = j + 1;  |         |  1353  |    177  |  3  |  126  |  [193,160,196,177,32]  |
  7506  |              resetPlaceHolder_2();  |         |  1353  |    177  |  3  |  126  |  [193,160,196,177,32]  |
  7512  |                         R = R + 2;  |      2  |  1355  |    177  |  3  |  126  |  [193,160,196,177,32]  |
  7516  |                         j = j + 1;  |         |  1355  |    177  |  3  |  127  |  [193,160,196,177,32]  |
  7517  |              resetPlaceHolder_2();  |         |  1355  |    177  |  3  |  127  |  [193,160,196,177,32]  |
  7523  |                         R = R + 2;  |      2  |  1357  |    177  |  3  |  127  |  [193,160,196,177,32]  |
  7527  |                         j = j + 1;  |         |  1357  |    177  |  3  |  128  |  [193,160,196,177,32]  |
  7528  |              resetPlaceHolder_2();  |         |  1357  |    177  |  3  |  128  |  [193,160,196,177,32]  |
  7534  |                         R = R + 2;  |      2  |  1359  |    177  |  3  |  128  |  [193,160,196,177,32]  |
  7538  |                         j = j + 1;  |         |  1359  |    177  |  3  |  129  |  [193,160,196,177,32]  |
  7539  |              resetPlaceHolder_2();  |         |  1359  |    177  |  3  |  129  |  [193,160,196,177,32]  |
  7545  |                         R = R + 2;  |      2  |  1361  |    177  |  3  |  129  |  [193,160,196,177,32]  |
  7549  |                         j = j + 1;  |         |  1361  |    177  |  3  |  130  |  [193,160,196,177,32]  |
  7550  |              resetPlaceHolder_2();  |         |  1361  |    177  |  3  |  130  |  [193,160,196,177,32]  |
  7556  |                         R = R + 2;  |      2  |  1363  |    177  |  3  |  130  |  [193,160,196,177,32]  |
  7560  |                         j = j + 1;  |         |  1363  |    177  |  3  |  131  |  [193,160,196,177,32]  |
  7561  |              resetPlaceHolder_2();  |         |  1363  |    177  |  3  |  131  |  [193,160,196,177,32]  |
  7567  |                         R = R + 2;  |      2  |  1365  |    177  |  3  |  131  |  [193,160,196,177,32]  |
  7571  |                         j = j + 1;  |         |  1365  |    177  |  3  |  132  |  [193,160,196,177,32]  |
  7572  |              resetPlaceHolder_2();  |         |  1365  |    177  |  3  |  132  |  [193,160,196,177,32]  |
  7578  |                         R = R + 2;  |      2  |  1367  |    177  |  3  |  132  |  [193,160,196,177,32]  |
  7582  |                         j = j + 1;  |         |  1367  |    177  |  3  |  133  |  [193,160,196,177,32]  |
  7583  |              resetPlaceHolder_2();  |         |  1367  |    177  |  3  |  133  |  [193,160,196,177,32]  |
  7589  |                         R = R + 2;  |      2  |  1369  |    177  |  3  |  133  |  [193,160,196,177,32]  |
  7593  |                         j = j + 1;  |         |  1369  |    177  |  3  |  134  |  [193,160,196,177,32]  |
  7594  |              resetPlaceHolder_2();  |         |  1369  |    177  |  3  |  134  |  [193,160,196,177,32]  |
  7600  |                         R = R + 2;  |      2  |  1371  |    177  |  3  |  134  |  [193,160,196,177,32]  |
  7604  |                         j = j + 1;  |         |  1371  |    177  |  3  |  135  |  [193,160,196,177,32]  |
  7605  |              resetPlaceHolder_2();  |         |  1371  |    177  |  3  |  135  |  [193,160,196,177,32]  |
  7611  |                         R = R + 2;  |      2  |  1373  |    177  |  3  |  135  |  [193,160,196,177,32]  |
  7615  |                         j = j + 1;  |         |  1373  |    177  |  3  |  136  |  [193,160,196,177,32]  |
  7616  |              resetPlaceHolder_2();  |         |  1373  |    177  |  3  |  136  |  [193,160,196,177,32]  |
  7622  |                         R = R + 2;  |      2  |  1375  |    177  |  3  |  136  |  [193,160,196,177,32]  |
  7626  |                         j = j + 1;  |         |  1375  |    177  |  3  |  137  |  [193,160,196,177,32]  |
  7627  |              resetPlaceHolder_2();  |         |  1375  |    177  |  3  |  137  |  [193,160,196,177,32]  |
  7633  |                         R = R + 2;  |      2  |  1377  |    177  |  3  |  137  |  [193,160,196,177,32]  |
  7637  |                         j = j + 1;  |         |  1377  |    177  |  3  |  138  |  [193,160,196,177,32]  |
  7638  |              resetPlaceHolder_2();  |         |  1377  |    177  |  3  |  138  |  [193,160,196,177,32]  |
  7644  |                         R = R + 2;  |      2  |  1379  |    177  |  3  |  138  |  [193,160,196,177,32]  |
  7648  |                         j = j + 1;  |         |  1379  |    177  |  3  |  139  |  [193,160,196,177,32]  |
  7649  |              resetPlaceHolder_2();  |         |  1379  |    177  |  3  |  139  |  [193,160,196,177,32]  |
  7655  |                         R = R + 2;  |      2  |  1381  |    177  |  3  |  139  |  [193,160,196,177,32]  |
  7659  |                         j = j + 1;  |         |  1381  |    177  |  3  |  140  |  [193,160,196,177,32]  |
  7660  |              resetPlaceHolder_2();  |         |  1381  |    177  |  3  |  140  |  [193,160,196,177,32]  |
  7666  |                         R = R + 2;  |      2  |  1383  |    177  |  3  |  140  |  [193,160,196,177,32]  |
  7670  |                         j = j + 1;  |         |  1383  |    177  |  3  |  141  |  [193,160,196,177,32]  |
  7671  |              resetPlaceHolder_2();  |         |  1383  |    177  |  3  |  141  |  [193,160,196,177,32]  |
  7677  |                         R = R + 2;  |      2  |  1385  |    177  |  3  |  141  |  [193,160,196,177,32]  |
  7681  |                         j = j + 1;  |         |  1385  |    177  |  3  |  142  |  [193,160,196,177,32]  |
  7682  |              resetPlaceHolder_2();  |         |  1385  |    177  |  3  |  142  |  [193,160,196,177,32]  |
  7688  |                         R = R + 2;  |      2  |  1387  |    177  |  3  |  142  |  [193,160,196,177,32]  |
  7692  |                         j = j + 1;  |         |  1387  |    177  |  3  |  143  |  [193,160,196,177,32]  |
  7693  |              resetPlaceHolder_2();  |         |  1387  |    177  |  3  |  143  |  [193,160,196,177,32]  |
  7699  |                         R = R + 2;  |      2  |  1389  |    177  |  3  |  143  |  [193,160,196,177,32]  |
  7703  |                         j = j + 1;  |         |  1389  |    177  |  3  |  144  |  [193,160,196,177,32]  |
  7704  |              resetPlaceHolder_2();  |         |  1389  |    177  |  3  |  144  |  [193,160,196,177,32]  |
  7710  |                         R = R + 2;  |      2  |  1391  |    177  |  3  |  144  |  [193,160,196,177,32]  |
  7714  |                         j = j + 1;  |         |  1391  |    177  |  3  |  145  |  [193,160,196,177,32]  |
  7715  |              resetPlaceHolder_2();  |         |  1391  |    177  |  3  |  145  |  [193,160,196,177,32]  |
  7721  |                         R = R + 2;  |      2  |  1393  |    177  |  3  |  145  |  [193,160,196,177,32]  |
  7725  |                         j = j + 1;  |         |  1393  |    177  |  3  |  146  |  [193,160,196,177,32]  |
  7726  |              resetPlaceHolder_2();  |         |  1393  |    177  |  3  |  146  |  [193,160,196,177,32]  |
  7732  |                         R = R + 2;  |      2  |  1395  |    177  |  3  |  146  |  [193,160,196,177,32]  |
  7736  |                         j = j + 1;  |         |  1395  |    177  |  3  |  147  |  [193,160,196,177,32]  |
  7737  |              resetPlaceHolder_2();  |         |  1395  |    177  |  3  |  147  |  [193,160,196,177,32]  |
  7743  |                         R = R + 2;  |      2  |  1397  |    177  |  3  |  147  |  [193,160,196,177,32]  |
  7747  |                         j = j + 1;  |         |  1397  |    177  |  3  |  148  |  [193,160,196,177,32]  |
  7748  |              resetPlaceHolder_2();  |         |  1397  |    177  |  3  |  148  |  [193,160,196,177,32]  |
  7754  |                         R = R + 2;  |      2  |  1399  |    177  |  3  |  148  |  [193,160,196,177,32]  |
  7758  |                         j = j + 1;  |         |  1399  |    177  |  3  |  149  |  [193,160,196,177,32]  |
  7759  |              resetPlaceHolder_2();  |         |  1399  |    177  |  3  |  149  |  [193,160,196,177,32]  |
  7765  |                         R = R + 2;  |      2  |  1401  |    177  |  3  |  149  |  [193,160,196,177,32]  |
  7769  |                         j = j + 1;  |         |  1401  |    177  |  3  |  150  |  [193,160,196,177,32]  |
  7770  |              resetPlaceHolder_2();  |         |  1401  |    177  |  3  |  150  |  [193,160,196,177,32]  |
  7776  |                         R = R + 2;  |      2  |  1403  |    177  |  3  |  150  |  [193,160,196,177,32]  |
  7780  |                         j = j + 1;  |         |  1403  |    177  |  3  |  151  |  [193,160,196,177,32]  |
  7781  |              resetPlaceHolder_2();  |         |  1403  |    177  |  3  |  151  |  [193,160,196,177,32]  |
  7787  |                         R = R + 2;  |      2  |  1405  |    177  |  3  |  151  |  [193,160,196,177,32]  |
  7791  |                         j = j + 1;  |         |  1405  |    177  |  3  |  152  |  [193,160,196,177,32]  |
  7792  |              resetPlaceHolder_2();  |         |  1405  |    177  |  3  |  152  |  [193,160,196,177,32]  |
  7798  |                         R = R + 2;  |      2  |  1407  |    177  |  3  |  152  |  [193,160,196,177,32]  |
  7802  |                         j = j + 1;  |         |  1407  |    177  |  3  |  153  |  [193,160,196,177,32]  |
  7803  |              resetPlaceHolder_2();  |         |  1407  |    177  |  3  |  153  |  [193,160,196,177,32]  |
  7809  |                         R = R + 2;  |      2  |  1409  |    177  |  3  |  153  |  [193,160,196,177,32]  |
  7813  |                         j = j + 1;  |         |  1409  |    177  |  3  |  154  |  [193,160,196,177,32]  |
  7814  |              resetPlaceHolder_2();  |         |  1409  |    177  |  3  |  154  |  [193,160,196,177,32]  |
  7820  |                         R = R + 2;  |      2  |  1411  |    177  |  3  |  154  |  [193,160,196,177,32]  |
  7824  |                         j = j + 1;  |         |  1411  |    177  |  3  |  155  |  [193,160,196,177,32]  |
  7825  |              resetPlaceHolder_2();  |         |  1411  |    177  |  3  |  155  |  [193,160,196,177,32]  |
  7831  |                         R = R + 2;  |      2  |  1413  |    177  |  3  |  155  |  [193,160,196,177,32]  |
  7835  |                         j = j + 1;  |         |  1413  |    177  |  3  |  156  |  [193,160,196,177,32]  |
  7836  |              resetPlaceHolder_2();  |         |  1413  |    177  |  3  |  156  |  [193,160,196,177,32]  |
  7842  |                         R = R + 2;  |      2  |  1415  |    177  |  3  |  156  |  [193,160,196,177,32]  |
  7846  |                         j = j + 1;  |         |  1415  |    177  |  3  |  157  |  [193,160,196,177,32]  |
  7847  |              resetPlaceHolder_2();  |         |  1415  |    177  |  3  |  157  |  [193,160,196,177,32]  |
  7853  |                         R = R + 2;  |      2  |  1417  |    177  |  3  |  157  |  [193,160,196,177,32]  |
  7857  |                         j = j + 1;  |         |  1417  |    177  |  3  |  158  |  [193,160,196,177,32]  |
  7858  |              resetPlaceHolder_2();  |         |  1417  |    177  |  3  |  158  |  [193,160,196,177,32]  |
  7864  |                         R = R + 2;  |      2  |  1419  |    177  |  3  |  158  |  [193,160,196,177,32]  |
  7868  |                         j = j + 1;  |         |  1419  |    177  |  3  |  159  |  [193,160,196,177,32]  |
  7869  |              resetPlaceHolder_2();  |         |  1419  |    177  |  3  |  159  |  [193,160,196,177,32]  |
  7875  |                         R = R + 2;  |      2  |  1421  |    177  |  3  |  159  |  [193,160,196,177,32]  |
  7879  |                         j = j + 1;  |         |  1421  |    177  |  3  |  160  |  [193,160,196,177,32]  |
  7880  |              resetPlaceHolder_2();  |         |  1421  |    177  |  3  |  160  |  [193,160,196,177,32]  |
  7886  |                         R = R + 2;  |      2  |  1423  |    177  |  3  |  160  |  [193,160,196,177,32]  |
  7890  |                         j = j + 1;  |         |  1423  |    177  |  3  |  161  |  [193,160,196,177,32]  |
  7891  |              resetPlaceHolder_2();  |         |  1423  |    177  |  3  |  161  |  [193,160,196,177,32]  |
  7897  |                         R = R + 2;  |      2  |  1425  |    177  |  3  |  161  |  [193,160,196,177,32]  |
  7901  |                         j = j + 1;  |         |  1425  |    177  |  3  |  162  |  [193,160,196,177,32]  |
  7902  |              resetPlaceHolder_2();  |         |  1425  |    177  |  3  |  162  |  [193,160,196,177,32]  |
  7908  |                         R = R + 2;  |      2  |  1427  |    177  |  3  |  162  |  [193,160,196,177,32]  |
  7912  |                         j = j + 1;  |         |  1427  |    177  |  3  |  163  |  [193,160,196,177,32]  |
  7913  |              resetPlaceHolder_2();  |         |  1427  |    177  |  3  |  163  |  [193,160,196,177,32]  |
  7919  |                         R = R + 2;  |      2  |  1429  |    177  |  3  |  163  |  [193,160,196,177,32]  |
  7923  |                         j = j + 1;  |         |  1429  |    177  |  3  |  164  |  [193,160,196,177,32]  |
  7924  |              resetPlaceHolder_2();  |         |  1429  |    177  |  3  |  164  |  [193,160,196,177,32]  |
  7930  |                         R = R + 2;  |      2  |  1431  |    177  |  3  |  164  |  [193,160,196,177,32]  |
  7934  |                         j = j + 1;  |         |  1431  |    177  |  3  |  165  |  [193,160,196,177,32]  |
  7935  |              resetPlaceHolder_2();  |         |  1431  |    177  |  3  |  165  |  [193,160,196,177,32]  |
  7941  |                         R = R + 2;  |      2  |  1433  |    177  |  3  |  165  |  [193,160,196,177,32]  |
  7945  |                         j = j + 1;  |         |  1433  |    177  |  3  |  166  |  [193,160,196,177,32]  |
  7946  |              resetPlaceHolder_2();  |         |  1433  |    177  |  3  |  166  |  [193,160,196,177,32]  |
  7952  |                         R = R + 2;  |      2  |  1435  |    177  |  3  |  166  |  [193,160,196,177,32]  |
  7956  |                         j = j + 1;  |         |  1435  |    177  |  3  |  167  |  [193,160,196,177,32]  |
  7957  |              resetPlaceHolder_2();  |         |  1435  |    177  |  3  |  167  |  [193,160,196,177,32]  |
  7963  |                         R = R + 2;  |      2  |  1437  |    177  |  3  |  167  |  [193,160,196,177,32]  |
  7967  |                         j = j + 1;  |         |  1437  |    177  |  3  |  168  |  [193,160,196,177,32]  |
  7968  |              resetPlaceHolder_2();  |         |  1437  |    177  |  3  |  168  |  [193,160,196,177,32]  |
  7974  |                         R = R + 2;  |      2  |  1439  |    177  |  3  |  168  |  [193,160,196,177,32]  |
  7978  |                         j = j + 1;  |         |  1439  |    177  |  3  |  169  |  [193,160,196,177,32]  |
  7979  |              resetPlaceHolder_2();  |         |  1439  |    177  |  3  |  169  |  [193,160,196,177,32]  |
  7985  |                         R = R + 2;  |      2  |  1441  |    177  |  3  |  169  |  [193,160,196,177,32]  |
  7989  |                         j = j + 1;  |         |  1441  |    177  |  3  |  170  |  [193,160,196,177,32]  |
  7990  |              resetPlaceHolder_2();  |         |  1441  |    177  |  3  |  170  |  [193,160,196,177,32]  |
  7996  |                         R = R + 2;  |      2  |  1443  |    177  |  3  |  170  |  [193,160,196,177,32]  |
  8000  |                         j = j + 1;  |         |  1443  |    177  |  3  |  171  |  [193,160,196,177,32]  |
  8001  |              resetPlaceHolder_2();  |         |  1443  |    177  |  3  |  171  |  [193,160,196,177,32]  |
  8007  |                         R = R + 2;  |      2  |  1445  |    177  |  3  |  171  |  [193,160,196,177,32]  |
  8011  |                         j = j + 1;  |         |  1445  |    177  |  3  |  172  |  [193,160,196,177,32]  |
  8012  |              resetPlaceHolder_2();  |         |  1445  |    177  |  3  |  172  |  [193,160,196,177,32]  |
  8018  |                         R = R + 2;  |      2  |  1447  |    177  |  3  |  172  |  [193,160,196,177,32]  |
  8022  |                         j = j + 1;  |         |  1447  |    177  |  3  |  173  |  [193,160,196,177,32]  |
  8023  |              resetPlaceHolder_2();  |         |  1447  |    177  |  3  |  173  |  [193,160,196,177,32]  |
  8029  |                         R = R + 2;  |      2  |  1449  |    177  |  3  |  173  |  [193,160,196,177,32]  |
  8033  |                         j = j + 1;  |         |  1449  |    177  |  3  |  174  |  [193,160,196,177,32]  |
  8034  |              resetPlaceHolder_2();  |         |  1449  |    177  |  3  |  174  |  [193,160,196,177,32]  |
  8040  |                         R = R + 2;  |      2  |  1451  |    177  |  3  |  174  |  [193,160,196,177,32]  |
  8044  |                         j = j + 1;  |         |  1451  |    177  |  3  |  175  |  [193,160,196,177,32]  |
  8045  |              resetPlaceHolder_2();  |         |  1451  |    177  |  3  |  175  |  [193,160,196,177,32]  |
  8051  |                         R = R + 2;  |      2  |  1453  |    177  |  3  |  175  |  [193,160,196,177,32]  |
  8055  |                         j = j + 1;  |         |  1453  |    177  |  3  |  176  |  [193,160,196,177,32]  |
  8056  |              resetPlaceHolder_2();  |         |  1453  |    177  |  3  |  176  |  [193,160,196,177,32]  |
  8062  |                         R = R + 2;  |      2  |  1455  |    177  |  3  |  176  |  [193,160,196,177,32]  |
  8066  |                         j = j + 1;  |         |  1455  |    177  |  3  |  177  |  [193,160,196,177,32]  |
  8067  |              resetPlaceHolder_2();  |         |  1455  |    177  |  3  |  177  |  [193,160,196,177,32]  |
  8073  |                         R = R + 1;  |      1  |  1456  |    177  |  3  |  177  |  [193,160,196,177,32]  |
  8077  |                         i = i + 1;  |         |  1456  |    177  |  4  |  177  |  [193,160,196,177,32]  |
  8078  |              resetPlaceHolder_1();  |         |  1456  |    177  |  4  |  177  |  [193,160,196,177,32]  |
  8084  |      entry = arrayRead(sorted, i);  |         |  1456  |     32  |  4  |  177  |  [193,160,196,177,32]  |
  8086  |                         int j = 0;  |         |  1456  |     32  |  4  |    0  |  [193,160,196,177,32]  |
  8092  |                         R = R + 2;  |      2  |  1458  |     32  |  4  |    0  |  [193,160,196,177,32]  |
  8096  |                         j = j + 1;  |         |  1458  |     32  |  4  |    1  |  [193,160,196,177,32]  |
  8097  |              resetPlaceHolder_2();  |         |  1458  |     32  |  4  |    1  |  [193,160,196,177,32]  |
  8103  |                         R = R + 2;  |      2  |  1460  |     32  |  4  |    1  |  [193,160,196,177,32]  |
  8107  |                         j = j + 1;  |         |  1460  |     32  |  4  |    2  |  [193,160,196,177,32]  |
  8108  |              resetPlaceHolder_2();  |         |  1460  |     32  |  4  |    2  |  [193,160,196,177,32]  |
  8114  |                         R = R + 2;  |      2  |  1462  |     32  |  4  |    2  |  [193,160,196,177,32]  |
  8118  |                         j = j + 1;  |         |  1462  |     32  |  4  |    3  |  [193,160,196,177,32]  |
  8119  |              resetPlaceHolder_2();  |         |  1462  |     32  |  4  |    3  |  [193,160,196,177,32]  |
  8125  |                         R = R + 2;  |      2  |  1464  |     32  |  4  |    3  |  [193,160,196,177,32]  |
  8129  |                         j = j + 1;  |         |  1464  |     32  |  4  |    4  |  [193,160,196,177,32]  |
  8130  |              resetPlaceHolder_2();  |         |  1464  |     32  |  4  |    4  |  [193,160,196,177,32]  |
  8136  |                         R = R + 2;  |      2  |  1466  |     32  |  4  |    4  |  [193,160,196,177,32]  |
  8140  |                         j = j + 1;  |         |  1466  |     32  |  4  |    5  |  [193,160,196,177,32]  |
  8141  |              resetPlaceHolder_2();  |         |  1466  |     32  |  4  |    5  |  [193,160,196,177,32]  |
  8147  |                         R = R + 2;  |      2  |  1468  |     32  |  4  |    5  |  [193,160,196,177,32]  |
  8151  |                         j = j + 1;  |         |  1468  |     32  |  4  |    6  |  [193,160,196,177,32]  |
  8152  |              resetPlaceHolder_2();  |         |  1468  |     32  |  4  |    6  |  [193,160,196,177,32]  |
  8158  |                         R = R + 2;  |      2  |  1470  |     32  |  4  |    6  |  [193,160,196,177,32]  |
  8162  |                         j = j + 1;  |         |  1470  |     32  |  4  |    7  |  [193,160,196,177,32]  |
  8163  |              resetPlaceHolder_2();  |         |  1470  |     32  |  4  |    7  |  [193,160,196,177,32]  |
  8169  |                         R = R + 2;  |      2  |  1472  |     32  |  4  |    7  |  [193,160,196,177,32]  |
  8173  |                         j = j + 1;  |         |  1472  |     32  |  4  |    8  |  [193,160,196,177,32]  |
  8174  |              resetPlaceHolder_2();  |         |  1472  |     32  |  4  |    8  |  [193,160,196,177,32]  |
  8180  |                         R = R + 2;  |      2  |  1474  |     32  |  4  |    8  |  [193,160,196,177,32]  |
  8184  |                         j = j + 1;  |         |  1474  |     32  |  4  |    9  |  [193,160,196,177,32]  |
  8185  |              resetPlaceHolder_2();  |         |  1474  |     32  |  4  |    9  |  [193,160,196,177,32]  |
  8191  |                         R = R + 2;  |      2  |  1476  |     32  |  4  |    9  |  [193,160,196,177,32]  |
  8195  |                         j = j + 1;  |         |  1476  |     32  |  4  |   10  |  [193,160,196,177,32]  |
  8196  |              resetPlaceHolder_2();  |         |  1476  |     32  |  4  |   10  |  [193,160,196,177,32]  |
  8202  |                         R = R + 2;  |      2  |  1478  |     32  |  4  |   10  |  [193,160,196,177,32]  |
  8206  |                         j = j + 1;  |         |  1478  |     32  |  4  |   11  |  [193,160,196,177,32]  |
  8207  |              resetPlaceHolder_2();  |         |  1478  |     32  |  4  |   11  |  [193,160,196,177,32]  |
  8213  |                         R = R + 2;  |      2  |  1480  |     32  |  4  |   11  |  [193,160,196,177,32]  |
  8217  |                         j = j + 1;  |         |  1480  |     32  |  4  |   12  |  [193,160,196,177,32]  |
  8218  |              resetPlaceHolder_2();  |         |  1480  |     32  |  4  |   12  |  [193,160,196,177,32]  |
  8224  |                         R = R + 2;  |      2  |  1482  |     32  |  4  |   12  |  [193,160,196,177,32]  |
  8228  |                         j = j + 1;  |         |  1482  |     32  |  4  |   13  |  [193,160,196,177,32]  |
  8229  |              resetPlaceHolder_2();  |         |  1482  |     32  |  4  |   13  |  [193,160,196,177,32]  |
  8235  |                         R = R + 2;  |      2  |  1484  |     32  |  4  |   13  |  [193,160,196,177,32]  |
  8239  |                         j = j + 1;  |         |  1484  |     32  |  4  |   14  |  [193,160,196,177,32]  |
  8240  |              resetPlaceHolder_2();  |         |  1484  |     32  |  4  |   14  |  [193,160,196,177,32]  |
  8246  |                         R = R + 2;  |      2  |  1486  |     32  |  4  |   14  |  [193,160,196,177,32]  |
  8250  |                         j = j + 1;  |         |  1486  |     32  |  4  |   15  |  [193,160,196,177,32]  |
  8251  |              resetPlaceHolder_2();  |         |  1486  |     32  |  4  |   15  |  [193,160,196,177,32]  |
  8257  |                         R = R + 2;  |      2  |  1488  |     32  |  4  |   15  |  [193,160,196,177,32]  |
  8261  |                         j = j + 1;  |         |  1488  |     32  |  4  |   16  |  [193,160,196,177,32]  |
  8262  |              resetPlaceHolder_2();  |         |  1488  |     32  |  4  |   16  |  [193,160,196,177,32]  |
  8268  |                         R = R + 2;  |      2  |  1490  |     32  |  4  |   16  |  [193,160,196,177,32]  |
  8272  |                         j = j + 1;  |         |  1490  |     32  |  4  |   17  |  [193,160,196,177,32]  |
  8273  |              resetPlaceHolder_2();  |         |  1490  |     32  |  4  |   17  |  [193,160,196,177,32]  |
  8279  |                         R = R + 2;  |      2  |  1492  |     32  |  4  |   17  |  [193,160,196,177,32]  |
  8283  |                         j = j + 1;  |         |  1492  |     32  |  4  |   18  |  [193,160,196,177,32]  |
  8284  |              resetPlaceHolder_2();  |         |  1492  |     32  |  4  |   18  |  [193,160,196,177,32]  |
  8290  |                         R = R + 2;  |      2  |  1494  |     32  |  4  |   18  |  [193,160,196,177,32]  |
  8294  |                         j = j + 1;  |         |  1494  |     32  |  4  |   19  |  [193,160,196,177,32]  |
  8295  |              resetPlaceHolder_2();  |         |  1494  |     32  |  4  |   19  |  [193,160,196,177,32]  |
  8301  |                         R = R + 2;  |      2  |  1496  |     32  |  4  |   19  |  [193,160,196,177,32]  |
  8305  |                         j = j + 1;  |         |  1496  |     32  |  4  |   20  |  [193,160,196,177,32]  |
  8306  |              resetPlaceHolder_2();  |         |  1496  |     32  |  4  |   20  |  [193,160,196,177,32]  |
  8312  |                         R = R + 2;  |      2  |  1498  |     32  |  4  |   20  |  [193,160,196,177,32]  |
  8316  |                         j = j + 1;  |         |  1498  |     32  |  4  |   21  |  [193,160,196,177,32]  |
  8317  |              resetPlaceHolder_2();  |         |  1498  |     32  |  4  |   21  |  [193,160,196,177,32]  |
  8323  |                         R = R + 2;  |      2  |  1500  |     32  |  4  |   21  |  [193,160,196,177,32]  |
  8327  |                         j = j + 1;  |         |  1500  |     32  |  4  |   22  |  [193,160,196,177,32]  |
  8328  |              resetPlaceHolder_2();  |         |  1500  |     32  |  4  |   22  |  [193,160,196,177,32]  |
  8334  |                         R = R + 2;  |      2  |  1502  |     32  |  4  |   22  |  [193,160,196,177,32]  |
  8338  |                         j = j + 1;  |         |  1502  |     32  |  4  |   23  |  [193,160,196,177,32]  |
  8339  |              resetPlaceHolder_2();  |         |  1502  |     32  |  4  |   23  |  [193,160,196,177,32]  |
  8345  |                         R = R + 2;  |      2  |  1504  |     32  |  4  |   23  |  [193,160,196,177,32]  |
  8349  |                         j = j + 1;  |         |  1504  |     32  |  4  |   24  |  [193,160,196,177,32]  |
  8350  |              resetPlaceHolder_2();  |         |  1504  |     32  |  4  |   24  |  [193,160,196,177,32]  |
  8356  |                         R = R + 2;  |      2  |  1506  |     32  |  4  |   24  |  [193,160,196,177,32]  |
  8360  |                         j = j + 1;  |         |  1506  |     32  |  4  |   25  |  [193,160,196,177,32]  |
  8361  |              resetPlaceHolder_2();  |         |  1506  |     32  |  4  |   25  |  [193,160,196,177,32]  |
  8367  |                         R = R + 2;  |      2  |  1508  |     32  |  4  |   25  |  [193,160,196,177,32]  |
  8371  |                         j = j + 1;  |         |  1508  |     32  |  4  |   26  |  [193,160,196,177,32]  |
  8372  |              resetPlaceHolder_2();  |         |  1508  |     32  |  4  |   26  |  [193,160,196,177,32]  |
  8378  |                         R = R + 2;  |      2  |  1510  |     32  |  4  |   26  |  [193,160,196,177,32]  |
  8382  |                         j = j + 1;  |         |  1510  |     32  |  4  |   27  |  [193,160,196,177,32]  |
  8383  |              resetPlaceHolder_2();  |         |  1510  |     32  |  4  |   27  |  [193,160,196,177,32]  |
  8389  |                         R = R + 2;  |      2  |  1512  |     32  |  4  |   27  |  [193,160,196,177,32]  |
  8393  |                         j = j + 1;  |         |  1512  |     32  |  4  |   28  |  [193,160,196,177,32]  |
  8394  |              resetPlaceHolder_2();  |         |  1512  |     32  |  4  |   28  |  [193,160,196,177,32]  |
  8400  |                         R = R + 2;  |      2  |  1514  |     32  |  4  |   28  |  [193,160,196,177,32]  |
  8404  |                         j = j + 1;  |         |  1514  |     32  |  4  |   29  |  [193,160,196,177,32]  |
  8405  |              resetPlaceHolder_2();  |         |  1514  |     32  |  4  |   29  |  [193,160,196,177,32]  |
  8411  |                         R = R + 2;  |      2  |  1516  |     32  |  4  |   29  |  [193,160,196,177,32]  |
  8415  |                         j = j + 1;  |         |  1516  |     32  |  4  |   30  |  [193,160,196,177,32]  |
  8416  |              resetPlaceHolder_2();  |         |  1516  |     32  |  4  |   30  |  [193,160,196,177,32]  |
  8422  |                         R = R + 2;  |      2  |  1518  |     32  |  4  |   30  |  [193,160,196,177,32]  |
  8426  |                         j = j + 1;  |         |  1518  |     32  |  4  |   31  |  [193,160,196,177,32]  |
  8427  |              resetPlaceHolder_2();  |         |  1518  |     32  |  4  |   31  |  [193,160,196,177,32]  |
  8433  |                         R = R + 2;  |      2  |  1520  |     32  |  4  |   31  |  [193,160,196,177,32]  |
  8437  |                         j = j + 1;  |         |  1520  |     32  |  4  |   32  |  [193,160,196,177,32]  |
  8438  |              resetPlaceHolder_2();  |         |  1520  |     32  |  4  |   32  |  [193,160,196,177,32]  |
  8444  |                         R = R + 1;  |      1  |  1521  |     32  |  4  |   32  |  [193,160,196,177,32]  |
  8448  |                         i = i + 1;  |         |  1521  |     32  |  5  |   32  |  [193,160,196,177,32]  |
  8449  |              resetPlaceHolder_1();  |         |  1521  |     32  |  5  |   32  |  [193,160,196,177,32]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [5810, 8062, 6085, 3962, 5469, 2612, 4094, 2744, 1823, 3008, 2109, 2131, 5260, 6544, 1559, 8114, 2876, 1031, 7798, 2480, 5205, 6074, 6819, 6555, 7072, 5733, 6566, 1295, 481, 6808, 5898, 6063, 7886, 7083, 4226, 7358, 6918, 217, 2381, 4391, 2953, 2590, 3910, 6830, 8169, 2282, 4215, 7182, 2854, 5348, 6214, 3382, 4479, 4105, 6522, 5425, 3217, 4633, 6764, 6401, 3745, 5755, 7556, 6665, 1735, 1867, 1999, 3338, 1988, 5161, 3481, 4435, 4941, 404, 7028, 1196, 1746, 6236, 2216, 2348, 5227, 2491, 2227, 2010, 3140, 1724, 4963, 6291, 8224, 1482, 52, 5953, 3195, 4743, 184, 2667, 2755, 6423, 5150, 6676, 6434, 7743, 3855, 6643, 8257, 5744, 1922, 7754, 8389, 2403, 4358, 6951, 6379, 6599, 4622, 5480, 8235, 4270, 8367, 3470, 3657, 7215, 3734, 5942, 4952, 228, 3951, 448, 316, 3602, 7633, 3866, 261, 7226, 492, 756, 8029, 789, 5084, 4578, 4072, 591, 3393, 1911, 4600, 2469, 8158, 7369, 4820, 646, 3525, 4050, 3973, 7677, 514, 1383, 6841, 1020, 3569, 8018, 8246, 4798, 1581, 2777, 4556, 8411, 7413, 602, 2964, 4842, 877, 734, 3712, 5370, 866, 7336, 1119, 1394, 4996, 1526, 6863, 998, 3756, 2799, 3327, 1405, 7688, 2392, 74, 3492, 2205, 3184, 206, 7952, 3899, 3151, 4853, 3503, 3459, 3591, 4589, 1691, 1438, 6731, 3984, 85, 1306, 3635, 6588, 3995, 5117, 3767, 1768, 1636, 3679, 1163, 1900, 910, 3261, 2601, 2733, 2249, 6247, 778, 1042, 349, 5579, 1570, 1174, 7710, 8334, 3239, 3371, 4204, 6107, 2032, 2986, 2414, 3250, 4160, 3514, 3778, 5843, 7237, 7325, 6852, 7842, 6445, 7314, 3349, 3877, 4776, 7545, 4402, 7501, 6096, 7853, 4732, 8136, 8073, 6709, 1350, 5854, 1592, 7281, 6324, 6940, 5238, 6335, 6995, 4512, 4974, 4248, 1328, 2359, 1064, 5502, 1856, 1878, 4930, 7204, 7468, 7809, 7116, 6148, 1493, 7435, 1361, 6720, 4721, 1075, 4545, 5337, 7930, 2172, 5865, 1207, 3723, 1889, 4457, 679, 7523, 3294, 547, 96, 393, 701, 2304, 7138, 2153, 173, 4237, 5766, 6346, 129, 8191, 4347, 569, 2766, 4259, 41, 3074, 371, 3162, 503, 2370, 7193, 2634, 5557, 2788, 6533, 1086, 4644, 5711, 2546, 1779, 3624, 360, 4567, 7721, 2043, 4765, 3173, 921, 8422, 657, 8279, 2076, 5964, 5447, 558, 6610, 1515, 8378, 7941, 5887, 2645, 5513, 5909, 5249, 1185, 888, 2909, 7160, 7985, 6192, 6368, 965, 1251, 4919, 5722, 5524, 4380, 1680, 4116, 5359, 7512, 6203, 8290, 8040, 7831, 1273, 1548, 745, 3888, 5095, 4017, 6052, 7567, 2524, 2260, 3536, 7611, 3547, 3811, 3283, 4677, 2568, 3272, 5612, 5876, 118, 7963, 8092, 5271, 6019, 3404, 5799, 7622, 5535, 5546, 1669, 3118, 382, 4127, 2326, 2293, 6357, 7270, 3646, 7534, 4149, 4171, 5282, 7875, 4413, 6302, 7094, 7347, 2557, 7006, 2425, 5997, 8202, 8301, 5634, 6478, 6742, 4369, 6500, 4699, 1933, 1603, 5491, 1801, 5689, 5381, 2065, 811, 1471, 7699, 5920, 1339, 3668, 7292, 8103, 4028, 3800, 7820, 140, 3932, 4897, 4985, 5392, 5656, 1460, 943, 5007, 668, 932, 8007, 5931, 6687, 5216, 7479, 6907, 2931, 2535, 5667, 5403, 5326, 5139, 6698, 8180, 2054, 7490, 426, 7578, 162, 6225, 4886, 2271, 3206, 6962, 7897, 4292, 8323, 5678, 3921, 6170, 4688, 6008, 6973, 4336, 5414, 7864, 2942, 2513, 1845, 7600, 6577, 525, 712, 580, 855, 690, 63, 8345, 4864, 4490, 8312, 6885, 6621, 327, 1647, 3833, 4534, 954, 3129, 2678, 3228, 2821, 4754, 5018, 2689, 2656, 3019, 1053, 3448, 4314, 6280, 1790, 7655, 3305, 3063, 2920, 2700, 7105, 1262, 7149, 2337, 1317, 338, 470, 1658, 6313, 7127, 6159, 1130, 1218, 3041, 5106, 4875, 5062, 3107, 3415, 1141, 7919, 1702, 613, 4611, 6775, 1284, 2975, 1955, 2843, 7391, 2711, 2579, 1427, 1504, 7303, 2722, 6467, 8433, 1372, 6511, 7908, 1240, 7380, 2865, 5832, 250, 2458, 4424, 4138, 7061, 4325, 1966, 6041, 5777, 1834, 976, 6390, 6137, 7589, 2194, 7765, 2997, 4006, 7974, 844, 7446, 4061, 1108, 7732, 5315, 8356, 3613, 4710, 6753, 2098, 3789, 6489, 4666, 6030, 4468, 7996, 3085, 2447, 4182, 5304, 6181, 3844, 5040, 7039, 6412, 5568, 2183, 272, 7017, 899, 2120, 5590, 4446, 5128, 7644, 2315, 2623, 5194, 536, 1614, 800, 2142, 151, 5051, 4039, 833, 6786, 4809, 1097, 1229, 7171, 30, 7666, 7259, 1625, 4523, 7787, 6456, 4787, 5601, 1757, 7248, 3690, 3822, 305, 5700, 107, 239, 294, 4303, 8400, 4281, 3558, 195, 437, 7050, 4083, 767, 8051, 6258, 3426, 7402, 3030, 8268, 635, 4193, 6929, 2021, 283, 6269, 415, 6654, 624, 6874, 2502, 987, 2810, 1977, 8213, 3701, 8444, 1152, 2898, 1537, 3360, 5975, 7457, 459, 723, 822, 4831, 5623, 5821, 1713, 8147, 5645, 6126, 4501, 6797, 5172, 4655, 3437, 5029, 3580, 5073, 7776, 8125, 1944, 5986, 1009, 5458, 3096, 2887, 5183, 2832, 5788, 6984, 5436, 2436, 2238, 1416, 4908, 3052, 3316, 6632, 1449, 1812, 2087, 5293, 7424, 6896]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [5810, 8062, 6085, 3962, 5469, 2612, 4094, 2744, 1823, 3008, 2109, 2131, 5260, 6544, 1559, 8114, 2876, 1031, 7798, 2480, 5205, 6074, 6819, 6555, 7072, 5733, 6566, 1295, 481, 6808, 5898, 6063, 7886, 7083, 4226, 7358, 6918, 217, 2381, 4391, 2953, 2590, 3910, 6830, 8169, 2282, 4215, 7182, 2854, 5348, 6214, 3382, 4479, 4105, 6522, 5425, 3217, 4633, 6764, 6401, 3745, 5755, 7556, 6665, 1735, 1867, 1999, 3338, 1988, 5161, 3481, 4435, 4941, 404, 7028, 1196, 1746, 6236, 2216, 2348, 5227, 2491, 2227, 2010, 3140, 1724, 4963, 6291, 8224, 1482, 52, 5953, 3195, 4743, 184, 2667, 2755, 6423, 5150, 6676, 6434, 7743, 3855, 6643, 8257, 5744, 1922, 7754, 8389, 2403, 4358, 6951, 6379, 6599, 4622, 5480, 8235, 4270, 8367, 3470, 3657, 7215, 3734, 5942, 4952, 228, 3951, 448, 316, 3602, 7633, 3866, 261, 7226, 492, 756, 8029, 789, 5084, 4578, 4072, 591, 3393, 1911, 4600, 2469, 8158, 7369, 4820, 646, 3525, 4050, 3973, 7677, 514, 1383, 6841, 1020, 3569, 8018, 8246, 4798, 1581, 2777, 4556, 8411, 7413, 602, 2964, 4842, 877, 734, 3712, 5370, 866, 7336, 1119, 1394, 4996, 1526, 6863, 998, 3756, 2799, 3327, 1405, 7688, 2392, 74, 3492, 2205, 3184, 206, 7952, 3899, 3151, 4853, 3503, 3459, 3591, 4589, 1691, 1438, 6731, 3984, 85, 1306, 3635, 6588, 3995, 5117, 3767, 1768, 1636, 3679, 1163, 1900, 910, 3261, 2601, 2733, 2249, 6247, 778, 1042, 349, 5579, 1570, 1174, 7710, 8334, 3239, 3371, 4204, 6107, 2032, 2986, 2414, 3250, 4160, 3514, 3778, 5843, 7237, 7325, 6852, 7842, 6445, 7314, 3349, 3877, 4776, 7545, 4402, 7501, 6096, 7853, 4732, 8136, 8073, 6709, 1350, 5854, 1592, 7281, 6324, 6940, 5238, 6335, 6995, 4512, 4974, 4248, 1328, 2359, 1064, 5502, 1856, 1878, 4930, 7204, 7468, 7809, 7116, 6148, 1493, 7435, 1361, 6720, 4721, 1075, 4545, 5337, 7930, 2172, 5865, 1207, 3723, 1889, 4457, 679, 7523, 3294, 547, 96, 393, 701, 2304, 7138, 2153, 173, 4237, 5766, 6346, 129, 8191, 4347, 569, 2766, 4259, 41, 3074, 371, 3162, 503, 2370, 7193, 2634, 5557, 2788, 6533, 1086, 4644, 5711, 2546, 1779, 3624, 360, 4567, 7721, 2043, 4765, 3173, 921, 8422, 657, 8279, 2076, 5964, 5447, 558, 6610, 1515, 8378, 7941, 5887, 2645, 5513, 5909, 5249, 1185, 888, 2909, 7160, 7985, 6192, 6368, 965, 1251, 4919, 5722, 5524, 4380, 1680, 4116, 5359, 7512, 6203, 8290, 8040, 7831, 1273, 1548, 745, 3888, 5095, 4017, 6052, 7567, 2524, 2260, 3536, 7611, 3547, 3811, 3283, 4677, 2568, 3272, 5612, 5876, 118, 7963, 8092, 5271, 6019, 3404, 5799, 7622, 5535, 5546, 1669, 3118, 382, 4127, 2326, 2293, 6357, 7270, 3646, 7534, 4149, 4171, 5282, 7875, 4413, 6302, 7094, 7347, 2557, 7006, 2425, 5997, 8202, 8301, 5634, 6478, 6742, 4369, 6500, 4699, 1933, 1603, 5491, 1801, 5689, 5381, 2065, 811, 1471, 7699, 5920, 1339, 3668, 7292, 8103, 4028, 3800, 7820, 140, 3932, 4897, 4985, 5392, 5656, 1460, 943, 5007, 668, 932, 8007, 5931, 6687, 5216, 7479, 6907, 2931, 2535, 5667, 5403, 5326, 5139, 6698, 8180, 2054, 7490, 426, 7578, 162, 6225, 4886, 2271, 3206, 6962, 7897, 4292, 8323, 5678, 3921, 6170, 4688, 6008, 6973, 4336, 5414, 7864, 2942, 2513, 1845, 7600, 6577, 525, 712, 580, 855, 690, 63, 8345, 4864, 4490, 8312, 6885, 6621, 327, 1647, 3833, 4534, 954, 3129, 2678, 3228, 2821, 4754, 5018, 2689, 2656, 3019, 1053, 3448, 4314, 6280, 1790, 7655, 3305, 3063, 2920, 2700, 7105, 1262, 7149, 2337, 1317, 338, 470, 1658, 6313, 7127, 6159, 1130, 1218, 3041, 5106, 4875, 5062, 3107, 3415, 1141, 7919, 1702, 613, 4611, 6775, 1284, 2975, 1955, 2843, 7391, 2711, 2579, 1427, 1504, 7303, 2722, 6467, 8433, 1372, 6511, 7908, 1240, 7380, 2865, 5832, 250, 2458, 4424, 4138, 7061, 4325, 1966, 6041, 5777, 1834, 976, 6390, 6137, 7589, 2194, 7765, 2997, 4006, 7974, 844, 7446, 4061, 1108, 7732, 5315, 8356, 3613, 4710, 6753, 2098, 3789, 6489, 4666, 6030, 4468, 7996, 3085, 2447, 4182, 5304, 6181, 3844, 5040, 7039, 6412, 5568, 2183, 272, 7017, 899, 2120, 5590, 4446, 5128, 7644, 2315, 2623, 5194, 536, 1614, 800, 2142, 151, 5051, 4039, 833, 6786, 4809, 1097, 1229, 7171, 30, 7666, 7259, 1625, 4523, 7787, 6456, 4787, 5601, 1757, 7248, 3690, 3822, 305, 5700, 107, 239, 294, 4303, 8400, 4281, 3558, 195, 437, 7050, 4083, 767, 8051, 6258, 3426, 7402, 3030, 8268, 635, 4193, 6929, 2021, 283, 6269, 415, 6654, 624, 6874, 2502, 987, 2810, 1977, 8213, 3701, 8444, 1152, 2898, 1537, 3360, 5975, 7457, 459, 723, 822, 4831, 5623, 5821, 1713, 8147, 5645, 6126, 4501, 6797, 5172, 4655, 3437, 5029, 3580, 5073, 7776, 8125, 1944, 5986, 1009, 5458, 3096, 2887, 5183, 2832, 5788, 6984, 5436, 2436, 2238, 1416, 4908, 3052, 3316, 6632, 1449, 1812, 2087, 5293, 7424, 6896]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {30,41,52,63,74,85,96,107,118,129,140,151,162,173,184,195,206,217,228,239,250,261,272,283,294,305,316,327,338,349,360,371,382,393,404,415,426,437,448,459,470,481,492,503,514,525,536,547,558,569,580,591,602,613,624,635,646,657,668,679,690,701,712,723,734,745,756,767,778,789,800,811,822,833,844,855,866,877,888,899,910,921,932,943,954,965,976,987,998,1009,1020,1031,1042,1053,1064,1075,1086,1097,1108,1119,1130,1141,1152,1163,1174,1185,1196,1207,1218,1229,1240,1251,1262,1273,1284,1295,1306,1317,1328,1339,1350,1361,1372,1383,1394,1405,1416,1427,1438,1449,1460,1471,1482,1493,1504,1515,1526,1537,1548,1559,1570,1581,1592,1603,1614,1625,1636,1647,1658,1669,1680,1691,1702,1713,1724,1735,1746,1757,1768,1779,1790,1801,1812,1823,1834,1845,1856,1867,1878,1889,1900,1911,1922,1933,1944,1955,1966,1977,1988,1999,2010,2021,2032,2043,2054,2065,2076,2087,2098,2109,2120,2131,2142,2153,2172,2183,2194,2205,2216,2227,2238,2249,2260,2271,2282,2293,2304,2315,2326,2337,2348,2359,2370,2381,2392,2403,2414,2425,2436,2447,2458,2469,2480,2491,2502,2513,2524,2535,2546,2557,2568,2579,2590,2601,2612,2623,2634,2645,2656,2667,2678,2689,2700,2711,2722,2733,2744,2755,2766,2777,2788,2799,2810,2821,2832,2843,2854,2865,2876,2887,2898,2909,2920,2931,2942,2953,2964,2975,2986,2997,3008,3019,3030,3041,3052,3063,3074,3085,3096,3107,3118,3129,3140,3151,3162,3173,3184,3195,3206,3217,3228,3239,3250,3261,3272,3283,3294,3305,3316,3327,3338,3349,3360,3371,3382,3393,3404,3415,3426,3437,3448,3459,3470,3481,3492,3503,3514,3525,3536,3547,3558,3569,3580,3591,3602,3613,3624,3635,3646,3657,3668,3679,3690,3701,3712,3723,3734,3745,3756,3767,3778,3789,3800,3811,3822,3833,3844,3855,3866,3877,3888,3899,3910,3921,3932,3951,3962,3973,3984,3995,4006,4017,4028,4039,4050,4061,4072,4083,4094,4105,4116,4127,4138,4149,4160,4171,4182,4193,4204,4215,4226,4237,4248,4259,4270,4281,4292,4303,4314,4325,4336,4347,4358,4369,4380,4391,4402,4413,4424,4435,4446,4457,4468,4479,4490,4501,4512,4523,4534,4545,4556,4567,4578,4589,4600,4611,4622,4633,4644,4655,4666,4677,4688,4699,4710,4721,4732,4743,4754,4765,4776,4787,4798,4809,4820,4831,4842,4853,4864,4875,4886,4897,4908,4919,4930,4941,4952,4963,4974,4985,4996,5007,5018,5029,5040,5051,5062,5073,5084,5095,5106,5117,5128,5139,5150,5161,5172,5183,5194,5205,5216,5227,5238,5249,5260,5271,5282,5293,5304,5315,5326,5337,5348,5359,5370,5381,5392,5403,5414,5425,5436,5447,5458,5469,5480,5491,5502,5513,5524,5535,5546,5557,5568,5579,5590,5601,5612,5623,5634,5645,5656,5667,5678,5689,5700,5711,5722,5733,5744,5755,5766,5777,5788,5799,5810,5821,5832,5843,5854,5865,5876,5887,5898,5909,5920,5931,5942,5953,5964,5975,5986,5997,6008,6019,6030,6041,6052,6063,6074,6085,6096,6107,6126,6137,6148,6159,6170,6181,6192,6203,6214,6225,6236,6247,6258,6269,6280,6291,6302,6313,6324,6335,6346,6357,6368,6379,6390,6401,6412,6423,6434,6445,6456,6467,6478,6489,6500,6511,6522,6533,6544,6555,6566,6577,6588,6599,6610,6621,6632,6643,6654,6665,6676,6687,6698,6709,6720,6731,6742,6753,6764,6775,6786,6797,6808,6819,6830,6841,6852,6863,6874,6885,6896,6907,6918,6929,6940,6951,6962,6973,6984,6995,7006,7017,7028,7039,7050,7061,7072,7083,7094,7105,7116,7127,7138,7149,7160,7171,7182,7193,7204,7215,7226,7237,7248,7259,7270,7281,7292,7303,7314,7325,7336,7347,7358,7369,7380,7391,7402,7413,7424,7435,7446,7457,7468,7479,7490,7501,7512,7523,7534,7545,7556,7567,7578,7589,7600,7611,7622,7633,7644,7655,7666,7677,7688,7699,7710,7721,7732,7743,7754,7765,7776,7787,7798,7809,7820,7831,7842,7853,7864,7875,7886,7897,7908,7919,7930,7941,7952,7963,7974,7985,7996,8007,8018,8029,8040,8051,8062,8073,8092,8103,8114,8125,8136,8147,8158,8169,8180,8191,8202,8213,8224,8235,8246,8257,8268,8279,8290,8301,8312,8323,8334,8345,8356,8367,8378,8389,8400,8411,8422,8433,8444}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    30  |             R = R + 2;  |      2  |                         0  |
    35  |  resetPlaceHolder_2();  |         |                            |
    41  |             R = R + 2;  |      2  |                         0  |
    46  |  resetPlaceHolder_2();  |         |                            |
    52  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_2();  |         |                            |
    63  |             R = R + 2;  |      2  |                         0  |
    68  |  resetPlaceHolder_2();  |         |                            |
    74  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_2();  |         |                            |
    85  |             R = R + 2;  |      2  |                         0  |
    90  |  resetPlaceHolder_2();  |         |                            |
    96  |             R = R + 2;  |      2  |                         0  |
   101  |  resetPlaceHolder_2();  |         |                            |
   107  |             R = R + 2;  |      2  |                         0  |
   112  |  resetPlaceHolder_2();  |         |                            |
   118  |             R = R + 2;  |      2  |                         0  |
   123  |  resetPlaceHolder_2();  |         |                            |
   129  |             R = R + 2;  |      2  |                         0  |
   134  |  resetPlaceHolder_2();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   145  |  resetPlaceHolder_2();  |         |                            |
   151  |             R = R + 2;  |      2  |                         0  |
   156  |  resetPlaceHolder_2();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   167  |  resetPlaceHolder_2();  |         |                            |
   173  |             R = R + 2;  |      2  |                         0  |
   178  |  resetPlaceHolder_2();  |         |                            |
   184  |             R = R + 2;  |      2  |                         0  |
   189  |  resetPlaceHolder_2();  |         |                            |
   195  |             R = R + 2;  |      2  |                         0  |
   200  |  resetPlaceHolder_2();  |         |                            |
   206  |             R = R + 2;  |      2  |                         0  |
   211  |  resetPlaceHolder_2();  |         |                            |
   217  |             R = R + 2;  |      2  |                         0  |
   222  |  resetPlaceHolder_2();  |         |                            |
   228  |             R = R + 2;  |      2  |                         0  |
   233  |  resetPlaceHolder_2();  |         |                            |
   239  |             R = R + 2;  |      2  |                         0  |
   244  |  resetPlaceHolder_2();  |         |                            |
   250  |             R = R + 2;  |      2  |                         0  |
   255  |  resetPlaceHolder_2();  |         |                            |
   261  |             R = R + 2;  |      2  |                         0  |
   266  |  resetPlaceHolder_2();  |         |                            |
   272  |             R = R + 2;  |      2  |                         0  |
   277  |  resetPlaceHolder_2();  |         |                            |
   283  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_2();  |         |                            |
   294  |             R = R + 2;  |      2  |                         0  |
   299  |  resetPlaceHolder_2();  |         |                            |
   305  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_2();  |         |                            |
   316  |             R = R + 2;  |      2  |                         0  |
   321  |  resetPlaceHolder_2();  |         |                            |
   327  |             R = R + 2;  |      2  |                         0  |
   332  |  resetPlaceHolder_2();  |         |                            |
   338  |             R = R + 2;  |      2  |                         0  |
   343  |  resetPlaceHolder_2();  |         |                            |
   349  |             R = R + 2;  |      2  |                         0  |
   354  |  resetPlaceHolder_2();  |         |                            |
   360  |             R = R + 2;  |      2  |                         0  |
   365  |  resetPlaceHolder_2();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   376  |  resetPlaceHolder_2();  |         |                            |
   382  |             R = R + 2;  |      2  |                         0  |
   387  |  resetPlaceHolder_2();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   398  |  resetPlaceHolder_2();  |         |                            |
   404  |             R = R + 2;  |      2  |                         0  |
   409  |  resetPlaceHolder_2();  |         |                            |
   415  |             R = R + 2;  |      2  |                         0  |
   420  |  resetPlaceHolder_2();  |         |                            |
   426  |             R = R + 2;  |      2  |                         0  |
   431  |  resetPlaceHolder_2();  |         |                            |
   437  |             R = R + 2;  |      2  |                         0  |
   442  |  resetPlaceHolder_2();  |         |                            |
   448  |             R = R + 2;  |      2  |                         0  |
   453  |  resetPlaceHolder_2();  |         |                            |
   459  |             R = R + 2;  |      2  |                         0  |
   464  |  resetPlaceHolder_2();  |         |                            |
   470  |             R = R + 2;  |      2  |                         0  |
   475  |  resetPlaceHolder_2();  |         |                            |
   481  |             R = R + 2;  |      2  |                         0  |
   486  |  resetPlaceHolder_2();  |         |                            |
   492  |             R = R + 2;  |      2  |                         0  |
   497  |  resetPlaceHolder_2();  |         |                            |
   503  |             R = R + 2;  |      2  |                         0  |
   508  |  resetPlaceHolder_2();  |         |                            |
   514  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_2();  |         |                            |
   525  |             R = R + 2;  |      2  |                         0  |
   530  |  resetPlaceHolder_2();  |         |                            |
   536  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_2();  |         |                            |
   547  |             R = R + 2;  |      2  |                         0  |
   552  |  resetPlaceHolder_2();  |         |                            |
   558  |             R = R + 2;  |      2  |                         0  |
   563  |  resetPlaceHolder_2();  |         |                            |
   569  |             R = R + 2;  |      2  |                         0  |
   574  |  resetPlaceHolder_2();  |         |                            |
   580  |             R = R + 2;  |      2  |                         0  |
   585  |  resetPlaceHolder_2();  |         |                            |
   591  |             R = R + 2;  |      2  |                         0  |
   596  |  resetPlaceHolder_2();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   607  |  resetPlaceHolder_2();  |         |                            |
   613  |             R = R + 2;  |      2  |                         0  |
   618  |  resetPlaceHolder_2();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   629  |  resetPlaceHolder_2();  |         |                            |
   635  |             R = R + 2;  |      2  |                         0  |
   640  |  resetPlaceHolder_2();  |         |                            |
   646  |             R = R + 2;  |      2  |                         0  |
   651  |  resetPlaceHolder_2();  |         |                            |
   657  |             R = R + 2;  |      2  |                         0  |
   662  |  resetPlaceHolder_2();  |         |                            |
   668  |             R = R + 2;  |      2  |                         0  |
   673  |  resetPlaceHolder_2();  |         |                            |
   679  |             R = R + 2;  |      2  |                         0  |
   684  |  resetPlaceHolder_2();  |         |                            |
   690  |             R = R + 2;  |      2  |                         0  |
   695  |  resetPlaceHolder_2();  |         |                            |
   701  |             R = R + 2;  |      2  |                         0  |
   706  |  resetPlaceHolder_2();  |         |                            |
   712  |             R = R + 2;  |      2  |                         0  |
   717  |  resetPlaceHolder_2();  |         |                            |
   723  |             R = R + 2;  |      2  |                         0  |
   728  |  resetPlaceHolder_2();  |         |                            |
   734  |             R = R + 2;  |      2  |                         0  |
   739  |  resetPlaceHolder_2();  |         |                            |
   745  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_2();  |         |                            |
   756  |             R = R + 2;  |      2  |                         0  |
   761  |  resetPlaceHolder_2();  |         |                            |
   767  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_2();  |         |                            |
   778  |             R = R + 2;  |      2  |                         0  |
   783  |  resetPlaceHolder_2();  |         |                            |
   789  |             R = R + 2;  |      2  |                         0  |
   794  |  resetPlaceHolder_2();  |         |                            |
   800  |             R = R + 2;  |      2  |                         0  |
   805  |  resetPlaceHolder_2();  |         |                            |
   811  |             R = R + 2;  |      2  |                         0  |
   816  |  resetPlaceHolder_2();  |         |                            |
   822  |             R = R + 2;  |      2  |                         0  |
   827  |  resetPlaceHolder_2();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   838  |  resetPlaceHolder_2();  |         |                            |
   844  |             R = R + 2;  |      2  |                         0  |
   849  |  resetPlaceHolder_2();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   860  |  resetPlaceHolder_2();  |         |                            |
   866  |             R = R + 2;  |      2  |                         0  |
   871  |  resetPlaceHolder_2();  |         |                            |
   877  |             R = R + 2;  |      2  |                         0  |
   882  |  resetPlaceHolder_2();  |         |                            |
   888  |             R = R + 2;  |      2  |                         0  |
   893  |  resetPlaceHolder_2();  |         |                            |
   899  |             R = R + 2;  |      2  |                         0  |
   904  |  resetPlaceHolder_2();  |         |                            |
   910  |             R = R + 2;  |      2  |                         0  |
   915  |  resetPlaceHolder_2();  |         |                            |
   921  |             R = R + 2;  |      2  |                         0  |
   926  |  resetPlaceHolder_2();  |         |                            |
   932  |             R = R + 2;  |      2  |                         0  |
   937  |  resetPlaceHolder_2();  |         |                            |
   943  |             R = R + 2;  |      2  |                         0  |
   948  |  resetPlaceHolder_2();  |         |                            |
   954  |             R = R + 2;  |      2  |                         0  |
   959  |  resetPlaceHolder_2();  |         |                            |
   965  |             R = R + 2;  |      2  |                         0  |
   970  |  resetPlaceHolder_2();  |         |                            |
   976  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_2();  |         |                            |
   987  |             R = R + 2;  |      2  |                         0  |
   992  |  resetPlaceHolder_2();  |         |                            |
   998  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_2();  |         |                            |
  1009  |             R = R + 2;  |      2  |                         0  |
  1014  |  resetPlaceHolder_2();  |         |                            |
  1020  |             R = R + 2;  |      2  |                         0  |
  1025  |  resetPlaceHolder_2();  |         |                            |
  1031  |             R = R + 2;  |      2  |                         0  |
  1036  |  resetPlaceHolder_2();  |         |                            |
  1042  |             R = R + 2;  |      2  |                         0  |
  1047  |  resetPlaceHolder_2();  |         |                            |
  1053  |             R = R + 2;  |      2  |                         0  |
  1058  |  resetPlaceHolder_2();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1069  |  resetPlaceHolder_2();  |         |                            |
  1075  |             R = R + 2;  |      2  |                         0  |
  1080  |  resetPlaceHolder_2();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1091  |  resetPlaceHolder_2();  |         |                            |
  1097  |             R = R + 2;  |      2  |                         0  |
  1102  |  resetPlaceHolder_2();  |         |                            |
  1108  |             R = R + 2;  |      2  |                         0  |
  1113  |  resetPlaceHolder_2();  |         |                            |
  1119  |             R = R + 2;  |      2  |                         0  |
  1124  |  resetPlaceHolder_2();  |         |                            |
  1130  |             R = R + 2;  |      2  |                         0  |
  1135  |  resetPlaceHolder_2();  |         |                            |
  1141  |             R = R + 2;  |      2  |                         0  |
  1146  |  resetPlaceHolder_2();  |         |                            |
  1152  |             R = R + 2;  |      2  |                         0  |
  1157  |  resetPlaceHolder_2();  |         |                            |
  1163  |             R = R + 2;  |      2  |                         0  |
  1168  |  resetPlaceHolder_2();  |         |                            |
  1174  |             R = R + 2;  |      2  |                         0  |
  1179  |  resetPlaceHolder_2();  |         |                            |
  1185  |             R = R + 2;  |      2  |                         0  |
  1190  |  resetPlaceHolder_2();  |         |                            |
  1196  |             R = R + 2;  |      2  |                         0  |
  1201  |  resetPlaceHolder_2();  |         |                            |
  1207  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_2();  |         |                            |
  1218  |             R = R + 2;  |      2  |                         0  |
  1223  |  resetPlaceHolder_2();  |         |                            |
  1229  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_2();  |         |                            |
  1240  |             R = R + 2;  |      2  |                         0  |
  1245  |  resetPlaceHolder_2();  |         |                            |
  1251  |             R = R + 2;  |      2  |                         0  |
  1256  |  resetPlaceHolder_2();  |         |                            |
  1262  |             R = R + 2;  |      2  |                         0  |
  1267  |  resetPlaceHolder_2();  |         |                            |
  1273  |             R = R + 2;  |      2  |                         0  |
  1278  |  resetPlaceHolder_2();  |         |                            |
  1284  |             R = R + 2;  |      2  |                         0  |
  1289  |  resetPlaceHolder_2();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1300  |  resetPlaceHolder_2();  |         |                            |
  1306  |             R = R + 2;  |      2  |                         0  |
  1311  |  resetPlaceHolder_2();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1322  |  resetPlaceHolder_2();  |         |                            |
  1328  |             R = R + 2;  |      2  |                         0  |
  1333  |  resetPlaceHolder_2();  |         |                            |
  1339  |             R = R + 2;  |      2  |                         0  |
  1344  |  resetPlaceHolder_2();  |         |                            |
  1350  |             R = R + 2;  |      2  |                         0  |
  1355  |  resetPlaceHolder_2();  |         |                            |
  1361  |             R = R + 2;  |      2  |                         0  |
  1366  |  resetPlaceHolder_2();  |         |                            |
  1372  |             R = R + 2;  |      2  |                         0  |
  1377  |  resetPlaceHolder_2();  |         |                            |
  1383  |             R = R + 2;  |      2  |                         0  |
  1388  |  resetPlaceHolder_2();  |         |                            |
  1394  |             R = R + 2;  |      2  |                         0  |
  1399  |  resetPlaceHolder_2();  |         |                            |
  1405  |             R = R + 2;  |      2  |                         0  |
  1410  |  resetPlaceHolder_2();  |         |                            |
  1416  |             R = R + 2;  |      2  |                         0  |
  1421  |  resetPlaceHolder_2();  |         |                            |
  1427  |             R = R + 2;  |      2  |                         0  |
  1432  |  resetPlaceHolder_2();  |         |                            |
  1438  |             R = R + 2;  |      2  |                         0  |
  1443  |  resetPlaceHolder_2();  |         |                            |
  1449  |             R = R + 2;  |      2  |                         0  |
  1454  |  resetPlaceHolder_2();  |         |                            |
  1460  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_2();  |         |                            |
  1471  |             R = R + 2;  |      2  |                         0  |
  1476  |  resetPlaceHolder_2();  |         |                            |
  1482  |             R = R + 2;  |      2  |                         0  |
  1487  |  resetPlaceHolder_2();  |         |                            |
  1493  |             R = R + 2;  |      2  |                         0  |
  1498  |  resetPlaceHolder_2();  |         |                            |
  1504  |             R = R + 2;  |      2  |                         0  |
  1509  |  resetPlaceHolder_2();  |         |                            |
  1515  |             R = R + 2;  |      2  |                         0  |
  1520  |  resetPlaceHolder_2();  |         |                            |
  1526  |             R = R + 2;  |      2  |                         0  |
  1531  |  resetPlaceHolder_2();  |         |                            |
  1537  |             R = R + 2;  |      2  |                         0  |
  1542  |  resetPlaceHolder_2();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1553  |  resetPlaceHolder_2();  |         |                            |
  1559  |             R = R + 2;  |      2  |                         0  |
  1564  |  resetPlaceHolder_2();  |         |                            |
  1570  |             R = R + 2;  |      2  |                         0  |
  1575  |  resetPlaceHolder_2();  |         |                            |
  1581  |             R = R + 2;  |      2  |                         0  |
  1586  |  resetPlaceHolder_2();  |         |                            |
  1592  |             R = R + 2;  |      2  |                         0  |
  1597  |  resetPlaceHolder_2();  |         |                            |
  1603  |             R = R + 2;  |      2  |                         0  |
  1608  |  resetPlaceHolder_2();  |         |                            |
  1614  |             R = R + 2;  |      2  |                         0  |
  1619  |  resetPlaceHolder_2();  |         |                            |
  1625  |             R = R + 2;  |      2  |                         0  |
  1630  |  resetPlaceHolder_2();  |         |                            |
  1636  |             R = R + 2;  |      2  |                         0  |
  1641  |  resetPlaceHolder_2();  |         |                            |
  1647  |             R = R + 2;  |      2  |                         0  |
  1652  |  resetPlaceHolder_2();  |         |                            |
  1658  |             R = R + 2;  |      2  |                         0  |
  1663  |  resetPlaceHolder_2();  |         |                            |
  1669  |             R = R + 2;  |      2  |                         0  |
  1674  |  resetPlaceHolder_2();  |         |                            |
  1680  |             R = R + 2;  |      2  |                         0  |
  1685  |  resetPlaceHolder_2();  |         |                            |
  1691  |             R = R + 2;  |      2  |                         0  |
  1696  |  resetPlaceHolder_2();  |         |                            |
  1702  |             R = R + 2;  |      2  |                         0  |
  1707  |  resetPlaceHolder_2();  |         |                            |
  1713  |             R = R + 2;  |      2  |                         0  |
  1718  |  resetPlaceHolder_2();  |         |                            |
  1724  |             R = R + 2;  |      2  |                         0  |
  1729  |  resetPlaceHolder_2();  |         |                            |
  1735  |             R = R + 2;  |      2  |                         0  |
  1740  |  resetPlaceHolder_2();  |         |                            |
  1746  |             R = R + 2;  |      2  |                         0  |
  1751  |  resetPlaceHolder_2();  |         |                            |
  1757  |             R = R + 2;  |      2  |                         0  |
  1762  |  resetPlaceHolder_2();  |         |                            |
  1768  |             R = R + 2;  |      2  |                         0  |
  1773  |  resetPlaceHolder_2();  |         |                            |
  1779  |             R = R + 2;  |      2  |                         0  |
  1784  |  resetPlaceHolder_2();  |         |                            |
  1790  |             R = R + 2;  |      2  |                         0  |
  1795  |  resetPlaceHolder_2();  |         |                            |
  1801  |             R = R + 2;  |      2  |                         0  |
  1806  |  resetPlaceHolder_2();  |         |                            |
  1812  |             R = R + 2;  |      2  |                         0  |
  1817  |  resetPlaceHolder_2();  |         |                            |
  1823  |             R = R + 2;  |      2  |                         0  |
  1828  |  resetPlaceHolder_2();  |         |                            |
  1834  |             R = R + 2;  |      2  |                         0  |
  1839  |  resetPlaceHolder_2();  |         |                            |
  1845  |             R = R + 2;  |      2  |                         0  |
  1850  |  resetPlaceHolder_2();  |         |                            |
  1856  |             R = R + 2;  |      2  |                         0  |
  1861  |  resetPlaceHolder_2();  |         |                            |
  1867  |             R = R + 2;  |      2  |                         0  |
  1872  |  resetPlaceHolder_2();  |         |                            |
  1878  |             R = R + 2;  |      2  |                         0  |
  1883  |  resetPlaceHolder_2();  |         |                            |
  1889  |             R = R + 2;  |      2  |                         0  |
  1894  |  resetPlaceHolder_2();  |         |                            |
  1900  |             R = R + 2;  |      2  |                         0  |
  1905  |  resetPlaceHolder_2();  |         |                            |
  1911  |             R = R + 2;  |      2  |                         0  |
  1916  |  resetPlaceHolder_2();  |         |                            |
  1922  |             R = R + 2;  |      2  |                         0  |
  1927  |  resetPlaceHolder_2();  |         |                            |
  1933  |             R = R + 2;  |      2  |                         0  |
  1938  |  resetPlaceHolder_2();  |         |                            |
  1944  |             R = R + 2;  |      2  |                         0  |
  1949  |  resetPlaceHolder_2();  |         |                            |
  1955  |             R = R + 2;  |      2  |                         0  |
  1960  |  resetPlaceHolder_2();  |         |                            |
  1966  |             R = R + 2;  |      2  |                         0  |
  1971  |  resetPlaceHolder_2();  |         |                            |
  1977  |             R = R + 2;  |      2  |                         0  |
  1982  |  resetPlaceHolder_2();  |         |                            |
  1988  |             R = R + 2;  |      2  |                         0  |
  1993  |  resetPlaceHolder_2();  |         |                            |
  1999  |             R = R + 2;  |      2  |                         0  |
  2004  |  resetPlaceHolder_2();  |         |                            |
  2010  |             R = R + 2;  |      2  |                         0  |
  2015  |  resetPlaceHolder_2();  |         |                            |
  2021  |             R = R + 2;  |      2  |                         0  |
  2026  |  resetPlaceHolder_2();  |         |                            |
  2032  |             R = R + 2;  |      2  |                         0  |
  2037  |  resetPlaceHolder_2();  |         |                            |
  2043  |             R = R + 2;  |      2  |                         0  |
  2048  |  resetPlaceHolder_2();  |         |                            |
  2054  |             R = R + 2;  |      2  |                         0  |
  2059  |  resetPlaceHolder_2();  |         |                            |
  2065  |             R = R + 2;  |      2  |                         0  |
  2070  |  resetPlaceHolder_2();  |         |                            |
  2076  |             R = R + 2;  |      2  |                         0  |
  2081  |  resetPlaceHolder_2();  |         |                            |
  2087  |             R = R + 2;  |      2  |                         0  |
  2092  |  resetPlaceHolder_2();  |         |                            |
  2098  |             R = R + 2;  |      2  |                         0  |
  2103  |  resetPlaceHolder_2();  |         |                            |
  2109  |             R = R + 2;  |      2  |                         0  |
  2114  |  resetPlaceHolder_2();  |         |                            |
  2120  |             R = R + 2;  |      2  |                         0  |
  2125  |  resetPlaceHolder_2();  |         |                            |
  2131  |             R = R + 2;  |      2  |                         0  |
  2136  |  resetPlaceHolder_2();  |         |                            |
  2142  |             R = R + 2;  |      2  |                         0  |
  2147  |  resetPlaceHolder_2();  |         |                            |
  2153  |             R = R + 1;  |      1  |                         0  |
  2158  |  resetPlaceHolder_1();  |         |                            |
  2172  |             R = R + 2;  |      2  |                         0  |
  2177  |  resetPlaceHolder_2();  |         |                            |
  2183  |             R = R + 2;  |      2  |                         0  |
  2188  |  resetPlaceHolder_2();  |         |                            |
  2194  |             R = R + 2;  |      2  |                         0  |
  2199  |  resetPlaceHolder_2();  |         |                            |
  2205  |             R = R + 2;  |      2  |                         0  |
  2210  |  resetPlaceHolder_2();  |         |                            |
  2216  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_2();  |         |                            |
  2227  |             R = R + 2;  |      2  |                         0  |
  2232  |  resetPlaceHolder_2();  |         |                            |
  2238  |             R = R + 2;  |      2  |                         0  |
  2243  |  resetPlaceHolder_2();  |         |                            |
  2249  |             R = R + 2;  |      2  |                         0  |
  2254  |  resetPlaceHolder_2();  |         |                            |
  2260  |             R = R + 2;  |      2  |                         0  |
  2265  |  resetPlaceHolder_2();  |         |                            |
  2271  |             R = R + 2;  |      2  |                         0  |
  2276  |  resetPlaceHolder_2();  |         |                            |
  2282  |             R = R + 2;  |      2  |                         0  |
  2287  |  resetPlaceHolder_2();  |         |                            |
  2293  |             R = R + 2;  |      2  |                         0  |
  2298  |  resetPlaceHolder_2();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2309  |  resetPlaceHolder_2();  |         |                            |
  2315  |             R = R + 2;  |      2  |                         0  |
  2320  |  resetPlaceHolder_2();  |         |                            |
  2326  |             R = R + 2;  |      2  |                         0  |
  2331  |  resetPlaceHolder_2();  |         |                            |
  2337  |             R = R + 2;  |      2  |                         0  |
  2342  |  resetPlaceHolder_2();  |         |                            |
  2348  |             R = R + 2;  |      2  |                         0  |
  2353  |  resetPlaceHolder_2();  |         |                            |
  2359  |             R = R + 2;  |      2  |                         0  |
  2364  |  resetPlaceHolder_2();  |         |                            |
  2370  |             R = R + 2;  |      2  |                         0  |
  2375  |  resetPlaceHolder_2();  |         |                            |
  2381  |             R = R + 2;  |      2  |                         0  |
  2386  |  resetPlaceHolder_2();  |         |                            |
  2392  |             R = R + 2;  |      2  |                         0  |
  2397  |  resetPlaceHolder_2();  |         |                            |
  2403  |             R = R + 2;  |      2  |                         0  |
  2408  |  resetPlaceHolder_2();  |         |                            |
  2414  |             R = R + 2;  |      2  |                         0  |
  2419  |  resetPlaceHolder_2();  |         |                            |
  2425  |             R = R + 2;  |      2  |                         0  |
  2430  |  resetPlaceHolder_2();  |         |                            |
  2436  |             R = R + 2;  |      2  |                         0  |
  2441  |  resetPlaceHolder_2();  |         |                            |
  2447  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_2();  |         |                            |
  2458  |             R = R + 2;  |      2  |                         0  |
  2463  |  resetPlaceHolder_2();  |         |                            |
  2469  |             R = R + 2;  |      2  |                         0  |
  2474  |  resetPlaceHolder_2();  |         |                            |
  2480  |             R = R + 2;  |      2  |                         0  |
  2485  |  resetPlaceHolder_2();  |         |                            |
  2491  |             R = R + 2;  |      2  |                         0  |
  2496  |  resetPlaceHolder_2();  |         |                            |
  2502  |             R = R + 2;  |      2  |                         0  |
  2507  |  resetPlaceHolder_2();  |         |                            |
  2513  |             R = R + 2;  |      2  |                         0  |
  2518  |  resetPlaceHolder_2();  |         |                            |
  2524  |             R = R + 2;  |      2  |                         0  |
  2529  |  resetPlaceHolder_2();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2540  |  resetPlaceHolder_2();  |         |                            |
  2546  |             R = R + 2;  |      2  |                         0  |
  2551  |  resetPlaceHolder_2();  |         |                            |
  2557  |             R = R + 2;  |      2  |                         0  |
  2562  |  resetPlaceHolder_2();  |         |                            |
  2568  |             R = R + 2;  |      2  |                         0  |
  2573  |  resetPlaceHolder_2();  |         |                            |
  2579  |             R = R + 2;  |      2  |                         0  |
  2584  |  resetPlaceHolder_2();  |         |                            |
  2590  |             R = R + 2;  |      2  |                         0  |
  2595  |  resetPlaceHolder_2();  |         |                            |
  2601  |             R = R + 2;  |      2  |                         0  |
  2606  |  resetPlaceHolder_2();  |         |                            |
  2612  |             R = R + 2;  |      2  |                         0  |
  2617  |  resetPlaceHolder_2();  |         |                            |
  2623  |             R = R + 2;  |      2  |                         0  |
  2628  |  resetPlaceHolder_2();  |         |                            |
  2634  |             R = R + 2;  |      2  |                         0  |
  2639  |  resetPlaceHolder_2();  |         |                            |
  2645  |             R = R + 2;  |      2  |                         0  |
  2650  |  resetPlaceHolder_2();  |         |                            |
  2656  |             R = R + 2;  |      2  |                         0  |
  2661  |  resetPlaceHolder_2();  |         |                            |
  2667  |             R = R + 2;  |      2  |                         0  |
  2672  |  resetPlaceHolder_2();  |         |                            |
  2678  |             R = R + 2;  |      2  |                         0  |
  2683  |  resetPlaceHolder_2();  |         |                            |
  2689  |             R = R + 2;  |      2  |                         0  |
  2694  |  resetPlaceHolder_2();  |         |                            |
  2700  |             R = R + 2;  |      2  |                         0  |
  2705  |  resetPlaceHolder_2();  |         |                            |
  2711  |             R = R + 2;  |      2  |                         0  |
  2716  |  resetPlaceHolder_2();  |         |                            |
  2722  |             R = R + 2;  |      2  |                         0  |
  2727  |  resetPlaceHolder_2();  |         |                            |
  2733  |             R = R + 2;  |      2  |                         0  |
  2738  |  resetPlaceHolder_2();  |         |                            |
  2744  |             R = R + 2;  |      2  |                         0  |
  2749  |  resetPlaceHolder_2();  |         |                            |
  2755  |             R = R + 2;  |      2  |                         0  |
  2760  |  resetPlaceHolder_2();  |         |                            |
  2766  |             R = R + 2;  |      2  |                         0  |
  2771  |  resetPlaceHolder_2();  |         |                            |
  2777  |             R = R + 2;  |      2  |                         0  |
  2782  |  resetPlaceHolder_2();  |         |                            |
  2788  |             R = R + 2;  |      2  |                         0  |
  2793  |  resetPlaceHolder_2();  |         |                            |
  2799  |             R = R + 2;  |      2  |                         0  |
  2804  |  resetPlaceHolder_2();  |         |                            |
  2810  |             R = R + 2;  |      2  |                         0  |
  2815  |  resetPlaceHolder_2();  |         |                            |
  2821  |             R = R + 2;  |      2  |                         0  |
  2826  |  resetPlaceHolder_2();  |         |                            |
  2832  |             R = R + 2;  |      2  |                         0  |
  2837  |  resetPlaceHolder_2();  |         |                            |
  2843  |             R = R + 2;  |      2  |                         0  |
  2848  |  resetPlaceHolder_2();  |         |                            |
  2854  |             R = R + 2;  |      2  |                         0  |
  2859  |  resetPlaceHolder_2();  |         |                            |
  2865  |             R = R + 2;  |      2  |                         0  |
  2870  |  resetPlaceHolder_2();  |         |                            |
  2876  |             R = R + 2;  |      2  |                         0  |
  2881  |  resetPlaceHolder_2();  |         |                            |
  2887  |             R = R + 2;  |      2  |                         0  |
  2892  |  resetPlaceHolder_2();  |         |                            |
  2898  |             R = R + 2;  |      2  |                         0  |
  2903  |  resetPlaceHolder_2();  |         |                            |
  2909  |             R = R + 2;  |      2  |                         0  |
  2914  |  resetPlaceHolder_2();  |         |                            |
  2920  |             R = R + 2;  |      2  |                         0  |
  2925  |  resetPlaceHolder_2();  |         |                            |
  2931  |             R = R + 2;  |      2  |                         0  |
  2936  |  resetPlaceHolder_2();  |         |                            |
  2942  |             R = R + 2;  |      2  |                         0  |
  2947  |  resetPlaceHolder_2();  |         |                            |
  2953  |             R = R + 2;  |      2  |                         0  |
  2958  |  resetPlaceHolder_2();  |         |                            |
  2964  |             R = R + 2;  |      2  |                         0  |
  2969  |  resetPlaceHolder_2();  |         |                            |
  2975  |             R = R + 2;  |      2  |                         0  |
  2980  |  resetPlaceHolder_2();  |         |                            |
  2986  |             R = R + 2;  |      2  |                         0  |
  2991  |  resetPlaceHolder_2();  |         |                            |
  2997  |             R = R + 2;  |      2  |                         0  |
  3002  |  resetPlaceHolder_2();  |         |                            |
  3008  |             R = R + 2;  |      2  |                         0  |
  3013  |  resetPlaceHolder_2();  |         |                            |
  3019  |             R = R + 2;  |      2  |                         0  |
  3024  |  resetPlaceHolder_2();  |         |                            |
  3030  |             R = R + 2;  |      2  |                         0  |
  3035  |  resetPlaceHolder_2();  |         |                            |
  3041  |             R = R + 2;  |      2  |                         0  |
  3046  |  resetPlaceHolder_2();  |         |                            |
  3052  |             R = R + 2;  |      2  |                         0  |
  3057  |  resetPlaceHolder_2();  |         |                            |
  3063  |             R = R + 2;  |      2  |                         0  |
  3068  |  resetPlaceHolder_2();  |         |                            |
  3074  |             R = R + 2;  |      2  |                         0  |
  3079  |  resetPlaceHolder_2();  |         |                            |
  3085  |             R = R + 2;  |      2  |                         0  |
  3090  |  resetPlaceHolder_2();  |         |                            |
  3096  |             R = R + 2;  |      2  |                         0  |
  3101  |  resetPlaceHolder_2();  |         |                            |
  3107  |             R = R + 2;  |      2  |                         0  |
  3112  |  resetPlaceHolder_2();  |         |                            |
  3118  |             R = R + 2;  |      2  |                         0  |
  3123  |  resetPlaceHolder_2();  |         |                            |
  3129  |             R = R + 2;  |      2  |                         0  |
  3134  |  resetPlaceHolder_2();  |         |                            |
  3140  |             R = R + 2;  |      2  |                         0  |
  3145  |  resetPlaceHolder_2();  |         |                            |
  3151  |             R = R + 2;  |      2  |                         0  |
  3156  |  resetPlaceHolder_2();  |         |                            |
  3162  |             R = R + 2;  |      2  |                         0  |
  3167  |  resetPlaceHolder_2();  |         |                            |
  3173  |             R = R + 2;  |      2  |                         0  |
  3178  |  resetPlaceHolder_2();  |         |                            |
  3184  |             R = R + 2;  |      2  |                         0  |
  3189  |  resetPlaceHolder_2();  |         |                            |
  3195  |             R = R + 2;  |      2  |                         0  |
  3200  |  resetPlaceHolder_2();  |         |                            |
  3206  |             R = R + 2;  |      2  |                         0  |
  3211  |  resetPlaceHolder_2();  |         |                            |
  3217  |             R = R + 2;  |      2  |                         0  |
  3222  |  resetPlaceHolder_2();  |         |                            |
  3228  |             R = R + 2;  |      2  |                         0  |
  3233  |  resetPlaceHolder_2();  |         |                            |
  3239  |             R = R + 2;  |      2  |                         0  |
  3244  |  resetPlaceHolder_2();  |         |                            |
  3250  |             R = R + 2;  |      2  |                         0  |
  3255  |  resetPlaceHolder_2();  |         |                            |
  3261  |             R = R + 2;  |      2  |                         0  |
  3266  |  resetPlaceHolder_2();  |         |                            |
  3272  |             R = R + 2;  |      2  |                         0  |
  3277  |  resetPlaceHolder_2();  |         |                            |
  3283  |             R = R + 2;  |      2  |                         0  |
  3288  |  resetPlaceHolder_2();  |         |                            |
  3294  |             R = R + 2;  |      2  |                         0  |
  3299  |  resetPlaceHolder_2();  |         |                            |
  3305  |             R = R + 2;  |      2  |                         0  |
  3310  |  resetPlaceHolder_2();  |         |                            |
  3316  |             R = R + 2;  |      2  |                         0  |
  3321  |  resetPlaceHolder_2();  |         |                            |
  3327  |             R = R + 2;  |      2  |                         0  |
  3332  |  resetPlaceHolder_2();  |         |                            |
  3338  |             R = R + 2;  |      2  |                         0  |
  3343  |  resetPlaceHolder_2();  |         |                            |
  3349  |             R = R + 2;  |      2  |                         0  |
  3354  |  resetPlaceHolder_2();  |         |                            |
  3360  |             R = R + 2;  |      2  |                         0  |
  3365  |  resetPlaceHolder_2();  |         |                            |
  3371  |             R = R + 2;  |      2  |                         0  |
  3376  |  resetPlaceHolder_2();  |         |                            |
  3382  |             R = R + 2;  |      2  |                         0  |
  3387  |  resetPlaceHolder_2();  |         |                            |
  3393  |             R = R + 2;  |      2  |                         0  |
  3398  |  resetPlaceHolder_2();  |         |                            |
  3404  |             R = R + 2;  |      2  |                         0  |
  3409  |  resetPlaceHolder_2();  |         |                            |
  3415  |             R = R + 2;  |      2  |                         0  |
  3420  |  resetPlaceHolder_2();  |         |                            |
  3426  |             R = R + 2;  |      2  |                         0  |
  3431  |  resetPlaceHolder_2();  |         |                            |
  3437  |             R = R + 2;  |      2  |                         0  |
  3442  |  resetPlaceHolder_2();  |         |                            |
  3448  |             R = R + 2;  |      2  |                         0  |
  3453  |  resetPlaceHolder_2();  |         |                            |
  3459  |             R = R + 2;  |      2  |                         0  |
  3464  |  resetPlaceHolder_2();  |         |                            |
  3470  |             R = R + 2;  |      2  |                         0  |
  3475  |  resetPlaceHolder_2();  |         |                            |
  3481  |             R = R + 2;  |      2  |                         0  |
  3486  |  resetPlaceHolder_2();  |         |                            |
  3492  |             R = R + 2;  |      2  |                         0  |
  3497  |  resetPlaceHolder_2();  |         |                            |
  3503  |             R = R + 2;  |      2  |                         0  |
  3508  |  resetPlaceHolder_2();  |         |                            |
  3514  |             R = R + 2;  |      2  |                         0  |
  3519  |  resetPlaceHolder_2();  |         |                            |
  3525  |             R = R + 2;  |      2  |                         0  |
  3530  |  resetPlaceHolder_2();  |         |                            |
  3536  |             R = R + 2;  |      2  |                         0  |
  3541  |  resetPlaceHolder_2();  |         |                            |
  3547  |             R = R + 2;  |      2  |                         0  |
  3552  |  resetPlaceHolder_2();  |         |                            |
  3558  |             R = R + 2;  |      2  |                         0  |
  3563  |  resetPlaceHolder_2();  |         |                            |
  3569  |             R = R + 2;  |      2  |                         0  |
  3574  |  resetPlaceHolder_2();  |         |                            |
  3580  |             R = R + 2;  |      2  |                         0  |
  3585  |  resetPlaceHolder_2();  |         |                            |
  3591  |             R = R + 2;  |      2  |                         0  |
  3596  |  resetPlaceHolder_2();  |         |                            |
  3602  |             R = R + 2;  |      2  |                         0  |
  3607  |  resetPlaceHolder_2();  |         |                            |
  3613  |             R = R + 2;  |      2  |                         0  |
  3618  |  resetPlaceHolder_2();  |         |                            |
  3624  |             R = R + 2;  |      2  |                         0  |
  3629  |  resetPlaceHolder_2();  |         |                            |
  3635  |             R = R + 2;  |      2  |                         0  |
  3640  |  resetPlaceHolder_2();  |         |                            |
  3646  |             R = R + 2;  |      2  |                         0  |
  3651  |  resetPlaceHolder_2();  |         |                            |
  3657  |             R = R + 2;  |      2  |                         0  |
  3662  |  resetPlaceHolder_2();  |         |                            |
  3668  |             R = R + 2;  |      2  |                         0  |
  3673  |  resetPlaceHolder_2();  |         |                            |
  3679  |             R = R + 2;  |      2  |                         0  |
  3684  |  resetPlaceHolder_2();  |         |                            |
  3690  |             R = R + 2;  |      2  |                         0  |
  3695  |  resetPlaceHolder_2();  |         |                            |
  3701  |             R = R + 2;  |      2  |                         0  |
  3706  |  resetPlaceHolder_2();  |         |                            |
  3712  |             R = R + 2;  |      2  |                         0  |
  3717  |  resetPlaceHolder_2();  |         |                            |
  3723  |             R = R + 2;  |      2  |                         0  |
  3728  |  resetPlaceHolder_2();  |         |                            |
  3734  |             R = R + 2;  |      2  |                         0  |
  3739  |  resetPlaceHolder_2();  |         |                            |
  3745  |             R = R + 2;  |      2  |                         0  |
  3750  |  resetPlaceHolder_2();  |         |                            |
  3756  |             R = R + 2;  |      2  |                         0  |
  3761  |  resetPlaceHolder_2();  |         |                            |
  3767  |             R = R + 2;  |      2  |                         0  |
  3772  |  resetPlaceHolder_2();  |         |                            |
  3778  |             R = R + 2;  |      2  |                         0  |
  3783  |  resetPlaceHolder_2();  |         |                            |
  3789  |             R = R + 2;  |      2  |                         0  |
  3794  |  resetPlaceHolder_2();  |         |                            |
  3800  |             R = R + 2;  |      2  |                         0  |
  3805  |  resetPlaceHolder_2();  |         |                            |
  3811  |             R = R + 2;  |      2  |                         0  |
  3816  |  resetPlaceHolder_2();  |         |                            |
  3822  |             R = R + 2;  |      2  |                         0  |
  3827  |  resetPlaceHolder_2();  |         |                            |
  3833  |             R = R + 2;  |      2  |                         0  |
  3838  |  resetPlaceHolder_2();  |         |                            |
  3844  |             R = R + 2;  |      2  |                         0  |
  3849  |  resetPlaceHolder_2();  |         |                            |
  3855  |             R = R + 2;  |      2  |                         0  |
  3860  |  resetPlaceHolder_2();  |         |                            |
  3866  |             R = R + 2;  |      2  |                         0  |
  3871  |  resetPlaceHolder_2();  |         |                            |
  3877  |             R = R + 2;  |      2  |                         0  |
  3882  |  resetPlaceHolder_2();  |         |                            |
  3888  |             R = R + 2;  |      2  |                         0  |
  3893  |  resetPlaceHolder_2();  |         |                            |
  3899  |             R = R + 2;  |      2  |                         0  |
  3904  |  resetPlaceHolder_2();  |         |                            |
  3910  |             R = R + 2;  |      2  |                         0  |
  3915  |  resetPlaceHolder_2();  |         |                            |
  3921  |             R = R + 2;  |      2  |                         0  |
  3926  |  resetPlaceHolder_2();  |         |                            |
  3932  |             R = R + 1;  |      1  |                         0  |
  3937  |  resetPlaceHolder_1();  |         |                            |
  3951  |             R = R + 2;  |      2  |                         0  |
  3956  |  resetPlaceHolder_2();  |         |                            |
  3962  |             R = R + 2;  |      2  |                         0  |
  3967  |  resetPlaceHolder_2();  |         |                            |
  3973  |             R = R + 2;  |      2  |                         0  |
  3978  |  resetPlaceHolder_2();  |         |                            |
  3984  |             R = R + 2;  |      2  |                         0  |
  3989  |  resetPlaceHolder_2();  |         |                            |
  3995  |             R = R + 2;  |      2  |                         0  |
  4000  |  resetPlaceHolder_2();  |         |                            |
  4006  |             R = R + 2;  |      2  |                         0  |
  4011  |  resetPlaceHolder_2();  |         |                            |
  4017  |             R = R + 2;  |      2  |                         0  |
  4022  |  resetPlaceHolder_2();  |         |                            |
  4028  |             R = R + 2;  |      2  |                         0  |
  4033  |  resetPlaceHolder_2();  |         |                            |
  4039  |             R = R + 2;  |      2  |                         0  |
  4044  |  resetPlaceHolder_2();  |         |                            |
  4050  |             R = R + 2;  |      2  |                         0  |
  4055  |  resetPlaceHolder_2();  |         |                            |
  4061  |             R = R + 2;  |      2  |                         0  |
  4066  |  resetPlaceHolder_2();  |         |                            |
  4072  |             R = R + 2;  |      2  |                         0  |
  4077  |  resetPlaceHolder_2();  |         |                            |
  4083  |             R = R + 2;  |      2  |                         0  |
  4088  |  resetPlaceHolder_2();  |         |                            |
  4094  |             R = R + 2;  |      2  |                         0  |
  4099  |  resetPlaceHolder_2();  |         |                            |
  4105  |             R = R + 2;  |      2  |                         0  |
  4110  |  resetPlaceHolder_2();  |         |                            |
  4116  |             R = R + 2;  |      2  |                         0  |
  4121  |  resetPlaceHolder_2();  |         |                            |
  4127  |             R = R + 2;  |      2  |                         0  |
  4132  |  resetPlaceHolder_2();  |         |                            |
  4138  |             R = R + 2;  |      2  |                         0  |
  4143  |  resetPlaceHolder_2();  |         |                            |
  4149  |             R = R + 2;  |      2  |                         0  |
  4154  |  resetPlaceHolder_2();  |         |                            |
  4160  |             R = R + 2;  |      2  |                         0  |
  4165  |  resetPlaceHolder_2();  |         |                            |
  4171  |             R = R + 2;  |      2  |                         0  |
  4176  |  resetPlaceHolder_2();  |         |                            |
  4182  |             R = R + 2;  |      2  |                         0  |
  4187  |  resetPlaceHolder_2();  |         |                            |
  4193  |             R = R + 2;  |      2  |                         0  |
  4198  |  resetPlaceHolder_2();  |         |                            |
  4204  |             R = R + 2;  |      2  |                         0  |
  4209  |  resetPlaceHolder_2();  |         |                            |
  4215  |             R = R + 2;  |      2  |                         0  |
  4220  |  resetPlaceHolder_2();  |         |                            |
  4226  |             R = R + 2;  |      2  |                         0  |
  4231  |  resetPlaceHolder_2();  |         |                            |
  4237  |             R = R + 2;  |      2  |                         0  |
  4242  |  resetPlaceHolder_2();  |         |                            |
  4248  |             R = R + 2;  |      2  |                         0  |
  4253  |  resetPlaceHolder_2();  |         |                            |
  4259  |             R = R + 2;  |      2  |                         0  |
  4264  |  resetPlaceHolder_2();  |         |                            |
  4270  |             R = R + 2;  |      2  |                         0  |
  4275  |  resetPlaceHolder_2();  |         |                            |
  4281  |             R = R + 2;  |      2  |                         0  |
  4286  |  resetPlaceHolder_2();  |         |                            |
  4292  |             R = R + 2;  |      2  |                         0  |
  4297  |  resetPlaceHolder_2();  |         |                            |
  4303  |             R = R + 2;  |      2  |                         0  |
  4308  |  resetPlaceHolder_2();  |         |                            |
  4314  |             R = R + 2;  |      2  |                         0  |
  4319  |  resetPlaceHolder_2();  |         |                            |
  4325  |             R = R + 2;  |      2  |                         0  |
  4330  |  resetPlaceHolder_2();  |         |                            |
  4336  |             R = R + 2;  |      2  |                         0  |
  4341  |  resetPlaceHolder_2();  |         |                            |
  4347  |             R = R + 2;  |      2  |                         0  |
  4352  |  resetPlaceHolder_2();  |         |                            |
  4358  |             R = R + 2;  |      2  |                         0  |
  4363  |  resetPlaceHolder_2();  |         |                            |
  4369  |             R = R + 2;  |      2  |                         0  |
  4374  |  resetPlaceHolder_2();  |         |                            |
  4380  |             R = R + 2;  |      2  |                         0  |
  4385  |  resetPlaceHolder_2();  |         |                            |
  4391  |             R = R + 2;  |      2  |                         0  |
  4396  |  resetPlaceHolder_2();  |         |                            |
  4402  |             R = R + 2;  |      2  |                         0  |
  4407  |  resetPlaceHolder_2();  |         |                            |
  4413  |             R = R + 2;  |      2  |                         0  |
  4418  |  resetPlaceHolder_2();  |         |                            |
  4424  |             R = R + 2;  |      2  |                         0  |
  4429  |  resetPlaceHolder_2();  |         |                            |
  4435  |             R = R + 2;  |      2  |                         0  |
  4440  |  resetPlaceHolder_2();  |         |                            |
  4446  |             R = R + 2;  |      2  |                         0  |
  4451  |  resetPlaceHolder_2();  |         |                            |
  4457  |             R = R + 2;  |      2  |                         0  |
  4462  |  resetPlaceHolder_2();  |         |                            |
  4468  |             R = R + 2;  |      2  |                         0  |
  4473  |  resetPlaceHolder_2();  |         |                            |
  4479  |             R = R + 2;  |      2  |                         0  |
  4484  |  resetPlaceHolder_2();  |         |                            |
  4490  |             R = R + 2;  |      2  |                         0  |
  4495  |  resetPlaceHolder_2();  |         |                            |
  4501  |             R = R + 2;  |      2  |                         0  |
  4506  |  resetPlaceHolder_2();  |         |                            |
  4512  |             R = R + 2;  |      2  |                         0  |
  4517  |  resetPlaceHolder_2();  |         |                            |
  4523  |             R = R + 2;  |      2  |                         0  |
  4528  |  resetPlaceHolder_2();  |         |                            |
  4534  |             R = R + 2;  |      2  |                         0  |
  4539  |  resetPlaceHolder_2();  |         |                            |
  4545  |             R = R + 2;  |      2  |                         0  |
  4550  |  resetPlaceHolder_2();  |         |                            |
  4556  |             R = R + 2;  |      2  |                         0  |
  4561  |  resetPlaceHolder_2();  |         |                            |
  4567  |             R = R + 2;  |      2  |                         0  |
  4572  |  resetPlaceHolder_2();  |         |                            |
  4578  |             R = R + 2;  |      2  |                         0  |
  4583  |  resetPlaceHolder_2();  |         |                            |
  4589  |             R = R + 2;  |      2  |                         0  |
  4594  |  resetPlaceHolder_2();  |         |                            |
  4600  |             R = R + 2;  |      2  |                         0  |
  4605  |  resetPlaceHolder_2();  |         |                            |
  4611  |             R = R + 2;  |      2  |                         0  |
  4616  |  resetPlaceHolder_2();  |         |                            |
  4622  |             R = R + 2;  |      2  |                         0  |
  4627  |  resetPlaceHolder_2();  |         |                            |
  4633  |             R = R + 2;  |      2  |                         0  |
  4638  |  resetPlaceHolder_2();  |         |                            |
  4644  |             R = R + 2;  |      2  |                         0  |
  4649  |  resetPlaceHolder_2();  |         |                            |
  4655  |             R = R + 2;  |      2  |                         0  |
  4660  |  resetPlaceHolder_2();  |         |                            |
  4666  |             R = R + 2;  |      2  |                         0  |
  4671  |  resetPlaceHolder_2();  |         |                            |
  4677  |             R = R + 2;  |      2  |                         0  |
  4682  |  resetPlaceHolder_2();  |         |                            |
  4688  |             R = R + 2;  |      2  |                         0  |
  4693  |  resetPlaceHolder_2();  |         |                            |
  4699  |             R = R + 2;  |      2  |                         0  |
  4704  |  resetPlaceHolder_2();  |         |                            |
  4710  |             R = R + 2;  |      2  |                         0  |
  4715  |  resetPlaceHolder_2();  |         |                            |
  4721  |             R = R + 2;  |      2  |                         0  |
  4726  |  resetPlaceHolder_2();  |         |                            |
  4732  |             R = R + 2;  |      2  |                         0  |
  4737  |  resetPlaceHolder_2();  |         |                            |
  4743  |             R = R + 2;  |      2  |                         0  |
  4748  |  resetPlaceHolder_2();  |         |                            |
  4754  |             R = R + 2;  |      2  |                         0  |
  4759  |  resetPlaceHolder_2();  |         |                            |
  4765  |             R = R + 2;  |      2  |                         0  |
  4770  |  resetPlaceHolder_2();  |         |                            |
  4776  |             R = R + 2;  |      2  |                         0  |
  4781  |  resetPlaceHolder_2();  |         |                            |
  4787  |             R = R + 2;  |      2  |                         0  |
  4792  |  resetPlaceHolder_2();  |         |                            |
  4798  |             R = R + 2;  |      2  |                         0  |
  4803  |  resetPlaceHolder_2();  |         |                            |
  4809  |             R = R + 2;  |      2  |                         0  |
  4814  |  resetPlaceHolder_2();  |         |                            |
  4820  |             R = R + 2;  |      2  |                         0  |
  4825  |  resetPlaceHolder_2();  |         |                            |
  4831  |             R = R + 2;  |      2  |                         0  |
  4836  |  resetPlaceHolder_2();  |         |                            |
  4842  |             R = R + 2;  |      2  |                         0  |
  4847  |  resetPlaceHolder_2();  |         |                            |
  4853  |             R = R + 2;  |      2  |                         0  |
  4858  |  resetPlaceHolder_2();  |         |                            |
  4864  |             R = R + 2;  |      2  |                         0  |
  4869  |  resetPlaceHolder_2();  |         |                            |
  4875  |             R = R + 2;  |      2  |                         0  |
  4880  |  resetPlaceHolder_2();  |         |                            |
  4886  |             R = R + 2;  |      2  |                         0  |
  4891  |  resetPlaceHolder_2();  |         |                            |
  4897  |             R = R + 2;  |      2  |                         0  |
  4902  |  resetPlaceHolder_2();  |         |                            |
  4908  |             R = R + 2;  |      2  |                         0  |
  4913  |  resetPlaceHolder_2();  |         |                            |
  4919  |             R = R + 2;  |      2  |                         0  |
  4924  |  resetPlaceHolder_2();  |         |                            |
  4930  |             R = R + 2;  |      2  |                         0  |
  4935  |  resetPlaceHolder_2();  |         |                            |
  4941  |             R = R + 2;  |      2  |                         0  |
  4946  |  resetPlaceHolder_2();  |         |                            |
  4952  |             R = R + 2;  |      2  |                         0  |
  4957  |  resetPlaceHolder_2();  |         |                            |
  4963  |             R = R + 2;  |      2  |                         0  |
  4968  |  resetPlaceHolder_2();  |         |                            |
  4974  |             R = R + 2;  |      2  |                         0  |
  4979  |  resetPlaceHolder_2();  |         |                            |
  4985  |             R = R + 2;  |      2  |                         0  |
  4990  |  resetPlaceHolder_2();  |         |                            |
  4996  |             R = R + 2;  |      2  |                         0  |
  5001  |  resetPlaceHolder_2();  |         |                            |
  5007  |             R = R + 2;  |      2  |                         0  |
  5012  |  resetPlaceHolder_2();  |         |                            |
  5018  |             R = R + 2;  |      2  |                         0  |
  5023  |  resetPlaceHolder_2();  |         |                            |
  5029  |             R = R + 2;  |      2  |                         0  |
  5034  |  resetPlaceHolder_2();  |         |                            |
  5040  |             R = R + 2;  |      2  |                         0  |
  5045  |  resetPlaceHolder_2();  |         |                            |
  5051  |             R = R + 2;  |      2  |                         0  |
  5056  |  resetPlaceHolder_2();  |         |                            |
  5062  |             R = R + 2;  |      2  |                         0  |
  5067  |  resetPlaceHolder_2();  |         |                            |
  5073  |             R = R + 2;  |      2  |                         0  |
  5078  |  resetPlaceHolder_2();  |         |                            |
  5084  |             R = R + 2;  |      2  |                         0  |
  5089  |  resetPlaceHolder_2();  |         |                            |
  5095  |             R = R + 2;  |      2  |                         0  |
  5100  |  resetPlaceHolder_2();  |         |                            |
  5106  |             R = R + 2;  |      2  |                         0  |
  5111  |  resetPlaceHolder_2();  |         |                            |
  5117  |             R = R + 2;  |      2  |                         0  |
  5122  |  resetPlaceHolder_2();  |         |                            |
  5128  |             R = R + 2;  |      2  |                         0  |
  5133  |  resetPlaceHolder_2();  |         |                            |
  5139  |             R = R + 2;  |      2  |                         0  |
  5144  |  resetPlaceHolder_2();  |         |                            |
  5150  |             R = R + 2;  |      2  |                         0  |
  5155  |  resetPlaceHolder_2();  |         |                            |
  5161  |             R = R + 2;  |      2  |                         0  |
  5166  |  resetPlaceHolder_2();  |         |                            |
  5172  |             R = R + 2;  |      2  |                         0  |
  5177  |  resetPlaceHolder_2();  |         |                            |
  5183  |             R = R + 2;  |      2  |                         0  |
  5188  |  resetPlaceHolder_2();  |         |                            |
  5194  |             R = R + 2;  |      2  |                         0  |
  5199  |  resetPlaceHolder_2();  |         |                            |
  5205  |             R = R + 2;  |      2  |                         0  |
  5210  |  resetPlaceHolder_2();  |         |                            |
  5216  |             R = R + 2;  |      2  |                         0  |
  5221  |  resetPlaceHolder_2();  |         |                            |
  5227  |             R = R + 2;  |      2  |                         0  |
  5232  |  resetPlaceHolder_2();  |         |                            |
  5238  |             R = R + 2;  |      2  |                         0  |
  5243  |  resetPlaceHolder_2();  |         |                            |
  5249  |             R = R + 2;  |      2  |                         0  |
  5254  |  resetPlaceHolder_2();  |         |                            |
  5260  |             R = R + 2;  |      2  |                         0  |
  5265  |  resetPlaceHolder_2();  |         |                            |
  5271  |             R = R + 2;  |      2  |                         0  |
  5276  |  resetPlaceHolder_2();  |         |                            |
  5282  |             R = R + 2;  |      2  |                         0  |
  5287  |  resetPlaceHolder_2();  |         |                            |
  5293  |             R = R + 2;  |      2  |                         0  |
  5298  |  resetPlaceHolder_2();  |         |                            |
  5304  |             R = R + 2;  |      2  |                         0  |
  5309  |  resetPlaceHolder_2();  |         |                            |
  5315  |             R = R + 2;  |      2  |                         0  |
  5320  |  resetPlaceHolder_2();  |         |                            |
  5326  |             R = R + 2;  |      2  |                         0  |
  5331  |  resetPlaceHolder_2();  |         |                            |
  5337  |             R = R + 2;  |      2  |                         0  |
  5342  |  resetPlaceHolder_2();  |         |                            |
  5348  |             R = R + 2;  |      2  |                         0  |
  5353  |  resetPlaceHolder_2();  |         |                            |
  5359  |             R = R + 2;  |      2  |                         0  |
  5364  |  resetPlaceHolder_2();  |         |                            |
  5370  |             R = R + 2;  |      2  |                         0  |
  5375  |  resetPlaceHolder_2();  |         |                            |
  5381  |             R = R + 2;  |      2  |                         0  |
  5386  |  resetPlaceHolder_2();  |         |                            |
  5392  |             R = R + 2;  |      2  |                         0  |
  5397  |  resetPlaceHolder_2();  |         |                            |
  5403  |             R = R + 2;  |      2  |                         0  |
  5408  |  resetPlaceHolder_2();  |         |                            |
  5414  |             R = R + 2;  |      2  |                         0  |
  5419  |  resetPlaceHolder_2();  |         |                            |
  5425  |             R = R + 2;  |      2  |                         0  |
  5430  |  resetPlaceHolder_2();  |         |                            |
  5436  |             R = R + 2;  |      2  |                         0  |
  5441  |  resetPlaceHolder_2();  |         |                            |
  5447  |             R = R + 2;  |      2  |                         0  |
  5452  |  resetPlaceHolder_2();  |         |                            |
  5458  |             R = R + 2;  |      2  |                         0  |
  5463  |  resetPlaceHolder_2();  |         |                            |
  5469  |             R = R + 2;  |      2  |                         0  |
  5474  |  resetPlaceHolder_2();  |         |                            |
  5480  |             R = R + 2;  |      2  |                         0  |
  5485  |  resetPlaceHolder_2();  |         |                            |
  5491  |             R = R + 2;  |      2  |                         0  |
  5496  |  resetPlaceHolder_2();  |         |                            |
  5502  |             R = R + 2;  |      2  |                         0  |
  5507  |  resetPlaceHolder_2();  |         |                            |
  5513  |             R = R + 2;  |      2  |                         0  |
  5518  |  resetPlaceHolder_2();  |         |                            |
  5524  |             R = R + 2;  |      2  |                         0  |
  5529  |  resetPlaceHolder_2();  |         |                            |
  5535  |             R = R + 2;  |      2  |                         0  |
  5540  |  resetPlaceHolder_2();  |         |                            |
  5546  |             R = R + 2;  |      2  |                         0  |
  5551  |  resetPlaceHolder_2();  |         |                            |
  5557  |             R = R + 2;  |      2  |                         0  |
  5562  |  resetPlaceHolder_2();  |         |                            |
  5568  |             R = R + 2;  |      2  |                         0  |
  5573  |  resetPlaceHolder_2();  |         |                            |
  5579  |             R = R + 2;  |      2  |                         0  |
  5584  |  resetPlaceHolder_2();  |         |                            |
  5590  |             R = R + 2;  |      2  |                         0  |
  5595  |  resetPlaceHolder_2();  |         |                            |
  5601  |             R = R + 2;  |      2  |                         0  |
  5606  |  resetPlaceHolder_2();  |         |                            |
  5612  |             R = R + 2;  |      2  |                         0  |
  5617  |  resetPlaceHolder_2();  |         |                            |
  5623  |             R = R + 2;  |      2  |                         0  |
  5628  |  resetPlaceHolder_2();  |         |                            |
  5634  |             R = R + 2;  |      2  |                         0  |
  5639  |  resetPlaceHolder_2();  |         |                            |
  5645  |             R = R + 2;  |      2  |                         0  |
  5650  |  resetPlaceHolder_2();  |         |                            |
  5656  |             R = R + 2;  |      2  |                         0  |
  5661  |  resetPlaceHolder_2();  |         |                            |
  5667  |             R = R + 2;  |      2  |                         0  |
  5672  |  resetPlaceHolder_2();  |         |                            |
  5678  |             R = R + 2;  |      2  |                         0  |
  5683  |  resetPlaceHolder_2();  |         |                            |
  5689  |             R = R + 2;  |      2  |                         0  |
  5694  |  resetPlaceHolder_2();  |         |                            |
  5700  |             R = R + 2;  |      2  |                         0  |
  5705  |  resetPlaceHolder_2();  |         |                            |
  5711  |             R = R + 2;  |      2  |                         0  |
  5716  |  resetPlaceHolder_2();  |         |                            |
  5722  |             R = R + 2;  |      2  |                         0  |
  5727  |  resetPlaceHolder_2();  |         |                            |
  5733  |             R = R + 2;  |      2  |                         0  |
  5738  |  resetPlaceHolder_2();  |         |                            |
  5744  |             R = R + 2;  |      2  |                         0  |
  5749  |  resetPlaceHolder_2();  |         |                            |
  5755  |             R = R + 2;  |      2  |                         0  |
  5760  |  resetPlaceHolder_2();  |         |                            |
  5766  |             R = R + 2;  |      2  |                         0  |
  5771  |  resetPlaceHolder_2();  |         |                            |
  5777  |             R = R + 2;  |      2  |                         0  |
  5782  |  resetPlaceHolder_2();  |         |                            |
  5788  |             R = R + 2;  |      2  |                         0  |
  5793  |  resetPlaceHolder_2();  |         |                            |
  5799  |             R = R + 2;  |      2  |                         0  |
  5804  |  resetPlaceHolder_2();  |         |                            |
  5810  |             R = R + 2;  |      2  |                         0  |
  5815  |  resetPlaceHolder_2();  |         |                            |
  5821  |             R = R + 2;  |      2  |                         0  |
  5826  |  resetPlaceHolder_2();  |         |                            |
  5832  |             R = R + 2;  |      2  |                         0  |
  5837  |  resetPlaceHolder_2();  |         |                            |
  5843  |             R = R + 2;  |      2  |                         0  |
  5848  |  resetPlaceHolder_2();  |         |                            |
  5854  |             R = R + 2;  |      2  |                         0  |
  5859  |  resetPlaceHolder_2();  |         |                            |
  5865  |             R = R + 2;  |      2  |                         0  |
  5870  |  resetPlaceHolder_2();  |         |                            |
  5876  |             R = R + 2;  |      2  |                         0  |
  5881  |  resetPlaceHolder_2();  |         |                            |
  5887  |             R = R + 2;  |      2  |                         0  |
  5892  |  resetPlaceHolder_2();  |         |                            |
  5898  |             R = R + 2;  |      2  |                         0  |
  5903  |  resetPlaceHolder_2();  |         |                            |
  5909  |             R = R + 2;  |      2  |                         0  |
  5914  |  resetPlaceHolder_2();  |         |                            |
  5920  |             R = R + 2;  |      2  |                         0  |
  5925  |  resetPlaceHolder_2();  |         |                            |
  5931  |             R = R + 2;  |      2  |                         0  |
  5936  |  resetPlaceHolder_2();  |         |                            |
  5942  |             R = R + 2;  |      2  |                         0  |
  5947  |  resetPlaceHolder_2();  |         |                            |
  5953  |             R = R + 2;  |      2  |                         0  |
  5958  |  resetPlaceHolder_2();  |         |                            |
  5964  |             R = R + 2;  |      2  |                         0  |
  5969  |  resetPlaceHolder_2();  |         |                            |
  5975  |             R = R + 2;  |      2  |                         0  |
  5980  |  resetPlaceHolder_2();  |         |                            |
  5986  |             R = R + 2;  |      2  |                         0  |
  5991  |  resetPlaceHolder_2();  |         |                            |
  5997  |             R = R + 2;  |      2  |                         0  |
  6002  |  resetPlaceHolder_2();  |         |                            |
  6008  |             R = R + 2;  |      2  |                         0  |
  6013  |  resetPlaceHolder_2();  |         |                            |
  6019  |             R = R + 2;  |      2  |                         0  |
  6024  |  resetPlaceHolder_2();  |         |                            |
  6030  |             R = R + 2;  |      2  |                         0  |
  6035  |  resetPlaceHolder_2();  |         |                            |
  6041  |             R = R + 2;  |      2  |                         0  |
  6046  |  resetPlaceHolder_2();  |         |                            |
  6052  |             R = R + 2;  |      2  |                         0  |
  6057  |  resetPlaceHolder_2();  |         |                            |
  6063  |             R = R + 2;  |      2  |                         0  |
  6068  |  resetPlaceHolder_2();  |         |                            |
  6074  |             R = R + 2;  |      2  |                         0  |
  6079  |  resetPlaceHolder_2();  |         |                            |
  6085  |             R = R + 2;  |      2  |                         0  |
  6090  |  resetPlaceHolder_2();  |         |                            |
  6096  |             R = R + 2;  |      2  |                         0  |
  6101  |  resetPlaceHolder_2();  |         |                            |
  6107  |             R = R + 1;  |      1  |                         0  |
  6112  |  resetPlaceHolder_1();  |         |                            |
  6126  |             R = R + 2;  |      2  |                         0  |
  6131  |  resetPlaceHolder_2();  |         |                            |
  6137  |             R = R + 2;  |      2  |                         0  |
  6142  |  resetPlaceHolder_2();  |         |                            |
  6148  |             R = R + 2;  |      2  |                         0  |
  6153  |  resetPlaceHolder_2();  |         |                            |
  6159  |             R = R + 2;  |      2  |                         0  |
  6164  |  resetPlaceHolder_2();  |         |                            |
  6170  |             R = R + 2;  |      2  |                         0  |
  6175  |  resetPlaceHolder_2();  |         |                            |
  6181  |             R = R + 2;  |      2  |                         0  |
  6186  |  resetPlaceHolder_2();  |         |                            |
  6192  |             R = R + 2;  |      2  |                         0  |
  6197  |  resetPlaceHolder_2();  |         |                            |
  6203  |             R = R + 2;  |      2  |                         0  |
  6208  |  resetPlaceHolder_2();  |         |                            |
  6214  |             R = R + 2;  |      2  |                         0  |
  6219  |  resetPlaceHolder_2();  |         |                            |
  6225  |             R = R + 2;  |      2  |                         0  |
  6230  |  resetPlaceHolder_2();  |         |                            |
  6236  |             R = R + 2;  |      2  |                         0  |
  6241  |  resetPlaceHolder_2();  |         |                            |
  6247  |             R = R + 2;  |      2  |                         0  |
  6252  |  resetPlaceHolder_2();  |         |                            |
  6258  |             R = R + 2;  |      2  |                         0  |
  6263  |  resetPlaceHolder_2();  |         |                            |
  6269  |             R = R + 2;  |      2  |                         0  |
  6274  |  resetPlaceHolder_2();  |         |                            |
  6280  |             R = R + 2;  |      2  |                         0  |
  6285  |  resetPlaceHolder_2();  |         |                            |
  6291  |             R = R + 2;  |      2  |                         0  |
  6296  |  resetPlaceHolder_2();  |         |                            |
  6302  |             R = R + 2;  |      2  |                         0  |
  6307  |  resetPlaceHolder_2();  |         |                            |
  6313  |             R = R + 2;  |      2  |                         0  |
  6318  |  resetPlaceHolder_2();  |         |                            |
  6324  |             R = R + 2;  |      2  |                         0  |
  6329  |  resetPlaceHolder_2();  |         |                            |
  6335  |             R = R + 2;  |      2  |                         0  |
  6340  |  resetPlaceHolder_2();  |         |                            |
  6346  |             R = R + 2;  |      2  |                         0  |
  6351  |  resetPlaceHolder_2();  |         |                            |
  6357  |             R = R + 2;  |      2  |                         0  |
  6362  |  resetPlaceHolder_2();  |         |                            |
  6368  |             R = R + 2;  |      2  |                         0  |
  6373  |  resetPlaceHolder_2();  |         |                            |
  6379  |             R = R + 2;  |      2  |                         0  |
  6384  |  resetPlaceHolder_2();  |         |                            |
  6390  |             R = R + 2;  |      2  |                         0  |
  6395  |  resetPlaceHolder_2();  |         |                            |
  6401  |             R = R + 2;  |      2  |                         0  |
  6406  |  resetPlaceHolder_2();  |         |                            |
  6412  |             R = R + 2;  |      2  |                         0  |
  6417  |  resetPlaceHolder_2();  |         |                            |
  6423  |             R = R + 2;  |      2  |                         0  |
  6428  |  resetPlaceHolder_2();  |         |                            |
  6434  |             R = R + 2;  |      2  |                         0  |
  6439  |  resetPlaceHolder_2();  |         |                            |
  6445  |             R = R + 2;  |      2  |                         0  |
  6450  |  resetPlaceHolder_2();  |         |                            |
  6456  |             R = R + 2;  |      2  |                         0  |
  6461  |  resetPlaceHolder_2();  |         |                            |
  6467  |             R = R + 2;  |      2  |                         0  |
  6472  |  resetPlaceHolder_2();  |         |                            |
  6478  |             R = R + 2;  |      2  |                         0  |
  6483  |  resetPlaceHolder_2();  |         |                            |
  6489  |             R = R + 2;  |      2  |                         0  |
  6494  |  resetPlaceHolder_2();  |         |                            |
  6500  |             R = R + 2;  |      2  |                         0  |
  6505  |  resetPlaceHolder_2();  |         |                            |
  6511  |             R = R + 2;  |      2  |                         0  |
  6516  |  resetPlaceHolder_2();  |         |                            |
  6522  |             R = R + 2;  |      2  |                         0  |
  6527  |  resetPlaceHolder_2();  |         |                            |
  6533  |             R = R + 2;  |      2  |                         0  |
  6538  |  resetPlaceHolder_2();  |         |                            |
  6544  |             R = R + 2;  |      2  |                         0  |
  6549  |  resetPlaceHolder_2();  |         |                            |
  6555  |             R = R + 2;  |      2  |                         0  |
  6560  |  resetPlaceHolder_2();  |         |                            |
  6566  |             R = R + 2;  |      2  |                         0  |
  6571  |  resetPlaceHolder_2();  |         |                            |
  6577  |             R = R + 2;  |      2  |                         0  |
  6582  |  resetPlaceHolder_2();  |         |                            |
  6588  |             R = R + 2;  |      2  |                         0  |
  6593  |  resetPlaceHolder_2();  |         |                            |
  6599  |             R = R + 2;  |      2  |                         0  |
  6604  |  resetPlaceHolder_2();  |         |                            |
  6610  |             R = R + 2;  |      2  |                         0  |
  6615  |  resetPlaceHolder_2();  |         |                            |
  6621  |             R = R + 2;  |      2  |                         0  |
  6626  |  resetPlaceHolder_2();  |         |                            |
  6632  |             R = R + 2;  |      2  |                         0  |
  6637  |  resetPlaceHolder_2();  |         |                            |
  6643  |             R = R + 2;  |      2  |                         0  |
  6648  |  resetPlaceHolder_2();  |         |                            |
  6654  |             R = R + 2;  |      2  |                         0  |
  6659  |  resetPlaceHolder_2();  |         |                            |
  6665  |             R = R + 2;  |      2  |                         0  |
  6670  |  resetPlaceHolder_2();  |         |                            |
  6676  |             R = R + 2;  |      2  |                         0  |
  6681  |  resetPlaceHolder_2();  |         |                            |
  6687  |             R = R + 2;  |      2  |                         0  |
  6692  |  resetPlaceHolder_2();  |         |                            |
  6698  |             R = R + 2;  |      2  |                         0  |
  6703  |  resetPlaceHolder_2();  |         |                            |
  6709  |             R = R + 2;  |      2  |                         0  |
  6714  |  resetPlaceHolder_2();  |         |                            |
  6720  |             R = R + 2;  |      2  |                         0  |
  6725  |  resetPlaceHolder_2();  |         |                            |
  6731  |             R = R + 2;  |      2  |                         0  |
  6736  |  resetPlaceHolder_2();  |         |                            |
  6742  |             R = R + 2;  |      2  |                         0  |
  6747  |  resetPlaceHolder_2();  |         |                            |
  6753  |             R = R + 2;  |      2  |                         0  |
  6758  |  resetPlaceHolder_2();  |         |                            |
  6764  |             R = R + 2;  |      2  |                         0  |
  6769  |  resetPlaceHolder_2();  |         |                            |
  6775  |             R = R + 2;  |      2  |                         0  |
  6780  |  resetPlaceHolder_2();  |         |                            |
  6786  |             R = R + 2;  |      2  |                         0  |
  6791  |  resetPlaceHolder_2();  |         |                            |
  6797  |             R = R + 2;  |      2  |                         0  |
  6802  |  resetPlaceHolder_2();  |         |                            |
  6808  |             R = R + 2;  |      2  |                         0  |
  6813  |  resetPlaceHolder_2();  |         |                            |
  6819  |             R = R + 2;  |      2  |                         0  |
  6824  |  resetPlaceHolder_2();  |         |                            |
  6830  |             R = R + 2;  |      2  |                         0  |
  6835  |  resetPlaceHolder_2();  |         |                            |
  6841  |             R = R + 2;  |      2  |                         0  |
  6846  |  resetPlaceHolder_2();  |         |                            |
  6852  |             R = R + 2;  |      2  |                         0  |
  6857  |  resetPlaceHolder_2();  |         |                            |
  6863  |             R = R + 2;  |      2  |                         0  |
  6868  |  resetPlaceHolder_2();  |         |                            |
  6874  |             R = R + 2;  |      2  |                         0  |
  6879  |  resetPlaceHolder_2();  |         |                            |
  6885  |             R = R + 2;  |      2  |                         0  |
  6890  |  resetPlaceHolder_2();  |         |                            |
  6896  |             R = R + 2;  |      2  |                         0  |
  6901  |  resetPlaceHolder_2();  |         |                            |
  6907  |             R = R + 2;  |      2  |                         0  |
  6912  |  resetPlaceHolder_2();  |         |                            |
  6918  |             R = R + 2;  |      2  |                         0  |
  6923  |  resetPlaceHolder_2();  |         |                            |
  6929  |             R = R + 2;  |      2  |                         0  |
  6934  |  resetPlaceHolder_2();  |         |                            |
  6940  |             R = R + 2;  |      2  |                         0  |
  6945  |  resetPlaceHolder_2();  |         |                            |
  6951  |             R = R + 2;  |      2  |                         0  |
  6956  |  resetPlaceHolder_2();  |         |                            |
  6962  |             R = R + 2;  |      2  |                         0  |
  6967  |  resetPlaceHolder_2();  |         |                            |
  6973  |             R = R + 2;  |      2  |                         0  |
  6978  |  resetPlaceHolder_2();  |         |                            |
  6984  |             R = R + 2;  |      2  |                         0  |
  6989  |  resetPlaceHolder_2();  |         |                            |
  6995  |             R = R + 2;  |      2  |                         0  |
  7000  |  resetPlaceHolder_2();  |         |                            |
  7006  |             R = R + 2;  |      2  |                         0  |
  7011  |  resetPlaceHolder_2();  |         |                            |
  7017  |             R = R + 2;  |      2  |                         0  |
  7022  |  resetPlaceHolder_2();  |         |                            |
  7028  |             R = R + 2;  |      2  |                         0  |
  7033  |  resetPlaceHolder_2();  |         |                            |
  7039  |             R = R + 2;  |      2  |                         0  |
  7044  |  resetPlaceHolder_2();  |         |                            |
  7050  |             R = R + 2;  |      2  |                         0  |
  7055  |  resetPlaceHolder_2();  |         |                            |
  7061  |             R = R + 2;  |      2  |                         0  |
  7066  |  resetPlaceHolder_2();  |         |                            |
  7072  |             R = R + 2;  |      2  |                         0  |
  7077  |  resetPlaceHolder_2();  |         |                            |
  7083  |             R = R + 2;  |      2  |                         0  |
  7088  |  resetPlaceHolder_2();  |         |                            |
  7094  |             R = R + 2;  |      2  |                         0  |
  7099  |  resetPlaceHolder_2();  |         |                            |
  7105  |             R = R + 2;  |      2  |                         0  |
  7110  |  resetPlaceHolder_2();  |         |                            |
  7116  |             R = R + 2;  |      2  |                         0  |
  7121  |  resetPlaceHolder_2();  |         |                            |
  7127  |             R = R + 2;  |      2  |                         0  |
  7132  |  resetPlaceHolder_2();  |         |                            |
  7138  |             R = R + 2;  |      2  |                         0  |
  7143  |  resetPlaceHolder_2();  |         |                            |
  7149  |             R = R + 2;  |      2  |                         0  |
  7154  |  resetPlaceHolder_2();  |         |                            |
  7160  |             R = R + 2;  |      2  |                         0  |
  7165  |  resetPlaceHolder_2();  |         |                            |
  7171  |             R = R + 2;  |      2  |                         0  |
  7176  |  resetPlaceHolder_2();  |         |                            |
  7182  |             R = R + 2;  |      2  |                         0  |
  7187  |  resetPlaceHolder_2();  |         |                            |
  7193  |             R = R + 2;  |      2  |                         0  |
  7198  |  resetPlaceHolder_2();  |         |                            |
  7204  |             R = R + 2;  |      2  |                         0  |
  7209  |  resetPlaceHolder_2();  |         |                            |
  7215  |             R = R + 2;  |      2  |                         0  |
  7220  |  resetPlaceHolder_2();  |         |                            |
  7226  |             R = R + 2;  |      2  |                         0  |
  7231  |  resetPlaceHolder_2();  |         |                            |
  7237  |             R = R + 2;  |      2  |                         0  |
  7242  |  resetPlaceHolder_2();  |         |                            |
  7248  |             R = R + 2;  |      2  |                         0  |
  7253  |  resetPlaceHolder_2();  |         |                            |
  7259  |             R = R + 2;  |      2  |                         0  |
  7264  |  resetPlaceHolder_2();  |         |                            |
  7270  |             R = R + 2;  |      2  |                         0  |
  7275  |  resetPlaceHolder_2();  |         |                            |
  7281  |             R = R + 2;  |      2  |                         0  |
  7286  |  resetPlaceHolder_2();  |         |                            |
  7292  |             R = R + 2;  |      2  |                         0  |
  7297  |  resetPlaceHolder_2();  |         |                            |
  7303  |             R = R + 2;  |      2  |                         0  |
  7308  |  resetPlaceHolder_2();  |         |                            |
  7314  |             R = R + 2;  |      2  |                         0  |
  7319  |  resetPlaceHolder_2();  |         |                            |
  7325  |             R = R + 2;  |      2  |                         0  |
  7330  |  resetPlaceHolder_2();  |         |                            |
  7336  |             R = R + 2;  |      2  |                         0  |
  7341  |  resetPlaceHolder_2();  |         |                            |
  7347  |             R = R + 2;  |      2  |                         0  |
  7352  |  resetPlaceHolder_2();  |         |                            |
  7358  |             R = R + 2;  |      2  |                         0  |
  7363  |  resetPlaceHolder_2();  |         |                            |
  7369  |             R = R + 2;  |      2  |                         0  |
  7374  |  resetPlaceHolder_2();  |         |                            |
  7380  |             R = R + 2;  |      2  |                         0  |
  7385  |  resetPlaceHolder_2();  |         |                            |
  7391  |             R = R + 2;  |      2  |                         0  |
  7396  |  resetPlaceHolder_2();  |         |                            |
  7402  |             R = R + 2;  |      2  |                         0  |
  7407  |  resetPlaceHolder_2();  |         |                            |
  7413  |             R = R + 2;  |      2  |                         0  |
  7418  |  resetPlaceHolder_2();  |         |                            |
  7424  |             R = R + 2;  |      2  |                         0  |
  7429  |  resetPlaceHolder_2();  |         |                            |
  7435  |             R = R + 2;  |      2  |                         0  |
  7440  |  resetPlaceHolder_2();  |         |                            |
  7446  |             R = R + 2;  |      2  |                         0  |
  7451  |  resetPlaceHolder_2();  |         |                            |
  7457  |             R = R + 2;  |      2  |                         0  |
  7462  |  resetPlaceHolder_2();  |         |                            |
  7468  |             R = R + 2;  |      2  |                         0  |
  7473  |  resetPlaceHolder_2();  |         |                            |
  7479  |             R = R + 2;  |      2  |                         0  |
  7484  |  resetPlaceHolder_2();  |         |                            |
  7490  |             R = R + 2;  |      2  |                         0  |
  7495  |  resetPlaceHolder_2();  |         |                            |
  7501  |             R = R + 2;  |      2  |                         0  |
  7506  |  resetPlaceHolder_2();  |         |                            |
  7512  |             R = R + 2;  |      2  |                         0  |
  7517  |  resetPlaceHolder_2();  |         |                            |
  7523  |             R = R + 2;  |      2  |                         0  |
  7528  |  resetPlaceHolder_2();  |         |                            |
  7534  |             R = R + 2;  |      2  |                         0  |
  7539  |  resetPlaceHolder_2();  |         |                            |
  7545  |             R = R + 2;  |      2  |                         0  |
  7550  |  resetPlaceHolder_2();  |         |                            |
  7556  |             R = R + 2;  |      2  |                         0  |
  7561  |  resetPlaceHolder_2();  |         |                            |
  7567  |             R = R + 2;  |      2  |                         0  |
  7572  |  resetPlaceHolder_2();  |         |                            |
  7578  |             R = R + 2;  |      2  |                         0  |
  7583  |  resetPlaceHolder_2();  |         |                            |
  7589  |             R = R + 2;  |      2  |                         0  |
  7594  |  resetPlaceHolder_2();  |         |                            |
  7600  |             R = R + 2;  |      2  |                         0  |
  7605  |  resetPlaceHolder_2();  |         |                            |
  7611  |             R = R + 2;  |      2  |                         0  |
  7616  |  resetPlaceHolder_2();  |         |                            |
  7622  |             R = R + 2;  |      2  |                         0  |
  7627  |  resetPlaceHolder_2();  |         |                            |
  7633  |             R = R + 2;  |      2  |                         0  |
  7638  |  resetPlaceHolder_2();  |         |                            |
  7644  |             R = R + 2;  |      2  |                         0  |
  7649  |  resetPlaceHolder_2();  |         |                            |
  7655  |             R = R + 2;  |      2  |                         0  |
  7660  |  resetPlaceHolder_2();  |         |                            |
  7666  |             R = R + 2;  |      2  |                         0  |
  7671  |  resetPlaceHolder_2();  |         |                            |
  7677  |             R = R + 2;  |      2  |                         0  |
  7682  |  resetPlaceHolder_2();  |         |                            |
  7688  |             R = R + 2;  |      2  |                         0  |
  7693  |  resetPlaceHolder_2();  |         |                            |
  7699  |             R = R + 2;  |      2  |                         0  |
  7704  |  resetPlaceHolder_2();  |         |                            |
  7710  |             R = R + 2;  |      2  |                         0  |
  7715  |  resetPlaceHolder_2();  |         |                            |
  7721  |             R = R + 2;  |      2  |                         0  |
  7726  |  resetPlaceHolder_2();  |         |                            |
  7732  |             R = R + 2;  |      2  |                         0  |
  7737  |  resetPlaceHolder_2();  |         |                            |
  7743  |             R = R + 2;  |      2  |                         0  |
  7748  |  resetPlaceHolder_2();  |         |                            |
  7754  |             R = R + 2;  |      2  |                         0  |
  7759  |  resetPlaceHolder_2();  |         |                            |
  7765  |             R = R + 2;  |      2  |                         0  |
  7770  |  resetPlaceHolder_2();  |         |                            |
  7776  |             R = R + 2;  |      2  |                         0  |
  7781  |  resetPlaceHolder_2();  |         |                            |
  7787  |             R = R + 2;  |      2  |                         0  |
  7792  |  resetPlaceHolder_2();  |         |                            |
  7798  |             R = R + 2;  |      2  |                         0  |
  7803  |  resetPlaceHolder_2();  |         |                            |
  7809  |             R = R + 2;  |      2  |                         0  |
  7814  |  resetPlaceHolder_2();  |         |                            |
  7820  |             R = R + 2;  |      2  |                         0  |
  7825  |  resetPlaceHolder_2();  |         |                            |
  7831  |             R = R + 2;  |      2  |                         0  |
  7836  |  resetPlaceHolder_2();  |         |                            |
  7842  |             R = R + 2;  |      2  |                         0  |
  7847  |  resetPlaceHolder_2();  |         |                            |
  7853  |             R = R + 2;  |      2  |                         0  |
  7858  |  resetPlaceHolder_2();  |         |                            |
  7864  |             R = R + 2;  |      2  |                         0  |
  7869  |  resetPlaceHolder_2();  |         |                            |
  7875  |             R = R + 2;  |      2  |                         0  |
  7880  |  resetPlaceHolder_2();  |         |                            |
  7886  |             R = R + 2;  |      2  |                         0  |
  7891  |  resetPlaceHolder_2();  |         |                            |
  7897  |             R = R + 2;  |      2  |                         0  |
  7902  |  resetPlaceHolder_2();  |         |                            |
  7908  |             R = R + 2;  |      2  |                         0  |
  7913  |  resetPlaceHolder_2();  |         |                            |
  7919  |             R = R + 2;  |      2  |                         0  |
  7924  |  resetPlaceHolder_2();  |         |                            |
  7930  |             R = R + 2;  |      2  |                         0  |
  7935  |  resetPlaceHolder_2();  |         |                            |
  7941  |             R = R + 2;  |      2  |                         0  |
  7946  |  resetPlaceHolder_2();  |         |                            |
  7952  |             R = R + 2;  |      2  |                         0  |
  7957  |  resetPlaceHolder_2();  |         |                            |
  7963  |             R = R + 2;  |      2  |                         0  |
  7968  |  resetPlaceHolder_2();  |         |                            |
  7974  |             R = R + 2;  |      2  |                         0  |
  7979  |  resetPlaceHolder_2();  |         |                            |
  7985  |             R = R + 2;  |      2  |                         0  |
  7990  |  resetPlaceHolder_2();  |         |                            |
  7996  |             R = R + 2;  |      2  |                         0  |
  8001  |  resetPlaceHolder_2();  |         |                            |
  8007  |             R = R + 2;  |      2  |                         0  |
  8012  |  resetPlaceHolder_2();  |         |                            |
  8018  |             R = R + 2;  |      2  |                         0  |
  8023  |  resetPlaceHolder_2();  |         |                            |
  8029  |             R = R + 2;  |      2  |                         0  |
  8034  |  resetPlaceHolder_2();  |         |                            |
  8040  |             R = R + 2;  |      2  |                         0  |
  8045  |  resetPlaceHolder_2();  |         |                            |
  8051  |             R = R + 2;  |      2  |                         0  |
  8056  |  resetPlaceHolder_2();  |         |                            |
  8062  |             R = R + 2;  |      2  |                         0  |
  8067  |  resetPlaceHolder_2();  |         |                            |
  8073  |             R = R + 1;  |      1  |                         0  |
  8078  |  resetPlaceHolder_1();  |         |                            |
  8092  |             R = R + 2;  |      2  |                         0  |
  8097  |  resetPlaceHolder_2();  |         |                            |
  8103  |             R = R + 2;  |      2  |                         0  |
  8108  |  resetPlaceHolder_2();  |         |                            |
  8114  |             R = R + 2;  |      2  |                         0  |
  8119  |  resetPlaceHolder_2();  |         |                            |
  8125  |             R = R + 2;  |      2  |                         0  |
  8130  |  resetPlaceHolder_2();  |         |                            |
  8136  |             R = R + 2;  |      2  |                         0  |
  8141  |  resetPlaceHolder_2();  |         |                            |
  8147  |             R = R + 2;  |      2  |                         0  |
  8152  |  resetPlaceHolder_2();  |         |                            |
  8158  |             R = R + 2;  |      2  |                         0  |
  8163  |  resetPlaceHolder_2();  |         |                            |
  8169  |             R = R + 2;  |      2  |                         0  |
  8174  |  resetPlaceHolder_2();  |         |                            |
  8180  |             R = R + 2;  |      2  |                         0  |
  8185  |  resetPlaceHolder_2();  |         |                            |
  8191  |             R = R + 2;  |      2  |                         0  |
  8196  |  resetPlaceHolder_2();  |         |                            |
  8202  |             R = R + 2;  |      2  |                         0  |
  8207  |  resetPlaceHolder_2();  |         |                            |
  8213  |             R = R + 2;  |      2  |                         0  |
  8218  |  resetPlaceHolder_2();  |         |                            |
  8224  |             R = R + 2;  |      2  |                         0  |
  8229  |  resetPlaceHolder_2();  |         |                            |
  8235  |             R = R + 2;  |      2  |                         0  |
  8240  |  resetPlaceHolder_2();  |         |                            |
  8246  |             R = R + 2;  |      2  |                         0  |
  8251  |  resetPlaceHolder_2();  |         |                            |
  8257  |             R = R + 2;  |      2  |                         0  |
  8262  |  resetPlaceHolder_2();  |         |                            |
  8268  |             R = R + 2;  |      2  |                         0  |
  8273  |  resetPlaceHolder_2();  |         |                            |
  8279  |             R = R + 2;  |      2  |                         0  |
  8284  |  resetPlaceHolder_2();  |         |                            |
  8290  |             R = R + 2;  |      2  |                         0  |
  8295  |  resetPlaceHolder_2();  |         |                            |
  8301  |             R = R + 2;  |      2  |                         0  |
  8306  |  resetPlaceHolder_2();  |         |                            |
  8312  |             R = R + 2;  |      2  |                         0  |
  8317  |  resetPlaceHolder_2();  |         |                            |
  8323  |             R = R + 2;  |      2  |                         0  |
  8328  |  resetPlaceHolder_2();  |         |                            |
  8334  |             R = R + 2;  |      2  |                         0  |
  8339  |  resetPlaceHolder_2();  |         |                            |
  8345  |             R = R + 2;  |      2  |                         0  |
  8350  |  resetPlaceHolder_2();  |         |                            |
  8356  |             R = R + 2;  |      2  |                         0  |
  8361  |  resetPlaceHolder_2();  |         |                            |
  8367  |             R = R + 2;  |      2  |                         0  |
  8372  |  resetPlaceHolder_2();  |         |                            |
  8378  |             R = R + 2;  |      2  |                         0  |
  8383  |  resetPlaceHolder_2();  |         |                            |
  8389  |             R = R + 2;  |      2  |                         0  |
  8394  |  resetPlaceHolder_2();  |         |                            |
  8400  |             R = R + 2;  |      2  |                         0  |
  8405  |  resetPlaceHolder_2();  |         |                            |
  8411  |             R = R + 2;  |      2  |                         0  |
  8416  |  resetPlaceHolder_2();  |         |                            |
  8422  |             R = R + 2;  |      2  |                         0  |
  8427  |  resetPlaceHolder_2();  |         |                            |
  8433  |             R = R + 2;  |      2  |                         0  |
  8438  |  resetPlaceHolder_2();  |         |                            |
  8444  |             R = R + 1;  |      1  |                         0  |
  8449  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> // reset R0
resetPlaceHolder_1(); -> // reset R0
use R 2 -> R0 = R0 + 2;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	4m28.155s
user	4m40.261s
sys	0m2.050s

2023-01-26 11:17:57,150 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:18:08,430 INFO     Done. Execution time: 11.279091835021973 seconds
2023-01-26 11:18:08,430 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * sorted) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (sorted + (2 * sorted))) || ((0 + (D0 + (D0p * (C0 - 1)))) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun sorted () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> sorted 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 sorted))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 sorted))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C22 0)
     (>= C19 0)
     (>= C3 0)
     (>= C25 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    14)  (define-fun sorted () Int    3)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted))))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (+ sorted (* 2 sorted)))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `9.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1117-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1117-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.272s
user	0m24.400s
sys	0m2.950s

2023-01-26 11:18:08,430 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-26 11:18:08,430 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:18:10,167 INFO     Done. Execution time: 1.736814260482788 seconds
2023-01-26 11:18:10,167 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:122)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.729s
user	0m3.223s
sys	0m0.146s

2023-01-26 11:18:10,168 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
2023-01-26 11:18:10,168 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-26 11:18:11,975 INFO     Done. Execution time: 1.8071224689483643 seconds
2023-01-26 11:18:11,975 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:227)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:197)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:113)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:168)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:160)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:96)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:145)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:69)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:50)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:106)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:89)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:89)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:64)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:63)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:59)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:59)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.798s
user	0m3.336s
sys	0m0.228s

2023-01-26 11:18:11,976 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:18:12,964 INFO     Done. Execution time: 0.9879796504974365 seconds
2023-01-26 11:18:12,964 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m0.980s
user	0m1.586s
sys	0m0.098s

2023-01-26 11:18:12,964 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-26 11:18:12,964 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:18:21,785 INFO     Done. Execution time: 8.820030927658081 seconds
2023-01-26 11:18:21,785 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz3964119756688698745/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3964119756688698745/bin -o /tmp/qfuzz3964119756688698745/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3964119756688698745/bin
Found file /tmp/qfuzz3964119756688698745/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz3964119756688698745/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3964119756688698745/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3964119756688698745/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3964119756688698745/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3964119756688698745/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 38, exec speed = 125699 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 27, exec speed = 123071 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m27 to 38 bits (average: 32.50 bits)
[1;90m        Exec timing : [0m123k to 125k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3964119756688698745/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [53.00]
1; /tmp/qfuzz3964119756688698745/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3964119756688698745/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3964119756688698745/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3964119756688698745/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3964119756688698745/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [160,196,177,32,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [112,67,99,192,109]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.811s
user	0m6.272s
sys	0m0.525s

2023-01-26 11:18:21,785 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
2023-01-26 11:18:21,785 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-26 11:18:24,639 INFO     Done. Execution time: 2.853471279144287 seconds
2023-01-26 11:18:24,639 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [160,196,177,32,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [112,67,99,192,109])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 62):
                                                                                                                                                                
 Index  |              Commands               |  Costs  |  R  |  appendTo  |  choice  |  i  |  lastHold  |  pattern  |  pos  |  start  |       stopIndex       |
----------------------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |            |          |     |            |        2  |       |         |  [160,196,177,32,47]  |
    19  |                  int appendTo = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [160,196,177,32,47]  |
    20  |                      // int R = 0;  |         |  0  |         0  |          |     |            |        2  |       |         |  [160,196,177,32,47]  |
    21  |  // mostPreciseBound(R <= patte...  |         |  0  |         0  |          |     |            |        2  |       |         |  [160,196,177,32,47]  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         0  |          |     |            |        2  |       |         |  [160,196,177,32,47]  |
    28  |  int pos = ndInt2(0, pattern - ...  |         |  0  |         0  |          |     |            |        2  |    1  |         |  [160,196,177,32,47]  |
    30  |                   int start = pos;  |         |  0  |         0  |          |     |            |        2  |    1  |      1  |  [160,196,177,32,47]  |
    32  |              int lastHold = start;  |         |  0  |         0  |          |     |         1  |        2  |    1  |      1  |  [160,196,177,32,47]  |
    34  |                    int choice = 0;  |         |  0  |         0  |       0  |     |         1  |        2  |    1  |      1  |  [160,196,177,32,47]  |
    36  |                       int i = pos;  |         |  0  |         0  |       0  |  1  |         1  |        2  |    1  |      1  |  [160,196,177,32,47]  |
    42  |  choice = arrayRead(stopIndex, ...  |         |  0  |         0  |     196  |  1  |         1  |        2  |    1  |      1  |  [160,196,177,32,47]  |
    53  |                     pos = pos + 1;  |         |  0  |         0  |     196  |  1  |         1  |        2  |    2  |      1  |  [160,196,177,32,47]  |
    57  |                         i = i + 1;  |         |  0  |         0  |     196  |  2  |         1  |        2  |    2  |      1  |  [160,196,177,32,47]  |
    58  |              resetPlaceHolder_1();  |         |  0  |         0  |     196  |  2  |         1  |        2  |    2  |      1  |  [160,196,177,32,47]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    58  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java

real	0m2.845s
user	0m5.740s
sys	0m0.292s

2023-01-26 11:18:24,639 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:18:26,694 INFO     Done. Execution time: 2.054851770401001 seconds
2023-01-26 11:18:26,695 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStopIndex = 0;
    int lastIndexOfStopIndex = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < pattern) || (R == pattern));
    if (((pattern < 0) || (pattern == 0)) || ((stopIndex < pattern) || (stopIndex == pattern)))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int pos = ndInt2(0, pattern - 1);
    int start = pos;
    int lastHold = start;
    int choice = 0;
    int i = pos;
    while (i < pattern)
    {
      {
        temporaryStopIndex = ndInt2(lastIndexOfStopIndex, stopIndex);
        choice = temporaryStopIndex - lastIndexOfStopIndex;
        lastIndexOfStopIndex = temporaryStopIndex;
      }
      if ((choice < 102) || (choice == 102))
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        R = R + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R pattern) (= R pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R pattern) (= R pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R pattern) (= R pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1118-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1118-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.047s
user	0m3.597s
sys	0m0.260s

2023-01-26 11:18:26,695 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-26 11:18:26,695 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:18:35,645 INFO     Done. Execution time: 8.949911832809448 seconds
2023-01-26 11:18:35,645 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz6604471383869195976/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6604471383869195976/bin -o /tmp/qfuzz6604471383869195976/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6604471383869195976/bin
Found file /tmp/qfuzz6604471383869195976/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz6604471383869195976/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6604471383869195976/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6604471383869195976/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6604471383869195976/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz6604471383869195976/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 120729 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 121660 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m120k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6604471383869195976/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz6604471383869195976/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6604471383869195976/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6604471383869195976/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6604471383869195976/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6604471383869195976/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 193, 2, 196
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 175, 2, 67
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.941s
user	0m6.624s
sys	0m0.452s

2023-01-26 11:18:35,645 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
2023-01-26 11:18:35,646 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-26 11:18:38,587 INFO     Done. Execution time: 2.9412388801574707 seconds
2023-01-26 11:18:38,587 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(193, 2, 196)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(175, 2, 67)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                           
 Index  |   Commands   |  Costs  |  R  |  argumentTypes  |   d   |  recursiveTypeIndexes  |
-------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |            193  |  196  |                     2  |
    32  |     return;  |         |  0  |            193  |  196  |                     2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java

real	0m2.932s
user	0m5.950s
sys	0m0.304s

2023-01-26 11:18:38,587 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:18:40,703 INFO     Done. Execution time: 2.115818738937378 seconds
2023-01-26 11:18:40,704 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (R == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((R < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (R == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      R = R + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      R = R + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        R = R + sep2;
        builder = builder + 1;
        R = R + 1;
        k = k + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= R (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1118-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1118-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.108s
user	0m3.734s
sys	0m0.248s

2023-01-26 11:18:40,704 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-26 11:18:40,704 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:18:49,527 INFO     Done. Execution time: 8.823298931121826 seconds
2023-01-26 11:18:49,528 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz5231494664697018781/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5231494664697018781/bin -o /tmp/qfuzz5231494664697018781/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5231494664697018781/bin
Found file /tmp/qfuzz5231494664697018781/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz5231494664697018781/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5231494664697018781/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5231494664697018781/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5231494664697018781/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz5231494664697018781/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 126565 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 122545 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m122k to 126k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5231494664697018781/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz5231494664697018781/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5231494664697018781/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5231494664697018781/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5231494664697018781/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5231494664697018781/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.816s
user	0m6.307s
sys	0m0.460s

2023-01-26 11:18:49,528 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
2023-01-26 11:18:49,528 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-26 11:18:54,908 INFO     Done. Execution time: 5.379809379577637 seconds
2023-01-26 11:18:54,909 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |    2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |    2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |    2  |
    13  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m5.371s
user	0m9.838s
sys	0m1.579s

2023-01-26 11:18:54,909 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:19:02,384 INFO     Done. Execution time: 7.474924087524414 seconds
2023-01-26 11:19:02,384 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * src) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < src) || ((0 + (D0 + (D0p * (C0 - 1)))) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) src))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) src)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1118-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1118-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.467s
user	0m15.363s
sys	0m2.525s

2023-01-26 11:19:02,384 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-26 11:19:02,384 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:19:11,331 INFO     Done. Execution time: 8.94669795036316 seconds
2023-01-26 11:19:11,331 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz4508506851255247032/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4508506851255247032/bin -o /tmp/qfuzz4508506851255247032/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4508506851255247032/bin
Found file /tmp/qfuzz4508506851255247032/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz4508506851255247032/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4508506851255247032/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4508506851255247032/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4508506851255247032/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz4508506851255247032/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 138431 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 134156 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m134k to 138k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4508506851255247032/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 5; 260.00; [1355.00,1995.00,2255.00,3526.00,3855.00]
2; /tmp/qfuzz4508506851255247032/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 5; 49.00; [655.00,3215.00,3555.00,3886.00,3935.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4508506851255247032/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4508506851255247032/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4508506851255247032/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4508506851255247032/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.937s
user	0m6.626s
sys	0m0.451s

2023-01-26 11:19:11,332 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-26 11:19:11,332 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-26 11:19:18,589 INFO     Done. Execution time: 7.2573370933532715 seconds
2023-01-26 11:19:18,590 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                        
 Index  |              Commands               |  Costs  |   R   |  chunk  |          diff          |  i  |  lhsBuilder  |  rhsBuilder  |
----------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |  [193,160,196,177,32]  |     |              |              |
    11  |                int lhsBuilder = 0;  |         |    0  |         |  [193,160,196,177,32]  |     |           0  |              |
    13  |                int rhsBuilder = 0;  |         |    0  |         |  [193,160,196,177,32]  |     |           0  |           0  |
    14  |                      // int R = 0;  |         |    0  |         |  [193,160,196,177,32]  |     |           0  |           0  |
    15  |  // mostPreciseBound(R <= array...  |         |    0  |         |  [193,160,196,177,32]  |     |           0  |           0  |
    16  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |  [193,160,196,177,32]  |     |           0  |           0  |
    18  |                     int chunk = 0;  |         |    0  |      0  |  [193,160,196,177,32]  |     |           0  |           0  |
    20  |                         int i = 0;  |         |    0  |      0  |  [193,160,196,177,32]  |  0  |           0  |           0  |
    26  |        chunk = arrayRead(diff, i);  |         |    0  |    193  |  [193,160,196,177,32]  |  0  |           0  |           0  |
    29  |                     R = R + chunk;  |    193  |  193  |    193  |  [193,160,196,177,32]  |  0  |           0  |           0  |
    33  |                         i = i + 1;  |         |  193  |    193  |  [193,160,196,177,32]  |  1  |           0  |           0  |
    34  |              resetPlaceHolder_1();  |         |  193  |    193  |  [193,160,196,177,32]  |  1  |           0  |           0  |
    40  |        chunk = arrayRead(diff, i);  |         |  193  |    160  |  [193,160,196,177,32]  |  1  |           0  |           0  |
    43  |                     R = R + chunk;  |    160  |  353  |    160  |  [193,160,196,177,32]  |  1  |           0  |           0  |
    47  |                         i = i + 1;  |         |  353  |    160  |  [193,160,196,177,32]  |  2  |           0  |           0  |
    48  |              resetPlaceHolder_1();  |         |  353  |    160  |  [193,160,196,177,32]  |  2  |           0  |           0  |
    54  |        chunk = arrayRead(diff, i);  |         |  353  |    196  |  [193,160,196,177,32]  |  2  |           0  |           0  |
    57  |                     R = R + chunk;  |    196  |  549  |    196  |  [193,160,196,177,32]  |  2  |           0  |           0  |
    61  |                         i = i + 1;  |         |  549  |    196  |  [193,160,196,177,32]  |  3  |           0  |           0  |
    62  |              resetPlaceHolder_1();  |         |  549  |    196  |  [193,160,196,177,32]  |  3  |           0  |           0  |
    68  |        chunk = arrayRead(diff, i);  |         |  549  |    177  |  [193,160,196,177,32]  |  3  |           0  |           0  |
    71  |                     R = R + chunk;  |    177  |  726  |    177  |  [193,160,196,177,32]  |  3  |           0  |           0  |
    75  |                         i = i + 1;  |         |  726  |    177  |  [193,160,196,177,32]  |  4  |           0  |           0  |
    76  |              resetPlaceHolder_1();  |         |  726  |    177  |  [193,160,196,177,32]  |  4  |           0  |           0  |
    82  |        chunk = arrayRead(diff, i);  |         |  726  |     32  |  [193,160,196,177,32]  |  4  |           0  |           0  |
    85  |                     R = R + chunk;  |     32  |  758  |     32  |  [193,160,196,177,32]  |  4  |           0  |           0  |
    89  |                         i = i + 1;  |         |  758  |     32  |  [193,160,196,177,32]  |  5  |           0  |           0  |
    90  |              resetPlaceHolder_1();  |         |  758  |     32  |  [193,160,196,177,32]  |  5  |           0  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [57, 29, 85, 71, 43]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,43,57,71,85}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |         R = R + chunk;  |    193  |                         0  |
    34  |  resetPlaceHolder_1();  |         |                            |
    43  |         R = R + chunk;  |    160  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    57  |         R = R + chunk;  |    196  |                         0  |
    62  |  resetPlaceHolder_1();  |         |                            |
    71  |         R = R + chunk;  |    177  |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |
    85  |         R = R + chunk;  |     32  |                         0  |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m7.249s
user	0m11.518s
sys	0m2.822s

2023-01-26 11:19:18,590 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:19:25,999 INFO     Done. Execution time: 7.409522294998169 seconds
2023-01-26 11:19:26,000 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * diff) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * diff) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < diff) || ((0 + (D0 + (D0p * (C0 - 1)))) == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 diff)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) diff))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) diff)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `5.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1119-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1119-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.402s
user	0m16.056s
sys	0m2.168s

2023-01-26 11:19:26,000 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-26 11:19:26,000 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:19:34,842 INFO     Done. Execution time: 8.84168553352356 seconds
2023-01-26 11:19:34,842 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz3461895188669858459/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3461895188669858459/bin -o /tmp/qfuzz3461895188669858459/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3461895188669858459/bin
Found file /tmp/qfuzz3461895188669858459/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz3461895188669858459/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3461895188669858459/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3461895188669858459/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3461895188669858459/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3461895188669858459/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 143507 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 142087 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m142k to 143k us (average: 142k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3461895188669858459/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 7; 27.00; [1355.00,1995.00,2188.00,2228.00,2255.00,3524.00,3855.00]
2; /tmp/qfuzz3461895188669858459/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 7; 51.00; [655.00,948.00,3215.00,3368.00,3555.00,3884.00,3935.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3461895188669858459/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3461895188669858459/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3461895188669858459/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3461895188669858459/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 47, 168
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 109, 111
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.833s
user	0m6.641s
sys	0m0.523s

2023-01-26 11:19:34,842 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-26 11:19:34,843 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-26 11:19:44,672 INFO     Done. Execution time: 9.829605102539062 seconds
2023-01-26 11:19:44,673 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 47, 168)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 109, 111)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 136):
                                                                                                                                
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  months  |         tokens         |  years  |
--------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |     0  |         |     |     168  |  [193,160,196,177,32]  |     47  |
    26  |                      // int R = 0;  |         |     0  |         |     |     168  |  [193,160,196,177,32]  |     47  |
    27  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |     168  |  [193,160,196,177,32]  |     47  |
    28  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     168  |  [193,160,196,177,32]  |     47  |
    30  |                     int chunk = 0;  |         |     0  |      0  |     |     168  |  [193,160,196,177,32]  |     47  |
    32  |                         int i = 0;  |         |     0  |      0  |  0  |     168  |  [193,160,196,177,32]  |     47  |
    38  |      chunk = arrayRead(tokens, i);  |         |     0  |    193  |  0  |     168  |  [193,160,196,177,32]  |     47  |
    41  |                     R = R + chunk;  |    193  |   193  |    193  |  0  |     168  |  [193,160,196,177,32]  |     47  |
    44  |                     R = R + years;  |     47  |   240  |    193  |  0  |     168  |  [193,160,196,177,32]  |     47  |
    47  |                    R = R + months;  |    168  |   408  |    193  |  0  |     168  |  [193,160,196,177,32]  |     47  |
    51  |                         i = i + 1;  |         |   408  |    193  |  1  |     168  |  [193,160,196,177,32]  |     47  |
    52  |              resetPlaceHolder_1();  |         |   408  |    193  |  1  |     168  |  [193,160,196,177,32]  |     47  |
    58  |      chunk = arrayRead(tokens, i);  |         |   408  |    160  |  1  |     168  |  [193,160,196,177,32]  |     47  |
    61  |                     R = R + chunk;  |    160  |   568  |    160  |  1  |     168  |  [193,160,196,177,32]  |     47  |
    64  |                     R = R + years;  |     47  |   615  |    160  |  1  |     168  |  [193,160,196,177,32]  |     47  |
    67  |                    R = R + months;  |    168  |   783  |    160  |  1  |     168  |  [193,160,196,177,32]  |     47  |
    71  |                         i = i + 1;  |         |   783  |    160  |  2  |     168  |  [193,160,196,177,32]  |     47  |
    72  |              resetPlaceHolder_1();  |         |   783  |    160  |  2  |     168  |  [193,160,196,177,32]  |     47  |
    78  |      chunk = arrayRead(tokens, i);  |         |   783  |    196  |  2  |     168  |  [193,160,196,177,32]  |     47  |
    81  |                     R = R + chunk;  |    196  |   979  |    196  |  2  |     168  |  [193,160,196,177,32]  |     47  |
    84  |                     R = R + years;  |     47  |  1026  |    196  |  2  |     168  |  [193,160,196,177,32]  |     47  |
    87  |                    R = R + months;  |    168  |  1194  |    196  |  2  |     168  |  [193,160,196,177,32]  |     47  |
    91  |                         i = i + 1;  |         |  1194  |    196  |  3  |     168  |  [193,160,196,177,32]  |     47  |
    92  |              resetPlaceHolder_1();  |         |  1194  |    196  |  3  |     168  |  [193,160,196,177,32]  |     47  |
    98  |      chunk = arrayRead(tokens, i);  |         |  1194  |    177  |  3  |     168  |  [193,160,196,177,32]  |     47  |
   101  |                     R = R + chunk;  |    177  |  1371  |    177  |  3  |     168  |  [193,160,196,177,32]  |     47  |
   104  |                     R = R + years;  |     47  |  1418  |    177  |  3  |     168  |  [193,160,196,177,32]  |     47  |
   107  |                    R = R + months;  |    168  |  1586  |    177  |  3  |     168  |  [193,160,196,177,32]  |     47  |
   111  |                         i = i + 1;  |         |  1586  |    177  |  4  |     168  |  [193,160,196,177,32]  |     47  |
   112  |              resetPlaceHolder_1();  |         |  1586  |    177  |  4  |     168  |  [193,160,196,177,32]  |     47  |
   118  |      chunk = arrayRead(tokens, i);  |         |  1586  |     32  |  4  |     168  |  [193,160,196,177,32]  |     47  |
   121  |                     R = R + chunk;  |     32  |  1618  |     32  |  4  |     168  |  [193,160,196,177,32]  |     47  |
   124  |                     R = R + years;  |     47  |  1665  |     32  |  4  |     168  |  [193,160,196,177,32]  |     47  |
   127  |                    R = R + months;  |    168  |  1833  |     32  |  4  |     168  |  [193,160,196,177,32]  |     47  |
   131  |                         i = i + 1;  |         |  1833  |     32  |  5  |     168  |  [193,160,196,177,32]  |     47  |
   132  |              resetPlaceHolder_1();  |         |  1833  |     32  |  5  |     168  |  [193,160,196,177,32]  |     47  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 121, 84, 61, 124, 41, 64, 44, 81, 67, 127, 87, 104, 107, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {104}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {124}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {64}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {104}; {124}; {44}; {64}; {84}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {104}; {124}; {44}; {64}; {84} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    193  |                            |
    44  |         R = R + years;  |     47  |                         0  |
    47  |        R = R + months;  |    168  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |    160  |                            |
    64  |         R = R + years;  |     47  |                         1  |
    67  |        R = R + months;  |    168  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |    196  |                            |
    84  |         R = R + years;  |     47  |                         2  |
    87  |        R = R + months;  |    168  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    177  |                            |
   104  |         R = R + years;  |     47  |                         3  |
   107  |        R = R + months;  |    168  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     32  |                            |
   124  |         R = R + years;  |     47  |                         4  |
   127  |        R = R + months;  |    168  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {107}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {127}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {47}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {67}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {107}; {127}; {47}; {67}; {87}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {107}; {127}; {47}; {67}; {87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    41  |         R = R + chunk;  |    193  |                            |
    44  |         R = R + years;  |     47  |                            |
    47  |        R = R + months;  |    168  |                         0  |
    52  |  resetPlaceHolder_1();  |         |                            |
    61  |         R = R + chunk;  |    160  |                            |
    64  |         R = R + years;  |     47  |                            |
    67  |        R = R + months;  |    168  |                         1  |
    72  |  resetPlaceHolder_1();  |         |                            |
    81  |         R = R + chunk;  |    196  |                            |
    84  |         R = R + years;  |     47  |                            |
    87  |        R = R + months;  |    168  |                         2  |
    92  |  resetPlaceHolder_1();  |         |                            |
   101  |         R = R + chunk;  |    177  |                            |
   104  |         R = R + years;  |     47  |                            |
   107  |        R = R + months;  |    168  |                         3  |
   112  |  resetPlaceHolder_1();  |         |                            |
   121  |         R = R + chunk;  |     32  |                            |
   124  |         R = R + years;  |     47  |                            |
   127  |        R = R + months;  |    168  |                         4  |
   132  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 121, 61, 41, 81]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}; {124}; {44}; {64}; {84}
GroupID(1): {107}; {127}; {47}; {67}; {87}
GroupID(2): {41,61,81,101,121}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    41  |         R = R + chunk;  |    193  |                            |                            |                         0  |
    44  |         R = R + years;  |     47  |                         0  |                            |                            |
    47  |        R = R + months;  |    168  |                            |                         0  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    61  |         R = R + chunk;  |    160  |                            |                            |                         0  |
    64  |         R = R + years;  |     47  |                         1  |                            |                            |
    67  |        R = R + months;  |    168  |                            |                         1  |                            |
    72  |  resetPlaceHolder_1();  |         |                            |                            |                            |
    81  |         R = R + chunk;  |    196  |                            |                            |                         0  |
    84  |         R = R + years;  |     47  |                         2  |                            |                            |
    87  |        R = R + months;  |    168  |                            |                         2  |                            |
    92  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   101  |         R = R + chunk;  |    177  |                            |                            |                         0  |
   104  |         R = R + years;  |     47  |                         3  |                            |                            |
   107  |        R = R + months;  |    168  |                            |                         3  |                            |
   112  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   121  |         R = R + chunk;  |     32  |                            |                            |                         0  |
   124  |         R = R + years;  |     47  |                         4  |                            |                            |
   127  |        R = R + months;  |    168  |                            |                         4  |                            |
   132  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(52, 72, 92, 112)
GroupID(1): Set(52, 72, 92, 112)
GroupID(2): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R months -> R1 = R1 + months;
use R chunk -> R2 = R2 + chunk;
resetPlaceHolder_1(); -> {
  // reset R2
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R years -> R0 = R0 + years;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m9.819s
user	0m16.102s
sys	0m4.363s

2023-01-26 11:19:44,673 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:20:43,760 INFO     Done. Execution time: 59.08682131767273 seconds
2023-01-26 11:20:43,760 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound(((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) < (tokens + (tokens * (years + months)))) || ((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) + (D2 + (D2p * (C2 - 1)))) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      D2 = D2 + chunk;
      D0 = D0 + years;
      D1 = D1 + months;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p 0)` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 months)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 months)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 years)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 tokens)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 years)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 0)` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 tokens)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p))
      (a!3 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D2 a!2 D0 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)) D2 (* D2p (- C2 1)))))
(let ((a!2 (< a!1 (+ tokens (* tokens (+ years months)))))
      (a!3 (= a!1 (+ tokens (* tokens (+ years months))))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `57.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1119-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1119-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m59.078s
user	3m0.502s
sys	0m20.339s

2023-01-26 11:20:43,760 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-26 11:20:43,760 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:20:53,038 INFO     Done. Execution time: 9.277068376541138 seconds
2023-01-26 11:20:53,038 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz2607811822546164825/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2607811822546164825/bin -o /tmp/qfuzz2607811822546164825/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2607811822546164825/bin
Found file /tmp/qfuzz2607811822546164825/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz2607811822546164825/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2607811822546164825/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2607811822546164825/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2607811822546164825/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2607811822546164825/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 128691 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 123273 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m123k to 128k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2607811822546164825/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 4.00; [30.00,34.00]
2; /tmp/qfuzz2607811822546164825/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 4.00; [30.00,34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2607811822546164825/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2607811822546164825/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2607811822546164825/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2607811822546164825/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.269s
user	0m7.220s
sys	0m0.485s

2023-01-26 11:20:53,038 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
2023-01-26 11:20:53,039 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-26 11:20:58,236 INFO     Done. Execution time: 5.197236776351929 seconds
2023-01-26 11:20:58,236 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 40):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          2  |     |
    10  |                      // int R = 0;  |         |  0  |          2  |     |
    11  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    14  |                         int i = 0;  |         |  0  |          2  |  0  |
    20  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    24  |                         i = i + 1;  |         |  1  |          2  |  1  |
    25  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    31  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    35  |                         i = i + 1;  |         |  2  |          2  |  2  |
    36  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [20, 31]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {20}; {31}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {20}; {31} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {20}; {31}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    20  |             R = R + 1;  |      1  |                         0  |
    25  |  resetPlaceHolder_1();  |         |                            |
    31  |             R = R + 1;  |      1  |                         1  |
    36  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(25)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m5.187s
user	0m8.882s
sys	0m1.632s

2023-01-26 11:20:58,236 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:21:05,894 INFO     Done. Execution time: 7.657629728317261 seconds
2023-01-26 11:21:05,894 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < className) || ((0 + (D0 + (D0p * (C0 - 1)))) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) className))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) className)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `5.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1120-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1120-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.649s
user	0m16.672s
sys	0m2.722s

2023-01-26 11:21:05,894 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-26 11:21:05,895 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:21:15,143 INFO     Done. Execution time: 9.248170852661133 seconds
2023-01-26 11:21:15,143 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz2879692938190880525/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2879692938190880525/bin -o /tmp/qfuzz2879692938190880525/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2879692938190880525/bin
Found file /tmp/qfuzz2879692938190880525/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz2879692938190880525/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2879692938190880525/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2879692938190880525/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2879692938190880525/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2879692938190880525/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 93, exec speed = 138394 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 93, exec speed = 130404 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m93 to 93 bits (average: 93.00 bits)
[1;90m        Exec timing : [0m130k to 138k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2879692938190880525/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 9; 1.00; [28.00,32.00,35.50,37.00,1348.00,1988.00,2248.00,3508.00,3848.00]
2; /tmp/qfuzz2879692938190880525/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 9; 1.00; [28.00,32.00,35.50,37.00,648.00,3208.00,3548.00,3868.00,3928.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2879692938190880525/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2879692938190880525/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2879692938190880525/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2879692938190880525/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.240s
user	0m7.582s
sys	0m0.493s

2023-01-26 11:21:15,143 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-26 11:21:15,144 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-26 11:21:25,491 INFO     Done. Execution time: 10.346778154373169 seconds
2023-01-26 11:21:25,491 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 191):
                                                                                                                     
 Index  |              Commands               |  Costs  |   R   |      baseMessage       |  buffer  |  chunk  |  i  |
---------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |  [193,160,196,177,32]  |          |         |     |
    11  |                    int buffer = 0;  |         |    0  |  [193,160,196,177,32]  |       0  |         |     |
    12  |                      // int R = 0;  |         |    0  |  [193,160,196,177,32]  |       0  |         |     |
    13  |  // mostPreciseBound(R <= 3 + 6...  |         |    0  |  [193,160,196,177,32]  |       0  |         |     |
    14  |  // lessPreciseBound(R <= MAX +...  |         |    0  |  [193,160,196,177,32]  |       0  |         |     |
    17  |                         R = R + 1;  |      1  |    1  |  [193,160,196,177,32]  |       0  |         |     |
    20  |                         R = R + 1;  |      1  |    2  |  [193,160,196,177,32]  |       0  |         |     |
    22  |                     int chunk = 0;  |         |    2  |  [193,160,196,177,32]  |       0  |      0  |     |
    24  |                         int i = 0;  |         |    2  |  [193,160,196,177,32]  |       0  |      0  |  0  |
    30  |  chunk = arrayRead(baseMessage,...  |         |    2  |  [193,160,196,177,32]  |       0  |    193  |  0  |
    33  |                         R = R + 1;  |      1  |    3  |  [193,160,196,177,32]  |       0  |    193  |  0  |
    36  |                         R = R + 1;  |      1  |    4  |  [193,160,196,177,32]  |       0  |    193  |  0  |
    39  |                         R = R + 1;  |      1  |    5  |  [193,160,196,177,32]  |       0  |    193  |  0  |
    42  |                     R = R + chunk;  |    193  |  198  |  [193,160,196,177,32]  |       0  |    193  |  0  |
    45  |                         R = R + 1;  |      1  |  199  |  [193,160,196,177,32]  |       0  |    193  |  0  |
    48  |                         R = R + 1;  |      1  |  200  |  [193,160,196,177,32]  |       0  |    193  |  0  |
    51  |                         R = R + 1;  |      1  |  201  |  [193,160,196,177,32]  |       0  |    193  |  0  |
    55  |                         i = i + 1;  |         |  201  |  [193,160,196,177,32]  |       0  |    193  |  1  |
    56  |              resetPlaceHolder_1();  |         |  201  |  [193,160,196,177,32]  |       0  |    193  |  1  |
    62  |  chunk = arrayRead(baseMessage,...  |         |  201  |  [193,160,196,177,32]  |       0  |    160  |  1  |
    65  |                         R = R + 1;  |      1  |  202  |  [193,160,196,177,32]  |       0  |    160  |  1  |
    68  |                         R = R + 1;  |      1  |  203  |  [193,160,196,177,32]  |       0  |    160  |  1  |
    71  |                         R = R + 1;  |      1  |  204  |  [193,160,196,177,32]  |       0  |    160  |  1  |
    74  |                     R = R + chunk;  |    160  |  364  |  [193,160,196,177,32]  |       0  |    160  |  1  |
    77  |                         R = R + 1;  |      1  |  365  |  [193,160,196,177,32]  |       0  |    160  |  1  |
    80  |                         R = R + 1;  |      1  |  366  |  [193,160,196,177,32]  |       0  |    160  |  1  |
    83  |                         R = R + 1;  |      1  |  367  |  [193,160,196,177,32]  |       0  |    160  |  1  |
    87  |                         i = i + 1;  |         |  367  |  [193,160,196,177,32]  |       0  |    160  |  2  |
    88  |              resetPlaceHolder_1();  |         |  367  |  [193,160,196,177,32]  |       0  |    160  |  2  |
    94  |  chunk = arrayRead(baseMessage,...  |         |  367  |  [193,160,196,177,32]  |       0  |    196  |  2  |
    97  |                         R = R + 1;  |      1  |  368  |  [193,160,196,177,32]  |       0  |    196  |  2  |
   100  |                         R = R + 1;  |      1  |  369  |  [193,160,196,177,32]  |       0  |    196  |  2  |
   103  |                         R = R + 1;  |      1  |  370  |  [193,160,196,177,32]  |       0  |    196  |  2  |
   106  |                     R = R + chunk;  |    196  |  566  |  [193,160,196,177,32]  |       0  |    196  |  2  |
   109  |                         R = R + 1;  |      1  |  567  |  [193,160,196,177,32]  |       0  |    196  |  2  |
   112  |                         R = R + 1;  |      1  |  568  |  [193,160,196,177,32]  |       0  |    196  |  2  |
   115  |                         R = R + 1;  |      1  |  569  |  [193,160,196,177,32]  |       0  |    196  |  2  |
   119  |                         i = i + 1;  |         |  569  |  [193,160,196,177,32]  |       0  |    196  |  3  |
   120  |              resetPlaceHolder_1();  |         |  569  |  [193,160,196,177,32]  |       0  |    196  |  3  |
   126  |  chunk = arrayRead(baseMessage,...  |         |  569  |  [193,160,196,177,32]  |       0  |    177  |  3  |
   129  |                         R = R + 1;  |      1  |  570  |  [193,160,196,177,32]  |       0  |    177  |  3  |
   132  |                         R = R + 1;  |      1  |  571  |  [193,160,196,177,32]  |       0  |    177  |  3  |
   135  |                         R = R + 1;  |      1  |  572  |  [193,160,196,177,32]  |       0  |    177  |  3  |
   138  |                     R = R + chunk;  |    177  |  749  |  [193,160,196,177,32]  |       0  |    177  |  3  |
   141  |                         R = R + 1;  |      1  |  750  |  [193,160,196,177,32]  |       0  |    177  |  3  |
   144  |                         R = R + 1;  |      1  |  751  |  [193,160,196,177,32]  |       0  |    177  |  3  |
   147  |                         R = R + 1;  |      1  |  752  |  [193,160,196,177,32]  |       0  |    177  |  3  |
   151  |                         i = i + 1;  |         |  752  |  [193,160,196,177,32]  |       0  |    177  |  4  |
   152  |              resetPlaceHolder_1();  |         |  752  |  [193,160,196,177,32]  |       0  |    177  |  4  |
   158  |  chunk = arrayRead(baseMessage,...  |         |  752  |  [193,160,196,177,32]  |       0  |     32  |  4  |
   161  |                         R = R + 1;  |      1  |  753  |  [193,160,196,177,32]  |       0  |     32  |  4  |
   164  |                         R = R + 1;  |      1  |  754  |  [193,160,196,177,32]  |       0  |     32  |  4  |
   167  |                         R = R + 1;  |      1  |  755  |  [193,160,196,177,32]  |       0  |     32  |  4  |
   170  |                     R = R + chunk;  |     32  |  787  |  [193,160,196,177,32]  |       0  |     32  |  4  |
   173  |                         R = R + 1;  |      1  |  788  |  [193,160,196,177,32]  |       0  |     32  |  4  |
   176  |                         R = R + 1;  |      1  |  789  |  [193,160,196,177,32]  |       0  |     32  |  4  |
   179  |                         R = R + 1;  |      1  |  790  |  [193,160,196,177,32]  |       0  |     32  |  4  |
   183  |                         i = i + 1;  |         |  790  |  [193,160,196,177,32]  |       0  |     32  |  5  |
   184  |              resetPlaceHolder_1();  |         |  790  |  [193,160,196,177,32]  |       0  |     32  |  5  |
   190  |                         R = R + 1;  |      1  |  791  |  [193,160,196,177,32]  |       0  |     32  |  5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [138, 170, 115, 42, 20, 164, 179, 106, 147, 132, 74, 33, 65, 97, 141, 109, 77, 173, 129, 45, 161, 17, 176, 71, 144, 39, 103, 135, 80, 167, 112, 48, 36, 51, 190, 68, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {100}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {103}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {109}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {112}
INFO  brbo.backend2.learning.SegmentClustering - Segment 4: {115}
INFO  brbo.backend2.learning.SegmentClustering - Segment 5: {129}
INFO  brbo.backend2.learning.SegmentClustering - Segment 6: {132}
INFO  brbo.backend2.learning.SegmentClustering - Segment 7: {135}
INFO  brbo.backend2.learning.SegmentClustering - Segment 8: {141}
INFO  brbo.backend2.learning.SegmentClustering - Segment 9: {144}
INFO  brbo.backend2.learning.SegmentClustering - Segment 10: {147}
INFO  brbo.backend2.learning.SegmentClustering - Segment 11: {161}
INFO  brbo.backend2.learning.SegmentClustering - Segment 12: {164}
INFO  brbo.backend2.learning.SegmentClustering - Segment 13: {167}
INFO  brbo.backend2.learning.SegmentClustering - Segment 14: {17}
INFO  brbo.backend2.learning.SegmentClustering - Segment 15: {173}
INFO  brbo.backend2.learning.SegmentClustering - Segment 16: {176}
INFO  brbo.backend2.learning.SegmentClustering - Segment 17: {179}
INFO  brbo.backend2.learning.SegmentClustering - Segment 18: {190}
INFO  brbo.backend2.learning.SegmentClustering - Segment 19: {20}
INFO  brbo.backend2.learning.SegmentClustering - Segment 20: {33}
INFO  brbo.backend2.learning.SegmentClustering - Segment 21: {36}
INFO  brbo.backend2.learning.SegmentClustering - Segment 22: {39}
INFO  brbo.backend2.learning.SegmentClustering - Segment 23: {45}
INFO  brbo.backend2.learning.SegmentClustering - Segment 24: {48}
INFO  brbo.backend2.learning.SegmentClustering - Segment 25: {51}
INFO  brbo.backend2.learning.SegmentClustering - Segment 26: {65}
INFO  brbo.backend2.learning.SegmentClustering - Segment 27: {68}
INFO  brbo.backend2.learning.SegmentClustering - Segment 28: {71}
INFO  brbo.backend2.learning.SegmentClustering - Segment 29: {77}
INFO  brbo.backend2.learning.SegmentClustering - Segment 30: {80}
INFO  brbo.backend2.learning.SegmentClustering - Segment 31: {83}
INFO  brbo.backend2.learning.SegmentClustering - Segment 32: {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |
    20  |             R = R + 1;  |      1  |                         1  |
    33  |             R = R + 1;  |      1  |                         2  |
    36  |             R = R + 1;  |      1  |                         3  |
    39  |             R = R + 1;  |      1  |                         4  |
    42  |         R = R + chunk;  |    193  |                            |
    45  |             R = R + 1;  |      1  |                         5  |
    48  |             R = R + 1;  |      1  |                         6  |
    51  |             R = R + 1;  |      1  |                         7  |
    56  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         8  |
    68  |             R = R + 1;  |      1  |                         9  |
    71  |             R = R + 1;  |      1  |                        10  |
    74  |         R = R + chunk;  |    160  |                            |
    77  |             R = R + 1;  |      1  |                        11  |
    80  |             R = R + 1;  |      1  |                        12  |
    83  |             R = R + 1;  |      1  |                        13  |
    88  |  resetPlaceHolder_1();  |         |                            |
    97  |             R = R + 1;  |      1  |                        14  |
   100  |             R = R + 1;  |      1  |                        15  |
   103  |             R = R + 1;  |      1  |                        16  |
   106  |         R = R + chunk;  |    196  |                            |
   109  |             R = R + 1;  |      1  |                        17  |
   112  |             R = R + 1;  |      1  |                        18  |
   115  |             R = R + 1;  |      1  |                        19  |
   120  |  resetPlaceHolder_1();  |         |                            |
   129  |             R = R + 1;  |      1  |                        20  |
   132  |             R = R + 1;  |      1  |                        21  |
   135  |             R = R + 1;  |      1  |                        22  |
   138  |         R = R + chunk;  |    177  |                            |
   141  |             R = R + 1;  |      1  |                        23  |
   144  |             R = R + 1;  |      1  |                        24  |
   147  |             R = R + 1;  |      1  |                        25  |
   152  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 1;  |      1  |                        26  |
   164  |             R = R + 1;  |      1  |                        27  |
   167  |             R = R + 1;  |      1  |                        28  |
   170  |         R = R + chunk;  |     32  |                            |
   173  |             R = R + 1;  |      1  |                        29  |
   176  |             R = R + 1;  |      1  |                        30  |
   179  |             R = R + 1;  |      1  |                        31  |
   184  |  resetPlaceHolder_1();  |         |                            |
   190  |             R = R + 1;  |      1  |                        32  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [138, 170, 42, 106, 74]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {100}; {103}; {109}; {112}; {115}; {129}; {132}; {135}; {141}; {144}; {147}; {161}; {164}; {167}; {173}; {176}; {179}; {17}; {190}; {20}; {33}; {36}; {39}; {45}; {48}; {51}; {65}; {68}; {71}; {77}; {80}; {83}; {97}
GroupID(1): {42,74,106,138,170}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [18, 19])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [21, 32])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [34, 35])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [37, 38])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [40, 44])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [46, 47])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [49, 50])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [52, 64])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [66, 67])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [69, 70])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [72, 76])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [78, 79])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [81, 82])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [84, 96])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [98, 99])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [101, 102])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [104, 108])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [110, 111])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [113, 114])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [116, 128])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [130, 131])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [133, 134])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [136, 140])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [142, 143])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [145, 146])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [148, 160])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [162, 163])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [165, 166])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [168, 172])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [174, 175])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [177, 178])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [180, 189])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    17  |             R = R + 1;  |      1  |                         0  |                            |
    20  |             R = R + 1;  |      1  |                         1  |                            |
    33  |             R = R + 1;  |      1  |                         2  |                            |
    36  |             R = R + 1;  |      1  |                         3  |                            |
    39  |             R = R + 1;  |      1  |                         4  |                            |
    42  |         R = R + chunk;  |    193  |                            |                         0  |
    45  |             R = R + 1;  |      1  |                         5  |                            |
    48  |             R = R + 1;  |      1  |                         6  |                            |
    51  |             R = R + 1;  |      1  |                         7  |                            |
    56  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         8  |                            |
    68  |             R = R + 1;  |      1  |                         9  |                            |
    71  |             R = R + 1;  |      1  |                        10  |                            |
    74  |         R = R + chunk;  |    160  |                            |                         0  |
    77  |             R = R + 1;  |      1  |                        11  |                            |
    80  |             R = R + 1;  |      1  |                        12  |                            |
    83  |             R = R + 1;  |      1  |                        13  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
    97  |             R = R + 1;  |      1  |                        14  |                            |
   100  |             R = R + 1;  |      1  |                        15  |                            |
   103  |             R = R + 1;  |      1  |                        16  |                            |
   106  |         R = R + chunk;  |    196  |                            |                         0  |
   109  |             R = R + 1;  |      1  |                        17  |                            |
   112  |             R = R + 1;  |      1  |                        18  |                            |
   115  |             R = R + 1;  |      1  |                        19  |                            |
   120  |  resetPlaceHolder_1();  |         |                            |                            |
   129  |             R = R + 1;  |      1  |                        20  |                            |
   132  |             R = R + 1;  |      1  |                        21  |                            |
   135  |             R = R + 1;  |      1  |                        22  |                            |
   138  |         R = R + chunk;  |    177  |                            |                         0  |
   141  |             R = R + 1;  |      1  |                        23  |                            |
   144  |             R = R + 1;  |      1  |                        24  |                            |
   147  |             R = R + 1;  |      1  |                        25  |                            |
   152  |  resetPlaceHolder_1();  |         |                            |                            |
   161  |             R = R + 1;  |      1  |                        26  |                            |
   164  |             R = R + 1;  |      1  |                        27  |                            |
   167  |             R = R + 1;  |      1  |                        28  |                            |
   170  |         R = R + chunk;  |     32  |                            |                         0  |
   173  |             R = R + 1;  |      1  |                        29  |                            |
   176  |             R = R + 1;  |      1  |                        30  |                            |
   179  |             R = R + 1;  |      1  |                        31  |                            |
   184  |  resetPlaceHolder_1();  |         |                            |                            |
   190  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  // reset R0
}
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m10.338s
user	0m23.446s
sys	0m5.129s

2023-01-26 11:21:25,492 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:21:37,287 INFO     Done. Execution time: 11.79494833946228 seconds
2023-01-26 11:21:37,287 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (8 + (8 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (3 + (6 * baseMessage))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D1p () Int)
(declare-fun D0p () Int)
(declare-fun baseMessage () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D1p 0))
(assert (>= D0p 0))
(assert (> baseMessage 0))
(assert (let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (<= D1p (+ 0 (* 1 (* 1 baseMessage)))))
      (a!4 (<= D0p (+ 0 (* 8 (* 1 baseMessage))))))
  (and (<= 0 (+ D1 a!1 D0 a!2))
       (<= D1p 0)
       (or a!3 (= D1p 0))
       (<= D0p 0)
       (or a!4 (= D0p 0)))))
(assert (let ((a!1 (<= D1 (+ 0 (* 1 (* 1 baseMessage)))))
      (a!2 (<= D0 (+ 0 (* 8 (* 1 baseMessage))))))
  (and (or a!1 (= D1 0)) (or a!2 (= D0 0)))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     (<= C1 0)
     (<= C0 0)))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D1 () Int    2)  (define-fun D0 () Int    16)  (define-fun baseMessage () Int    2)  (define-fun C1 () Int    0)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ 3 (* 6 baseMessage))) (= a!1 (+ 3 (* 6 baseMessage)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `10.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1121-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1121-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.788s
user	0m33.952s
sys	0m4.798s

2023-01-26 11:21:37,288 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-26 11:21:37,288 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:21:46,051 INFO     Done. Execution time: 8.763025283813477 seconds
2023-01-26 11:21:46,051 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz7354215415505770997/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7354215415505770997/bin -o /tmp/qfuzz7354215415505770997/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7354215415505770997/bin
Found file /tmp/qfuzz7354215415505770997/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz7354215415505770997/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7354215415505770997/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7354215415505770997/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7354215415505770997/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz7354215415505770997/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 134482 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 130449 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m130k to 134k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7354215415505770997/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 6.00; [51.00,57.00]
2; /tmp/qfuzz7354215415505770997/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 6.00; [51.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7354215415505770997/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz7354215415505770997/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7354215415505770997/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7354215415505770997/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 193
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 175
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.754s
user	0m6.866s
sys	0m0.424s

2023-01-26 11:21:46,051 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-26 11:21:46,052 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-26 11:21:55,677 INFO     Done. Execution time: 9.625513315200806 seconds
2023-01-26 11:21:55,678 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(193)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(175)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 4079):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |               |        193  |              |
    11  |               int arrayPrefix = 0;  |         |    0  |            0  |        193  |              |
    12  |                      // int R = 0;  |         |    0  |            0  |        193  |              |
    13  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |        193  |              |
    14  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |        193  |              |
    16  |        int className_ = className;  |         |    0  |            0  |        193  |         193  |
    29  |       className_ = className_ - 1;  |         |    0  |            0  |        193  |         192  |
    33  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |        193  |         192  |
    36  |                         R = R + 2;  |      2  |    2  |            2  |        193  |         192  |
    37  |              resetPlaceHolder_1();  |         |    2  |            2  |        193  |         192  |
    50  |       className_ = className_ - 1;  |         |    2  |            2  |        193  |         191  |
    54  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |        193  |         191  |
    57  |                         R = R + 2;  |      2  |    4  |            4  |        193  |         191  |
    58  |              resetPlaceHolder_1();  |         |    4  |            4  |        193  |         191  |
    71  |       className_ = className_ - 1;  |         |    4  |            4  |        193  |         190  |
    75  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |        193  |         190  |
    78  |                         R = R + 2;  |      2  |    6  |            6  |        193  |         190  |
    79  |              resetPlaceHolder_1();  |         |    6  |            6  |        193  |         190  |
    92  |       className_ = className_ - 1;  |         |    6  |            6  |        193  |         189  |
    96  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |        193  |         189  |
    99  |                         R = R + 2;  |      2  |    8  |            8  |        193  |         189  |
   100  |              resetPlaceHolder_1();  |         |    8  |            8  |        193  |         189  |
   113  |       className_ = className_ - 1;  |         |    8  |            8  |        193  |         188  |
   117  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |        193  |         188  |
   120  |                         R = R + 2;  |      2  |   10  |           10  |        193  |         188  |
   121  |              resetPlaceHolder_1();  |         |   10  |           10  |        193  |         188  |
   134  |       className_ = className_ - 1;  |         |   10  |           10  |        193  |         187  |
   138  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |        193  |         187  |
   141  |                         R = R + 2;  |      2  |   12  |           12  |        193  |         187  |
   142  |              resetPlaceHolder_1();  |         |   12  |           12  |        193  |         187  |
   155  |       className_ = className_ - 1;  |         |   12  |           12  |        193  |         186  |
   159  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |        193  |         186  |
   162  |                         R = R + 2;  |      2  |   14  |           14  |        193  |         186  |
   163  |              resetPlaceHolder_1();  |         |   14  |           14  |        193  |         186  |
   176  |       className_ = className_ - 1;  |         |   14  |           14  |        193  |         185  |
   180  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |        193  |         185  |
   183  |                         R = R + 2;  |      2  |   16  |           16  |        193  |         185  |
   184  |              resetPlaceHolder_1();  |         |   16  |           16  |        193  |         185  |
   197  |       className_ = className_ - 1;  |         |   16  |           16  |        193  |         184  |
   201  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |        193  |         184  |
   204  |                         R = R + 2;  |      2  |   18  |           18  |        193  |         184  |
   205  |              resetPlaceHolder_1();  |         |   18  |           18  |        193  |         184  |
   218  |       className_ = className_ - 1;  |         |   18  |           18  |        193  |         183  |
   222  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |        193  |         183  |
   225  |                         R = R + 2;  |      2  |   20  |           20  |        193  |         183  |
   226  |              resetPlaceHolder_1();  |         |   20  |           20  |        193  |         183  |
   239  |       className_ = className_ - 1;  |         |   20  |           20  |        193  |         182  |
   243  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |        193  |         182  |
   246  |                         R = R + 2;  |      2  |   22  |           22  |        193  |         182  |
   247  |              resetPlaceHolder_1();  |         |   22  |           22  |        193  |         182  |
   260  |       className_ = className_ - 1;  |         |   22  |           22  |        193  |         181  |
   264  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |        193  |         181  |
   267  |                         R = R + 2;  |      2  |   24  |           24  |        193  |         181  |
   268  |              resetPlaceHolder_1();  |         |   24  |           24  |        193  |         181  |
   281  |       className_ = className_ - 1;  |         |   24  |           24  |        193  |         180  |
   285  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |        193  |         180  |
   288  |                         R = R + 2;  |      2  |   26  |           26  |        193  |         180  |
   289  |              resetPlaceHolder_1();  |         |   26  |           26  |        193  |         180  |
   302  |       className_ = className_ - 1;  |         |   26  |           26  |        193  |         179  |
   306  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |        193  |         179  |
   309  |                         R = R + 2;  |      2  |   28  |           28  |        193  |         179  |
   310  |              resetPlaceHolder_1();  |         |   28  |           28  |        193  |         179  |
   323  |       className_ = className_ - 1;  |         |   28  |           28  |        193  |         178  |
   327  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |        193  |         178  |
   330  |                         R = R + 2;  |      2  |   30  |           30  |        193  |         178  |
   331  |              resetPlaceHolder_1();  |         |   30  |           30  |        193  |         178  |
   344  |       className_ = className_ - 1;  |         |   30  |           30  |        193  |         177  |
   348  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |        193  |         177  |
   351  |                         R = R + 2;  |      2  |   32  |           32  |        193  |         177  |
   352  |              resetPlaceHolder_1();  |         |   32  |           32  |        193  |         177  |
   365  |       className_ = className_ - 1;  |         |   32  |           32  |        193  |         176  |
   369  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |        193  |         176  |
   372  |                         R = R + 2;  |      2  |   34  |           34  |        193  |         176  |
   373  |              resetPlaceHolder_1();  |         |   34  |           34  |        193  |         176  |
   386  |       className_ = className_ - 1;  |         |   34  |           34  |        193  |         175  |
   390  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |        193  |         175  |
   393  |                         R = R + 2;  |      2  |   36  |           36  |        193  |         175  |
   394  |              resetPlaceHolder_1();  |         |   36  |           36  |        193  |         175  |
   407  |       className_ = className_ - 1;  |         |   36  |           36  |        193  |         174  |
   411  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |        193  |         174  |
   414  |                         R = R + 2;  |      2  |   38  |           38  |        193  |         174  |
   415  |              resetPlaceHolder_1();  |         |   38  |           38  |        193  |         174  |
   428  |       className_ = className_ - 1;  |         |   38  |           38  |        193  |         173  |
   432  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |        193  |         173  |
   435  |                         R = R + 2;  |      2  |   40  |           40  |        193  |         173  |
   436  |              resetPlaceHolder_1();  |         |   40  |           40  |        193  |         173  |
   449  |       className_ = className_ - 1;  |         |   40  |           40  |        193  |         172  |
   453  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |        193  |         172  |
   456  |                         R = R + 2;  |      2  |   42  |           42  |        193  |         172  |
   457  |              resetPlaceHolder_1();  |         |   42  |           42  |        193  |         172  |
   470  |       className_ = className_ - 1;  |         |   42  |           42  |        193  |         171  |
   474  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |        193  |         171  |
   477  |                         R = R + 2;  |      2  |   44  |           44  |        193  |         171  |
   478  |              resetPlaceHolder_1();  |         |   44  |           44  |        193  |         171  |
   491  |       className_ = className_ - 1;  |         |   44  |           44  |        193  |         170  |
   495  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |        193  |         170  |
   498  |                         R = R + 2;  |      2  |   46  |           46  |        193  |         170  |
   499  |              resetPlaceHolder_1();  |         |   46  |           46  |        193  |         170  |
   512  |       className_ = className_ - 1;  |         |   46  |           46  |        193  |         169  |
   516  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |        193  |         169  |
   519  |                         R = R + 2;  |      2  |   48  |           48  |        193  |         169  |
   520  |              resetPlaceHolder_1();  |         |   48  |           48  |        193  |         169  |
   533  |       className_ = className_ - 1;  |         |   48  |           48  |        193  |         168  |
   537  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |        193  |         168  |
   540  |                         R = R + 2;  |      2  |   50  |           50  |        193  |         168  |
   541  |              resetPlaceHolder_1();  |         |   50  |           50  |        193  |         168  |
   554  |       className_ = className_ - 1;  |         |   50  |           50  |        193  |         167  |
   558  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |        193  |         167  |
   561  |                         R = R + 2;  |      2  |   52  |           52  |        193  |         167  |
   562  |              resetPlaceHolder_1();  |         |   52  |           52  |        193  |         167  |
   575  |       className_ = className_ - 1;  |         |   52  |           52  |        193  |         166  |
   579  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |        193  |         166  |
   582  |                         R = R + 2;  |      2  |   54  |           54  |        193  |         166  |
   583  |              resetPlaceHolder_1();  |         |   54  |           54  |        193  |         166  |
   596  |       className_ = className_ - 1;  |         |   54  |           54  |        193  |         165  |
   600  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |        193  |         165  |
   603  |                         R = R + 2;  |      2  |   56  |           56  |        193  |         165  |
   604  |              resetPlaceHolder_1();  |         |   56  |           56  |        193  |         165  |
   617  |       className_ = className_ - 1;  |         |   56  |           56  |        193  |         164  |
   621  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |        193  |         164  |
   624  |                         R = R + 2;  |      2  |   58  |           58  |        193  |         164  |
   625  |              resetPlaceHolder_1();  |         |   58  |           58  |        193  |         164  |
   638  |       className_ = className_ - 1;  |         |   58  |           58  |        193  |         163  |
   642  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |        193  |         163  |
   645  |                         R = R + 2;  |      2  |   60  |           60  |        193  |         163  |
   646  |              resetPlaceHolder_1();  |         |   60  |           60  |        193  |         163  |
   659  |       className_ = className_ - 1;  |         |   60  |           60  |        193  |         162  |
   663  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |        193  |         162  |
   666  |                         R = R + 2;  |      2  |   62  |           62  |        193  |         162  |
   667  |              resetPlaceHolder_1();  |         |   62  |           62  |        193  |         162  |
   680  |       className_ = className_ - 1;  |         |   62  |           62  |        193  |         161  |
   684  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |        193  |         161  |
   687  |                         R = R + 2;  |      2  |   64  |           64  |        193  |         161  |
   688  |              resetPlaceHolder_1();  |         |   64  |           64  |        193  |         161  |
   701  |       className_ = className_ - 1;  |         |   64  |           64  |        193  |         160  |
   705  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |        193  |         160  |
   708  |                         R = R + 2;  |      2  |   66  |           66  |        193  |         160  |
   709  |              resetPlaceHolder_1();  |         |   66  |           66  |        193  |         160  |
   722  |       className_ = className_ - 1;  |         |   66  |           66  |        193  |         159  |
   726  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |        193  |         159  |
   729  |                         R = R + 2;  |      2  |   68  |           68  |        193  |         159  |
   730  |              resetPlaceHolder_1();  |         |   68  |           68  |        193  |         159  |
   743  |       className_ = className_ - 1;  |         |   68  |           68  |        193  |         158  |
   747  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |        193  |         158  |
   750  |                         R = R + 2;  |      2  |   70  |           70  |        193  |         158  |
   751  |              resetPlaceHolder_1();  |         |   70  |           70  |        193  |         158  |
   764  |       className_ = className_ - 1;  |         |   70  |           70  |        193  |         157  |
   768  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |        193  |         157  |
   771  |                         R = R + 2;  |      2  |   72  |           72  |        193  |         157  |
   772  |              resetPlaceHolder_1();  |         |   72  |           72  |        193  |         157  |
   785  |       className_ = className_ - 1;  |         |   72  |           72  |        193  |         156  |
   789  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |        193  |         156  |
   792  |                         R = R + 2;  |      2  |   74  |           74  |        193  |         156  |
   793  |              resetPlaceHolder_1();  |         |   74  |           74  |        193  |         156  |
   806  |       className_ = className_ - 1;  |         |   74  |           74  |        193  |         155  |
   810  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |        193  |         155  |
   813  |                         R = R + 2;  |      2  |   76  |           76  |        193  |         155  |
   814  |              resetPlaceHolder_1();  |         |   76  |           76  |        193  |         155  |
   827  |       className_ = className_ - 1;  |         |   76  |           76  |        193  |         154  |
   831  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |        193  |         154  |
   834  |                         R = R + 2;  |      2  |   78  |           78  |        193  |         154  |
   835  |              resetPlaceHolder_1();  |         |   78  |           78  |        193  |         154  |
   848  |       className_ = className_ - 1;  |         |   78  |           78  |        193  |         153  |
   852  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |        193  |         153  |
   855  |                         R = R + 2;  |      2  |   80  |           80  |        193  |         153  |
   856  |              resetPlaceHolder_1();  |         |   80  |           80  |        193  |         153  |
   869  |       className_ = className_ - 1;  |         |   80  |           80  |        193  |         152  |
   873  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |        193  |         152  |
   876  |                         R = R + 2;  |      2  |   82  |           82  |        193  |         152  |
   877  |              resetPlaceHolder_1();  |         |   82  |           82  |        193  |         152  |
   890  |       className_ = className_ - 1;  |         |   82  |           82  |        193  |         151  |
   894  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |        193  |         151  |
   897  |                         R = R + 2;  |      2  |   84  |           84  |        193  |         151  |
   898  |              resetPlaceHolder_1();  |         |   84  |           84  |        193  |         151  |
   911  |       className_ = className_ - 1;  |         |   84  |           84  |        193  |         150  |
   915  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |        193  |         150  |
   918  |                         R = R + 2;  |      2  |   86  |           86  |        193  |         150  |
   919  |              resetPlaceHolder_1();  |         |   86  |           86  |        193  |         150  |
   932  |       className_ = className_ - 1;  |         |   86  |           86  |        193  |         149  |
   936  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |        193  |         149  |
   939  |                         R = R + 2;  |      2  |   88  |           88  |        193  |         149  |
   940  |              resetPlaceHolder_1();  |         |   88  |           88  |        193  |         149  |
   953  |       className_ = className_ - 1;  |         |   88  |           88  |        193  |         148  |
   957  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |        193  |         148  |
   960  |                         R = R + 2;  |      2  |   90  |           90  |        193  |         148  |
   961  |              resetPlaceHolder_1();  |         |   90  |           90  |        193  |         148  |
   974  |       className_ = className_ - 1;  |         |   90  |           90  |        193  |         147  |
   978  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |        193  |         147  |
   981  |                         R = R + 2;  |      2  |   92  |           92  |        193  |         147  |
   982  |              resetPlaceHolder_1();  |         |   92  |           92  |        193  |         147  |
   995  |       className_ = className_ - 1;  |         |   92  |           92  |        193  |         146  |
   999  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |        193  |         146  |
  1002  |                         R = R + 2;  |      2  |   94  |           94  |        193  |         146  |
  1003  |              resetPlaceHolder_1();  |         |   94  |           94  |        193  |         146  |
  1016  |       className_ = className_ - 1;  |         |   94  |           94  |        193  |         145  |
  1020  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |        193  |         145  |
  1023  |                         R = R + 2;  |      2  |   96  |           96  |        193  |         145  |
  1024  |              resetPlaceHolder_1();  |         |   96  |           96  |        193  |         145  |
  1037  |       className_ = className_ - 1;  |         |   96  |           96  |        193  |         144  |
  1041  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |        193  |         144  |
  1044  |                         R = R + 2;  |      2  |   98  |           98  |        193  |         144  |
  1045  |              resetPlaceHolder_1();  |         |   98  |           98  |        193  |         144  |
  1058  |       className_ = className_ - 1;  |         |   98  |           98  |        193  |         143  |
  1062  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |        193  |         143  |
  1065  |                         R = R + 2;  |      2  |  100  |          100  |        193  |         143  |
  1066  |              resetPlaceHolder_1();  |         |  100  |          100  |        193  |         143  |
  1079  |       className_ = className_ - 1;  |         |  100  |          100  |        193  |         142  |
  1083  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |        193  |         142  |
  1086  |                         R = R + 2;  |      2  |  102  |          102  |        193  |         142  |
  1087  |              resetPlaceHolder_1();  |         |  102  |          102  |        193  |         142  |
  1100  |       className_ = className_ - 1;  |         |  102  |          102  |        193  |         141  |
  1104  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |        193  |         141  |
  1107  |                         R = R + 2;  |      2  |  104  |          104  |        193  |         141  |
  1108  |              resetPlaceHolder_1();  |         |  104  |          104  |        193  |         141  |
  1121  |       className_ = className_ - 1;  |         |  104  |          104  |        193  |         140  |
  1125  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |        193  |         140  |
  1128  |                         R = R + 2;  |      2  |  106  |          106  |        193  |         140  |
  1129  |              resetPlaceHolder_1();  |         |  106  |          106  |        193  |         140  |
  1142  |       className_ = className_ - 1;  |         |  106  |          106  |        193  |         139  |
  1146  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |        193  |         139  |
  1149  |                         R = R + 2;  |      2  |  108  |          108  |        193  |         139  |
  1150  |              resetPlaceHolder_1();  |         |  108  |          108  |        193  |         139  |
  1163  |       className_ = className_ - 1;  |         |  108  |          108  |        193  |         138  |
  1167  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |        193  |         138  |
  1170  |                         R = R + 2;  |      2  |  110  |          110  |        193  |         138  |
  1171  |              resetPlaceHolder_1();  |         |  110  |          110  |        193  |         138  |
  1184  |       className_ = className_ - 1;  |         |  110  |          110  |        193  |         137  |
  1188  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |        193  |         137  |
  1191  |                         R = R + 2;  |      2  |  112  |          112  |        193  |         137  |
  1192  |              resetPlaceHolder_1();  |         |  112  |          112  |        193  |         137  |
  1205  |       className_ = className_ - 1;  |         |  112  |          112  |        193  |         136  |
  1209  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |        193  |         136  |
  1212  |                         R = R + 2;  |      2  |  114  |          114  |        193  |         136  |
  1213  |              resetPlaceHolder_1();  |         |  114  |          114  |        193  |         136  |
  1226  |       className_ = className_ - 1;  |         |  114  |          114  |        193  |         135  |
  1230  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |        193  |         135  |
  1233  |                         R = R + 2;  |      2  |  116  |          116  |        193  |         135  |
  1234  |              resetPlaceHolder_1();  |         |  116  |          116  |        193  |         135  |
  1247  |       className_ = className_ - 1;  |         |  116  |          116  |        193  |         134  |
  1251  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |        193  |         134  |
  1254  |                         R = R + 2;  |      2  |  118  |          118  |        193  |         134  |
  1255  |              resetPlaceHolder_1();  |         |  118  |          118  |        193  |         134  |
  1268  |       className_ = className_ - 1;  |         |  118  |          118  |        193  |         133  |
  1272  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |        193  |         133  |
  1275  |                         R = R + 2;  |      2  |  120  |          120  |        193  |         133  |
  1276  |              resetPlaceHolder_1();  |         |  120  |          120  |        193  |         133  |
  1289  |       className_ = className_ - 1;  |         |  120  |          120  |        193  |         132  |
  1293  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |        193  |         132  |
  1296  |                         R = R + 2;  |      2  |  122  |          122  |        193  |         132  |
  1297  |              resetPlaceHolder_1();  |         |  122  |          122  |        193  |         132  |
  1310  |       className_ = className_ - 1;  |         |  122  |          122  |        193  |         131  |
  1314  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |        193  |         131  |
  1317  |                         R = R + 2;  |      2  |  124  |          124  |        193  |         131  |
  1318  |              resetPlaceHolder_1();  |         |  124  |          124  |        193  |         131  |
  1331  |       className_ = className_ - 1;  |         |  124  |          124  |        193  |         130  |
  1335  |     arrayPrefix = arrayPrefix + 2;  |         |  124  |          126  |        193  |         130  |
  1338  |                         R = R + 2;  |      2  |  126  |          126  |        193  |         130  |
  1339  |              resetPlaceHolder_1();  |         |  126  |          126  |        193  |         130  |
  1352  |       className_ = className_ - 1;  |         |  126  |          126  |        193  |         129  |
  1356  |     arrayPrefix = arrayPrefix + 2;  |         |  126  |          128  |        193  |         129  |
  1359  |                         R = R + 2;  |      2  |  128  |          128  |        193  |         129  |
  1360  |              resetPlaceHolder_1();  |         |  128  |          128  |        193  |         129  |
  1373  |       className_ = className_ - 1;  |         |  128  |          128  |        193  |         128  |
  1377  |     arrayPrefix = arrayPrefix + 2;  |         |  128  |          130  |        193  |         128  |
  1380  |                         R = R + 2;  |      2  |  130  |          130  |        193  |         128  |
  1381  |              resetPlaceHolder_1();  |         |  130  |          130  |        193  |         128  |
  1394  |       className_ = className_ - 1;  |         |  130  |          130  |        193  |         127  |
  1398  |     arrayPrefix = arrayPrefix + 2;  |         |  130  |          132  |        193  |         127  |
  1401  |                         R = R + 2;  |      2  |  132  |          132  |        193  |         127  |
  1402  |              resetPlaceHolder_1();  |         |  132  |          132  |        193  |         127  |
  1415  |       className_ = className_ - 1;  |         |  132  |          132  |        193  |         126  |
  1419  |     arrayPrefix = arrayPrefix + 2;  |         |  132  |          134  |        193  |         126  |
  1422  |                         R = R + 2;  |      2  |  134  |          134  |        193  |         126  |
  1423  |              resetPlaceHolder_1();  |         |  134  |          134  |        193  |         126  |
  1436  |       className_ = className_ - 1;  |         |  134  |          134  |        193  |         125  |
  1440  |     arrayPrefix = arrayPrefix + 2;  |         |  134  |          136  |        193  |         125  |
  1443  |                         R = R + 2;  |      2  |  136  |          136  |        193  |         125  |
  1444  |              resetPlaceHolder_1();  |         |  136  |          136  |        193  |         125  |
  1457  |       className_ = className_ - 1;  |         |  136  |          136  |        193  |         124  |
  1461  |     arrayPrefix = arrayPrefix + 2;  |         |  136  |          138  |        193  |         124  |
  1464  |                         R = R + 2;  |      2  |  138  |          138  |        193  |         124  |
  1465  |              resetPlaceHolder_1();  |         |  138  |          138  |        193  |         124  |
  1478  |       className_ = className_ - 1;  |         |  138  |          138  |        193  |         123  |
  1482  |     arrayPrefix = arrayPrefix + 2;  |         |  138  |          140  |        193  |         123  |
  1485  |                         R = R + 2;  |      2  |  140  |          140  |        193  |         123  |
  1486  |              resetPlaceHolder_1();  |         |  140  |          140  |        193  |         123  |
  1499  |       className_ = className_ - 1;  |         |  140  |          140  |        193  |         122  |
  1503  |     arrayPrefix = arrayPrefix + 2;  |         |  140  |          142  |        193  |         122  |
  1506  |                         R = R + 2;  |      2  |  142  |          142  |        193  |         122  |
  1507  |              resetPlaceHolder_1();  |         |  142  |          142  |        193  |         122  |
  1520  |       className_ = className_ - 1;  |         |  142  |          142  |        193  |         121  |
  1524  |     arrayPrefix = arrayPrefix + 2;  |         |  142  |          144  |        193  |         121  |
  1527  |                         R = R + 2;  |      2  |  144  |          144  |        193  |         121  |
  1528  |              resetPlaceHolder_1();  |         |  144  |          144  |        193  |         121  |
  1541  |       className_ = className_ - 1;  |         |  144  |          144  |        193  |         120  |
  1545  |     arrayPrefix = arrayPrefix + 2;  |         |  144  |          146  |        193  |         120  |
  1548  |                         R = R + 2;  |      2  |  146  |          146  |        193  |         120  |
  1549  |              resetPlaceHolder_1();  |         |  146  |          146  |        193  |         120  |
  1562  |       className_ = className_ - 1;  |         |  146  |          146  |        193  |         119  |
  1566  |     arrayPrefix = arrayPrefix + 2;  |         |  146  |          148  |        193  |         119  |
  1569  |                         R = R + 2;  |      2  |  148  |          148  |        193  |         119  |
  1570  |              resetPlaceHolder_1();  |         |  148  |          148  |        193  |         119  |
  1583  |       className_ = className_ - 1;  |         |  148  |          148  |        193  |         118  |
  1587  |     arrayPrefix = arrayPrefix + 2;  |         |  148  |          150  |        193  |         118  |
  1590  |                         R = R + 2;  |      2  |  150  |          150  |        193  |         118  |
  1591  |              resetPlaceHolder_1();  |         |  150  |          150  |        193  |         118  |
  1604  |       className_ = className_ - 1;  |         |  150  |          150  |        193  |         117  |
  1608  |     arrayPrefix = arrayPrefix + 2;  |         |  150  |          152  |        193  |         117  |
  1611  |                         R = R + 2;  |      2  |  152  |          152  |        193  |         117  |
  1612  |              resetPlaceHolder_1();  |         |  152  |          152  |        193  |         117  |
  1625  |       className_ = className_ - 1;  |         |  152  |          152  |        193  |         116  |
  1629  |     arrayPrefix = arrayPrefix + 2;  |         |  152  |          154  |        193  |         116  |
  1632  |                         R = R + 2;  |      2  |  154  |          154  |        193  |         116  |
  1633  |              resetPlaceHolder_1();  |         |  154  |          154  |        193  |         116  |
  1646  |       className_ = className_ - 1;  |         |  154  |          154  |        193  |         115  |
  1650  |     arrayPrefix = arrayPrefix + 2;  |         |  154  |          156  |        193  |         115  |
  1653  |                         R = R + 2;  |      2  |  156  |          156  |        193  |         115  |
  1654  |              resetPlaceHolder_1();  |         |  156  |          156  |        193  |         115  |
  1667  |       className_ = className_ - 1;  |         |  156  |          156  |        193  |         114  |
  1671  |     arrayPrefix = arrayPrefix + 2;  |         |  156  |          158  |        193  |         114  |
  1674  |                         R = R + 2;  |      2  |  158  |          158  |        193  |         114  |
  1675  |              resetPlaceHolder_1();  |         |  158  |          158  |        193  |         114  |
  1688  |       className_ = className_ - 1;  |         |  158  |          158  |        193  |         113  |
  1692  |     arrayPrefix = arrayPrefix + 2;  |         |  158  |          160  |        193  |         113  |
  1695  |                         R = R + 2;  |      2  |  160  |          160  |        193  |         113  |
  1696  |              resetPlaceHolder_1();  |         |  160  |          160  |        193  |         113  |
  1709  |       className_ = className_ - 1;  |         |  160  |          160  |        193  |         112  |
  1713  |     arrayPrefix = arrayPrefix + 2;  |         |  160  |          162  |        193  |         112  |
  1716  |                         R = R + 2;  |      2  |  162  |          162  |        193  |         112  |
  1717  |              resetPlaceHolder_1();  |         |  162  |          162  |        193  |         112  |
  1730  |       className_ = className_ - 1;  |         |  162  |          162  |        193  |         111  |
  1734  |     arrayPrefix = arrayPrefix + 2;  |         |  162  |          164  |        193  |         111  |
  1737  |                         R = R + 2;  |      2  |  164  |          164  |        193  |         111  |
  1738  |              resetPlaceHolder_1();  |         |  164  |          164  |        193  |         111  |
  1751  |       className_ = className_ - 1;  |         |  164  |          164  |        193  |         110  |
  1755  |     arrayPrefix = arrayPrefix + 2;  |         |  164  |          166  |        193  |         110  |
  1758  |                         R = R + 2;  |      2  |  166  |          166  |        193  |         110  |
  1759  |              resetPlaceHolder_1();  |         |  166  |          166  |        193  |         110  |
  1772  |       className_ = className_ - 1;  |         |  166  |          166  |        193  |         109  |
  1776  |     arrayPrefix = arrayPrefix + 2;  |         |  166  |          168  |        193  |         109  |
  1779  |                         R = R + 2;  |      2  |  168  |          168  |        193  |         109  |
  1780  |              resetPlaceHolder_1();  |         |  168  |          168  |        193  |         109  |
  1793  |       className_ = className_ - 1;  |         |  168  |          168  |        193  |         108  |
  1797  |     arrayPrefix = arrayPrefix + 2;  |         |  168  |          170  |        193  |         108  |
  1800  |                         R = R + 2;  |      2  |  170  |          170  |        193  |         108  |
  1801  |              resetPlaceHolder_1();  |         |  170  |          170  |        193  |         108  |
  1814  |       className_ = className_ - 1;  |         |  170  |          170  |        193  |         107  |
  1818  |     arrayPrefix = arrayPrefix + 2;  |         |  170  |          172  |        193  |         107  |
  1821  |                         R = R + 2;  |      2  |  172  |          172  |        193  |         107  |
  1822  |              resetPlaceHolder_1();  |         |  172  |          172  |        193  |         107  |
  1835  |       className_ = className_ - 1;  |         |  172  |          172  |        193  |         106  |
  1839  |     arrayPrefix = arrayPrefix + 2;  |         |  172  |          174  |        193  |         106  |
  1842  |                         R = R + 2;  |      2  |  174  |          174  |        193  |         106  |
  1843  |              resetPlaceHolder_1();  |         |  174  |          174  |        193  |         106  |
  1856  |       className_ = className_ - 1;  |         |  174  |          174  |        193  |         105  |
  1860  |     arrayPrefix = arrayPrefix + 2;  |         |  174  |          176  |        193  |         105  |
  1863  |                         R = R + 2;  |      2  |  176  |          176  |        193  |         105  |
  1864  |              resetPlaceHolder_1();  |         |  176  |          176  |        193  |         105  |
  1877  |       className_ = className_ - 1;  |         |  176  |          176  |        193  |         104  |
  1881  |     arrayPrefix = arrayPrefix + 2;  |         |  176  |          178  |        193  |         104  |
  1884  |                         R = R + 2;  |      2  |  178  |          178  |        193  |         104  |
  1885  |              resetPlaceHolder_1();  |         |  178  |          178  |        193  |         104  |
  1898  |       className_ = className_ - 1;  |         |  178  |          178  |        193  |         103  |
  1902  |     arrayPrefix = arrayPrefix + 2;  |         |  178  |          180  |        193  |         103  |
  1905  |                         R = R + 2;  |      2  |  180  |          180  |        193  |         103  |
  1906  |              resetPlaceHolder_1();  |         |  180  |          180  |        193  |         103  |
  1919  |       className_ = className_ - 1;  |         |  180  |          180  |        193  |         102  |
  1923  |     arrayPrefix = arrayPrefix + 2;  |         |  180  |          182  |        193  |         102  |
  1926  |                         R = R + 2;  |      2  |  182  |          182  |        193  |         102  |
  1927  |              resetPlaceHolder_1();  |         |  182  |          182  |        193  |         102  |
  1940  |       className_ = className_ - 1;  |         |  182  |          182  |        193  |         101  |
  1944  |     arrayPrefix = arrayPrefix + 2;  |         |  182  |          184  |        193  |         101  |
  1947  |                         R = R + 2;  |      2  |  184  |          184  |        193  |         101  |
  1948  |              resetPlaceHolder_1();  |         |  184  |          184  |        193  |         101  |
  1961  |       className_ = className_ - 1;  |         |  184  |          184  |        193  |         100  |
  1965  |     arrayPrefix = arrayPrefix + 2;  |         |  184  |          186  |        193  |         100  |
  1968  |                         R = R + 2;  |      2  |  186  |          186  |        193  |         100  |
  1969  |              resetPlaceHolder_1();  |         |  186  |          186  |        193  |         100  |
  1982  |       className_ = className_ - 1;  |         |  186  |          186  |        193  |          99  |
  1986  |     arrayPrefix = arrayPrefix + 2;  |         |  186  |          188  |        193  |          99  |
  1989  |                         R = R + 2;  |      2  |  188  |          188  |        193  |          99  |
  1990  |              resetPlaceHolder_1();  |         |  188  |          188  |        193  |          99  |
  2003  |       className_ = className_ - 1;  |         |  188  |          188  |        193  |          98  |
  2007  |     arrayPrefix = arrayPrefix + 2;  |         |  188  |          190  |        193  |          98  |
  2010  |                         R = R + 2;  |      2  |  190  |          190  |        193  |          98  |
  2011  |              resetPlaceHolder_1();  |         |  190  |          190  |        193  |          98  |
  2024  |       className_ = className_ - 1;  |         |  190  |          190  |        193  |          97  |
  2028  |     arrayPrefix = arrayPrefix + 2;  |         |  190  |          192  |        193  |          97  |
  2031  |                         R = R + 2;  |      2  |  192  |          192  |        193  |          97  |
  2032  |              resetPlaceHolder_1();  |         |  192  |          192  |        193  |          97  |
  2045  |       className_ = className_ - 1;  |         |  192  |          192  |        193  |          96  |
  2049  |     arrayPrefix = arrayPrefix + 2;  |         |  192  |          194  |        193  |          96  |
  2052  |                         R = R + 2;  |      2  |  194  |          194  |        193  |          96  |
  2053  |              resetPlaceHolder_1();  |         |  194  |          194  |        193  |          96  |
  2066  |       className_ = className_ - 1;  |         |  194  |          194  |        193  |          95  |
  2070  |     arrayPrefix = arrayPrefix + 2;  |         |  194  |          196  |        193  |          95  |
  2073  |                         R = R + 2;  |      2  |  196  |          196  |        193  |          95  |
  2074  |              resetPlaceHolder_1();  |         |  196  |          196  |        193  |          95  |
  2087  |       className_ = className_ - 1;  |         |  196  |          196  |        193  |          94  |
  2091  |     arrayPrefix = arrayPrefix + 2;  |         |  196  |          198  |        193  |          94  |
  2094  |                         R = R + 2;  |      2  |  198  |          198  |        193  |          94  |
  2095  |              resetPlaceHolder_1();  |         |  198  |          198  |        193  |          94  |
  2108  |       className_ = className_ - 1;  |         |  198  |          198  |        193  |          93  |
  2112  |     arrayPrefix = arrayPrefix + 2;  |         |  198  |          200  |        193  |          93  |
  2115  |                         R = R + 2;  |      2  |  200  |          200  |        193  |          93  |
  2116  |              resetPlaceHolder_1();  |         |  200  |          200  |        193  |          93  |
  2129  |       className_ = className_ - 1;  |         |  200  |          200  |        193  |          92  |
  2133  |     arrayPrefix = arrayPrefix + 2;  |         |  200  |          202  |        193  |          92  |
  2136  |                         R = R + 2;  |      2  |  202  |          202  |        193  |          92  |
  2137  |              resetPlaceHolder_1();  |         |  202  |          202  |        193  |          92  |
  2150  |       className_ = className_ - 1;  |         |  202  |          202  |        193  |          91  |
  2154  |     arrayPrefix = arrayPrefix + 2;  |         |  202  |          204  |        193  |          91  |
  2157  |                         R = R + 2;  |      2  |  204  |          204  |        193  |          91  |
  2158  |              resetPlaceHolder_1();  |         |  204  |          204  |        193  |          91  |
  2171  |       className_ = className_ - 1;  |         |  204  |          204  |        193  |          90  |
  2175  |     arrayPrefix = arrayPrefix + 2;  |         |  204  |          206  |        193  |          90  |
  2178  |                         R = R + 2;  |      2  |  206  |          206  |        193  |          90  |
  2179  |              resetPlaceHolder_1();  |         |  206  |          206  |        193  |          90  |
  2192  |       className_ = className_ - 1;  |         |  206  |          206  |        193  |          89  |
  2196  |     arrayPrefix = arrayPrefix + 2;  |         |  206  |          208  |        193  |          89  |
  2199  |                         R = R + 2;  |      2  |  208  |          208  |        193  |          89  |
  2200  |              resetPlaceHolder_1();  |         |  208  |          208  |        193  |          89  |
  2213  |       className_ = className_ - 1;  |         |  208  |          208  |        193  |          88  |
  2217  |     arrayPrefix = arrayPrefix + 2;  |         |  208  |          210  |        193  |          88  |
  2220  |                         R = R + 2;  |      2  |  210  |          210  |        193  |          88  |
  2221  |              resetPlaceHolder_1();  |         |  210  |          210  |        193  |          88  |
  2234  |       className_ = className_ - 1;  |         |  210  |          210  |        193  |          87  |
  2238  |     arrayPrefix = arrayPrefix + 2;  |         |  210  |          212  |        193  |          87  |
  2241  |                         R = R + 2;  |      2  |  212  |          212  |        193  |          87  |
  2242  |              resetPlaceHolder_1();  |         |  212  |          212  |        193  |          87  |
  2255  |       className_ = className_ - 1;  |         |  212  |          212  |        193  |          86  |
  2259  |     arrayPrefix = arrayPrefix + 2;  |         |  212  |          214  |        193  |          86  |
  2262  |                         R = R + 2;  |      2  |  214  |          214  |        193  |          86  |
  2263  |              resetPlaceHolder_1();  |         |  214  |          214  |        193  |          86  |
  2276  |       className_ = className_ - 1;  |         |  214  |          214  |        193  |          85  |
  2280  |     arrayPrefix = arrayPrefix + 2;  |         |  214  |          216  |        193  |          85  |
  2283  |                         R = R + 2;  |      2  |  216  |          216  |        193  |          85  |
  2284  |              resetPlaceHolder_1();  |         |  216  |          216  |        193  |          85  |
  2297  |       className_ = className_ - 1;  |         |  216  |          216  |        193  |          84  |
  2301  |     arrayPrefix = arrayPrefix + 2;  |         |  216  |          218  |        193  |          84  |
  2304  |                         R = R + 2;  |      2  |  218  |          218  |        193  |          84  |
  2305  |              resetPlaceHolder_1();  |         |  218  |          218  |        193  |          84  |
  2318  |       className_ = className_ - 1;  |         |  218  |          218  |        193  |          83  |
  2322  |     arrayPrefix = arrayPrefix + 2;  |         |  218  |          220  |        193  |          83  |
  2325  |                         R = R + 2;  |      2  |  220  |          220  |        193  |          83  |
  2326  |              resetPlaceHolder_1();  |         |  220  |          220  |        193  |          83  |
  2339  |       className_ = className_ - 1;  |         |  220  |          220  |        193  |          82  |
  2343  |     arrayPrefix = arrayPrefix + 2;  |         |  220  |          222  |        193  |          82  |
  2346  |                         R = R + 2;  |      2  |  222  |          222  |        193  |          82  |
  2347  |              resetPlaceHolder_1();  |         |  222  |          222  |        193  |          82  |
  2360  |       className_ = className_ - 1;  |         |  222  |          222  |        193  |          81  |
  2364  |     arrayPrefix = arrayPrefix + 2;  |         |  222  |          224  |        193  |          81  |
  2367  |                         R = R + 2;  |      2  |  224  |          224  |        193  |          81  |
  2368  |              resetPlaceHolder_1();  |         |  224  |          224  |        193  |          81  |
  2381  |       className_ = className_ - 1;  |         |  224  |          224  |        193  |          80  |
  2385  |     arrayPrefix = arrayPrefix + 2;  |         |  224  |          226  |        193  |          80  |
  2388  |                         R = R + 2;  |      2  |  226  |          226  |        193  |          80  |
  2389  |              resetPlaceHolder_1();  |         |  226  |          226  |        193  |          80  |
  2402  |       className_ = className_ - 1;  |         |  226  |          226  |        193  |          79  |
  2406  |     arrayPrefix = arrayPrefix + 2;  |         |  226  |          228  |        193  |          79  |
  2409  |                         R = R + 2;  |      2  |  228  |          228  |        193  |          79  |
  2410  |              resetPlaceHolder_1();  |         |  228  |          228  |        193  |          79  |
  2423  |       className_ = className_ - 1;  |         |  228  |          228  |        193  |          78  |
  2427  |     arrayPrefix = arrayPrefix + 2;  |         |  228  |          230  |        193  |          78  |
  2430  |                         R = R + 2;  |      2  |  230  |          230  |        193  |          78  |
  2431  |              resetPlaceHolder_1();  |         |  230  |          230  |        193  |          78  |
  2444  |       className_ = className_ - 1;  |         |  230  |          230  |        193  |          77  |
  2448  |     arrayPrefix = arrayPrefix + 2;  |         |  230  |          232  |        193  |          77  |
  2451  |                         R = R + 2;  |      2  |  232  |          232  |        193  |          77  |
  2452  |              resetPlaceHolder_1();  |         |  232  |          232  |        193  |          77  |
  2465  |       className_ = className_ - 1;  |         |  232  |          232  |        193  |          76  |
  2469  |     arrayPrefix = arrayPrefix + 2;  |         |  232  |          234  |        193  |          76  |
  2472  |                         R = R + 2;  |      2  |  234  |          234  |        193  |          76  |
  2473  |              resetPlaceHolder_1();  |         |  234  |          234  |        193  |          76  |
  2486  |       className_ = className_ - 1;  |         |  234  |          234  |        193  |          75  |
  2490  |     arrayPrefix = arrayPrefix + 2;  |         |  234  |          236  |        193  |          75  |
  2493  |                         R = R + 2;  |      2  |  236  |          236  |        193  |          75  |
  2494  |              resetPlaceHolder_1();  |         |  236  |          236  |        193  |          75  |
  2507  |       className_ = className_ - 1;  |         |  236  |          236  |        193  |          74  |
  2511  |     arrayPrefix = arrayPrefix + 2;  |         |  236  |          238  |        193  |          74  |
  2514  |                         R = R + 2;  |      2  |  238  |          238  |        193  |          74  |
  2515  |              resetPlaceHolder_1();  |         |  238  |          238  |        193  |          74  |
  2528  |       className_ = className_ - 1;  |         |  238  |          238  |        193  |          73  |
  2532  |     arrayPrefix = arrayPrefix + 2;  |         |  238  |          240  |        193  |          73  |
  2535  |                         R = R + 2;  |      2  |  240  |          240  |        193  |          73  |
  2536  |              resetPlaceHolder_1();  |         |  240  |          240  |        193  |          73  |
  2549  |       className_ = className_ - 1;  |         |  240  |          240  |        193  |          72  |
  2553  |     arrayPrefix = arrayPrefix + 2;  |         |  240  |          242  |        193  |          72  |
  2556  |                         R = R + 2;  |      2  |  242  |          242  |        193  |          72  |
  2557  |              resetPlaceHolder_1();  |         |  242  |          242  |        193  |          72  |
  2570  |       className_ = className_ - 1;  |         |  242  |          242  |        193  |          71  |
  2574  |     arrayPrefix = arrayPrefix + 2;  |         |  242  |          244  |        193  |          71  |
  2577  |                         R = R + 2;  |      2  |  244  |          244  |        193  |          71  |
  2578  |              resetPlaceHolder_1();  |         |  244  |          244  |        193  |          71  |
  2591  |       className_ = className_ - 1;  |         |  244  |          244  |        193  |          70  |
  2595  |     arrayPrefix = arrayPrefix + 2;  |         |  244  |          246  |        193  |          70  |
  2598  |                         R = R + 2;  |      2  |  246  |          246  |        193  |          70  |
  2599  |              resetPlaceHolder_1();  |         |  246  |          246  |        193  |          70  |
  2612  |       className_ = className_ - 1;  |         |  246  |          246  |        193  |          69  |
  2616  |     arrayPrefix = arrayPrefix + 2;  |         |  246  |          248  |        193  |          69  |
  2619  |                         R = R + 2;  |      2  |  248  |          248  |        193  |          69  |
  2620  |              resetPlaceHolder_1();  |         |  248  |          248  |        193  |          69  |
  2633  |       className_ = className_ - 1;  |         |  248  |          248  |        193  |          68  |
  2637  |     arrayPrefix = arrayPrefix + 2;  |         |  248  |          250  |        193  |          68  |
  2640  |                         R = R + 2;  |      2  |  250  |          250  |        193  |          68  |
  2641  |              resetPlaceHolder_1();  |         |  250  |          250  |        193  |          68  |
  2654  |       className_ = className_ - 1;  |         |  250  |          250  |        193  |          67  |
  2658  |     arrayPrefix = arrayPrefix + 2;  |         |  250  |          252  |        193  |          67  |
  2661  |                         R = R + 2;  |      2  |  252  |          252  |        193  |          67  |
  2662  |              resetPlaceHolder_1();  |         |  252  |          252  |        193  |          67  |
  2675  |       className_ = className_ - 1;  |         |  252  |          252  |        193  |          66  |
  2679  |     arrayPrefix = arrayPrefix + 2;  |         |  252  |          254  |        193  |          66  |
  2682  |                         R = R + 2;  |      2  |  254  |          254  |        193  |          66  |
  2683  |              resetPlaceHolder_1();  |         |  254  |          254  |        193  |          66  |
  2696  |       className_ = className_ - 1;  |         |  254  |          254  |        193  |          65  |
  2700  |     arrayPrefix = arrayPrefix + 2;  |         |  254  |          256  |        193  |          65  |
  2703  |                         R = R + 2;  |      2  |  256  |          256  |        193  |          65  |
  2704  |              resetPlaceHolder_1();  |         |  256  |          256  |        193  |          65  |
  2717  |       className_ = className_ - 1;  |         |  256  |          256  |        193  |          64  |
  2721  |     arrayPrefix = arrayPrefix + 2;  |         |  256  |          258  |        193  |          64  |
  2724  |                         R = R + 2;  |      2  |  258  |          258  |        193  |          64  |
  2725  |              resetPlaceHolder_1();  |         |  258  |          258  |        193  |          64  |
  2738  |       className_ = className_ - 1;  |         |  258  |          258  |        193  |          63  |
  2742  |     arrayPrefix = arrayPrefix + 2;  |         |  258  |          260  |        193  |          63  |
  2745  |                         R = R + 2;  |      2  |  260  |          260  |        193  |          63  |
  2746  |              resetPlaceHolder_1();  |         |  260  |          260  |        193  |          63  |
  2759  |       className_ = className_ - 1;  |         |  260  |          260  |        193  |          62  |
  2763  |     arrayPrefix = arrayPrefix + 2;  |         |  260  |          262  |        193  |          62  |
  2766  |                         R = R + 2;  |      2  |  262  |          262  |        193  |          62  |
  2767  |              resetPlaceHolder_1();  |         |  262  |          262  |        193  |          62  |
  2780  |       className_ = className_ - 1;  |         |  262  |          262  |        193  |          61  |
  2784  |     arrayPrefix = arrayPrefix + 2;  |         |  262  |          264  |        193  |          61  |
  2787  |                         R = R + 2;  |      2  |  264  |          264  |        193  |          61  |
  2788  |              resetPlaceHolder_1();  |         |  264  |          264  |        193  |          61  |
  2801  |       className_ = className_ - 1;  |         |  264  |          264  |        193  |          60  |
  2805  |     arrayPrefix = arrayPrefix + 2;  |         |  264  |          266  |        193  |          60  |
  2808  |                         R = R + 2;  |      2  |  266  |          266  |        193  |          60  |
  2809  |              resetPlaceHolder_1();  |         |  266  |          266  |        193  |          60  |
  2822  |       className_ = className_ - 1;  |         |  266  |          266  |        193  |          59  |
  2826  |     arrayPrefix = arrayPrefix + 2;  |         |  266  |          268  |        193  |          59  |
  2829  |                         R = R + 2;  |      2  |  268  |          268  |        193  |          59  |
  2830  |              resetPlaceHolder_1();  |         |  268  |          268  |        193  |          59  |
  2843  |       className_ = className_ - 1;  |         |  268  |          268  |        193  |          58  |
  2847  |     arrayPrefix = arrayPrefix + 2;  |         |  268  |          270  |        193  |          58  |
  2850  |                         R = R + 2;  |      2  |  270  |          270  |        193  |          58  |
  2851  |              resetPlaceHolder_1();  |         |  270  |          270  |        193  |          58  |
  2864  |       className_ = className_ - 1;  |         |  270  |          270  |        193  |          57  |
  2868  |     arrayPrefix = arrayPrefix + 2;  |         |  270  |          272  |        193  |          57  |
  2871  |                         R = R + 2;  |      2  |  272  |          272  |        193  |          57  |
  2872  |              resetPlaceHolder_1();  |         |  272  |          272  |        193  |          57  |
  2885  |       className_ = className_ - 1;  |         |  272  |          272  |        193  |          56  |
  2889  |     arrayPrefix = arrayPrefix + 2;  |         |  272  |          274  |        193  |          56  |
  2892  |                         R = R + 2;  |      2  |  274  |          274  |        193  |          56  |
  2893  |              resetPlaceHolder_1();  |         |  274  |          274  |        193  |          56  |
  2906  |       className_ = className_ - 1;  |         |  274  |          274  |        193  |          55  |
  2910  |     arrayPrefix = arrayPrefix + 2;  |         |  274  |          276  |        193  |          55  |
  2913  |                         R = R + 2;  |      2  |  276  |          276  |        193  |          55  |
  2914  |              resetPlaceHolder_1();  |         |  276  |          276  |        193  |          55  |
  2927  |       className_ = className_ - 1;  |         |  276  |          276  |        193  |          54  |
  2931  |     arrayPrefix = arrayPrefix + 2;  |         |  276  |          278  |        193  |          54  |
  2934  |                         R = R + 2;  |      2  |  278  |          278  |        193  |          54  |
  2935  |              resetPlaceHolder_1();  |         |  278  |          278  |        193  |          54  |
  2948  |       className_ = className_ - 1;  |         |  278  |          278  |        193  |          53  |
  2952  |     arrayPrefix = arrayPrefix + 2;  |         |  278  |          280  |        193  |          53  |
  2955  |                         R = R + 2;  |      2  |  280  |          280  |        193  |          53  |
  2956  |              resetPlaceHolder_1();  |         |  280  |          280  |        193  |          53  |
  2969  |       className_ = className_ - 1;  |         |  280  |          280  |        193  |          52  |
  2973  |     arrayPrefix = arrayPrefix + 2;  |         |  280  |          282  |        193  |          52  |
  2976  |                         R = R + 2;  |      2  |  282  |          282  |        193  |          52  |
  2977  |              resetPlaceHolder_1();  |         |  282  |          282  |        193  |          52  |
  2990  |       className_ = className_ - 1;  |         |  282  |          282  |        193  |          51  |
  2994  |     arrayPrefix = arrayPrefix + 2;  |         |  282  |          284  |        193  |          51  |
  2997  |                         R = R + 2;  |      2  |  284  |          284  |        193  |          51  |
  2998  |              resetPlaceHolder_1();  |         |  284  |          284  |        193  |          51  |
  3011  |       className_ = className_ - 1;  |         |  284  |          284  |        193  |          50  |
  3015  |     arrayPrefix = arrayPrefix + 2;  |         |  284  |          286  |        193  |          50  |
  3018  |                         R = R + 2;  |      2  |  286  |          286  |        193  |          50  |
  3019  |              resetPlaceHolder_1();  |         |  286  |          286  |        193  |          50  |
  3032  |       className_ = className_ - 1;  |         |  286  |          286  |        193  |          49  |
  3036  |     arrayPrefix = arrayPrefix + 2;  |         |  286  |          288  |        193  |          49  |
  3039  |                         R = R + 2;  |      2  |  288  |          288  |        193  |          49  |
  3040  |              resetPlaceHolder_1();  |         |  288  |          288  |        193  |          49  |
  3053  |       className_ = className_ - 1;  |         |  288  |          288  |        193  |          48  |
  3057  |     arrayPrefix = arrayPrefix + 2;  |         |  288  |          290  |        193  |          48  |
  3060  |                         R = R + 2;  |      2  |  290  |          290  |        193  |          48  |
  3061  |              resetPlaceHolder_1();  |         |  290  |          290  |        193  |          48  |
  3074  |       className_ = className_ - 1;  |         |  290  |          290  |        193  |          47  |
  3078  |     arrayPrefix = arrayPrefix + 2;  |         |  290  |          292  |        193  |          47  |
  3081  |                         R = R + 2;  |      2  |  292  |          292  |        193  |          47  |
  3082  |              resetPlaceHolder_1();  |         |  292  |          292  |        193  |          47  |
  3095  |       className_ = className_ - 1;  |         |  292  |          292  |        193  |          46  |
  3099  |     arrayPrefix = arrayPrefix + 2;  |         |  292  |          294  |        193  |          46  |
  3102  |                         R = R + 2;  |      2  |  294  |          294  |        193  |          46  |
  3103  |              resetPlaceHolder_1();  |         |  294  |          294  |        193  |          46  |
  3116  |       className_ = className_ - 1;  |         |  294  |          294  |        193  |          45  |
  3120  |     arrayPrefix = arrayPrefix + 2;  |         |  294  |          296  |        193  |          45  |
  3123  |                         R = R + 2;  |      2  |  296  |          296  |        193  |          45  |
  3124  |              resetPlaceHolder_1();  |         |  296  |          296  |        193  |          45  |
  3137  |       className_ = className_ - 1;  |         |  296  |          296  |        193  |          44  |
  3141  |     arrayPrefix = arrayPrefix + 2;  |         |  296  |          298  |        193  |          44  |
  3144  |                         R = R + 2;  |      2  |  298  |          298  |        193  |          44  |
  3145  |              resetPlaceHolder_1();  |         |  298  |          298  |        193  |          44  |
  3158  |       className_ = className_ - 1;  |         |  298  |          298  |        193  |          43  |
  3162  |     arrayPrefix = arrayPrefix + 2;  |         |  298  |          300  |        193  |          43  |
  3165  |                         R = R + 2;  |      2  |  300  |          300  |        193  |          43  |
  3166  |              resetPlaceHolder_1();  |         |  300  |          300  |        193  |          43  |
  3179  |       className_ = className_ - 1;  |         |  300  |          300  |        193  |          42  |
  3183  |     arrayPrefix = arrayPrefix + 2;  |         |  300  |          302  |        193  |          42  |
  3186  |                         R = R + 2;  |      2  |  302  |          302  |        193  |          42  |
  3187  |              resetPlaceHolder_1();  |         |  302  |          302  |        193  |          42  |
  3200  |       className_ = className_ - 1;  |         |  302  |          302  |        193  |          41  |
  3204  |     arrayPrefix = arrayPrefix + 2;  |         |  302  |          304  |        193  |          41  |
  3207  |                         R = R + 2;  |      2  |  304  |          304  |        193  |          41  |
  3208  |              resetPlaceHolder_1();  |         |  304  |          304  |        193  |          41  |
  3221  |       className_ = className_ - 1;  |         |  304  |          304  |        193  |          40  |
  3225  |     arrayPrefix = arrayPrefix + 2;  |         |  304  |          306  |        193  |          40  |
  3228  |                         R = R + 2;  |      2  |  306  |          306  |        193  |          40  |
  3229  |              resetPlaceHolder_1();  |         |  306  |          306  |        193  |          40  |
  3242  |       className_ = className_ - 1;  |         |  306  |          306  |        193  |          39  |
  3246  |     arrayPrefix = arrayPrefix + 2;  |         |  306  |          308  |        193  |          39  |
  3249  |                         R = R + 2;  |      2  |  308  |          308  |        193  |          39  |
  3250  |              resetPlaceHolder_1();  |         |  308  |          308  |        193  |          39  |
  3263  |       className_ = className_ - 1;  |         |  308  |          308  |        193  |          38  |
  3267  |     arrayPrefix = arrayPrefix + 2;  |         |  308  |          310  |        193  |          38  |
  3270  |                         R = R + 2;  |      2  |  310  |          310  |        193  |          38  |
  3271  |              resetPlaceHolder_1();  |         |  310  |          310  |        193  |          38  |
  3284  |       className_ = className_ - 1;  |         |  310  |          310  |        193  |          37  |
  3288  |     arrayPrefix = arrayPrefix + 2;  |         |  310  |          312  |        193  |          37  |
  3291  |                         R = R + 2;  |      2  |  312  |          312  |        193  |          37  |
  3292  |              resetPlaceHolder_1();  |         |  312  |          312  |        193  |          37  |
  3305  |       className_ = className_ - 1;  |         |  312  |          312  |        193  |          36  |
  3309  |     arrayPrefix = arrayPrefix + 2;  |         |  312  |          314  |        193  |          36  |
  3312  |                         R = R + 2;  |      2  |  314  |          314  |        193  |          36  |
  3313  |              resetPlaceHolder_1();  |         |  314  |          314  |        193  |          36  |
  3326  |       className_ = className_ - 1;  |         |  314  |          314  |        193  |          35  |
  3330  |     arrayPrefix = arrayPrefix + 2;  |         |  314  |          316  |        193  |          35  |
  3333  |                         R = R + 2;  |      2  |  316  |          316  |        193  |          35  |
  3334  |              resetPlaceHolder_1();  |         |  316  |          316  |        193  |          35  |
  3347  |       className_ = className_ - 1;  |         |  316  |          316  |        193  |          34  |
  3351  |     arrayPrefix = arrayPrefix + 2;  |         |  316  |          318  |        193  |          34  |
  3354  |                         R = R + 2;  |      2  |  318  |          318  |        193  |          34  |
  3355  |              resetPlaceHolder_1();  |         |  318  |          318  |        193  |          34  |
  3368  |       className_ = className_ - 1;  |         |  318  |          318  |        193  |          33  |
  3372  |     arrayPrefix = arrayPrefix + 2;  |         |  318  |          320  |        193  |          33  |
  3375  |                         R = R + 2;  |      2  |  320  |          320  |        193  |          33  |
  3376  |              resetPlaceHolder_1();  |         |  320  |          320  |        193  |          33  |
  3389  |       className_ = className_ - 1;  |         |  320  |          320  |        193  |          32  |
  3393  |     arrayPrefix = arrayPrefix + 2;  |         |  320  |          322  |        193  |          32  |
  3396  |                         R = R + 2;  |      2  |  322  |          322  |        193  |          32  |
  3397  |              resetPlaceHolder_1();  |         |  322  |          322  |        193  |          32  |
  3410  |       className_ = className_ - 1;  |         |  322  |          322  |        193  |          31  |
  3414  |     arrayPrefix = arrayPrefix + 2;  |         |  322  |          324  |        193  |          31  |
  3417  |                         R = R + 2;  |      2  |  324  |          324  |        193  |          31  |
  3418  |              resetPlaceHolder_1();  |         |  324  |          324  |        193  |          31  |
  3431  |       className_ = className_ - 1;  |         |  324  |          324  |        193  |          30  |
  3435  |     arrayPrefix = arrayPrefix + 2;  |         |  324  |          326  |        193  |          30  |
  3438  |                         R = R + 2;  |      2  |  326  |          326  |        193  |          30  |
  3439  |              resetPlaceHolder_1();  |         |  326  |          326  |        193  |          30  |
  3452  |       className_ = className_ - 1;  |         |  326  |          326  |        193  |          29  |
  3456  |     arrayPrefix = arrayPrefix + 2;  |         |  326  |          328  |        193  |          29  |
  3459  |                         R = R + 2;  |      2  |  328  |          328  |        193  |          29  |
  3460  |              resetPlaceHolder_1();  |         |  328  |          328  |        193  |          29  |
  3473  |       className_ = className_ - 1;  |         |  328  |          328  |        193  |          28  |
  3477  |     arrayPrefix = arrayPrefix + 2;  |         |  328  |          330  |        193  |          28  |
  3480  |                         R = R + 2;  |      2  |  330  |          330  |        193  |          28  |
  3481  |              resetPlaceHolder_1();  |         |  330  |          330  |        193  |          28  |
  3494  |       className_ = className_ - 1;  |         |  330  |          330  |        193  |          27  |
  3498  |     arrayPrefix = arrayPrefix + 2;  |         |  330  |          332  |        193  |          27  |
  3501  |                         R = R + 2;  |      2  |  332  |          332  |        193  |          27  |
  3502  |              resetPlaceHolder_1();  |         |  332  |          332  |        193  |          27  |
  3515  |       className_ = className_ - 1;  |         |  332  |          332  |        193  |          26  |
  3519  |     arrayPrefix = arrayPrefix + 2;  |         |  332  |          334  |        193  |          26  |
  3522  |                         R = R + 2;  |      2  |  334  |          334  |        193  |          26  |
  3523  |              resetPlaceHolder_1();  |         |  334  |          334  |        193  |          26  |
  3536  |       className_ = className_ - 1;  |         |  334  |          334  |        193  |          25  |
  3540  |     arrayPrefix = arrayPrefix + 2;  |         |  334  |          336  |        193  |          25  |
  3543  |                         R = R + 2;  |      2  |  336  |          336  |        193  |          25  |
  3544  |              resetPlaceHolder_1();  |         |  336  |          336  |        193  |          25  |
  3557  |       className_ = className_ - 1;  |         |  336  |          336  |        193  |          24  |
  3561  |     arrayPrefix = arrayPrefix + 2;  |         |  336  |          338  |        193  |          24  |
  3564  |                         R = R + 2;  |      2  |  338  |          338  |        193  |          24  |
  3565  |              resetPlaceHolder_1();  |         |  338  |          338  |        193  |          24  |
  3578  |       className_ = className_ - 1;  |         |  338  |          338  |        193  |          23  |
  3582  |     arrayPrefix = arrayPrefix + 2;  |         |  338  |          340  |        193  |          23  |
  3585  |                         R = R + 2;  |      2  |  340  |          340  |        193  |          23  |
  3586  |              resetPlaceHolder_1();  |         |  340  |          340  |        193  |          23  |
  3599  |       className_ = className_ - 1;  |         |  340  |          340  |        193  |          22  |
  3603  |     arrayPrefix = arrayPrefix + 2;  |         |  340  |          342  |        193  |          22  |
  3606  |                         R = R + 2;  |      2  |  342  |          342  |        193  |          22  |
  3607  |              resetPlaceHolder_1();  |         |  342  |          342  |        193  |          22  |
  3620  |       className_ = className_ - 1;  |         |  342  |          342  |        193  |          21  |
  3624  |     arrayPrefix = arrayPrefix + 2;  |         |  342  |          344  |        193  |          21  |
  3627  |                         R = R + 2;  |      2  |  344  |          344  |        193  |          21  |
  3628  |              resetPlaceHolder_1();  |         |  344  |          344  |        193  |          21  |
  3641  |       className_ = className_ - 1;  |         |  344  |          344  |        193  |          20  |
  3645  |     arrayPrefix = arrayPrefix + 2;  |         |  344  |          346  |        193  |          20  |
  3648  |                         R = R + 2;  |      2  |  346  |          346  |        193  |          20  |
  3649  |              resetPlaceHolder_1();  |         |  346  |          346  |        193  |          20  |
  3662  |       className_ = className_ - 1;  |         |  346  |          346  |        193  |          19  |
  3666  |     arrayPrefix = arrayPrefix + 2;  |         |  346  |          348  |        193  |          19  |
  3669  |                         R = R + 2;  |      2  |  348  |          348  |        193  |          19  |
  3670  |              resetPlaceHolder_1();  |         |  348  |          348  |        193  |          19  |
  3683  |       className_ = className_ - 1;  |         |  348  |          348  |        193  |          18  |
  3687  |     arrayPrefix = arrayPrefix + 2;  |         |  348  |          350  |        193  |          18  |
  3690  |                         R = R + 2;  |      2  |  350  |          350  |        193  |          18  |
  3691  |              resetPlaceHolder_1();  |         |  350  |          350  |        193  |          18  |
  3704  |       className_ = className_ - 1;  |         |  350  |          350  |        193  |          17  |
  3708  |     arrayPrefix = arrayPrefix + 2;  |         |  350  |          352  |        193  |          17  |
  3711  |                         R = R + 2;  |      2  |  352  |          352  |        193  |          17  |
  3712  |              resetPlaceHolder_1();  |         |  352  |          352  |        193  |          17  |
  3725  |       className_ = className_ - 1;  |         |  352  |          352  |        193  |          16  |
  3729  |     arrayPrefix = arrayPrefix + 2;  |         |  352  |          354  |        193  |          16  |
  3732  |                         R = R + 2;  |      2  |  354  |          354  |        193  |          16  |
  3733  |              resetPlaceHolder_1();  |         |  354  |          354  |        193  |          16  |
  3746  |       className_ = className_ - 1;  |         |  354  |          354  |        193  |          15  |
  3750  |     arrayPrefix = arrayPrefix + 2;  |         |  354  |          356  |        193  |          15  |
  3753  |                         R = R + 2;  |      2  |  356  |          356  |        193  |          15  |
  3754  |              resetPlaceHolder_1();  |         |  356  |          356  |        193  |          15  |
  3767  |       className_ = className_ - 1;  |         |  356  |          356  |        193  |          14  |
  3771  |     arrayPrefix = arrayPrefix + 2;  |         |  356  |          358  |        193  |          14  |
  3774  |                         R = R + 2;  |      2  |  358  |          358  |        193  |          14  |
  3775  |              resetPlaceHolder_1();  |         |  358  |          358  |        193  |          14  |
  3788  |       className_ = className_ - 1;  |         |  358  |          358  |        193  |          13  |
  3792  |     arrayPrefix = arrayPrefix + 2;  |         |  358  |          360  |        193  |          13  |
  3795  |                         R = R + 2;  |      2  |  360  |          360  |        193  |          13  |
  3796  |              resetPlaceHolder_1();  |         |  360  |          360  |        193  |          13  |
  3809  |       className_ = className_ - 1;  |         |  360  |          360  |        193  |          12  |
  3813  |     arrayPrefix = arrayPrefix + 2;  |         |  360  |          362  |        193  |          12  |
  3816  |                         R = R + 2;  |      2  |  362  |          362  |        193  |          12  |
  3817  |              resetPlaceHolder_1();  |         |  362  |          362  |        193  |          12  |
  3830  |       className_ = className_ - 1;  |         |  362  |          362  |        193  |          11  |
  3834  |     arrayPrefix = arrayPrefix + 2;  |         |  362  |          364  |        193  |          11  |
  3837  |                         R = R + 2;  |      2  |  364  |          364  |        193  |          11  |
  3838  |              resetPlaceHolder_1();  |         |  364  |          364  |        193  |          11  |
  3851  |       className_ = className_ - 1;  |         |  364  |          364  |        193  |          10  |
  3855  |     arrayPrefix = arrayPrefix + 2;  |         |  364  |          366  |        193  |          10  |
  3858  |                         R = R + 2;  |      2  |  366  |          366  |        193  |          10  |
  3859  |              resetPlaceHolder_1();  |         |  366  |          366  |        193  |          10  |
  3872  |       className_ = className_ - 1;  |         |  366  |          366  |        193  |           9  |
  3876  |     arrayPrefix = arrayPrefix + 2;  |         |  366  |          368  |        193  |           9  |
  3879  |                         R = R + 2;  |      2  |  368  |          368  |        193  |           9  |
  3880  |              resetPlaceHolder_1();  |         |  368  |          368  |        193  |           9  |
  3893  |       className_ = className_ - 1;  |         |  368  |          368  |        193  |           8  |
  3897  |     arrayPrefix = arrayPrefix + 2;  |         |  368  |          370  |        193  |           8  |
  3900  |                         R = R + 2;  |      2  |  370  |          370  |        193  |           8  |
  3901  |              resetPlaceHolder_1();  |         |  370  |          370  |        193  |           8  |
  3914  |       className_ = className_ - 1;  |         |  370  |          370  |        193  |           7  |
  3918  |     arrayPrefix = arrayPrefix + 2;  |         |  370  |          372  |        193  |           7  |
  3921  |                         R = R + 2;  |      2  |  372  |          372  |        193  |           7  |
  3922  |              resetPlaceHolder_1();  |         |  372  |          372  |        193  |           7  |
  3935  |       className_ = className_ - 1;  |         |  372  |          372  |        193  |           6  |
  3939  |     arrayPrefix = arrayPrefix + 2;  |         |  372  |          374  |        193  |           6  |
  3942  |                         R = R + 2;  |      2  |  374  |          374  |        193  |           6  |
  3943  |              resetPlaceHolder_1();  |         |  374  |          374  |        193  |           6  |
  3956  |       className_ = className_ - 1;  |         |  374  |          374  |        193  |           5  |
  3960  |     arrayPrefix = arrayPrefix + 2;  |         |  374  |          376  |        193  |           5  |
  3963  |                         R = R + 2;  |      2  |  376  |          376  |        193  |           5  |
  3964  |              resetPlaceHolder_1();  |         |  376  |          376  |        193  |           5  |
  3977  |       className_ = className_ - 1;  |         |  376  |          376  |        193  |           4  |
  3981  |     arrayPrefix = arrayPrefix + 2;  |         |  376  |          378  |        193  |           4  |
  3984  |                         R = R + 2;  |      2  |  378  |          378  |        193  |           4  |
  3985  |              resetPlaceHolder_1();  |         |  378  |          378  |        193  |           4  |
  3998  |       className_ = className_ - 1;  |         |  378  |          378  |        193  |           3  |
  4002  |     arrayPrefix = arrayPrefix + 2;  |         |  378  |          380  |        193  |           3  |
  4005  |                         R = R + 2;  |      2  |  380  |          380  |        193  |           3  |
  4006  |              resetPlaceHolder_1();  |         |  380  |          380  |        193  |           3  |
  4019  |       className_ = className_ - 1;  |         |  380  |          380  |        193  |           2  |
  4023  |     arrayPrefix = arrayPrefix + 2;  |         |  380  |          382  |        193  |           2  |
  4026  |                         R = R + 2;  |      2  |  382  |          382  |        193  |           2  |
  4027  |              resetPlaceHolder_1();  |         |  382  |          382  |        193  |           2  |
  4040  |       className_ = className_ - 1;  |         |  382  |          382  |        193  |           1  |
  4044  |     arrayPrefix = arrayPrefix + 2;  |         |  382  |          384  |        193  |           1  |
  4047  |                         R = R + 2;  |      2  |  384  |          384  |        193  |           1  |
  4048  |              resetPlaceHolder_1();  |         |  384  |          384  |        193  |           1  |
  4061  |       className_ = className_ - 1;  |         |  384  |          384  |        193  |           0  |
  4065  |     arrayPrefix = arrayPrefix + 2;  |         |  384  |          386  |        193  |           0  |
  4068  |                         R = R + 2;  |      2  |  386  |          386  |        193  |           0  |
  4069  |              resetPlaceHolder_1();  |         |  386  |          386  |        193  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 2199, 2094, 4005, 2031, 2787, 666, 582, 2976, 3858, 2808, 1443, 3417, 1401, 1422, 1569, 120, 3648, 3942, 4026, 1275, 1233, 4047, 3249, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 3312, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 3438, 2073, 981, 687, 2367, 3606, 1863, 3459, 3984, 3186, 1338, 3795, 2409, 3711, 561, 3816, 729, 3207, 1968, 435, 1296, 3144, 1128, 456, 519, 2157, 2115, 2577, 3102, 3963, 2724, 141, 3060, 3018, 225, 1842, 2472, 393, 2304, 2598, 3354, 4068, 1947, 1002, 2766, 2052, 3333, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 3375, 3396, 1884, 3081, 2514, 3900, 204, 2220, 498, 1107, 3123, 1464, 540, 2346, 2493, 3270, 3732, 2955, 2871, 477, 1821, 3165, 1149, 330, 3480, 1926, 3627, 1044, 2535, 267, 3522, 1758, 162, 1905, 939, 3921, 855, 2661, 1611, 414, 3228, 2850, 1716, 3774, 1317, 3564, 1023, 1485, 1506, 2892, 876, 99, 2325, 2997, 771, 3039, 1590, 813, 2283, 1674, 351, 3501, 2934, 2262, 246, 3879, 3585, 1212, 3291, 36, 3837, 1380, 1527, 183, 3690, 603, 918, 1989, 897, 2913, 960, 2619, 1065, 624, 2241, 2430, 3543, 3753, 2640, 1653, 1737, 309, 708, 3669]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [645, 2199, 2094, 4005, 2031, 2787, 666, 582, 2976, 3858, 2808, 1443, 3417, 1401, 1422, 1569, 120, 3648, 3942, 4026, 1275, 1233, 4047, 3249, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 3312, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 3438, 2073, 981, 687, 2367, 3606, 1863, 3459, 3984, 3186, 1338, 3795, 2409, 3711, 561, 3816, 729, 3207, 1968, 435, 1296, 3144, 1128, 456, 519, 2157, 2115, 2577, 3102, 3963, 2724, 141, 3060, 3018, 225, 1842, 2472, 393, 2304, 2598, 3354, 4068, 1947, 1002, 2766, 2052, 3333, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 3375, 3396, 1884, 3081, 2514, 3900, 204, 2220, 498, 1107, 3123, 1464, 540, 2346, 2493, 3270, 3732, 2955, 2871, 477, 1821, 3165, 1149, 330, 3480, 1926, 3627, 1044, 2535, 267, 3522, 1758, 162, 1905, 939, 3921, 855, 2661, 1611, 414, 3228, 2850, 1716, 3774, 1317, 3564, 1023, 1485, 1506, 2892, 876, 99, 2325, 2997, 771, 3039, 1590, 813, 2283, 1674, 351, 3501, 2934, 2262, 246, 3879, 3585, 1212, 3291, 36, 3837, 1380, 1527, 183, 3690, 603, 918, 1989, 897, 2913, 960, 2619, 1065, 624, 2241, 2430, 3543, 3753, 2640, 1653, 1737, 309, 708, 3669]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 2199, 2094, 4005, 2031, 2787, 666, 582, 2976, 3858, 2808, 1443, 3417, 1401, 1422, 1569, 120, 3648, 3942, 4026, 1275, 1233, 4047, 3249, 288, 2010, 1359, 2136, 1254, 372, 2682, 1191, 2745, 2703, 1800, 3312, 57, 78, 2388, 2829, 2178, 1632, 2451, 834, 3438, 2073, 981, 687, 2367, 3606, 1863, 3459, 3984, 3186, 1338, 3795, 2409, 3711, 561, 3816, 729, 3207, 1968, 435, 1296, 3144, 1128, 456, 519, 2157, 2115, 2577, 3102, 3963, 2724, 141, 3060, 3018, 225, 1842, 2472, 393, 2304, 2598, 3354, 4068, 1947, 1002, 2766, 2052, 3333, 792, 1086, 1779, 1695, 1170, 750, 2556, 1548, 3375, 3396, 1884, 3081, 2514, 3900, 204, 2220, 498, 1107, 3123, 1464, 540, 2346, 2493, 3270, 3732, 2955, 2871, 477, 1821, 3165, 1149, 330, 3480, 1926, 3627, 1044, 2535, 267, 3522, 1758, 162, 1905, 939, 3921, 855, 2661, 1611, 414, 3228, 2850, 1716, 3774, 1317, 3564, 1023, 1485, 1506, 2892, 876, 99, 2325, 2997, 771, 3039, 1590, 813, 2283, 1674, 351, 3501, 2934, 2262, 246, 3879, 3585, 1212, 3291, 36, 3837, 1380, 1527, 183, 3690, 603, 918, 1989, 897, 2913, 960, 2619, 1065, 624, 2241, 2430, 3543, 3753, 2640, 1653, 1737, 309, 708, 3669]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {36,57,78,99,120,141,162,183,204,225,246,267,288,309,330,351,372,393,414,435,456,477,498,519,540,561,582,603,624,645,666,687,708,729,750,771,792,813,834,855,876,897,918,939,960,981,1002,1023,1044,1065,1086,1107,1128,1149,1170,1191,1212,1233,1254,1275,1296,1317,1338,1359,1380,1401,1422,1443,1464,1485,1506,1527,1548,1569,1590,1611,1632,1653,1674,1695,1716,1737,1758,1779,1800,1821,1842,1863,1884,1905,1926,1947,1968,1989,2010,2031,2052,2073,2094,2115,2136,2157,2178,2199,2220,2241,2262,2283,2304,2325,2346,2367,2388,2409,2430,2451,2472,2493,2514,2535,2556,2577,2598,2619,2640,2661,2682,2703,2724,2745,2766,2787,2808,2829,2850,2871,2892,2913,2934,2955,2976,2997,3018,3039,3060,3081,3102,3123,3144,3165,3186,3207,3228,3249,3270,3291,3312,3333,3354,3375,3396,3417,3438,3459,3480,3501,3522,3543,3564,3585,3606,3627,3648,3669,3690,3711,3732,3753,3774,3795,3816,3837,3858,3879,3900,3921,3942,3963,3984,4005,4026,4047,4068}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    36  |             R = R + 2;  |      2  |                         0  |
    37  |  resetPlaceHolder_1();  |         |                            |
    57  |             R = R + 2;  |      2  |                         0  |
    58  |  resetPlaceHolder_1();  |         |                            |
    78  |             R = R + 2;  |      2  |                         0  |
    79  |  resetPlaceHolder_1();  |         |                            |
    99  |             R = R + 2;  |      2  |                         0  |
   100  |  resetPlaceHolder_1();  |         |                            |
   120  |             R = R + 2;  |      2  |                         0  |
   121  |  resetPlaceHolder_1();  |         |                            |
   141  |             R = R + 2;  |      2  |                         0  |
   142  |  resetPlaceHolder_1();  |         |                            |
   162  |             R = R + 2;  |      2  |                         0  |
   163  |  resetPlaceHolder_1();  |         |                            |
   183  |             R = R + 2;  |      2  |                         0  |
   184  |  resetPlaceHolder_1();  |         |                            |
   204  |             R = R + 2;  |      2  |                         0  |
   205  |  resetPlaceHolder_1();  |         |                            |
   225  |             R = R + 2;  |      2  |                         0  |
   226  |  resetPlaceHolder_1();  |         |                            |
   246  |             R = R + 2;  |      2  |                         0  |
   247  |  resetPlaceHolder_1();  |         |                            |
   267  |             R = R + 2;  |      2  |                         0  |
   268  |  resetPlaceHolder_1();  |         |                            |
   288  |             R = R + 2;  |      2  |                         0  |
   289  |  resetPlaceHolder_1();  |         |                            |
   309  |             R = R + 2;  |      2  |                         0  |
   310  |  resetPlaceHolder_1();  |         |                            |
   330  |             R = R + 2;  |      2  |                         0  |
   331  |  resetPlaceHolder_1();  |         |                            |
   351  |             R = R + 2;  |      2  |                         0  |
   352  |  resetPlaceHolder_1();  |         |                            |
   372  |             R = R + 2;  |      2  |                         0  |
   373  |  resetPlaceHolder_1();  |         |                            |
   393  |             R = R + 2;  |      2  |                         0  |
   394  |  resetPlaceHolder_1();  |         |                            |
   414  |             R = R + 2;  |      2  |                         0  |
   415  |  resetPlaceHolder_1();  |         |                            |
   435  |             R = R + 2;  |      2  |                         0  |
   436  |  resetPlaceHolder_1();  |         |                            |
   456  |             R = R + 2;  |      2  |                         0  |
   457  |  resetPlaceHolder_1();  |         |                            |
   477  |             R = R + 2;  |      2  |                         0  |
   478  |  resetPlaceHolder_1();  |         |                            |
   498  |             R = R + 2;  |      2  |                         0  |
   499  |  resetPlaceHolder_1();  |         |                            |
   519  |             R = R + 2;  |      2  |                         0  |
   520  |  resetPlaceHolder_1();  |         |                            |
   540  |             R = R + 2;  |      2  |                         0  |
   541  |  resetPlaceHolder_1();  |         |                            |
   561  |             R = R + 2;  |      2  |                         0  |
   562  |  resetPlaceHolder_1();  |         |                            |
   582  |             R = R + 2;  |      2  |                         0  |
   583  |  resetPlaceHolder_1();  |         |                            |
   603  |             R = R + 2;  |      2  |                         0  |
   604  |  resetPlaceHolder_1();  |         |                            |
   624  |             R = R + 2;  |      2  |                         0  |
   625  |  resetPlaceHolder_1();  |         |                            |
   645  |             R = R + 2;  |      2  |                         0  |
   646  |  resetPlaceHolder_1();  |         |                            |
   666  |             R = R + 2;  |      2  |                         0  |
   667  |  resetPlaceHolder_1();  |         |                            |
   687  |             R = R + 2;  |      2  |                         0  |
   688  |  resetPlaceHolder_1();  |         |                            |
   708  |             R = R + 2;  |      2  |                         0  |
   709  |  resetPlaceHolder_1();  |         |                            |
   729  |             R = R + 2;  |      2  |                         0  |
   730  |  resetPlaceHolder_1();  |         |                            |
   750  |             R = R + 2;  |      2  |                         0  |
   751  |  resetPlaceHolder_1();  |         |                            |
   771  |             R = R + 2;  |      2  |                         0  |
   772  |  resetPlaceHolder_1();  |         |                            |
   792  |             R = R + 2;  |      2  |                         0  |
   793  |  resetPlaceHolder_1();  |         |                            |
   813  |             R = R + 2;  |      2  |                         0  |
   814  |  resetPlaceHolder_1();  |         |                            |
   834  |             R = R + 2;  |      2  |                         0  |
   835  |  resetPlaceHolder_1();  |         |                            |
   855  |             R = R + 2;  |      2  |                         0  |
   856  |  resetPlaceHolder_1();  |         |                            |
   876  |             R = R + 2;  |      2  |                         0  |
   877  |  resetPlaceHolder_1();  |         |                            |
   897  |             R = R + 2;  |      2  |                         0  |
   898  |  resetPlaceHolder_1();  |         |                            |
   918  |             R = R + 2;  |      2  |                         0  |
   919  |  resetPlaceHolder_1();  |         |                            |
   939  |             R = R + 2;  |      2  |                         0  |
   940  |  resetPlaceHolder_1();  |         |                            |
   960  |             R = R + 2;  |      2  |                         0  |
   961  |  resetPlaceHolder_1();  |         |                            |
   981  |             R = R + 2;  |      2  |                         0  |
   982  |  resetPlaceHolder_1();  |         |                            |
  1002  |             R = R + 2;  |      2  |                         0  |
  1003  |  resetPlaceHolder_1();  |         |                            |
  1023  |             R = R + 2;  |      2  |                         0  |
  1024  |  resetPlaceHolder_1();  |         |                            |
  1044  |             R = R + 2;  |      2  |                         0  |
  1045  |  resetPlaceHolder_1();  |         |                            |
  1065  |             R = R + 2;  |      2  |                         0  |
  1066  |  resetPlaceHolder_1();  |         |                            |
  1086  |             R = R + 2;  |      2  |                         0  |
  1087  |  resetPlaceHolder_1();  |         |                            |
  1107  |             R = R + 2;  |      2  |                         0  |
  1108  |  resetPlaceHolder_1();  |         |                            |
  1128  |             R = R + 2;  |      2  |                         0  |
  1129  |  resetPlaceHolder_1();  |         |                            |
  1149  |             R = R + 2;  |      2  |                         0  |
  1150  |  resetPlaceHolder_1();  |         |                            |
  1170  |             R = R + 2;  |      2  |                         0  |
  1171  |  resetPlaceHolder_1();  |         |                            |
  1191  |             R = R + 2;  |      2  |                         0  |
  1192  |  resetPlaceHolder_1();  |         |                            |
  1212  |             R = R + 2;  |      2  |                         0  |
  1213  |  resetPlaceHolder_1();  |         |                            |
  1233  |             R = R + 2;  |      2  |                         0  |
  1234  |  resetPlaceHolder_1();  |         |                            |
  1254  |             R = R + 2;  |      2  |                         0  |
  1255  |  resetPlaceHolder_1();  |         |                            |
  1275  |             R = R + 2;  |      2  |                         0  |
  1276  |  resetPlaceHolder_1();  |         |                            |
  1296  |             R = R + 2;  |      2  |                         0  |
  1297  |  resetPlaceHolder_1();  |         |                            |
  1317  |             R = R + 2;  |      2  |                         0  |
  1318  |  resetPlaceHolder_1();  |         |                            |
  1338  |             R = R + 2;  |      2  |                         0  |
  1339  |  resetPlaceHolder_1();  |         |                            |
  1359  |             R = R + 2;  |      2  |                         0  |
  1360  |  resetPlaceHolder_1();  |         |                            |
  1380  |             R = R + 2;  |      2  |                         0  |
  1381  |  resetPlaceHolder_1();  |         |                            |
  1401  |             R = R + 2;  |      2  |                         0  |
  1402  |  resetPlaceHolder_1();  |         |                            |
  1422  |             R = R + 2;  |      2  |                         0  |
  1423  |  resetPlaceHolder_1();  |         |                            |
  1443  |             R = R + 2;  |      2  |                         0  |
  1444  |  resetPlaceHolder_1();  |         |                            |
  1464  |             R = R + 2;  |      2  |                         0  |
  1465  |  resetPlaceHolder_1();  |         |                            |
  1485  |             R = R + 2;  |      2  |                         0  |
  1486  |  resetPlaceHolder_1();  |         |                            |
  1506  |             R = R + 2;  |      2  |                         0  |
  1507  |  resetPlaceHolder_1();  |         |                            |
  1527  |             R = R + 2;  |      2  |                         0  |
  1528  |  resetPlaceHolder_1();  |         |                            |
  1548  |             R = R + 2;  |      2  |                         0  |
  1549  |  resetPlaceHolder_1();  |         |                            |
  1569  |             R = R + 2;  |      2  |                         0  |
  1570  |  resetPlaceHolder_1();  |         |                            |
  1590  |             R = R + 2;  |      2  |                         0  |
  1591  |  resetPlaceHolder_1();  |         |                            |
  1611  |             R = R + 2;  |      2  |                         0  |
  1612  |  resetPlaceHolder_1();  |         |                            |
  1632  |             R = R + 2;  |      2  |                         0  |
  1633  |  resetPlaceHolder_1();  |         |                            |
  1653  |             R = R + 2;  |      2  |                         0  |
  1654  |  resetPlaceHolder_1();  |         |                            |
  1674  |             R = R + 2;  |      2  |                         0  |
  1675  |  resetPlaceHolder_1();  |         |                            |
  1695  |             R = R + 2;  |      2  |                         0  |
  1696  |  resetPlaceHolder_1();  |         |                            |
  1716  |             R = R + 2;  |      2  |                         0  |
  1717  |  resetPlaceHolder_1();  |         |                            |
  1737  |             R = R + 2;  |      2  |                         0  |
  1738  |  resetPlaceHolder_1();  |         |                            |
  1758  |             R = R + 2;  |      2  |                         0  |
  1759  |  resetPlaceHolder_1();  |         |                            |
  1779  |             R = R + 2;  |      2  |                         0  |
  1780  |  resetPlaceHolder_1();  |         |                            |
  1800  |             R = R + 2;  |      2  |                         0  |
  1801  |  resetPlaceHolder_1();  |         |                            |
  1821  |             R = R + 2;  |      2  |                         0  |
  1822  |  resetPlaceHolder_1();  |         |                            |
  1842  |             R = R + 2;  |      2  |                         0  |
  1843  |  resetPlaceHolder_1();  |         |                            |
  1863  |             R = R + 2;  |      2  |                         0  |
  1864  |  resetPlaceHolder_1();  |         |                            |
  1884  |             R = R + 2;  |      2  |                         0  |
  1885  |  resetPlaceHolder_1();  |         |                            |
  1905  |             R = R + 2;  |      2  |                         0  |
  1906  |  resetPlaceHolder_1();  |         |                            |
  1926  |             R = R + 2;  |      2  |                         0  |
  1927  |  resetPlaceHolder_1();  |         |                            |
  1947  |             R = R + 2;  |      2  |                         0  |
  1948  |  resetPlaceHolder_1();  |         |                            |
  1968  |             R = R + 2;  |      2  |                         0  |
  1969  |  resetPlaceHolder_1();  |         |                            |
  1989  |             R = R + 2;  |      2  |                         0  |
  1990  |  resetPlaceHolder_1();  |         |                            |
  2010  |             R = R + 2;  |      2  |                         0  |
  2011  |  resetPlaceHolder_1();  |         |                            |
  2031  |             R = R + 2;  |      2  |                         0  |
  2032  |  resetPlaceHolder_1();  |         |                            |
  2052  |             R = R + 2;  |      2  |                         0  |
  2053  |  resetPlaceHolder_1();  |         |                            |
  2073  |             R = R + 2;  |      2  |                         0  |
  2074  |  resetPlaceHolder_1();  |         |                            |
  2094  |             R = R + 2;  |      2  |                         0  |
  2095  |  resetPlaceHolder_1();  |         |                            |
  2115  |             R = R + 2;  |      2  |                         0  |
  2116  |  resetPlaceHolder_1();  |         |                            |
  2136  |             R = R + 2;  |      2  |                         0  |
  2137  |  resetPlaceHolder_1();  |         |                            |
  2157  |             R = R + 2;  |      2  |                         0  |
  2158  |  resetPlaceHolder_1();  |         |                            |
  2178  |             R = R + 2;  |      2  |                         0  |
  2179  |  resetPlaceHolder_1();  |         |                            |
  2199  |             R = R + 2;  |      2  |                         0  |
  2200  |  resetPlaceHolder_1();  |         |                            |
  2220  |             R = R + 2;  |      2  |                         0  |
  2221  |  resetPlaceHolder_1();  |         |                            |
  2241  |             R = R + 2;  |      2  |                         0  |
  2242  |  resetPlaceHolder_1();  |         |                            |
  2262  |             R = R + 2;  |      2  |                         0  |
  2263  |  resetPlaceHolder_1();  |         |                            |
  2283  |             R = R + 2;  |      2  |                         0  |
  2284  |  resetPlaceHolder_1();  |         |                            |
  2304  |             R = R + 2;  |      2  |                         0  |
  2305  |  resetPlaceHolder_1();  |         |                            |
  2325  |             R = R + 2;  |      2  |                         0  |
  2326  |  resetPlaceHolder_1();  |         |                            |
  2346  |             R = R + 2;  |      2  |                         0  |
  2347  |  resetPlaceHolder_1();  |         |                            |
  2367  |             R = R + 2;  |      2  |                         0  |
  2368  |  resetPlaceHolder_1();  |         |                            |
  2388  |             R = R + 2;  |      2  |                         0  |
  2389  |  resetPlaceHolder_1();  |         |                            |
  2409  |             R = R + 2;  |      2  |                         0  |
  2410  |  resetPlaceHolder_1();  |         |                            |
  2430  |             R = R + 2;  |      2  |                         0  |
  2431  |  resetPlaceHolder_1();  |         |                            |
  2451  |             R = R + 2;  |      2  |                         0  |
  2452  |  resetPlaceHolder_1();  |         |                            |
  2472  |             R = R + 2;  |      2  |                         0  |
  2473  |  resetPlaceHolder_1();  |         |                            |
  2493  |             R = R + 2;  |      2  |                         0  |
  2494  |  resetPlaceHolder_1();  |         |                            |
  2514  |             R = R + 2;  |      2  |                         0  |
  2515  |  resetPlaceHolder_1();  |         |                            |
  2535  |             R = R + 2;  |      2  |                         0  |
  2536  |  resetPlaceHolder_1();  |         |                            |
  2556  |             R = R + 2;  |      2  |                         0  |
  2557  |  resetPlaceHolder_1();  |         |                            |
  2577  |             R = R + 2;  |      2  |                         0  |
  2578  |  resetPlaceHolder_1();  |         |                            |
  2598  |             R = R + 2;  |      2  |                         0  |
  2599  |  resetPlaceHolder_1();  |         |                            |
  2619  |             R = R + 2;  |      2  |                         0  |
  2620  |  resetPlaceHolder_1();  |         |                            |
  2640  |             R = R + 2;  |      2  |                         0  |
  2641  |  resetPlaceHolder_1();  |         |                            |
  2661  |             R = R + 2;  |      2  |                         0  |
  2662  |  resetPlaceHolder_1();  |         |                            |
  2682  |             R = R + 2;  |      2  |                         0  |
  2683  |  resetPlaceHolder_1();  |         |                            |
  2703  |             R = R + 2;  |      2  |                         0  |
  2704  |  resetPlaceHolder_1();  |         |                            |
  2724  |             R = R + 2;  |      2  |                         0  |
  2725  |  resetPlaceHolder_1();  |         |                            |
  2745  |             R = R + 2;  |      2  |                         0  |
  2746  |  resetPlaceHolder_1();  |         |                            |
  2766  |             R = R + 2;  |      2  |                         0  |
  2767  |  resetPlaceHolder_1();  |         |                            |
  2787  |             R = R + 2;  |      2  |                         0  |
  2788  |  resetPlaceHolder_1();  |         |                            |
  2808  |             R = R + 2;  |      2  |                         0  |
  2809  |  resetPlaceHolder_1();  |         |                            |
  2829  |             R = R + 2;  |      2  |                         0  |
  2830  |  resetPlaceHolder_1();  |         |                            |
  2850  |             R = R + 2;  |      2  |                         0  |
  2851  |  resetPlaceHolder_1();  |         |                            |
  2871  |             R = R + 2;  |      2  |                         0  |
  2872  |  resetPlaceHolder_1();  |         |                            |
  2892  |             R = R + 2;  |      2  |                         0  |
  2893  |  resetPlaceHolder_1();  |         |                            |
  2913  |             R = R + 2;  |      2  |                         0  |
  2914  |  resetPlaceHolder_1();  |         |                            |
  2934  |             R = R + 2;  |      2  |                         0  |
  2935  |  resetPlaceHolder_1();  |         |                            |
  2955  |             R = R + 2;  |      2  |                         0  |
  2956  |  resetPlaceHolder_1();  |         |                            |
  2976  |             R = R + 2;  |      2  |                         0  |
  2977  |  resetPlaceHolder_1();  |         |                            |
  2997  |             R = R + 2;  |      2  |                         0  |
  2998  |  resetPlaceHolder_1();  |         |                            |
  3018  |             R = R + 2;  |      2  |                         0  |
  3019  |  resetPlaceHolder_1();  |         |                            |
  3039  |             R = R + 2;  |      2  |                         0  |
  3040  |  resetPlaceHolder_1();  |         |                            |
  3060  |             R = R + 2;  |      2  |                         0  |
  3061  |  resetPlaceHolder_1();  |         |                            |
  3081  |             R = R + 2;  |      2  |                         0  |
  3082  |  resetPlaceHolder_1();  |         |                            |
  3102  |             R = R + 2;  |      2  |                         0  |
  3103  |  resetPlaceHolder_1();  |         |                            |
  3123  |             R = R + 2;  |      2  |                         0  |
  3124  |  resetPlaceHolder_1();  |         |                            |
  3144  |             R = R + 2;  |      2  |                         0  |
  3145  |  resetPlaceHolder_1();  |         |                            |
  3165  |             R = R + 2;  |      2  |                         0  |
  3166  |  resetPlaceHolder_1();  |         |                            |
  3186  |             R = R + 2;  |      2  |                         0  |
  3187  |  resetPlaceHolder_1();  |         |                            |
  3207  |             R = R + 2;  |      2  |                         0  |
  3208  |  resetPlaceHolder_1();  |         |                            |
  3228  |             R = R + 2;  |      2  |                         0  |
  3229  |  resetPlaceHolder_1();  |         |                            |
  3249  |             R = R + 2;  |      2  |                         0  |
  3250  |  resetPlaceHolder_1();  |         |                            |
  3270  |             R = R + 2;  |      2  |                         0  |
  3271  |  resetPlaceHolder_1();  |         |                            |
  3291  |             R = R + 2;  |      2  |                         0  |
  3292  |  resetPlaceHolder_1();  |         |                            |
  3312  |             R = R + 2;  |      2  |                         0  |
  3313  |  resetPlaceHolder_1();  |         |                            |
  3333  |             R = R + 2;  |      2  |                         0  |
  3334  |  resetPlaceHolder_1();  |         |                            |
  3354  |             R = R + 2;  |      2  |                         0  |
  3355  |  resetPlaceHolder_1();  |         |                            |
  3375  |             R = R + 2;  |      2  |                         0  |
  3376  |  resetPlaceHolder_1();  |         |                            |
  3396  |             R = R + 2;  |      2  |                         0  |
  3397  |  resetPlaceHolder_1();  |         |                            |
  3417  |             R = R + 2;  |      2  |                         0  |
  3418  |  resetPlaceHolder_1();  |         |                            |
  3438  |             R = R + 2;  |      2  |                         0  |
  3439  |  resetPlaceHolder_1();  |         |                            |
  3459  |             R = R + 2;  |      2  |                         0  |
  3460  |  resetPlaceHolder_1();  |         |                            |
  3480  |             R = R + 2;  |      2  |                         0  |
  3481  |  resetPlaceHolder_1();  |         |                            |
  3501  |             R = R + 2;  |      2  |                         0  |
  3502  |  resetPlaceHolder_1();  |         |                            |
  3522  |             R = R + 2;  |      2  |                         0  |
  3523  |  resetPlaceHolder_1();  |         |                            |
  3543  |             R = R + 2;  |      2  |                         0  |
  3544  |  resetPlaceHolder_1();  |         |                            |
  3564  |             R = R + 2;  |      2  |                         0  |
  3565  |  resetPlaceHolder_1();  |         |                            |
  3585  |             R = R + 2;  |      2  |                         0  |
  3586  |  resetPlaceHolder_1();  |         |                            |
  3606  |             R = R + 2;  |      2  |                         0  |
  3607  |  resetPlaceHolder_1();  |         |                            |
  3627  |             R = R + 2;  |      2  |                         0  |
  3628  |  resetPlaceHolder_1();  |         |                            |
  3648  |             R = R + 2;  |      2  |                         0  |
  3649  |  resetPlaceHolder_1();  |         |                            |
  3669  |             R = R + 2;  |      2  |                         0  |
  3670  |  resetPlaceHolder_1();  |         |                            |
  3690  |             R = R + 2;  |      2  |                         0  |
  3691  |  resetPlaceHolder_1();  |         |                            |
  3711  |             R = R + 2;  |      2  |                         0  |
  3712  |  resetPlaceHolder_1();  |         |                            |
  3732  |             R = R + 2;  |      2  |                         0  |
  3733  |  resetPlaceHolder_1();  |         |                            |
  3753  |             R = R + 2;  |      2  |                         0  |
  3754  |  resetPlaceHolder_1();  |         |                            |
  3774  |             R = R + 2;  |      2  |                         0  |
  3775  |  resetPlaceHolder_1();  |         |                            |
  3795  |             R = R + 2;  |      2  |                         0  |
  3796  |  resetPlaceHolder_1();  |         |                            |
  3816  |             R = R + 2;  |      2  |                         0  |
  3817  |  resetPlaceHolder_1();  |         |                            |
  3837  |             R = R + 2;  |      2  |                         0  |
  3838  |  resetPlaceHolder_1();  |         |                            |
  3858  |             R = R + 2;  |      2  |                         0  |
  3859  |  resetPlaceHolder_1();  |         |                            |
  3879  |             R = R + 2;  |      2  |                         0  |
  3880  |  resetPlaceHolder_1();  |         |                            |
  3900  |             R = R + 2;  |      2  |                         0  |
  3901  |  resetPlaceHolder_1();  |         |                            |
  3921  |             R = R + 2;  |      2  |                         0  |
  3922  |  resetPlaceHolder_1();  |         |                            |
  3942  |             R = R + 2;  |      2  |                         0  |
  3943  |  resetPlaceHolder_1();  |         |                            |
  3963  |             R = R + 2;  |      2  |                         0  |
  3964  |  resetPlaceHolder_1();  |         |                            |
  3984  |             R = R + 2;  |      2  |                         0  |
  3985  |  resetPlaceHolder_1();  |         |                            |
  4005  |             R = R + 2;  |      2  |                         0  |
  4006  |  resetPlaceHolder_1();  |         |                            |
  4026  |             R = R + 2;  |      2  |                         0  |
  4027  |  resetPlaceHolder_1();  |         |                            |
  4047  |             R = R + 2;  |      2  |                         0  |
  4048  |  resetPlaceHolder_1();  |         |                            |
  4068  |             R = R + 2;  |      2  |                         0  |
  4069  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m9.617s
user	0m19.111s
sys	0m1.425s

2023-01-26 11:21:55,678 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:22:02,544 INFO     Done. Execution time: 6.865970611572266 seconds
2023-01-26 11:22:02,545 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * className) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (2 * className)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 className)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun className () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C3 () Int)
(declare-fun C4 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C16 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C1 () Int)
(declare-fun C13 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (> className 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (or (<= D0p (+ 0 (* 8 1 className))) (= D0p 0))))
  (and (<= 0 (+ D0 a!1)) (<= D0p 0) a!2)))
(assert (let ((a!1 (or (<= D0 (+ 0 (* 8 1 className))) (= D0 0))))
  (and a!1)))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C13 0)
     (>= C1 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C16 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C4 0)
     (>= C3 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (<= C0 0)))
(assert (let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (not (or a!1 a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun D0 () Int    13)  (define-fun className () Int    6)  (define-fun C0 () Int    0)  (define-fun D0p () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C3 () Int    0)  (define-fun C4 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C16 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C1 () Int    0)  (define-fun C13 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) (* 2 className)))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) (* 2 className))))
  (or a!1 a!2))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `4.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1121-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1121-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.859s
user	0m15.676s
sys	0m2.373s

2023-01-26 11:22:02,545 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-26 11:22:02,545 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:22:11,240 INFO     Done. Execution time: 8.694546222686768 seconds
2023-01-26 11:22:11,240 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz2571107948000350946/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2571107948000350946/bin -o /tmp/qfuzz2571107948000350946/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2571107948000350946/bin
Found file /tmp/qfuzz2571107948000350946/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz2571107948000350946/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2571107948000350946/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2571107948000350946/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2571107948000350946/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2571107948000350946/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 110558 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 39, exec speed = 123791 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m110k to 123k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2571107948000350946/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 15.00; [18.00,33.50]
1; /tmp/qfuzz2571107948000350946/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 15.00; [18.00,33.50]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2571107948000350946/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2571107948000350946/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2571107948000350946/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2571107948000350946/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.686s
user	0m5.952s
sys	0m0.507s

2023-01-26 11:22:11,240 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
2023-01-26 11:22:11,240 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-26 11:22:16,477 INFO     Done. Execution time: 5.236166715621948 seconds
2023-01-26 11:22:16,477 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 81):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |       2  |     |             |
    11  |                    int buffer = 0;  |         |  0  |       0  |       2  |     |             |
    12  |                      // int R = 0;  |         |  0  |       0  |       2  |     |             |
    13  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    16  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    18  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    44  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    46  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    52  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    53  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    69  |               buffer = buffer + 1;  |         |  0  |       1  |       2  |  1  |          1  |
    72  |                         R = R + 1;  |      1  |  1  |       1  |       2  |  1  |          1  |
    76  |                         i = i + 1;  |         |  1  |       1  |       2  |  2  |          1  |
    77  |                          continue;  |         |  1  |       1  |       2  |  2  |          1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 72]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [44, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |  R = R + (0 - buffer);  |      0  |                         0  |
    53  |  resetPlaceHolder_1();  |         |                            |
    72  |             R = R + 1;  |      1  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m5.228s
user	0m10.367s
sys	0m1.612s

2023-01-26 11:22:16,477 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:22:23,566 INFO     Done. Execution time: 7.08884334564209 seconds
2023-01-26 11:22:23,566 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * format) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < format) || ((0 + (D0 + (D0p * (C0 - 1)))) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 format)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) format))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) format)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1122-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1122-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.080s
user	0m15.429s
sys	0m2.440s

2023-01-26 11:22:23,566 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-26 11:22:23,566 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:22:32,373 INFO     Done. Execution time: 8.806337356567383 seconds
2023-01-26 11:22:32,373 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz5788111319896476647/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5788111319896476647/bin -o /tmp/qfuzz5788111319896476647/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5788111319896476647/bin
Found file /tmp/qfuzz5788111319896476647/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz5788111319896476647/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5788111319896476647/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5788111319896476647/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5788111319896476647/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz5788111319896476647/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 28, exec speed = 116643 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 28, exec speed = 119754 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m28 to 28 bits (average: 28.00 bits)
[1;90m        Exec timing : [0m116k to 119k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5788111319896476647/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 10.00; [31.00,41.00]
1; /tmp/qfuzz5788111319896476647/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 10.00; [31.00,41.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5788111319896476647/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5788111319896476647/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5788111319896476647/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5788111319896476647/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.798s
user	0m6.245s
sys	0m0.452s

2023-01-26 11:22:32,373 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
2023-01-26 11:22:32,373 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-26 11:22:36,191 INFO     Done. Execution time: 3.8175442218780518 seconds
2023-01-26 11:22:36,191 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  currentIdx  |  pattern  |  sb  |
-------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |              |        2  |      |
    11  |                        int sb = 0;  |         |  0  |              |        2  |   0  |
    12  |                      // int R = 0;  |         |  0  |              |        2  |   0  |
    13  |  // mostPreciseBound(R <= patte...  |         |  0  |              |        2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |              |        2  |   0  |
    20  |  int currentIdx = ndInt2(0, pat...  |         |  0  |           1  |        2  |   0  |
    27  |       currentIdx = currentIdx + 1;  |         |  0  |           2  |        2  |   0  |
    31  |                       sb = sb + 1;  |         |  0  |           2  |        2  |   1  |
    34  |                         R = R + 1;  |      1  |  1  |           2  |        2  |   1  |
    35  |              resetPlaceHolder_1();  |         |  1  |           2  |        2  |   1  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java

real	0m3.810s
user	0m6.650s
sys	0m0.960s

2023-01-26 11:22:36,191 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:22:43,065 INFO     Done. Execution time: 6.873529672622681 seconds
2023-01-26 11:22:43,065 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * pattern) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < pattern) || ((0 + (D0 + (D0p * (C0 - 1)))) == pattern));
    if ((pattern < 0) || (pattern == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int currentIdx = ndInt2(0, pattern - 1);
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 pattern)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) pattern))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) pattern)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `5.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1122-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1122-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.866s
user	0m14.788s
sys	0m2.374s

2023-01-26 11:22:43,066 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-26 11:22:43,066 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:22:51,957 INFO     Done. Execution time: 8.891547441482544 seconds
2023-01-26 11:22:51,958 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz6629253180820150329/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6629253180820150329/bin -o /tmp/qfuzz6629253180820150329/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6629253180820150329/bin
Found file /tmp/qfuzz6629253180820150329/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz6629253180820150329/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6629253180820150329/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6629253180820150329/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6629253180820150329/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz6629253180820150329/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 106284 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 121796 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m106k to 121k us (average: 114k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6629253180820150329/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz6629253180820150329/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6629253180820150329/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6629253180820150329/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6629253180820150329/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6629253180820150329/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.882s
user	0m6.253s
sys	0m0.530s

2023-01-26 11:22:51,958 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
2023-01-26 11:22:51,958 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-26 11:22:56,922 INFO     Done. Execution time: 4.964140176773071 seconds
2023-01-26 11:22:56,923 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      2  |      |
    11  |                        int sb = 0;  |         |  0  |     |      2  |   0  |
    12  |                      // int R = 0;  |         |  0  |     |      2  |   0  |
    13  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    16  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    30  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    45  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m4.956s
user	0m8.557s
sys	0m1.607s

2023-01-26 11:22:56,923 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:23:04,903 INFO     Done. Execution time: 7.979935884475708 seconds
2023-01-26 11:23:04,903 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * nHexs) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < nHexs) || ((0 + (D0 + (D0p * (C0 - 1)))) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) nHexs))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) nHexs)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1122-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1122-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.972s
user	0m17.050s
sys	0m2.938s

2023-01-26 11:23:04,903 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-26 11:23:04,903 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:23:13,809 INFO     Done. Execution time: 8.90498161315918 seconds
2023-01-26 11:23:13,809 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz405869993765609318/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz405869993765609318/bin -o /tmp/qfuzz405869993765609318/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz405869993765609318/bin
Found file /tmp/qfuzz405869993765609318/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz405869993765609318/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz405869993765609318/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz405869993765609318/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz405869993765609318/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz405869993765609318/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz405869993765609318/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz405869993765609318/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 122995 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 121652 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m121k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz405869993765609318/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz405869993765609318/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz405869993765609318/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz405869993765609318/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz405869993765609318/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz405869993765609318/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.893s
user	0m6.576s
sys	0m0.512s

2023-01-26 11:23:13,809 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
2023-01-26 11:23:13,809 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-26 11:23:18,959 INFO     Done. Execution time: 5.14951491355896 seconds
2023-01-26 11:23:18,959 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    38  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    41  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    45  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    46  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m5.141s
user	0m9.525s
sys	0m1.512s

2023-01-26 11:23:18,959 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:23:26,584 INFO     Done. Execution time: 7.624331712722778 seconds
2023-01-26 11:23:26,584 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `5.8` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1123-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1123-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.617s
user	0m15.846s
sys	0m2.689s

2023-01-26 11:23:26,585 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-26 11:23:26,585 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:23:35,684 INFO     Done. Execution time: 9.09902834892273 seconds
2023-01-26 11:23:35,685 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz8509146681665313409/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8509146681665313409/bin -o /tmp/qfuzz8509146681665313409/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8509146681665313409/bin
Found file /tmp/qfuzz8509146681665313409/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz8509146681665313409/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8509146681665313409/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8509146681665313409/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8509146681665313409/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz8509146681665313409/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 21, exec speed = 121749 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 21, exec speed = 122866 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m21 to 21 bits (average: 21.00 bits)
[1;90m        Exec timing : [0m121k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8509146681665313409/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [34.00]
1; /tmp/qfuzz8509146681665313409/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [34.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8509146681665313409/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8509146681665313409/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8509146681665313409/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8509146681665313409/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.091s
user	0m6.813s
sys	0m0.447s

2023-01-26 11:23:35,685 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-26 11:23:35,685 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-26 11:23:38,415 INFO     Done. Execution time: 2.729646682739258 seconds
2023-01-26 11:23:38,415 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 24):
                                                          
 Index  |   Commands   |  Costs  |  R  |  i  |  pattern  |
----------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  2  |        2  |
    23  |     return;  |         |  0  |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m2.721s
user	0m5.321s
sys	0m0.289s

2023-01-26 11:23:38,415 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:23:40,445 INFO     Done. Execution time: 2.029114246368408 seconds
2023-01-26 11:23:40,445 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * pattern) + 8)) || (R == ((8 * pattern) + 8)));
    mostPreciseBound((R < (pattern + 1)) || (R == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ pattern 1)) (= R (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ pattern 1)) (= R (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1123-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1123-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.022s
user	0m3.715s
sys	0m0.226s

2023-01-26 11:23:40,445 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-26 11:23:40,445 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:23:49,547 INFO     Done. Execution time: 9.101648569107056 seconds
2023-01-26 11:23:49,547 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz8475381106839632534/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8475381106839632534/bin -o /tmp/qfuzz8475381106839632534/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8475381106839632534/bin
Found file /tmp/qfuzz8475381106839632534/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz8475381106839632534/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8475381106839632534/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8475381106839632534/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8475381106839632534/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz8475381106839632534/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 119606 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 32, exec speed = 125725 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m32 to 32 bits (average: 32.00 bits)
[1;90m        Exec timing : [0m119k to 125k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8475381106839632534/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 5.00; [31.00,51.00,56.00]
1; /tmp/qfuzz8475381106839632534/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 5.00; [31.00,51.00,56.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8475381106839632534/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8475381106839632534/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8475381106839632534/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8475381106839632534/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.093s
user	0m6.788s
sys	0m0.478s

2023-01-26 11:23:49,547 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
2023-01-26 11:23:49,547 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-26 11:23:56,070 INFO     Done. Execution time: 6.522161483764648 seconds
2023-01-26 11:23:56,070 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 57):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |      2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |      2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |      2  |
    13  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    23  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    26  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    30  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    31  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    38  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    41  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    45  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    46  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    53  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    56  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 2;  |      2  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
GroupID(1): {56}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    26  |             R = R + 2;  |      2  |                         0  |                            |
    31  |  resetPlaceHolder_1();  |         |                            |                            |
    41  |             R = R + 2;  |      2  |                         1  |                            |
    46  |  resetPlaceHolder_1();  |         |                            |                            |
    56  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 2 -> R0 = R0 + 2;
use R 1 -> R1 = R1 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m6.513s
user	0m11.724s
sys	0m2.346s

2023-01-26 11:23:56,070 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:24:05,927 INFO     Done. Execution time: 9.856449127197266 seconds
2023-01-26 11:24:05,927 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 * value) + 8)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((value * 2) + 1)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ (* value 2) 1)) (= a!1 (+ (* value 2) 1))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `8.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1123-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1123-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m9.848s
user	0m26.031s
sys	0m4.390s

2023-01-26 11:24:05,927 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-26 11:24:05,927 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:24:14,688 INFO     Done. Execution time: 8.760725498199463 seconds
2023-01-26 11:24:14,688 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz8532113613473657984/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8532113613473657984/bin -o /tmp/qfuzz8532113613473657984/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8532113613473657984/bin
Found file /tmp/qfuzz8532113613473657984/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz8532113613473657984/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8532113613473657984/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8532113613473657984/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8532113613473657984/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz8532113613473657984/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 127593 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 123957 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m123k to 127k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8532113613473657984/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
2; /tmp/qfuzz8532113613473657984/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8532113613473657984/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8532113613473657984/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8532113613473657984/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8532113613473657984/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.753s
user	0m6.245s
sys	0m0.476s

2023-01-26 11:24:14,689 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
2023-01-26 11:24:14,689 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-26 11:24:19,849 INFO     Done. Execution time: 5.159843921661377 seconds
2023-01-26 11:24:19,849 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 50):
                                                                                       
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  spaces  |
---------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |     |      |       2  |
    11  |                        int sb = 0;  |         |  0  |     |   0  |       2  |
    12  |                      // int R = 0;  |         |  0  |     |   0  |       2  |
    13  |  // mostPreciseBound(R <= space...  |         |  0  |     |   0  |       2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |       2  |
    16  |                         int i = 0;  |         |  0  |  0  |   0  |       2  |
    23  |                       sb = sb + 1;  |         |  0  |  0  |   1  |       2  |
    26  |                         R = R + 1;  |      1  |  1  |  0  |   1  |       2  |
    30  |                         i = i + 1;  |         |  1  |  1  |   1  |       2  |
    31  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |       2  |
    38  |                       sb = sb + 1;  |         |  1  |  1  |   2  |       2  |
    41  |                         R = R + 1;  |      1  |  2  |  1  |   2  |       2  |
    45  |                         i = i + 1;  |         |  2  |  2  |   2  |       2  |
    46  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |       2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26, 41]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {26}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {26}; {41}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {26}; {41} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}; {41}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
    41  |             R = R + 1;  |      1  |                         1  |
    46  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(31)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java

real	0m5.152s
user	0m9.065s
sys	0m1.647s

2023-01-26 11:24:19,849 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:24:27,098 INFO     Done. Execution time: 7.249069690704346 seconds
2023-01-26 11:24:27,099 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * spaces) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < spaces) || ((0 + (D0 + (D0p * (C0 - 1)))) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) spaces))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) spaces)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `5.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1124-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1124-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.242s
user	0m15.355s
sys	0m2.467s

2023-01-26 11:24:27,099 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-26 11:24:27,099 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:24:35,792 INFO     Done. Execution time: 8.692765712738037 seconds
2023-01-26 11:24:35,792 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz4651038883292864998/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4651038883292864998/bin -o /tmp/qfuzz4651038883292864998/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4651038883292864998/bin
Found file /tmp/qfuzz4651038883292864998/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz4651038883292864998/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4651038883292864998/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4651038883292864998/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4651038883292864998/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz4651038883292864998/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 24, exec speed = 120710 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 24, exec speed = 123052 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m24 to 24 bits (average: 24.00 bits)
[1;90m        Exec timing : [0m120k to 123k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4651038883292864998/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 5.00; [31.00,36.00]
1; /tmp/qfuzz4651038883292864998/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 5.00; [31.00,36.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4651038883292864998/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz4651038883292864998/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4651038883292864998/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4651038883292864998/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.685s
user	0m6.112s
sys	0m0.460s

2023-01-26 11:24:35,792 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
2023-01-26 11:24:35,793 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-26 11:24:40,193 INFO     Done. Execution time: 4.400621652603149 seconds
2023-01-26 11:24:40,194 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |    2  |
    11  |                    int buffer = 0;  |         |  0  |       0  |     |    2  |
    12  |                      // int R = 0;  |         |  0  |       0  |     |    2  |
    13  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    14  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    16  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    23  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    26  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    30  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    31  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [26]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {26}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    26  |             R = R + 1;  |      1  |                         0  |
    31  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m4.392s
user	0m7.490s
sys	0m0.982s

2023-01-26 11:24:40,194 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:24:46,651 INFO     Done. Execution time: 6.457385301589966 seconds
2023-01-26 11:24:46,652 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `4.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1124-transparentAmortize-60s-mostPrecise/lang3-raw-0126-1124-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.450s
user	0m13.773s
sys	0m2.071s

2023-01-26 11:24:46,652 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-26 11:24:46,652 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:24:55,561 INFO     Done. Execution time: 8.908488273620605 seconds
2023-01-26 11:24:55,561 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz9004342122523185147/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz9004342122523185147/bin -o /tmp/qfuzz9004342122523185147/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz9004342122523185147/bin
Found file /tmp/qfuzz9004342122523185147/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz9004342122523185147/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz9004342122523185147/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz9004342122523185147/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz9004342122523185147/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz9004342122523185147/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 32, exec speed = 123235 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 31, exec speed = 122243 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m31 to 32 bits (average: 31.50 bits)
[1;90m        Exec timing : [0m122k to 123k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz9004342122523185147/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [43.00]
1; /tmp/qfuzz9004342122523185147/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 8.00; [35.00,43.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz9004342122523185147/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz9004342122523185147/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9004342122523185147/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz9004342122523185147/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [160,196,177,32,47]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [112,67,99,192,109]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.901s
user	0m6.398s
sys	0m0.494s

2023-01-26 11:24:55,561 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
2023-01-26 11:24:55,561 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-26 11:25:00,990 INFO     Done. Execution time: 5.428297996520996 seconds
2023-01-26 11:25:00,990 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [160,196,177,32,47])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [112,67,99,192,109])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 80):
                                                                                                                              
 Index  |              Commands               |  Costs  |  R  |  choice  |        choices        |  i  |  str  |  strDigits  |
------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |  [160,196,177,32,47]  |     |    2  |             |
    14  |                      // int R = 0;  |         |  0  |          |  [160,196,177,32,47]  |     |    2  |             |
    15  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [160,196,177,32,47]  |     |    2  |             |
    16  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [160,196,177,32,47]  |     |    2  |             |
    18  |                 int strDigits = 0;  |         |  0  |          |  [160,196,177,32,47]  |     |    2  |          0  |
    20  |                    int choice = 0;  |         |  0  |       0  |  [160,196,177,32,47]  |     |    2  |          0  |
    22  |                         int i = 0;  |         |  0  |       0  |  [160,196,177,32,47]  |  0  |    2  |          0  |
    28  |  choice = arrayRead(choices, i)...  |         |  0  |     160  |  [160,196,177,32,47]  |  0  |    2  |          0  |
    41  |         strDigits = strDigits + 1;  |         |  0  |     160  |  [160,196,177,32,47]  |  0  |    2  |          1  |
    44  |                         R = R + 1;  |      1  |  1  |     160  |  [160,196,177,32,47]  |  0  |    2  |          1  |
    48  |                         i = i + 1;  |         |  1  |     160  |  [160,196,177,32,47]  |  1  |    2  |          1  |
    49  |              resetPlaceHolder_1();  |         |  1  |     160  |  [160,196,177,32,47]  |  1  |    2  |          1  |
    55  |  choice = arrayRead(choices, i)...  |         |  1  |     196  |  [160,196,177,32,47]  |  1  |    2  |          1  |
    68  |         strDigits = strDigits + 1;  |         |  1  |     196  |  [160,196,177,32,47]  |  1  |    2  |          2  |
    71  |                         R = R + 1;  |      1  |  2  |     196  |  [160,196,177,32,47]  |  1  |    2  |          2  |
    75  |                         i = i + 1;  |         |  2  |     196  |  [160,196,177,32,47]  |  2  |    2  |          2  |
    76  |              resetPlaceHolder_1();  |         |  2  |     196  |  [160,196,177,32,47]  |  2  |    2  |          2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [44, 71]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {44}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {44}; {71}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {44}; {71} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {44}; {71}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    44  |             R = R + 1;  |      1  |                         0  |
    49  |  resetPlaceHolder_1();  |         |                            |
    71  |             R = R + 1;  |      1  |                         1  |
    76  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(49)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m5.420s
user	0m9.778s
sys	0m1.622s

2023-01-26 11:25:00,990 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:25:33,028 INFO     Done. Execution time: 32.0372257232666 seconds
2023-01-26 11:25:33,028 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < (8 * str)) || ((0 + (D0 + (D0p * (C0 - 1)))) == (8 * str)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 choices)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `30.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1125-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1125-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m32.030s
user	0m53.042s
sys	0m4.596s

2023-01-26 11:25:33,028 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-26 11:25:33,028 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:25:41,954 INFO     Done. Execution time: 8.925525426864624 seconds
2023-01-26 11:25:41,954 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz3255303853360029170/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3255303853360029170/bin -o /tmp/qfuzz3255303853360029170/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3255303853360029170/bin
Found file /tmp/qfuzz3255303853360029170/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz3255303853360029170/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3255303853360029170/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3255303853360029170/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3255303853360029170/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3255303853360029170/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 127583 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 9, exec speed = 128016 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m127k to 128k us (average: 127k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3255303853360029170/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
2; /tmp/qfuzz3255303853360029170/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3255303853360029170/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3255303853360029170/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3255303853360029170/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3255303853360029170/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 47, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 109, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.916s
user	0m6.690s
sys	0m0.450s

2023-01-26 11:25:41,954 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-26 11:25:41,955 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-26 11:25:44,899 INFO     Done. Execution time: 2.9444847106933594 seconds
2023-01-26 11:25:44,900 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 47, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 109, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                             
 Index  |   Commands   |  Costs  |  R  |         array          |  endIndex  |  startIndex  |
---------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |  [193,160,196,177,32]  |         2  |          47  |
    48  |     return;  |         |  0  |  [193,160,196,177,32]  |         2  |          47  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m2.936s
user	0m5.596s
sys	0m0.316s

2023-01-26 11:25:44,900 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:25:46,997 INFO     Done. Execution time: 2.0962634086608887 seconds
2023-01-26 11:25:46,997 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((R < ((8 + (8 * array)) + (8 * array))) || (R == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((R < (array + array)) || (R == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R (+ array array)) (= R (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R (+ array array)) (= R (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R (+ array array)) (= R (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1125-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1125-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.088s
user	0m3.728s
sys	0m0.249s

2023-01-26 11:25:46,997 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-26 11:25:46,997 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:25:56,021 INFO     Done. Execution time: 9.02352523803711 seconds
2023-01-26 11:25:56,021 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz5133952398247286341/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5133952398247286341/bin -o /tmp/qfuzz5133952398247286341/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5133952398247286341/bin
Found file /tmp/qfuzz5133952398247286341/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz5133952398247286341/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5133952398247286341/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5133952398247286341/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5133952398247286341/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz5133952398247286341/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 130872 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 47, exec speed = 128864 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m128k to 130k us (average: 129k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5133952398247286341/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 260.00; [32.00,1351.00,1991.00,2251.00,3521.00,3851.00]
2; /tmp/qfuzz5133952398247286341/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 6; 50.00; [32.00,651.00,3211.00,3551.00,3881.00,3931.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5133952398247286341/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5133952398247286341/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5133952398247286341/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5133952398247286341/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.016s
user	0m6.932s
sys	0m0.413s

2023-01-26 11:25:56,021 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
2023-01-26 11:25:56,021 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-26 11:26:04,667 INFO     Done. Execution time: 8.645576238632202 seconds
2023-01-26 11:26:04,667 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192])
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects         |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [193,160,196,177,32]  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [193,160,196,177,32]  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [193,160,196,177,32]  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [193,160,196,177,32]  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [193,160,196,177,32]  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [193,160,196,177,32]  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    193  |  0  |  [193,160,196,177,32]  |
    22  |                     R = R + chunk;  |    193  |  193  |    193  |  0  |  [193,160,196,177,32]  |
    26  |                         i = i + 1;  |         |  193  |    193  |  1  |  [193,160,196,177,32]  |
    32  |                         R = R + 1;  |      1  |  194  |    193  |  1  |  [193,160,196,177,32]  |
    35  |     chunk = arrayRead(objects, i);  |         |  194  |    160  |  1  |  [193,160,196,177,32]  |
    38  |                     R = R + chunk;  |    160  |  354  |    160  |  1  |  [193,160,196,177,32]  |
    42  |                         i = i + 1;  |         |  354  |    160  |  2  |  [193,160,196,177,32]  |
    43  |              resetPlaceHolder_1();  |         |  354  |    160  |  2  |  [193,160,196,177,32]  |
    49  |                         R = R + 1;  |      1  |  355  |    160  |  2  |  [193,160,196,177,32]  |
    52  |     chunk = arrayRead(objects, i);  |         |  355  |    196  |  2  |  [193,160,196,177,32]  |
    55  |                     R = R + chunk;  |    196  |  551  |    196  |  2  |  [193,160,196,177,32]  |
    59  |                         i = i + 1;  |         |  551  |    196  |  3  |  [193,160,196,177,32]  |
    60  |              resetPlaceHolder_1();  |         |  551  |    196  |  3  |  [193,160,196,177,32]  |
    66  |                         R = R + 1;  |      1  |  552  |    196  |  3  |  [193,160,196,177,32]  |
    69  |     chunk = arrayRead(objects, i);  |         |  552  |    177  |  3  |  [193,160,196,177,32]  |
    72  |                     R = R + chunk;  |    177  |  729  |    177  |  3  |  [193,160,196,177,32]  |
    76  |                         i = i + 1;  |         |  729  |    177  |  4  |  [193,160,196,177,32]  |
    77  |              resetPlaceHolder_1();  |         |  729  |    177  |  4  |  [193,160,196,177,32]  |
    83  |                         R = R + 1;  |      1  |  730  |    177  |  4  |  [193,160,196,177,32]  |
    86  |     chunk = arrayRead(objects, i);  |         |  730  |     32  |  4  |  [193,160,196,177,32]  |
    89  |                     R = R + chunk;  |     32  |  762  |     32  |  4  |  [193,160,196,177,32]  |
    93  |                         i = i + 1;  |         |  762  |     32  |  5  |  [193,160,196,177,32]  |
    94  |              resetPlaceHolder_1();  |         |  762  |     32  |  5  |  [193,160,196,177,32]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    193  |                            |
    32  |             R = R + 1;  |      1  |                         0  |
    38  |         R = R + chunk;  |    160  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |             R = R + 1;  |      1  |                         1  |
    55  |         R = R + chunk;  |    196  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |             R = R + 1;  |      1  |                         2  |
    72  |         R = R + chunk;  |    177  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |             R = R + 1;  |      1  |                         3  |
    89  |         R = R + chunk;  |     32  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    193  |                            |                         0  |
    32  |             R = R + 1;  |      1  |                         0  |                            |
    38  |         R = R + chunk;  |    160  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |             R = R + 1;  |      1  |                         1  |                            |
    55  |         R = R + chunk;  |    196  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |             R = R + 1;  |      1  |                         2  |                            |
    72  |         R = R + chunk;  |    177  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |             R = R + 1;  |      1  |                         3  |                            |
    89  |         R = R + chunk;  |     32  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m8.637s
user	0m15.682s
sys	0m3.511s

2023-01-26 11:26:04,668 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:26:18,396 INFO     Done. Execution time: 13.727726221084595 seconds
2023-01-26 11:26:18,396 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + objects)) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects objects)) (= a!1 (+ objects objects))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `11.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1126-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1126-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.719s
user	0m37.531s
sys	0m4.807s

2023-01-26 11:26:18,396 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-26 11:26:18,396 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:26:27,121 INFO     Done. Execution time: 8.724886417388916 seconds
2023-01-26 11:26:27,121 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz6381232674684786113/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6381232674684786113/bin -o /tmp/qfuzz6381232674684786113/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6381232674684786113/bin
Found file /tmp/qfuzz6381232674684786113/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz6381232674684786113/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6381232674684786113/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6381232674684786113/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6381232674684786113/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz6381232674684786113/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 47, exec speed = 139449 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 47, exec speed = 133776 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m47 to 47 bits (average: 47.00 bits)
[1;90m        Exec timing : [0m133k to 139k us (average: 136k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6381232674684786113/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 6; 59.00; [1351.00,1991.00,2192.00,2251.00,3521.00,3851.00]
2; /tmp/qfuzz6381232674684786113/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 6; 50.00; [651.00,952.00,3211.00,3551.00,3881.00,3931.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6381232674684786113/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6381232674684786113/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6381232674684786113/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6381232674684786113/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 47
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 109
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.716s
user	0m6.059s
sys	0m0.462s

2023-01-26 11:26:27,121 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
2023-01-26 11:26:27,122 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-26 11:26:36,106 INFO     Done. Execution time: 8.984294652938843 seconds
2023-01-26 11:26:36,106 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 47)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 109)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 98):
                                                                                                                        
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects         |  separator  |
------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |  [193,160,196,177,32]  |         47  |
    10  |                      // int R = 0;  |         |    0  |         |     |  [193,160,196,177,32]  |         47  |
    11  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [193,160,196,177,32]  |         47  |
    12  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [193,160,196,177,32]  |         47  |
    14  |                         int i = 0;  |         |    0  |         |  0  |  [193,160,196,177,32]  |         47  |
    16  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [193,160,196,177,32]  |         47  |
    19  |     chunk = arrayRead(objects, i);  |         |    0  |    193  |  0  |  [193,160,196,177,32]  |         47  |
    22  |                     R = R + chunk;  |    193  |  193  |    193  |  0  |  [193,160,196,177,32]  |         47  |
    26  |                         i = i + 1;  |         |  193  |    193  |  1  |  [193,160,196,177,32]  |         47  |
    32  |                 R = R + separator;  |     47  |  240  |    193  |  1  |  [193,160,196,177,32]  |         47  |
    35  |     chunk = arrayRead(objects, i);  |         |  240  |    160  |  1  |  [193,160,196,177,32]  |         47  |
    38  |                     R = R + chunk;  |    160  |  400  |    160  |  1  |  [193,160,196,177,32]  |         47  |
    42  |                         i = i + 1;  |         |  400  |    160  |  2  |  [193,160,196,177,32]  |         47  |
    43  |              resetPlaceHolder_1();  |         |  400  |    160  |  2  |  [193,160,196,177,32]  |         47  |
    49  |                 R = R + separator;  |     47  |  447  |    160  |  2  |  [193,160,196,177,32]  |         47  |
    52  |     chunk = arrayRead(objects, i);  |         |  447  |    196  |  2  |  [193,160,196,177,32]  |         47  |
    55  |                     R = R + chunk;  |    196  |  643  |    196  |  2  |  [193,160,196,177,32]  |         47  |
    59  |                         i = i + 1;  |         |  643  |    196  |  3  |  [193,160,196,177,32]  |         47  |
    60  |              resetPlaceHolder_1();  |         |  643  |    196  |  3  |  [193,160,196,177,32]  |         47  |
    66  |                 R = R + separator;  |     47  |  690  |    196  |  3  |  [193,160,196,177,32]  |         47  |
    69  |     chunk = arrayRead(objects, i);  |         |  690  |    177  |  3  |  [193,160,196,177,32]  |         47  |
    72  |                     R = R + chunk;  |    177  |  867  |    177  |  3  |  [193,160,196,177,32]  |         47  |
    76  |                         i = i + 1;  |         |  867  |    177  |  4  |  [193,160,196,177,32]  |         47  |
    77  |              resetPlaceHolder_1();  |         |  867  |    177  |  4  |  [193,160,196,177,32]  |         47  |
    83  |                 R = R + separator;  |     47  |  914  |    177  |  4  |  [193,160,196,177,32]  |         47  |
    86  |     chunk = arrayRead(objects, i);  |         |  914  |     32  |  4  |  [193,160,196,177,32]  |         47  |
    89  |                     R = R + chunk;  |     32  |  946  |     32  |  4  |  [193,160,196,177,32]  |         47  |
    93  |                         i = i + 1;  |         |  946  |     32  |  5  |  [193,160,196,177,32]  |         47  |
    94  |              resetPlaceHolder_1();  |         |  946  |     32  |  5  |  [193,160,196,177,32]  |         47  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [89, 38, 32, 22, 49, 66, 72, 55, 83]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {32}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {49}
INFO  brbo.backend2.learning.SegmentClustering - Segment 2: {66}
INFO  brbo.backend2.learning.SegmentClustering - Segment 3: {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {32}; {49}; {66}; {83}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {32}; {49}; {66}; {83} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    22  |         R = R + chunk;  |    193  |                            |
    32  |     R = R + separator;  |     47  |                         0  |
    38  |         R = R + chunk;  |    160  |                            |
    43  |  resetPlaceHolder_1();  |         |                            |
    49  |     R = R + separator;  |     47  |                         1  |
    55  |         R = R + chunk;  |    196  |                            |
    60  |  resetPlaceHolder_1();  |         |                            |
    66  |     R = R + separator;  |     47  |                         2  |
    72  |         R = R + chunk;  |    177  |                            |
    77  |  resetPlaceHolder_1();  |         |                            |
    83  |     R = R + separator;  |     47  |                         3  |
    89  |         R = R + chunk;  |     32  |                            |
    94  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [89, 38, 22, 72, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32}; {49}; {66}; {83}
GroupID(1): {22,38,55,72,89}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    22  |         R = R + chunk;  |    193  |                            |                         0  |
    32  |     R = R + separator;  |     47  |                         0  |                            |
    38  |         R = R + chunk;  |    160  |                            |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |                            |
    49  |     R = R + separator;  |     47  |                         1  |                            |
    55  |         R = R + chunk;  |    196  |                            |                         0  |
    60  |  resetPlaceHolder_1();  |         |                            |                            |
    66  |     R = R + separator;  |     47  |                         2  |                            |
    72  |         R = R + chunk;  |    177  |                            |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |                            |
    83  |     R = R + separator;  |     47  |                         3  |                            |
    89  |         R = R + chunk;  |     32  |                            |                         0  |
    94  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43, 60, 77)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m8.976s
user	0m16.010s
sys	0m3.560s

2023-01-26 11:26:36,106 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:26:43,967 INFO     Done. Execution time: 7.8602495193481445 seconds
2023-01-26 11:26:43,967 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (objects + (objects * separator))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.common.Z3Solver - Z3 input:
(declare-fun D0p () Int)
(declare-fun D1p () Int)
(declare-fun separator () Int)
(declare-fun objects () Int)
(declare-fun C1 () Int)
(declare-fun D1 () Int)
(declare-fun C0 () Int)
(declare-fun D0 () Int)
(declare-fun C32 () Int)
(declare-fun C21 () Int)
(declare-fun C2 () Int)
(declare-fun C10 () Int)
(declare-fun C5 () Int)
(declare-fun C14 () Int)
(declare-fun C36 () Int)
(declare-fun C25 () Int)
(declare-fun C3 () Int)
(declare-fun C33 () Int)
(declare-fun C19 () Int)
(declare-fun C22 () Int)
(declare-fun C29 () Int)
(declare-fun C4 () Int)
(declare-fun C26 () Int)
(declare-fun C15 () Int)
(declare-fun C9 () Int)
(declare-fun C11 () Int)
(declare-fun C18 () Int)
(declare-fun C30 () Int)
(declare-fun C34 () Int)
(declare-fun C16 () Int)
(declare-fun C28 () Int)
(declare-fun C23 () Int)
(declare-fun C12 () Int)
(declare-fun C7 () Int)
(declare-fun C17 () Int)
(declare-fun C8 () Int)
(declare-fun C27 () Int)
(declare-fun C20 () Int)
(declare-fun C31 () Int)
(declare-fun C13 () Int)
(declare-fun C24 () Int)
(declare-fun C35 () Int)
(declare-fun C6 () Int)
(assert (>= D0p 0))
(assert (>= D1p 0))
(assert (> separator 0))
(assert (> objects 0))
(assert (let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (and (<= 0 (+ D0 a!1 D1 a!2))
       true
       (or true (= D0p 0))
       (<= D1p 0)
       (or true (= D1p 0)))))
(assert (and (or true (= D0 0)) (or true (= D1 0))))
(assert (and true
     (<= C0 1)
     (>= C6 0)
     (>= C35 0)
     (>= C24 0)
     (>= C13 0)
     (>= C1 0)
     (>= C31 0)
     (>= C20 0)
     (>= C27 0)
     (>= C8 0)
     (>= C17 0)
     (>= C7 0)
     (>= C12 0)
     (>= C23 0)
     (>= C28 0)
     (>= C16 0)
     (>= C34 0)
     (>= C30 0)
     (>= C0 0)
     (>= C18 0)
     (>= C11 0)
     (>= C9 0)
     (>= C15 0)
     (>= C26 0)
     (>= C4 0)
     (>= C29 0)
     (>= C22 0)
     (>= C19 0)
     (>= C33 0)
     (>= C3 0)
     (>= C25 0)
     (>= C36 0)
     (>= C14 0)
     (>= C5 0)
     (>= C10 0)
     (>= C2 0)
     (>= C21 0)
     (>= C32 0)
     true))
(assert (let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
(let ((a!2 (or (< a!1 (+ objects (* objects separator)))
               (= a!1 (+ objects (* objects separator))))))
  (not a!2))))

(check-sat)
(get-model)
INFO  brbo.common.Z3Solver - Z3 output:
sat(model   (define-fun C1 () Int    0)  (define-fun D1 () Int    5)  (define-fun D0 () Int    6)  (define-fun objects () Int    1)  (define-fun separator () Int    2)  (define-fun D0p () Int    0)  (define-fun C0 () Int    1)  (define-fun D1p () Int    0)  (define-fun C32 () Int    0)  (define-fun C21 () Int    0)  (define-fun C2 () Int    0)  (define-fun C10 () Int    0)  (define-fun C5 () Int    0)  (define-fun C14 () Int    0)  (define-fun C36 () Int    0)  (define-fun C25 () Int    0)  (define-fun C3 () Int    0)  (define-fun C33 () Int    0)  (define-fun C19 () Int    0)  (define-fun C22 () Int    0)  (define-fun C29 () Int    0)  (define-fun C4 () Int    0)  (define-fun C26 () Int    0)  (define-fun C15 () Int    0)  (define-fun C9 () Int    0)  (define-fun C11 () Int    0)  (define-fun C18 () Int    0)  (define-fun C30 () Int    0)  (define-fun C34 () Int    0)  (define-fun C16 () Int    0)  (define-fun C28 () Int    0)  (define-fun C23 () Int    0)  (define-fun C12 () Int    0)  (define-fun C7 () Int    0)  (define-fun C17 () Int    0)  (define-fun C8 () Int    0)  (define-fun C27 () Int    0)  (define-fun C20 () Int    0)  (define-fun C31 () Int    0)  (define-fun C13 () Int    0)  (define-fun C24 () Int    0)  (define-fun C35 () Int    0)  (define-fun C6 () Int    0))
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ objects (* objects separator)))
      (= a!1 (+ objects (* objects separator)))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1126-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1126-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.853s
user	0m15.626s
sys	0m1.884s

2023-01-26 11:26:43,967 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-26 11:26:43,967 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:26:52,844 INFO     Done. Execution time: 8.876441955566406 seconds
2023-01-26 11:26:52,844 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz3035173941081522128/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3035173941081522128/bin -o /tmp/qfuzz3035173941081522128/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3035173941081522128/bin
Found file /tmp/qfuzz3035173941081522128/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz3035173941081522128/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3035173941081522128/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3035173941081522128/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3035173941081522128/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3035173941081522128/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 39, exec speed = 133183 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 39, exec speed = 129466 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m39 to 39 bits (average: 39.00 bits)
[1;90m        Exec timing : [0m129k to 133k us (average: 131k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3035173941081522128/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 870.00; [1358.00,2228.00,3524.00]
2; /tmp/qfuzz3035173941081522128/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 54.00; [3368.00,3884.00,3938.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3035173941081522128/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3035173941081522128/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3035173941081522128/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3035173941081522128/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 47, 168, 24
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 109, 111, 20
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.868s
user	0m6.581s
sys	0m0.345s

2023-01-26 11:26:52,844 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
2023-01-26 11:26:52,845 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-26 11:26:59,349 INFO     Done. Execution time: 6.503732919692993 seconds
2023-01-26 11:26:59,349 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 47, 168, 24)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 109, 111, 20)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |          text          |
---------------------------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |         |     |   24  |          168  |            47  |  [193,160,196,177,32]  |
    34  |                      // int R = 0;  |         |    0  |         |     |   24  |          168  |            47  |  [193,160,196,177,32]  |
    35  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |   24  |          168  |            47  |  [193,160,196,177,32]  |
    36  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |   24  |          168  |            47  |  [193,160,196,177,32]  |
    38  |                     int chunk = 0;  |         |    0  |      0  |     |   24  |          168  |            47  |  [193,160,196,177,32]  |
    40  |                         int i = 0;  |         |    0  |      0  |  0  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    48  |        chunk = arrayRead(text, i);  |         |    0  |    193  |  0  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    51  |                     R = R + chunk;  |    193  |  193  |    193  |  0  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    54  |               R = R + replacement;  |    168  |  361  |    193  |  0  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    59  |  chunk = arrayRead(text, (i + 1...  |         |  361  |    160  |  0  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    63  |                         i = i + 2;  |         |  361  |    160  |  2  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    64  |              resetPlaceHolder_1();  |         |  361  |    160  |  2  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    72  |        chunk = arrayRead(text, i);  |         |  361  |    196  |  2  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    75  |                     R = R + chunk;  |    196  |  557  |    196  |  2  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    78  |               R = R + replacement;  |    168  |  725  |    196  |  2  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    83  |  chunk = arrayRead(text, (i + 1...  |         |  725  |    177  |  2  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    87  |                         i = i + 2;  |         |  725  |    177  |  4  |   24  |          168  |            47  |  [193,160,196,177,32]  |
    88  |              resetPlaceHolder_1();  |         |  725  |    177  |  4  |   24  |          168  |            47  |  [193,160,196,177,32]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [51, 54, 75, 78]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {54}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {54}; {78}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {54}; {78} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    51  |         R = R + chunk;  |    193  |                            |
    54  |   R = R + replacement;  |    168  |                         0  |
    64  |  resetPlaceHolder_1();  |         |                            |
    75  |         R = R + chunk;  |    196  |                            |
    78  |   R = R + replacement;  |    168  |                         1  |
    88  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [51, 75]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {54}; {78}
GroupID(1): {51,75}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    51  |         R = R + chunk;  |    193  |                            |                         0  |
    54  |   R = R + replacement;  |    168  |                         0  |                            |
    64  |  resetPlaceHolder_1();  |         |                            |                            |
    75  |         R = R + chunk;  |    196  |                            |                         0  |
    78  |   R = R + replacement;  |    168  |                         1  |                            |
    88  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(64)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R replacement -> R0 = R0 + replacement;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m6.496s
user	0m11.843s
sys	0m2.355s

2023-01-26 11:26:59,349 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:28:21,957 INFO     Done. Execution time: 82.60812950134277 seconds
2023-01-26 11:28:21,958 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) < (text + (text * replacement))) || (((0 + (D0 + (D0p * (C0 - 1)))) + (D1 + (D1p * (C1 - 1)))) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= 0 (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 D0 (* D0p (- C0 1)) D1 (* D1p (- C1 1)))))
  (or (< a!1 (+ text (* text replacement)))
      (= a!1 (+ text (* text replacement)))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `80.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1127-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1127-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m22.601s
user	3m9.564s
sys	0m19.042s

2023-01-26 11:28:21,958 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-26 11:28:21,958 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:28:30,725 INFO     Done. Execution time: 8.766945600509644 seconds
2023-01-26 11:28:30,725 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz1879541194746972277/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1879541194746972277/bin -o /tmp/qfuzz1879541194746972277/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1879541194746972277/bin
Found file /tmp/qfuzz1879541194746972277/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz1879541194746972277/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1879541194746972277/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1879541194746972277/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1879541194746972277/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz1879541194746972277/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 37, exec speed = 131317 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 37, exec speed = 119832 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m37 to 37 bits (average: 37.00 bits)
[1;90m        Exec timing : [0m119k to 131k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz1879541194746972277/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 2; 8.00; [32.00,40.00]
2; /tmp/qfuzz1879541194746972277/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 2; 8.00; [32.00,40.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1879541194746972277/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz1879541194746972277/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1879541194746972277/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1879541194746972277/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 160
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 112
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.758s
user	0m6.478s
sys	0m0.455s

2023-01-26 11:28:30,725 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
2023-01-26 11:28:30,726 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-26 11:28:36,380 INFO     Done. Execution time: 5.654027938842773 seconds
2023-01-26 11:28:36,380 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 160)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 112)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 65):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  replaceChars  |  str  |
---------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |           160  |    2  |
    18  |                      // int R = 0;  |         |  0  |          |     |           160  |    2  |
    19  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |           160  |    2  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |           160  |    2  |
    26  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |     |           160  |    2  |
    28  |                         int i = 0;  |         |  0  |       1  |  0  |           160  |    2  |
    38  |                         R = R + 1;  |      1  |  1  |       1  |  0  |           160  |    2  |
    42  |                         i = i + 1;  |         |  1  |       1  |  1  |           160  |    2  |
    43  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |           160  |    2  |
    56  |                         R = R + 1;  |      1  |  2  |       1  |  1  |           160  |    2  |
    60  |                         i = i + 1;  |         |  2  |       1  |  2  |           160  |    2  |
    61  |              resetPlaceHolder_1();  |         |  2  |       1  |  2  |           160  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [38, 56]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.2: Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Segment 0: {38}
INFO  brbo.backend2.learning.SegmentClustering - Segment 1: {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.3: Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Initially found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Remove groups with a single segment, since a single segment does not constitute a pattern
INFO  brbo.backend2.learning.SegmentClustering - Group 0: {38}; {56}
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.4: Filter groups
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.5: Chosen group: {38}; {56} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {38}; {56}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    38  |             R = R + 1;  |      1  |                         0  |
    43  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 1;  |      1  |                         1  |
    61  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(43)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m5.646s
user	0m11.111s
sys	0m1.748s

2023-01-26 11:28:36,380 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:28:56,432 INFO     Done. Execution time: 20.051613092422485 seconds
2023-01-26 11:28:56,432 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int str, int replaceChars)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < ((8 * str) + 8)) || ((0 + (D0 + (D0p * (C0 - 1)))) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0 + (D0p * (C0 - 1)))) < str) || ((0 + (D0 + (D0p * (C0 - 1)))) == str));
    if (((str < 0) || (str == 0)) || ((replaceChars < 0) || (replaceChars == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int choice = ndInt2(0, str - 1);
    int i = 0;
    while (i < str)
    {
      if (!((i < choice)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        D0 = D0 + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map()
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= 0 (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 D0 (* D0p (- C0 1))) str))
      (a!2 (= (+ 0 D0 (* D0p (- C0 1))) str)))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `18.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1128-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1128-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m20.044s
user	0m35.468s
sys	0m4.425s

2023-01-26 11:28:56,432 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 11:28:56,433 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:29:05,447 INFO     Done. Execution time: 9.01426100730896 seconds
2023-01-26 11:29:05,447 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz8248427219586598009/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8248427219586598009/bin -o /tmp/qfuzz8248427219586598009/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8248427219586598009/bin
Found file /tmp/qfuzz8248427219586598009/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz8248427219586598009/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8248427219586598009/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8248427219586598009/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8248427219586598009/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz8248427219586598009/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 9, exec speed = 123373 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 9, exec speed = 124350 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m9 to 9 bits (average: 9.00 bits)
[1;90m        Exec timing : [0m123k to 124k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8248427219586598009/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz8248427219586598009/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8248427219586598009/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz8248427219586598009/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8248427219586598009/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8248427219586598009/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 47, 168
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 109, 111
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.006s
user	0m6.690s
sys	0m0.486s

2023-01-26 11:29:05,448 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 11:29:05,448 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-26 11:29:08,005 INFO     Done. Execution time: 2.5565273761749268 seconds
2023-01-26 11:29:08,005 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 47, 168)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 109, 111)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 29):
                                                                                         
 Index  |   Commands   |  Costs  |  R  |  isSeparator  |  max  |          str           |
-----------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |           47  |  168  |  [193,160,196,177,32]  |
    28  |     return;  |         |  0  |           47  |  168  |  [193,160,196,177,32]  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m2.548s
user	0m4.823s
sys	0m0.302s

2023-01-26 11:29:08,005 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:29:09,954 INFO     Done. Execution time: 1.9489786624908447 seconds
2023-01-26 11:29:09,954 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        R = R + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        R = R + chunk;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitByWholeSeparatorWorker  {
  void execute(int str, int max, int isSeparator)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || !((!((isSeparator < 0)) && (isSeparator < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        R = R + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (isSeparatorChunk < i)
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        R = R + chunk;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1129-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1129-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.942s
user	0m3.421s
sys	0m0.225s

2023-01-26 11:29:09,955 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-26 11:29:09,955 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:29:18,874 INFO     Done. Execution time: 8.919021368026733 seconds
2023-01-26 11:29:18,874 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz5248320942074286313/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5248320942074286313/bin -o /tmp/qfuzz5248320942074286313/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5248320942074286313/bin
Found file /tmp/qfuzz5248320942074286313/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz5248320942074286313/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5248320942074286313/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5248320942074286313/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5248320942074286313/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz5248320942074286313/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 43, exec speed = 128695 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 43, exec speed = 109018 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m109k to 128k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5248320942074286313/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [76.00]
1; /tmp/qfuzz5248320942074286313/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [76.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5248320942074286313/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5248320942074286313/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5248320942074286313/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5248320942074286313/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.911s
user	0m6.596s
sys	0m0.498s

2023-01-26 11:29:18,874 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
2023-01-26 11:29:18,874 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-26 11:29:21,720 INFO     Done. Execution time: 2.845698833465576 seconds
2023-01-26 11:29:21,720 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 77):
                                                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  choice  |  i  |  lastMatch  |  list  |  match  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    10  |                      // int R = 0;  |         |  0  |          |     |             |        |         |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |          |     |             |        |         |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |     |             |        |         |         |    2  |
    14  |                      int list = 0;  |         |  0  |          |     |             |     0  |         |         |    2  |
    16  |                         int i = 0;  |         |  0  |          |  0  |             |     0  |         |         |    2  |
    18  |                     int start = 0;  |         |  0  |          |  0  |             |     0  |         |      0  |    2  |
    20  |                 int match = false;  |         |  0  |          |  0  |             |     0  |  false  |      0  |    2  |
    22  |             int lastMatch = false;  |         |  0  |          |  0  |      false  |     0  |  false  |      0  |    2  |
    28  |  int choice = ndInt2(0, str - 1...  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    42  |                 lastMatch = false;  |         |  0  |       1  |  0  |      false  |     0  |  false  |      0  |    2  |
    44  |                      match = true;  |         |  0  |       1  |  0  |      false  |     0  |   true  |      0  |    2  |
    48  |                         i = i + 1;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    49  |              resetPlaceHolder_1();  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    63  |                 lastMatch = false;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    65  |                      match = true;  |         |  0  |       1  |  1  |      false  |     0  |   true  |      0  |    2  |
    69  |                         i = i + 1;  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
    70  |              resetPlaceHolder_1();  |         |  0  |       1  |  2  |      false  |     0  |   true  |      0  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                             
 Index  |        Commands         |  Costs  |
---------------------------------------------
    49  |  resetPlaceHolder_1();  |         |
    70  |  resetPlaceHolder_1();  |         |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java

real	0m2.837s
user	0m5.645s
sys	0m0.234s

2023-01-26 11:29:21,721 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:29:23,740 INFO     Done. Execution time: 2.019618511199951 seconds
2023-01-26 11:29:23,741 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = ndInt2(0, str - 1);
    while (i < str)
    {
      if (!((i < choice)) && !((i == choice)))
      {
        if (match)
        {
          list = list + (i - start);
          R = R + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1129-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1129-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.012s
user	0m3.460s
sys	0m0.239s

2023-01-26 11:29:23,741 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-26 11:29:23,741 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:29:32,667 INFO     Done. Execution time: 8.92567229270935 seconds
2023-01-26 11:29:32,667 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz5871778445402577371/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5871778445402577371/bin -o /tmp/qfuzz5871778445402577371/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5871778445402577371/bin
Found file /tmp/qfuzz5871778445402577371/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz5871778445402577371/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5871778445402577371/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5871778445402577371/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5871778445402577371/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz5871778445402577371/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 6, exec speed = 111504 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 6, exec speed = 120297 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m111k to 120k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5871778445402577371/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz5871778445402577371/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5871778445402577371/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz5871778445402577371/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5871778445402577371/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5871778445402577371/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 160, 196, false, 32
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 112, 67, false, 192
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.918s
user	0m7.122s
sys	0m0.432s

2023-01-26 11:29:32,667 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-26 11:29:32,667 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-26 11:29:35,308 INFO     Done. Execution time: 2.64021897315979 seconds
2023-01-26 11:29:35,308 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 160, 196, false, 32)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 112, 67, false, 192)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 33):
                                                                                                            
 Index  |   Commands   |  Costs  |  R  |  choice  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
------------------------------------------------------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |      32  |  196  |              false  |             160  |    2  |
    32  |     return;  |         |  0  |      32  |  196  |              false  |             160  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m2.633s
user	0m5.866s
sys	0m0.246s

2023-01-26 11:29:35,308 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:29:37,460 INFO     Done. Execution time: 2.151588201522827 seconds
2023-01-26 11:29:37,460 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int str, int max, int separatorChars, int choice, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || !((!((choice < 0)) && (choice < str))))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        if (choice < i)
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          if (choice < i)
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1129-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1129-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.144s
user	0m3.917s
sys	0m0.251s

2023-01-26 11:29:37,460 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-26 11:29:37,460 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:29:46,674 INFO     Done. Execution time: 9.213154077529907 seconds
2023-01-26 11:29:46,674 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz6686255696182496115/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6686255696182496115/bin -o /tmp/qfuzz6686255696182496115/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6686255696182496115/bin
Found file /tmp/qfuzz6686255696182496115/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz6686255696182496115/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6686255696182496115/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6686255696182496115/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6686255696182496115/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz6686255696182496115/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 23, exec speed = 127032 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 23, exec speed = 122158 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m122k to 127k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz6686255696182496115/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz6686255696182496115/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6686255696182496115/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6686255696182496115/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6686255696182496115/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6686255696182496115/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.204s
user	0m7.000s
sys	0m0.517s

2023-01-26 11:29:46,674 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
2023-01-26 11:29:46,674 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-26 11:29:49,462 INFO     Done. Execution time: 2.787824869155884 seconds
2023-01-26 11:29:49,463 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                                                             
 Index  |              Commands               |  Costs  |  R  |  close  |  end  |  list  |  open  |  pos  |  start  |  str  |
-----------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    10  |                      // int R = 0;  |         |  0  |         |       |        |        |       |         |    2  |
    11  |      // mostPreciseBound(R <= str)  |         |  0  |         |       |        |        |       |         |    2  |
    12  |  // lessPreciseBound(R <= MAX *...  |         |  0  |         |       |        |        |       |         |    2  |
    14  |                      int list = 0;  |         |  0  |         |       |     0  |        |       |         |    2  |
    16  |                       int pos = 0;  |         |  0  |         |       |     0  |        |    0  |         |    2  |
    18  |                      int open = 1;  |         |  0  |         |       |     0  |     1  |    0  |         |    2  |
    24  |  int close = ndInt2(0, str - 1)...  |         |  0  |      1  |       |     0  |     1  |    0  |         |    2  |
    33  |      int start = ndInt2(pos, str);  |         |  0  |      1  |       |     0  |     1  |    0  |      1  |    2  |
    40  |              start = start + open;  |         |  0  |      1  |       |     0  |     1  |    0  |      2  |    2  |
    44  |      int end = ndInt2(start, str);  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
    48  |                             break;  |         |  0  |      1  |    2  |     0  |     1  |    0  |      2  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java

real	0m2.778s
user	0m5.619s
sys	0m0.296s

2023-01-26 11:29:49,463 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:29:51,648 INFO     Done. Execution time: 2.1855392456054688 seconds
2023-01-26 11:29:51,649 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < ((8 * str) + 8)) || (R == ((8 * str) + 8)));
    mostPreciseBound((R < str) || (R == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int list = 0;
    int pos = 0;
    int open = 1;
    int close = ndInt2(0, str - 1);
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      R = R + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R str) (= R str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R str) (= R str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R str) (= R str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1129-transparentAmortize-60s-mostPrecise/stringutils-raw-0126-1129-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.178s
user	0m3.828s
sys	0m0.231s

2023-01-26 11:29:51,649 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-26 11:29:51,649 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:30:00,612 INFO     Done. Execution time: 8.963172912597656 seconds
2023-01-26 11:30:00,613 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz3402366148738182996/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3402366148738182996/bin -o /tmp/qfuzz3402366148738182996/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3402366148738182996/bin
Found file /tmp/qfuzz3402366148738182996/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz3402366148738182996/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3402366148738182996/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3402366148738182996/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3402366148738182996/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz3402366148738182996/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 44, exec speed = 137818 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 44, exec speed = 126385 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m126k to 137k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz3402366148738182996/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 3; 336.00; [1358.00,3522.00,3858.00]
2; /tmp/qfuzz3402366148738182996/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 3; 56.00; [658.00,3882.00,3938.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3402366148738182996/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz3402366148738182996/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3402366148738182996/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3402366148738182996/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,160,196,177,32], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,112,67,99,192], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m8.955s
user	0m6.746s
sys	0m0.505s

2023-01-26 11:30:00,613 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
2023-01-26 11:30:00,613 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-26 11:30:09,187 INFO     Done. Execution time: 8.573794603347778 seconds
2023-01-26 11:30:09,188 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,160,196,177,32], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,112,67,99,192], 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 87):
                                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |        template        |
---------------------------------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [193,160,196,177,32]  |
    18  |                      // int R = 0;  |         |    0  |     2  |         |     |             |  [193,160,196,177,32]  |
    19  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [193,160,196,177,32]  |
    20  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [193,160,196,177,32]  |
    22  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [193,160,196,177,32]  |
    24  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [193,160,196,177,32]  |
    26  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [193,160,196,177,32]  |
    29  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |    193  |  0  |          0  |  [193,160,196,177,32]  |
    32  |                     R = R + chunk;  |    193  |  193  |     2  |    193  |  0  |          0  |  [193,160,196,177,32]  |
    36  |                         i = i + 1;  |         |  193  |     2  |    193  |  1  |          0  |  [193,160,196,177,32]  |
    44  |  separator = arrayRead(template...  |         |  193  |     2  |    193  |  1  |        160  |  [193,160,196,177,32]  |
    49  |  chunk = arrayRead(template, (i...  |         |  193  |     2  |    196  |  1  |        160  |  [193,160,196,177,32]  |
    52  |                     R = R + chunk;  |    196  |  389  |     2  |    196  |  1  |        160  |  [193,160,196,177,32]  |
    56  |                         i = i + 2;  |         |  389  |     2  |    196  |  3  |        160  |  [193,160,196,177,32]  |
    57  |              resetPlaceHolder_1();  |         |  389  |     2  |    196  |  3  |        160  |  [193,160,196,177,32]  |
    65  |  separator = arrayRead(template...  |         |  389  |     2  |    196  |  3  |        177  |  [193,160,196,177,32]  |
    70  |  chunk = arrayRead(template, (i...  |         |  389  |     2  |     32  |  3  |        177  |  [193,160,196,177,32]  |
    73  |                     R = R + chunk;  |     32  |  421  |     2  |     32  |  3  |        177  |  [193,160,196,177,32]  |
    77  |                         i = i + 2;  |         |  421  |     2  |     32  |  5  |        177  |  [193,160,196,177,32]  |
    78  |              resetPlaceHolder_1();  |         |  421  |     2  |     32  |  5  |        177  |  [193,160,196,177,32]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [32, 52, 73]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [32, 52, 73]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {32,52,73}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    32  |         R = R + chunk;  |    193  |                         0  |
    52  |         R = R + chunk;  |    196  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    73  |         R = R + chunk;  |     32  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m8.564s
user	0m15.338s
sys	0m2.650s

2023-01-26 11:30:09,188 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:30:11,100 INFO     Done. Execution time: 1.9121196269989014 seconds
2023-01-26 11:30:11,100 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:51: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:52: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:56: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
        ^
  symbol:   variable R
  location: class LenientFormat
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java:57: error: cannot find symbol
        R = R + 1;
            ^
  symbol:   variable R
  location: class LenientFormat
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java; message: Not a primitive type: NONE
8 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.903s
user	0m3.292s
sys	0m0.240s

2023-01-26 11:30:11,101 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-26 11:30:11,101 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:30:20,140 INFO     Done. Execution time: 9.039382219314575 seconds
2023-01-26 11:30:20,140 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz2268477979709648500/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2268477979709648500/bin -o /tmp/qfuzz2268477979709648500/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2268477979709648500/bin
Found file /tmp/qfuzz2268477979709648500/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz2268477979709648500/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2268477979709648500/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2268477979709648500/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2268477979709648500/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz2268477979709648500/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 22, exec speed = 125003 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 22, exec speed = 124588 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m124k to 125k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2268477979709648500/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [3514.00]
1; /tmp/qfuzz2268477979709648500/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [3874.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2268477979709648500/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz2268477979709648500/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2268477979709648500/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2268477979709648500/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 193, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 175, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.029s
user	0m6.797s
sys	0m0.427s

2023-01-26 11:30:20,141 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
2023-01-26 11:30:20,141 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-26 11:30:24,536 INFO     Done. Execution time: 4.394632339477539 seconds
2023-01-26 11:30:24,536 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(193, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(175, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 35):
                                                                                                          
 Index  |              Commands               |  Costs  |   R   |   i   |  minLength  |  sb   |  string  |
----------------------------------------------------------------------------------------------------------
     2  |                         int R = 0;  |         |    0  |       |          2  |       |     193  |
    19  |                        int sb = 0;  |         |    0  |       |          2  |    0  |     193  |
    20  |                      // int R = 0;  |         |    0  |       |          2  |    0  |     193  |
    21  |  // mostPreciseBound(R <= minLe...  |         |    0  |       |          2  |    0  |     193  |
    22  |  // lessPreciseBound(R <= MAX *...  |         |    0  |       |          2  |    0  |     193  |
    26  |                  sb = sb + string;  |         |    0  |       |          2  |  193  |     193  |
    29  |                    R = R + string;  |    193  |  193  |       |          2  |  193  |     193  |
    31  |                    int i = string;  |         |  193  |  193  |          2  |  193  |     193  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Step 3.1.1: Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [29]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    29  |  R = R + string;  |    193  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m4.387s
user	0m7.732s
sys	0m0.879s

2023-01-26 11:30:24,536 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:30:26,369 INFO     Done. Execution time: 1.8332257270812988 seconds
2023-01-26 11:30:26,370 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
      ^
  symbol:   variable R
  location: class PadEnd
//root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java:28: error: cannot find symbol
      R = R + 1;
          ^
  symbol:   variable R
  location: class PadEnd
BasicTypeProcessor.typeProcess: unexpected Throwable (IllegalArgumentException)  when processing //root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java; message: Not a primitive type: NONE
2 errors
Exception in thread "main" java.util.NoSuchElementException: next on empty iterator
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:41)
	at scala.collection.Iterator$$anon$2.next(Iterator.scala:39)
	at scala.collection.Iterator$$anon$12.next(Iterator.scala:520)
	at scala.collection.IterableLike.head(IterableLike.scala:109)
	at scala.collection.IterableLike.head$(IterableLike.scala:108)
	at scala.collection.AbstractIterable.head(Iterable.scala:56)
	at brbo.verification.BasicProcessor$.getTargetMethod(BasicProcessor.scala:153)
	at brbo.BrboMain$.decompose(BrboMain.scala:154)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:99)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.runBatch(BrboMain.scala:94)
	at brbo.BrboMain$.$anonfun$main$7(BrboMain.scala:82)
	at brbo.BrboMain$.$anonfun$main$7$adapted(BrboMain.scala:81)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:81)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:77)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:77)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.824s
user	0m3.259s
sys	0m0.201s

2023-01-26 11:30:26,370 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-26 11:30:26,370 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds`
2023-01-26 11:30:35,518 INFO     Done. Execution time: 9.1481294631958 seconds
2023-01-26 11:30:35,518 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 3 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/ --input /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver. Naive mode? false
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz6210544495938612844/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6210544495938612844/bin -o /tmp/qfuzz6210544495938612844/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6210544495938612844/bin
Found file /tmp/qfuzz6210544495938612844/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz6210544495938612844/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6210544495938612844/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 6 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6210544495938612844/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6210544495938612844/fuzzer-out. Timeout: 3 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds -o /tmp/qfuzz6210544495938612844/fuzzer-out -c quantify -K 100 -S afl -t 3000 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/seeds'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:seed_00.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 50, map size = 7, exec speed = 108422 us
[0m[1;94m[*] [0mAttempting dry run with 'id:000001,orig:seed_01.txt'...[0m
[1;90m    len = 50, map size = 7, exec speed = 124338 us
[0m[1;93m[!] [1;97mWARNING: [0mNo new instrumentation output, test case may be useless.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;93m[!] [1;97mWARNING: [0m[1;91mSome test cases look useless. Consider using a smaller set.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m2 favored, 0 variable, 2 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m108k to 124k us (average: 116k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6210544495938612844/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt; 1; 0.00; [0.00]
1; /tmp/qfuzz6210544495938612844/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6210544495938612844/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
/tmp/qfuzz6210544495938612844/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
WARN  brbo.backend2.qfuzz.Executor$ - Must ensure the input seed provide sufficient amounts of data to be parsed as inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6210544495938612844/fuzzer-out/afl/queue/id:000001,orig:seed_01.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 160, 196, 177, 32, 47, 168, 24, 99, 159, 17, 159, 45, 172, 149, 12, 129, 66, 110, 111, 34, 79, 14, 159, 41)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6210544495938612844/fuzzer-out/afl/queue/id:000000,orig:seed_00.txt
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 112, 67, 99, 192, 109, 111, 20, 111, 38, 70, 148, 79, 88, 79, 30, 86, 144, 15, 120, 78, 19, 61, 160, 137)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 193, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 175, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m9.139s
user	0m6.994s
sys	0m0.484s

2023-01-26 11:30:35,518 INFO     Remove the expected decomposition `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
2023-01-26 11:30:35,519 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-26 11:30:38,368 INFO     Done. Execution time: 2.8494484424591064 seconds
2023-01-26 11:30:38,369 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs (size 0)
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs (size 0)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(193, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(175, 2)
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs (size 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 23):
                                                                 
 Index  |   Commands   |  Costs  |  R  |  minLength  |  string  |
-----------------------------------------------------------------
     2  |  int R = 0;  |         |  0  |          2  |     193  |
    22  |     return;  |         |  0  |          2  |     193  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java

real	0m2.841s
user	0m5.816s
sys	0m0.268s

2023-01-26 11:30:38,369 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-26 11:30:40,710 INFO     Done. Execution time: 2.3406689167022705 seconds
2023-01-26 11:30:40,710 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Decomposing... Mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int R = 0;
    lessPreciseBound((R < (((8 * minLength) + (8 * string)) + 8)) || (R == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((R < minLength) || (R == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
    sb = sb + string;
    R = R + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< R minLength) (= R minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< R minLength) (= R minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Assert the delta prime variables are non-negative
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< R minLength) (= R minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `0.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0126-1130-transparentAmortize-60s-mostPrecise/guava-raw-0126-1130-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m2.332s
user	0m4.160s
sys	0m0.287s

2023-01-26 11:30:40,711 INFO     Execution time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    9.293012380599976,
    7.362128973007202,
    8.78869891166687
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    9.209715843200684,
    10.762704849243164,
    84.98346519470215
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    9.034177303314209,
    11.529532670974731,
    288.5957407951355
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    8.854392290115356,
    7.33213996887207,
    7.718683242797852
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    8.815399885177612,
    5.559285402297974,
    14.21876335144043
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    9.265700817108154,
    5.265587091445923,
    7.5697009563446045
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    9.201865911483765,
    268.163357257843,
    11.279091835021973
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.736814260482788,
    1.8071224689483643,
    0.9879796504974365
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    8.820030927658081,
    2.853471279144287,
    2.054851770401001
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    8.949911832809448,
    2.9412388801574707,
    2.115818738937378
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    8.823298931121826,
    5.379809379577637,
    7.474924087524414
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    8.94669795036316,
    7.2573370933532715,
    7.409522294998169
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    8.84168553352356,
    9.829605102539062,
    59.08682131767273
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    9.277068376541138,
    5.197236776351929,
    7.657629728317261
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    9.248170852661133,
    10.346778154373169,
    11.79494833946228
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    8.763025283813477,
    9.625513315200806,
    6.865970611572266
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    8.694546222686768,
    5.236166715621948,
    7.08884334564209
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    8.806337356567383,
    3.8175442218780518,
    6.873529672622681
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    8.891547441482544,
    4.964140176773071,
    7.979935884475708
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    8.90498161315918,
    5.14951491355896,
    7.624331712722778
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    9.09902834892273,
    2.729646682739258,
    2.029114246368408
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    9.101648569107056,
    6.522161483764648,
    9.856449127197266
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    8.760725498199463,
    5.159843921661377,
    7.249069690704346
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    8.692765712738037,
    4.400621652603149,
    6.457385301589966
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    8.908488273620605,
    5.428297996520996,
    32.0372257232666
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    8.925525426864624,
    2.9444847106933594,
    2.0962634086608887
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    9.02352523803711,
    8.645576238632202,
    13.727726221084595
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    8.724886417388916,
    8.984294652938843,
    7.8602495193481445
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    8.876441955566406,
    6.503732919692993,
    82.60812950134277
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    8.766945600509644,
    5.654027938842773,
    20.051613092422485
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    9.01426100730896,
    2.5565273761749268,
    1.9489786624908447
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    8.919021368026733,
    2.845698833465576,
    2.019618511199951
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    8.92567229270935,
    2.64021897315979,
    2.151588201522827
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    9.213154077529907,
    2.787824869155884,
    2.1855392456054688
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    8.963172912597656,
    8.573794603347778,
    1.9121196269989014
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    9.039382219314575,
    4.394632339477539,
    1.8332257270812988
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    9.1481294631958,
    2.8494484424591064,
    2.3406689167022705
  ]
}
2023-01-26 11:30:40,711 INFO     Total time elapsed: 1555.0164198875427 seconds
2023-01-26 11:30:40,711 INFO     Verification results:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": "not verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": "verified",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": "unknown",
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": "verified"
}
2023-01-26 11:30:40,712 INFO     Number of verified programs: {
  "stac": 3,
  "lang3": 15,
  "stringutils": 9,
  "guava": 1
}
2023-01-26 11:30:40,712 INFO     Number of not verified programs: {
  "stac": 1,
  "lang3": 4,
  "stringutils": 1
}
2023-01-26 11:30:40,712 INFO     Number of unknown programs: {
  "lang3": 1,
  "guava": 2
}
2023-01-26 11:30:40,713 INFO     Write into /root/Documents/workspace/brbo2-impl/logs/timeout/20230126_07-15-18/timeout3_01.json

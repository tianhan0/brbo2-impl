2023-01-10 20:07:10,928 INFO     timeout	20
2023-01-10 20:07:10,928 INFO     input	src/main/java/brbo/benchmarks/sas22/
2023-01-10 20:07:10,928 INFO     threads	4
2023-01-10 20:07:10,928 INFO     samples	0
2023-01-10 20:07:10,928 INFO     brbo2	/root/Documents/workspace/brbo2-impl/
2023-01-10 20:07:10,928 INFO     brbo	/root/Documents/workspace/brbo-impl/
2023-01-10 20:07:10,928 INFO     qfuzz	/root/Documents/workspace/qfuzz/
2023-01-10 20:07:10,928 INFO     icra	/root/Documents/workspace/icra/icra
2023-01-10 20:07:10,928 INFO     dry	False
2023-01-10 20:07:10,928 INFO     deps	True
2023-01-10 20:07:10,930 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-10 20:07:10,930 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:07:36,658 INFO     Done. Execution time: 25.727961778640747 seconds
2023-01-10 20:07:36,658 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.java -d /tmp/qfuzz7339258596554718737/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7339258596554718737/bin -o /tmp/qfuzz7339258596554718737/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7339258596554718737/bin
Found file /tmp/qfuzz7339258596554718737/bin/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Found file /tmp/qfuzz7339258596554718737/bin/brbo/fuzz/drivers/TemplateEngine.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/brbo/fuzz/drivers/TemplateEngineQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/brbo/fuzz/drivers/TemplateEngine.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7339258596554718737/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7339258596554718737/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7339258596554718737/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7339258596554718737/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 44, exec speed = 118688 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m44 to 44 bits (average: 44.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 68.00; [84.00,152.00,397.00]
1; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 2; 131.00; [18.00,149.00]
3; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 3; 61.00; [118.00,336.00,397.00]
4; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta; 3; 72.00; [190.00,262.00,397.00]
5; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta; 3; 74.00; [78.00,152.00,397.00]
6; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta; 3; 97.00; [18.00,216.00,313.00]
8; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4; 3; 41.00; [204.00,358.00,399.00]
10; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8; 3; 33.00; [304.00,364.00,397.00]
12; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta; 3; 131.00; [114.00,266.00,397.00]
14; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta; 3; 157.00; [18.00,253.00,410.00]
16; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+delta; 3; 159.00; [33.00,192.00,364.00]
18; /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2,+delta; 3; 169.00; [50.00,234.00,403.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+delta
/tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
/tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 20, 122, 153, 86, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 30, 153, 67, 28)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(145, 112)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 58, 48, 153, 124, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(115, 28, 196, 139)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 5, 173, 25, 87, 137, 4, 72, 126, 16, 160, 36, 149, 92, 69, 51, 126, 81, 161, 4, 148, 81, 50, 132, 69, 51, 127, 173, 25, 87, 137, 141, 72, 97, 16, 160, 64, 149, 75, 32, 39, 93, 22, 29, 138, 18, 178, 8, 117, 52, 6)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 93, 16, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 190, 159, 153, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(188, 170, 93, 50, 170, 121, 16, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7339258596554718737/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 173, 153, 143, 161, 110, 173, 69, 34, 73)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,20,122,153,86]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,30,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [145,112]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,58,48,153,124]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [115,28,196,139]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,5,173,25,87]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [190,93,16,187]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,190,159,153,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [188,170,93,50,170]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,173,153,143]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.722s
user	0m11.400s
sys	0m0.746s

2023-01-10 20:07:36,658 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
2023-01-10 20:07:40,940 INFO     Done. Execution time: 4.281379222869873 seconds
2023-01-10 20:07:40,940 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,20,122,153,86])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 11 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,30,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,58,48,153,124])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([145,112])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([115,28,196,139])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,5,173,25,87])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([190,93,16,187])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,190,159,153,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 11 (72.73%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([188,170,93,50,170])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,173,153,143])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 11 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 75):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text          |
-----------------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |       |  [187,20,122,153,86]  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [187,20,122,153,86]  |
    11  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [187,20,122,153,86]  |
    13  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [187,20,122,153,86]  |
    15  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [187,20,122,153,86]  |
    17  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [187,20,122,153,86]  |
    20  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |    0  |  [187,20,122,153,86]  |
    23  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |    0  |  [187,20,122,153,86]  |
    27  |                         i = i + 1;  |         |  187  |    187  |  1  |    0  |  [187,20,122,153,86]  |
    35  |          tag = arrayRead(text, i);  |         |  187  |    187  |  1  |   20  |  [187,20,122,153,86]  |
    40  |  chunk = arrayRead(text, (i + 1...  |         |  187  |    122  |  1  |   20  |  [187,20,122,153,86]  |
    43  |                     R = R + chunk;  |    122  |  309  |    122  |  1  |   20  |  [187,20,122,153,86]  |
    47  |                         i = i + 2;  |         |  309  |    122  |  3  |   20  |  [187,20,122,153,86]  |
    48  |              resetPlaceHolder_1();  |         |  309  |    122  |  3  |   20  |  [187,20,122,153,86]  |
    56  |          tag = arrayRead(text, i);  |         |  309  |    122  |  3  |  153  |  [187,20,122,153,86]  |
    61  |  chunk = arrayRead(text, (i + 1...  |         |  309  |     86  |  3  |  153  |  [187,20,122,153,86]  |
    64  |                     R = R + chunk;  |     86  |  395  |     86  |  3  |  153  |  [187,20,122,153,86]  |
    68  |                         i = i + 2;  |         |  395  |     86  |  5  |  153  |  [187,20,122,153,86]  |
    69  |              resetPlaceHolder_1();  |         |  395  |     86  |  5  |  153  |  [187,20,122,153,86]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {64} because there exists a longer and subsuming segment {23,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {43} because there exists a longer and subsuming segment {43,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23} because there exists a longer and subsuming segment {23,64} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,64} because there exists a longer and subsuming segment {23,43,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {43,64} because there exists a longer and subsuming segment {23,43,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,43} because there exists a longer and subsuming segment {23,43,64} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [23, 43, 64]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {23,43,64}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    23  |         R = R + chunk;  |    187  |                         0  |
    43  |         R = R + chunk;  |    122  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    64  |         R = R + chunk;  |     86  |                         0  |
    69  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java	2023-01-10 19:29:56.718478753 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java.actual	2023-01-10 20:07:40.907095656 -0700
@@ -44,7 +44,7 @@
       }
       D0 = D0 + chunk;
       i = i + 2;
-      // resetPlaceHolder_1();
+      // reset R0
     }
   }
   // Declare these methods such that these generated code can be parsed


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java

real	0m4.275s
user	0m9.589s
sys	0m1.070s

2023-01-10 20:07:40,940 INFO     Overwrite the existing decomposition
2023-01-10 20:07:40,940 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
2023-01-10 20:07:40,942 INFO     Done. Execution time: 0.001786947250366211 seconds
2023-01-10 20:07:40,942 INFO     Output: 
2023-01-10 20:07:40,942 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:07:48,778 INFO     Done. Execution time: 7.835596799850464 seconds
2023-01-10 20:07:48,778 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * text) + 8)) || ((0 + (D0p * C0)) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < text) || ((0 + (D0p * C0)) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * text) + 8)) || ((0 + (D0p * C0)) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < text) || ((0 + (D0p * C0)) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        tag = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine`)
INFO  brbo.BrboMain - Time consumption: `6.0` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2007-transparentAmortize-60s-mostPrecise/stac-raw-0110-2007-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.831s
user	0m17.111s
sys	0m2.397s

2023-01-10 20:07:48,778 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-10 20:07:48,778 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:08:14,575 INFO     Done. Execution time: 25.796918153762817 seconds
2023-01-10 20:08:14,576 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.java -d /tmp/qfuzz3271834803719469810/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3271834803719469810/bin -o /tmp/qfuzz3271834803719469810/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3271834803719469810/bin
Found file /tmp/qfuzz3271834803719469810/bin/brbo/fuzz/drivers/TemplateEngine2.class
Found file /tmp/qfuzz3271834803719469810/bin/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/brbo/fuzz/drivers/TemplateEngine2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/brbo/fuzz/drivers/TemplateEngine2.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3271834803719469810/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3271834803719469810/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3271834803719469810/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3271834803719469810/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 122032 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
6; /tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta; 5; 11.00; [206.00,279.00,302.00,313.00,326.00]
8; /tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 4; 13.00; [77.00,144.00,387.00,400.00]
9; /tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta; 5; 13.00; [149.00,162.00,198.00,280.00,407.00]
13; /tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4; 5; 13.00; [84.00,102.00,179.00,387.00,400.00]
16; /tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 5; 6.00; [144.00,200.00,215.00,221.00,234.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta
/tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
/tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(150, 142, 94, 44, 142, 94, 133)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(68, 8, 131, 189, 90, 90, 197, 154, 174, 54, 90, 111, 90, 60, 179, 4, 166, 98, 61, 158, 67, 90, 60, 179, 4, 166, 90, 16, 158, 160, 118, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 4, 63, 56, 63, 131, 32, 130, 37, 32, 20, 37, 26, 55, 114, 32, 32, 32, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 153, 42, 36, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 69)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3271834803719469810/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(104, 101, 91, 83, 63, 104, 101, 101, 100, 56, 101, 37, 94, 146, 71, 101, 101, 101, 37, 101, 23, 69, 186, 88)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [150,142,94,44,142], 2, 133
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [68,8,131,189,90], 2, 197
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,4,63,56,63], 2, 32
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,153,42], 2, 83
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [104,101,91,83,63], 2, 101
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.790s
user	0m11.126s
sys	0m0.784s

2023-01-10 20:08:14,576 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
2023-01-10 20:08:22,218 INFO     Done. Execution time: 7.641784191131592 seconds
2023-01-10 20:08:22,218 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, templateds}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([150,142,94,44,142], 2, 133)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([68,8,131,189,90], 2, 197)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,4,63,56,63], 2, 32)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,153,42], 2, 83)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([104,101,91,83,63], 2, 101)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 179):
                                                                                                                                                     
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  separator  |  tag  |  templateds  |         text          |
-----------------------------------------------------------------------------------------------------------------------------------------------------
    25  |                         int R = 0;  |         |     0  |         |     |     |        133  |       |           2  |  [150,142,94,44,142]  |
    26  |  // mostPreciseBound(R <= array...  |         |     0  |         |     |     |        133  |       |           2  |  [150,142,94,44,142]  |
    27  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |        133  |       |           2  |  [150,142,94,44,142]  |
    29  |                         int i = 0;  |         |     0  |         |  0  |     |        133  |       |           2  |  [150,142,94,44,142]  |
    31  |                         int j = 0;  |         |     0  |         |  0  |  0  |        133  |       |           2  |  [150,142,94,44,142]  |
    33  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |        133  |       |           2  |  [150,142,94,44,142]  |
    35  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |        133  |    0  |           2  |  [150,142,94,44,142]  |
    40  |                             j = 0;  |         |     0  |      0  |  0  |  0  |        133  |    0  |           2  |  [150,142,94,44,142]  |
    43  |        chunk = arrayRead(text, j);  |         |     0  |    150  |  0  |  0  |        133  |    0  |           2  |  [150,142,94,44,142]  |
    46  |                     R = R + chunk;  |    150  |   150  |    150  |  0  |  0  |        133  |    0  |           2  |  [150,142,94,44,142]  |
    50  |                         j = j + 1;  |         |   150  |    150  |  0  |  1  |        133  |    0  |           2  |  [150,142,94,44,142]  |
    58  |          tag = arrayRead(text, j);  |         |   150  |    150  |  0  |  1  |        133  |  142  |           2  |  [150,142,94,44,142]  |
    63  |  chunk = arrayRead(text, (j + 1...  |         |   150  |     94  |  0  |  1  |        133  |  142  |           2  |  [150,142,94,44,142]  |
    66  |                     R = R + chunk;  |     94  |   244  |     94  |  0  |  1  |        133  |  142  |           2  |  [150,142,94,44,142]  |
    70  |                         j = j + 2;  |         |   244  |     94  |  0  |  3  |        133  |  142  |           2  |  [150,142,94,44,142]  |
    71  |              resetPlaceHolder_2();  |         |   244  |     94  |  0  |  3  |        133  |  142  |           2  |  [150,142,94,44,142]  |
    79  |          tag = arrayRead(text, j);  |         |   244  |     94  |  0  |  3  |        133  |   44  |           2  |  [150,142,94,44,142]  |
    84  |  chunk = arrayRead(text, (j + 1...  |         |   244  |    142  |  0  |  3  |        133  |   44  |           2  |  [150,142,94,44,142]  |
    87  |                     R = R + chunk;  |    142  |   386  |    142  |  0  |  3  |        133  |   44  |           2  |  [150,142,94,44,142]  |
    91  |                         j = j + 2;  |         |   386  |    142  |  0  |  5  |        133  |   44  |           2  |  [150,142,94,44,142]  |
    92  |              resetPlaceHolder_2();  |         |   386  |    142  |  0  |  5  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   101  |                         i = i + 1;  |         |   386  |    142  |  1  |  5  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   104  |                 R = R + separator;  |    133  |   519  |    142  |  1  |  5  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   105  |              resetPlaceHolder_1();  |         |   519  |    142  |  1  |  5  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   110  |                             j = 0;  |         |   519  |    142  |  1  |  0  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   113  |        chunk = arrayRead(text, j);  |         |   519  |    150  |  1  |  0  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   116  |                     R = R + chunk;  |    150  |   669  |    150  |  1  |  0  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   120  |                         j = j + 1;  |         |   669  |    150  |  1  |  1  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   128  |          tag = arrayRead(text, j);  |         |   669  |    150  |  1  |  1  |        133  |  142  |           2  |  [150,142,94,44,142]  |
   133  |  chunk = arrayRead(text, (j + 1...  |         |   669  |     94  |  1  |  1  |        133  |  142  |           2  |  [150,142,94,44,142]  |
   136  |                     R = R + chunk;  |     94  |   763  |     94  |  1  |  1  |        133  |  142  |           2  |  [150,142,94,44,142]  |
   140  |                         j = j + 2;  |         |   763  |     94  |  1  |  3  |        133  |  142  |           2  |  [150,142,94,44,142]  |
   141  |              resetPlaceHolder_2();  |         |   763  |     94  |  1  |  3  |        133  |  142  |           2  |  [150,142,94,44,142]  |
   149  |          tag = arrayRead(text, j);  |         |   763  |     94  |  1  |  3  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   154  |  chunk = arrayRead(text, (j + 1...  |         |   763  |    142  |  1  |  3  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   157  |                     R = R + chunk;  |    142  |   905  |    142  |  1  |  3  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   161  |                         j = j + 2;  |         |   905  |    142  |  1  |  5  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   162  |              resetPlaceHolder_2();  |         |   905  |    142  |  1  |  5  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   171  |                         i = i + 1;  |         |   905  |    142  |  2  |  5  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   174  |                 R = R + separator;  |    133  |  1038  |    142  |  2  |  5  |        133  |   44  |           2  |  [150,142,94,44,142]  |
   175  |              resetPlaceHolder_1();  |         |  1038  |    142  |  2  |  5  |        133  |   44  |           2  |  [150,142,94,44,142]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [174, 157, 46, 116, 66, 87, 104, 136]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66} because there exists a longer and subsuming segment {66,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {157} because there exists a longer and subsuming segment {46,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {116} because there exists a longer and subsuming segment {66,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {136} because there exists a longer and subsuming segment {116,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46} because there exists a longer and subsuming segment {46,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {87} because there exists a longer and subsuming segment {87,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {104}, {174} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |    150  |                            |
    66  |         R = R + chunk;  |     94  |                            |
    71  |  resetPlaceHolder_2();  |         |                            |
    87  |         R = R + chunk;  |    142  |                            |
    92  |  resetPlaceHolder_2();  |         |                            |
   104  |     R = R + separator;  |    133  |                         0  |
   105  |  resetPlaceHolder_1();  |         |                            |
   116  |         R = R + chunk;  |    150  |                            |
   136  |         R = R + chunk;  |     94  |                            |
   141  |  resetPlaceHolder_2();  |         |                            |
   157  |         R = R + chunk;  |    142  |                            |
   162  |  resetPlaceHolder_2();  |         |                            |
   174  |     R = R + separator;  |    133  |                         1  |
   175  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 46, 116, 66, 87, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [157, 46, 116, 66, 87, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 46, 116, 66, 87, 136]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,157} because there exists a longer and subsuming segment {46,136,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66,157} because there exists a longer and subsuming segment {66,116,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,136} because there exists a longer and subsuming segment {46,87,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66,116} because there exists a longer and subsuming segment {66,87,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66,136} because there exists a longer and subsuming segment {66,87,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {116,157} because there exists a longer and subsuming segment {116,136,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {87,116} because there exists a longer and subsuming segment {66,87,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,66} because there exists a longer and subsuming segment {46,66,87} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,87} because there exists a longer and subsuming segment {46,87,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {66,87} because there exists a longer and subsuming segment {66,87,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {136,157} because there exists a longer and subsuming segment {116,136,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {87,157} because there exists a longer and subsuming segment {66,87,157} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {87,136} because there exists a longer and subsuming segment {46,87,136} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {46,116} because there exists a longer and subsuming segment {46,66,116} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {116,136} because there exists a longer and subsuming segment {116,136,157} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 46, 116, 66, 87, 136]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [157, 46, 116, 66, 87, 136]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {116,136,157}, {46,66,87} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    46  |         R = R + chunk;  |    150  |                         0  |
    66  |         R = R + chunk;  |     94  |                         0  |
    71  |  resetPlaceHolder_2();  |         |                            |
    87  |         R = R + chunk;  |    142  |                         0  |
    92  |  resetPlaceHolder_2();  |         |                            |
   104  |     R = R + separator;  |    133  |                            |
   105  |  resetPlaceHolder_1();  |         |                            |
   116  |         R = R + chunk;  |    150  |                         1  |
   136  |         R = R + chunk;  |     94  |                         1  |
   141  |  resetPlaceHolder_2();  |         |                            |
   157  |         R = R + chunk;  |    142  |                         1  |
   162  |  resetPlaceHolder_2();  |         |                            |
   174  |     R = R + separator;  |    133  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {104}, {174}
GroupID(1): {116,136,157}, {46,66,87}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    46  |         R = R + chunk;  |    150  |                            |                         0  |
    66  |         R = R + chunk;  |     94  |                            |                         0  |
    71  |  resetPlaceHolder_2();  |         |                            |                            |
    87  |         R = R + chunk;  |    142  |                            |                         0  |
    92  |  resetPlaceHolder_2();  |         |                            |                            |
   104  |     R = R + separator;  |    133  |                         0  |                            |
   105  |  resetPlaceHolder_1();  |         |                            |                            |
   116  |         R = R + chunk;  |    150  |                            |                         1  |
   136  |         R = R + chunk;  |     94  |                            |                         1  |
   141  |  resetPlaceHolder_2();  |         |                            |                            |
   157  |         R = R + chunk;  |    142  |                            |                         1  |
   162  |  resetPlaceHolder_2();  |         |                            |                            |
   174  |     R = R + separator;  |    133  |                         1  |                            |
   175  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(105)
GroupID(1): Set(105)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
use R chunk -> R1 = R1 + chunk;
resetPlaceHolder_2(); -> {
  // reset R1
  // reset R0
}
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java	2023-01-10 19:30:40.259110150 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java.actual	2023-01-10 20:08:22.187689874 -0700
@@ -3,12 +3,15 @@
   {
     int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
+    int C1 = -1;
     int D0 = 0;
     int D0p = 0;
+    int D1 = 0;
+    int D1p = 0;
     int temporaryText = 0;
     int lastIndexOfText = 0;
-    lessPreciseBound(((0 + (D0p * C0)) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || ((0 + (D0p * C0)) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
-    mostPreciseBound(((0 + (D0p * C0)) < ((text * templateds) + (separator * templateds))) || ((0 + (D0p * C0)) == ((text * templateds) + (separator * templateds))));
+    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
+    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((text * templateds) + (separator * templateds))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((text * templateds) + (separator * templateds))));
     if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
     {
       return;
@@ -32,7 +35,7 @@
         chunk = temporaryText - lastIndexOfText;
         lastIndexOfText = temporaryText;
       }
-      D0 = D0 + chunk;
+      D1 = D1 + chunk;
       j = j + 1;
       while ((j + 1) < text)
       {
@@ -46,12 +49,16 @@
           chunk = temporaryText - lastIndexOfText;
           lastIndexOfText = temporaryText;
         }
-        D0 = D0 + chunk;
+        D1 = D1 + chunk;
         j = j + 2;
+        // reset R1
         // reset R0
       }
       i = i + 1;
       D0 = D0 + separator;
+      D1p = D1;
+      D1 = 0;
+      C1 = C1 + 1;
       D0p = D0;
       D0 = 0;
       C0 = C0 + 1;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java

real	0m7.635s
user	0m16.174s
sys	0m2.952s

2023-01-10 20:08:22,218 INFO     Overwrite the existing decomposition
2023-01-10 20:08:22,218 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
2023-01-10 20:08:22,220 INFO     Done. Execution time: 0.0018887519836425781 seconds
2023-01-10 20:08:22,220 INFO     Output: 
2023-01-10 20:08:22,220 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:09:33,716 INFO     Done. Execution time: 71.49555325508118 seconds
2023-01-10 20:09:33,716 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((text * templateds) + (separator * templateds))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 2;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine2  {
  void execute(int separator, int text, int templateds)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((((((8 * text) * templateds) + ((8 * separator) * templateds)) + ((8 * separator) * text)) + ((8 * text) * text)) + ((8 * separator) * separator)) + ((8 * templateds) * templateds)) + (8 * text)) + (8 * templateds)) + (8 * separator)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((text * templateds) + (separator * templateds))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((text * templateds) + (separator * templateds))));
    if ((((text < 1) || (text == 1)) || ((templateds < 0) || (templateds == 0))) || ((separator < 0) || (separator == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < templateds)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D1 = D1 + chunk;
        j = j + 2;
      }
      i = i + 1;
      D0 = D0 + separator;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 separator)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 separator)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 text)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 templateds)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 templateds)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ (* text templateds) (* separator templateds))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine2`)
INFO  brbo.BrboMain - Time consumption: `69.6` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2008-transparentAmortize-60s-mostPrecise/stac-raw-0110-2008-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m11.490s
user	3m5.529s
sys	0m13.740s

2023-01-10 20:09:33,716 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-10 20:09:33,716 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:09:59,601 INFO     Done. Execution time: 25.884433031082153 seconds
2023-01-10 20:09:59,601 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.java -d /tmp/qfuzz4536245250363172387/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4536245250363172387/bin -o /tmp/qfuzz4536245250363172387/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4536245250363172387/bin
Found file /tmp/qfuzz4536245250363172387/bin/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
Found file /tmp/qfuzz4536245250363172387/bin/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/brbo/fuzz/drivers/TemplateEngine3.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/brbo/fuzz/drivers/TemplateEngine3QFuzzDriver.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4536245250363172387/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4536245250363172387/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngine3QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4536245250363172387/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4536245250363172387/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 115123 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m115k to 115k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
6; /tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta; 6; 3.00; [38.00,199.00,202.00,234.00,269.00,282.00]
9; /tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta; 6; 13.00; [28.00,195.00,208.00,233.00,364.00,394.00]
10; /tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 6; 13.00; [40.00,104.00,118.00,197.00,387.00,400.00]
11; /tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128; 6; 4.00; [154.00,158.00,177.00,190.00,354.00,401.00]
14; /tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 6; 13.00; [149.00,162.00,212.00,307.00,322.00,340.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta
/tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
/tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(128, 13, 10, 93, 92, 187, 93, 113, 187, 59, 93, 113, 187, 59, 4, 107, 168, 10, 9, 168, 67, 50, 63, 57, 93, 92, 187, 108)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(91, 157, 173, 83, 5, 73, 110, 193, 148, 12, 198, 105, 38, 100, 199, 48, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 43, 146, 50, 170, 92, 16, 187, 114, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(82, 5, 68, 114, 70, 115, 194, 173, 173, 173, 173, 67, 141, 23, 23, 23, 23, 25, 23, 23, 23, 23, 134, 142, 23, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4536245250363172387/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(68, 59, 152, 152, 97, 58, 147, 166, 75, 153, 67, 50, 16, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [128,13,10,93,92], 2, 93, 113
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [91,157,173,83,5], 2, 110, 193
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,43,146,50], 2, 92, 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [82,5,68,114,70], 2, 194, 173
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [68,59,152,152,97], 2, 147, 166
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.878s
user	0m11.303s
sys	0m0.721s

2023-01-10 20:09:59,601 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
2023-01-10 20:10:09,231 INFO     Done. Execution time: 9.629446744918823 seconds
2023-01-10 20:10:09,231 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngine3`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, j, ts}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngine3] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([128,13,10,93,92], 2, 93, 113)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([91,157,173,83,5], 2, 110, 193)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([82,5,68,114,70], 2, 194, 173)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,43,146,50], 2, 92, 16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([68,59,152,152,97], 2, 147, 166)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 199):
                                                                                                                                             
 Index  |              Commands               |  Costs  |   R    |  chunk  |  i  |  j  |  rep  |  sep  |  tag  |        text         |  ts  |
---------------------------------------------------------------------------------------------------------------------------------------------
    33  |                         int R = 0;  |         |     0  |         |     |     |  113  |   93  |       |  [128,13,10,93,92]  |   2  |
    34  |  // mostPreciseBound(R <= ts * ...  |         |     0  |         |     |     |  113  |   93  |       |  [128,13,10,93,92]  |   2  |
    35  |  // lessPreciseBound(R <= MAX *...  |         |     0  |         |     |     |  113  |   93  |       |  [128,13,10,93,92]  |   2  |
    37  |                         int i = 0;  |         |     0  |         |  0  |     |  113  |   93  |       |  [128,13,10,93,92]  |   2  |
    39  |                         int j = 0;  |         |     0  |         |  0  |  0  |  113  |   93  |       |  [128,13,10,93,92]  |   2  |
    41  |                     int chunk = 0;  |         |     0  |      0  |  0  |  0  |  113  |   93  |       |  [128,13,10,93,92]  |   2  |
    43  |                       int tag = 0;  |         |     0  |      0  |  0  |  0  |  113  |   93  |    0  |  [128,13,10,93,92]  |   2  |
    48  |                             j = 0;  |         |     0  |      0  |  0  |  0  |  113  |   93  |    0  |  [128,13,10,93,92]  |   2  |
    51  |        chunk = arrayRead(text, j);  |         |     0  |    128  |  0  |  0  |  113  |   93  |    0  |  [128,13,10,93,92]  |   2  |
    54  |                     R = R + chunk;  |    128  |   128  |    128  |  0  |  0  |  113  |   93  |    0  |  [128,13,10,93,92]  |   2  |
    58  |                         j = j + 1;  |         |   128  |    128  |  0  |  1  |  113  |   93  |    0  |  [128,13,10,93,92]  |   2  |
    66  |          tag = arrayRead(text, j);  |         |   128  |    128  |  0  |  1  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
    71  |  chunk = arrayRead(text, (j + 1...  |         |   128  |     10  |  0  |  1  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
    74  |                     R = R + chunk;  |     10  |   138  |     10  |  0  |  1  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
    77  |                       R = R + rep;  |    113  |   251  |     10  |  0  |  1  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
    81  |                         j = j + 2;  |         |   251  |     10  |  0  |  3  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
    82  |              resetPlaceHolder_2();  |         |   251  |     10  |  0  |  3  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
    90  |          tag = arrayRead(text, j);  |         |   251  |     10  |  0  |  3  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
    95  |  chunk = arrayRead(text, (j + 1...  |         |   251  |     92  |  0  |  3  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
    98  |                     R = R + chunk;  |     92  |   343  |     92  |  0  |  3  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   101  |                       R = R + rep;  |    113  |   456  |     92  |  0  |  3  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   105  |                         j = j + 2;  |         |   456  |     92  |  0  |  5  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   106  |              resetPlaceHolder_2();  |         |   456  |     92  |  0  |  5  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   115  |                         i = i + 1;  |         |   456  |     92  |  1  |  5  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   118  |                       R = R + sep;  |     93  |   549  |     92  |  1  |  5  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   119  |              resetPlaceHolder_1();  |         |   549  |     92  |  1  |  5  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   124  |                             j = 0;  |         |   549  |     92  |  1  |  0  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   127  |        chunk = arrayRead(text, j);  |         |   549  |    128  |  1  |  0  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   130  |                     R = R + chunk;  |    128  |   677  |    128  |  1  |  0  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   134  |                         j = j + 1;  |         |   677  |    128  |  1  |  1  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   142  |          tag = arrayRead(text, j);  |         |   677  |    128  |  1  |  1  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
   147  |  chunk = arrayRead(text, (j + 1...  |         |   677  |     10  |  1  |  1  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
   150  |                     R = R + chunk;  |     10  |   687  |     10  |  1  |  1  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
   153  |                       R = R + rep;  |    113  |   800  |     10  |  1  |  1  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
   157  |                         j = j + 2;  |         |   800  |     10  |  1  |  3  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
   158  |              resetPlaceHolder_2();  |         |   800  |     10  |  1  |  3  |  113  |   93  |   13  |  [128,13,10,93,92]  |   2  |
   166  |          tag = arrayRead(text, j);  |         |   800  |     10  |  1  |  3  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   171  |  chunk = arrayRead(text, (j + 1...  |         |   800  |     92  |  1  |  3  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   174  |                     R = R + chunk;  |     92  |   892  |     92  |  1  |  3  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   177  |                       R = R + rep;  |    113  |  1005  |     92  |  1  |  3  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   181  |                         j = j + 2;  |         |  1005  |     92  |  1  |  5  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   182  |              resetPlaceHolder_2();  |         |  1005  |     92  |  1  |  5  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   191  |                         i = i + 1;  |         |  1005  |     92  |  2  |  5  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   194  |                       R = R + sep;  |     93  |  1098  |     92  |  2  |  5  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
   195  |              resetPlaceHolder_1();  |         |  1098  |     92  |  2  |  5  |  113  |   93  |   93  |  [128,13,10,93,92]  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [101, 153, 174, 74, 77, 118, 54, 98, 130, 194, 150, 177]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {130} because there exists a longer and subsuming segment {98,130} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {74} because there exists a longer and subsuming segment {74,98} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {174} because there exists a longer and subsuming segment {153,174} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {98} because there exists a longer and subsuming segment {74,98} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {150} because there exists a longer and subsuming segment {118,150} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54} because there exists a longer and subsuming segment {54,101} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {101}, {153}, {177}, {77} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |    128  |                            |
    74  |         R = R + chunk;  |     10  |                            |
    77  |           R = R + rep;  |    113  |                         0  |
    82  |  resetPlaceHolder_2();  |         |                            |
    98  |         R = R + chunk;  |     92  |                            |
   101  |           R = R + rep;  |    113  |                         1  |
   106  |  resetPlaceHolder_2();  |         |                            |
   118  |           R = R + sep;  |     93  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |
   130  |         R = R + chunk;  |    128  |                            |
   150  |         R = R + chunk;  |     10  |                            |
   153  |           R = R + rep;  |    113  |                         2  |
   158  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |     92  |                            |
   177  |           R = R + rep;  |    113  |                         3  |
   182  |  resetPlaceHolder_2();  |         |                            |
   194  |           R = R + sep;  |     93  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {118}, {194} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |    128  |                            |
    74  |         R = R + chunk;  |     10  |                            |
    77  |           R = R + rep;  |    113  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |
    98  |         R = R + chunk;  |     92  |                            |
   101  |           R = R + rep;  |    113  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |
   118  |           R = R + sep;  |     93  |                         0  |
   119  |  resetPlaceHolder_1();  |         |                            |
   130  |         R = R + chunk;  |    128  |                            |
   150  |         R = R + chunk;  |     10  |                            |
   153  |           R = R + rep;  |    113  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |     92  |                            |
   177  |           R = R + rep;  |    113  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |
   194  |           R = R + sep;  |     93  |                         1  |
   195  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [174, 74, 54, 98, 130, 150]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [174, 74, 54, 98, 130, 150]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [174, 74, 54, 98, 130, 150]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {98,174} because there exists a longer and subsuming segment {54,98,174} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {98,130} because there exists a longer and subsuming segment {98,130,150} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {74,98} because there exists a longer and subsuming segment {54,74,98} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {150,174} because there exists a longer and subsuming segment {54,150,174} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {98,150} because there exists a longer and subsuming segment {98,130,150} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {130,150} because there exists a longer and subsuming segment {98,130,150} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {74,174} because there exists a longer and subsuming segment {74,130,174} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,74} because there exists a longer and subsuming segment {54,74,98} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {130,174} because there exists a longer and subsuming segment {74,130,174} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,130} because there exists a longer and subsuming segment {54,74,130} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {74,130} because there exists a longer and subsuming segment {74,98,130} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,98} because there exists a longer and subsuming segment {54,74,98} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,174} because there exists a longer and subsuming segment {54,150,174} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,150} because there exists a longer and subsuming segment {54,98,150} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {74,150} because there exists a longer and subsuming segment {74,98,150} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [174, 74, 54, 98, 130, 150]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [174, 74, 54, 98, 130, 150]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 7 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 7 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {130,150,174}, {54,74,98} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    54  |         R = R + chunk;  |    128  |                         0  |
    74  |         R = R + chunk;  |     10  |                         0  |
    77  |           R = R + rep;  |    113  |                            |
    82  |  resetPlaceHolder_2();  |         |                            |
    98  |         R = R + chunk;  |     92  |                         0  |
   101  |           R = R + rep;  |    113  |                            |
   106  |  resetPlaceHolder_2();  |         |                            |
   118  |           R = R + sep;  |     93  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |
   130  |         R = R + chunk;  |    128  |                         1  |
   150  |         R = R + chunk;  |     10  |                         1  |
   153  |           R = R + rep;  |    113  |                            |
   158  |  resetPlaceHolder_2();  |         |                            |
   174  |         R = R + chunk;  |     92  |                         1  |
   177  |           R = R + rep;  |    113  |                            |
   182  |  resetPlaceHolder_2();  |         |                            |
   194  |           R = R + sep;  |     93  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - Visit 1-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 2-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 3-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 4-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 5-th cluster (segment length: 3)
INFO  brbo.backend2.learning.SegmentClustering - Visit 6-th cluster (segment length: 3)
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {101}, {153}, {177}, {77}
GroupID(1): {118}, {194}
GroupID(2): {130,150,174}, {54,74,98}
                                                                                                                                    
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |  SegmentIDs in GroupID(2)  |
------------------------------------------------------------------------------------------------------------------------------------
    54  |         R = R + chunk;  |    128  |                            |                            |                         0  |
    74  |         R = R + chunk;  |     10  |                            |                            |                         0  |
    77  |           R = R + rep;  |    113  |                         0  |                            |                            |
    82  |  resetPlaceHolder_2();  |         |                            |                            |                            |
    98  |         R = R + chunk;  |     92  |                            |                            |                         0  |
   101  |           R = R + rep;  |    113  |                         1  |                            |                            |
   106  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   118  |           R = R + sep;  |     93  |                            |                         0  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |                            |
   130  |         R = R + chunk;  |    128  |                            |                            |                         1  |
   150  |         R = R + chunk;  |     10  |                            |                            |                         1  |
   153  |           R = R + rep;  |    113  |                         2  |                            |                            |
   158  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   174  |         R = R + chunk;  |     92  |                            |                            |                         1  |
   177  |           R = R + rep;  |    113  |                         3  |                            |                            |
   182  |  resetPlaceHolder_2();  |         |                            |                            |                            |
   194  |           R = R + sep;  |     93  |                            |                         1  |                            |
   195  |  resetPlaceHolder_1();  |         |                            |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_2();
GroupID(1): resetPlaceHolder_1();
GroupID(2): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(82, 106, 158)
GroupID(1): Set(119)
GroupID(2): Set(119)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> {
  // reset R2
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
resetPlaceHolder_1(); -> {
  if (S2 < R2)
  {
    S2 = R2;
  }
  else
  {
    ;
  }
  R2 = 0;
  C2 = C2 + 1;
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R chunk -> R2 = R2 + chunk;
use R chunk -> R2 = R2 + chunk;
use R rep -> R0 = R0 + rep;
use R sep -> R1 = R1 + sep;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java	2023-01-10 19:32:11.644432520 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java.actual	2023-01-10 20:10:09.185228774 -0700
@@ -4,14 +4,17 @@
     int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int C1 = -1;
+    int C2 = -1;
     int D0 = 0;
     int D0p = 0;
     int D1 = 0;
     int D1p = 0;
+    int D2 = 0;
+    int D2p = 0;
     int temporaryText = 0;
     int lastIndexOfText = 0;
-    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
-    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (ts * ((text + (text * rep)) + sep))) || (((0 + (D0p * C0)) + (D1p * C1)) == (ts * ((text + (text * rep)) + sep))));
+    lessPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
+    mostPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == (ts * ((text + (text * rep)) + sep))));
     if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
     {
       return;
@@ -35,7 +38,7 @@
         chunk = temporaryText - lastIndexOfText;
         lastIndexOfText = temporaryText;
       }
-      D1 = D1 + chunk;
+      D2 = D2 + chunk;
       j = j + 1;
       while ((j + 1) < text)
       {
@@ -49,9 +52,10 @@
           chunk = temporaryText - lastIndexOfText;
           lastIndexOfText = temporaryText;
         }
-        D1 = D1 + chunk;
+        D2 = D2 + chunk;
         D0 = D0 + rep;
         j = j + 2;
+        // reset R2
         // reset R1
         D0p = D0;
         D0 = 0;
@@ -59,6 +63,9 @@
       }
       i = i + 1;
       D1 = D1 + sep;
+      D2p = D2;
+      D2 = 0;
+      C2 = C2 + 1;
       D1p = D1;
       D1 = 0;
       C1 = C1 + 1;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java

real	0m9.624s
user	0m21.031s
sys	0m4.186s

2023-01-10 20:10:09,231 INFO     Overwrite the existing decomposition
2023-01-10 20:10:09,231 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
2023-01-10 20:10:09,233 INFO     Done. Execution time: 0.0017101764678955078 seconds
2023-01-10 20:10:09,233 INFO     Output: 
2023-01-10 20:10:09,233 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:14:31,533 INFO     Done. Execution time: 262.2996392250061 seconds
2023-01-10 20:14:31,533 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngine3.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D2 = 0),List()) -> DeltaCounterPair(D2,C2))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 2;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngine3  {
  void execute(int ts, int text, int sep, int rep)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int C2 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int D2 = 0;
    int D2p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == (((((((((((((((((8 * text) * ts) + ((8 * text) * sep)) + ((8 * text) * text)) + ((8 * text) * rep)) + ((8 * ts) * sep)) + ((8 * ts) * text)) + ((8 * ts) * rep)) + ((8 * sep) * text)) + ((8 * sep) * rep)) + ((8 * text) * rep)) + (8 * text)) + (8 * ts)) + (8 * sep)) + (8 * text)) + (8 * rep)) + 8)));
    mostPreciseBound(((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) < (ts * ((text + (text * rep)) + sep))) || ((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) == (ts * ((text + (text * rep)) + sep))));
    if (((((text < 1) || (text == 1)) || ((ts < 0) || (ts == 0))) || ((sep < 0) || (sep == 0))) || ((rep < 0) || (rep == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int j = 0;
    int chunk = 0;
    int tag = 0;
    while (i < ts)
    {
      j = 0;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D2 = D2 + chunk;
      j = j + 1;
      while ((j + 1) < text)
      {
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          tag = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        {
          temporaryText = ndInt2(lastIndexOfText, text);
          chunk = temporaryText - lastIndexOfText;
          lastIndexOfText = temporaryText;
        }
        D2 = D2 + chunk;
        D0 = D0 + rep;
        j = j + 2;
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
      i = i + 1;
      D1 = D1 + sep;
      D2p = D2;
      D2 = 0;
      C2 = C2 + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (+ 0 (* D0p C0) (* D1p C1) (* D2p C2))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (+ 0 (* D0p C0) (* D1p C1) (* D2p C2))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D2`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D2` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C2` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 rep)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 rep)))` for variable `D0p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-4416141933948228580.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 sep)))` for variable `D1p`
FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-3844021420933081042.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 sep)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D2p (+ 0 (* 1 1 text)))` for variable `D2p`
ERROR brbo.common.BoundInference - Infer bound `(<= D2 (+ 0 (* 1 1 text)))` for variable `D2`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 ts)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C2 (+ 0 (* 1 1 ts)))` for variable `C2`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 ts text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!3 (* (ite (>= (- C2 1) 0) (- C2 1) 0) D2p)))
  (<= (+ R) (+ D1 a!1 D0 a!2 D2 a!3)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (+ 0 (* D0p C0) (* D1p C1) (* D2p C2))))
(let ((a!2 (< a!1 (* ts (+ text (* text rep) sep))))
      (a!3 (= a!1 (* ts (+ text (* text rep) sep)))))
  (or a!2 a!3)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngine3`)
INFO  brbo.BrboMain - Time consumption: `260.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2010-transparentAmortize-60s-mostPrecise/stac-raw-0110-2010-transparentAmortize-60s-mostPrecise-000-099.csv`

real	4m22.294s
user	14m24.536s
sys	0m37.976s

2023-01-10 20:14:31,533 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-10 20:14:31,533 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:14:57,406 INFO     Done. Execution time: 25.87287974357605 seconds
2023-01-10 20:14:57,406 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.java -d /tmp/qfuzz2231499647890016653/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2231499647890016653/bin -o /tmp/qfuzz2231499647890016653/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2231499647890016653/bin
Found file /tmp/qfuzz2231499647890016653/bin/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
Found file /tmp/qfuzz2231499647890016653/bin/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplified.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplified.class
Instrumenting class: brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/brbo/fuzz/drivers/TemplateEngineSimplifiedQFuzzDriver.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2231499647890016653/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2231499647890016653/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.TemplateEngineSimplifiedQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2231499647890016653/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2231499647890016653/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 42, exec speed = 130625 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m42 to 42 bits (average: 42.00 bits)
[1;90m        Exec timing : [0m130k to 130k us (average: 130k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2231499647890016653/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 68.00; [81.00,149.00,235.00,321.00,397.00]
2; /tmp/qfuzz2231499647890016653/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 4; 2.00; [31.00,61.00,63.00,69.00]
7; /tmp/qfuzz2231499647890016653/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 5; 10.00; [115.00,125.00,207.00,277.00,409.00]
9; /tmp/qfuzz2231499647890016653/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta; 5; 76.00; [53.00,149.00,235.00,321.00,397.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2231499647890016653/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz2231499647890016653/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz2231499647890016653/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2231499647890016653/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 19, 153, 67, 50, 170, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2231499647890016653/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 27, 24, 23, 8, 186)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2231499647890016653/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(193, 131, 96, 50, 55)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,19,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,27,24,23,8]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [193,131,96,50,55]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.866s
user	0m11.179s
sys	0m0.755s

2023-01-10 20:14:57,407 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
2023-01-10 20:15:03,206 INFO     Done. Execution time: 5.7996509075164795 seconds
2023-01-10 20:15:03,207 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stac`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing TemplateEngineSimplified] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,19,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,27,24,23,8])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([193,131,96,50,55])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 87):
                                                                                                                 
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  tag  |         text          |
-----------------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |       |  [187,110,19,153,67]  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [187,110,19,153,67]  |
    11  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [187,110,19,153,67]  |
    13  |                     int chunk = 0;  |         |    0  |      0  |     |       |  [187,110,19,153,67]  |
    15  |                       int tag = 0;  |         |    0  |      0  |     |    0  |  [187,110,19,153,67]  |
    17  |                         int i = 0;  |         |    0  |      0  |  0  |    0  |  [187,110,19,153,67]  |
    20  |        chunk = arrayRead(text, i);  |         |    0  |    187  |  0  |    0  |  [187,110,19,153,67]  |
    23  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |    0  |  [187,110,19,153,67]  |
    27  |                         i = i + 1;  |         |  187  |    187  |  1  |    0  |  [187,110,19,153,67]  |
    33  |        chunk = arrayRead(text, i);  |         |  187  |    110  |  1  |    0  |  [187,110,19,153,67]  |
    36  |                     R = R + chunk;  |    110  |  297  |    110  |  1  |    0  |  [187,110,19,153,67]  |
    40  |                         i = i + 1;  |         |  297  |    110  |  2  |    0  |  [187,110,19,153,67]  |
    41  |              resetPlaceHolder_1();  |         |  297  |    110  |  2  |    0  |  [187,110,19,153,67]  |
    47  |        chunk = arrayRead(text, i);  |         |  297  |     19  |  2  |    0  |  [187,110,19,153,67]  |
    50  |                     R = R + chunk;  |     19  |  316  |     19  |  2  |    0  |  [187,110,19,153,67]  |
    54  |                         i = i + 1;  |         |  316  |     19  |  3  |    0  |  [187,110,19,153,67]  |
    55  |              resetPlaceHolder_1();  |         |  316  |     19  |  3  |    0  |  [187,110,19,153,67]  |
    61  |        chunk = arrayRead(text, i);  |         |  316  |    153  |  3  |    0  |  [187,110,19,153,67]  |
    64  |                     R = R + chunk;  |    153  |  469  |    153  |  3  |    0  |  [187,110,19,153,67]  |
    68  |                         i = i + 1;  |         |  469  |    153  |  4  |    0  |  [187,110,19,153,67]  |
    69  |              resetPlaceHolder_1();  |         |  469  |    153  |  4  |    0  |  [187,110,19,153,67]  |
    75  |        chunk = arrayRead(text, i);  |         |  469  |     67  |  4  |    0  |  [187,110,19,153,67]  |
    78  |                     R = R + chunk;  |     67  |  536  |     67  |  4  |    0  |  [187,110,19,153,67]  |
    82  |                         i = i + 1;  |         |  536  |     67  |  5  |    0  |  [187,110,19,153,67]  |
    83  |              resetPlaceHolder_1();  |         |  536  |     67  |  5  |    0  |  [187,110,19,153,67]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [78, 64, 50, 23, 36]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {50} because there exists a longer and subsuming segment {50,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {64} because there exists a longer and subsuming segment {23,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {78} because there exists a longer and subsuming segment {50,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {36} because there exists a longer and subsuming segment {36,50} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23} because there exists a longer and subsuming segment {23,64} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [78, 64, 50, 23, 36]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {50,78} because there exists a longer and subsuming segment {50,64,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,64} because there exists a longer and subsuming segment {23,64,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {64,78} because there exists a longer and subsuming segment {50,64,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {36,50} because there exists a longer and subsuming segment {23,36,50} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {36,78} because there exists a longer and subsuming segment {36,64,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {36,64} because there exists a longer and subsuming segment {36,50,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,36} because there exists a longer and subsuming segment {23,36,50} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,78} because there exists a longer and subsuming segment {23,64,78} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {50,64} because there exists a longer and subsuming segment {36,50,64} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {23,50} because there exists a longer and subsuming segment {23,36,50} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [78, 64, 50, 23, 36]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [78, 64, 50, 23, 36]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {23,36,50,64,78}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    23  |         R = R + chunk;  |    187  |                         0  |
    36  |         R = R + chunk;  |    110  |                         0  |
    41  |  resetPlaceHolder_1();  |         |                            |
    50  |         R = R + chunk;  |     19  |                         0  |
    55  |  resetPlaceHolder_1();  |         |                            |
    64  |         R = R + chunk;  |    153  |                         0  |
    69  |  resetPlaceHolder_1();  |         |                            |
    78  |         R = R + chunk;  |     67  |                         0  |
    83  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java	2023-01-09 19:45:37.163288523 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java.actual	2023-01-10 20:15:03.169449772 -0700
@@ -1,7 +1,7 @@
 abstract class TemplateEngineSimplified {
   void execute(int text) 
   {
-    int BOOLEAN_SEPARATOR = 502;
+    int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int D0 = 0;
     int D0p = 0;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java

real	0m5.794s
user	0m11.576s
sys	0m1.724s

2023-01-10 20:15:03,207 INFO     Overwrite the existing decomposition
2023-01-10 20:15:03,207 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
2023-01-10 20:15:03,210 INFO     Done. Execution time: 0.002679586410522461 seconds
2023-01-10 20:15:03,210 INFO     Output: 
2023-01-10 20:15:03,210 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:15:11,992 INFO     Done. Execution time: 8.781934261322021 seconds
2023-01-10 20:15:11,992 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stac`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stac/TemplateEngineSimplified.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * text) + 8)) || ((0 + (D0p * C0)) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < text) || ((0 + (D0p * C0)) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class TemplateEngineSimplified  {
  void execute(int text)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * text) + 8)) || ((0 + (D0p * C0)) == ((8 * text) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < text) || ((0 + (D0p * C0)) == text));
    if ((text < 1) || (text == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int tag = 0;
    int i = 0;
    {
      temporaryText = ndInt2(lastIndexOfText, text);
      chunk = temporaryText - lastIndexOfText;
      lastIndexOfText = temporaryText;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while (i < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D0 = D0 + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 text)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) text) (= (+ 0 (* D0p C0)) text))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stac.TemplateEngineSimplified`)
INFO  brbo.BrboMain - Time consumption: `6.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2015-transparentAmortize-60s-mostPrecise/stac-raw-0110-2015-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.775s
user	0m19.328s
sys	0m2.602s

2023-01-10 20:15:11,992 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-10 20:15:11,992 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:15:37,770 INFO     Done. Execution time: 25.777411937713623 seconds
2023-01-10 20:15:37,770 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendAllToQFuzzDriver.java -d /tmp/qfuzz372088558115594456/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz372088558115594456/bin -o /tmp/qfuzz372088558115594456/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz372088558115594456/bin
Found file /tmp/qfuzz372088558115594456/bin/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Found file /tmp/qfuzz372088558115594456/bin/brbo/fuzz/drivers/AppendAllTo.class
Instrumenting class: brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
File written: /tmp/qfuzz372088558115594456/bin-instr/brbo/fuzz/drivers/AppendAllToQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz372088558115594456/bin-instr/brbo/fuzz/drivers/AppendAllTo.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz372088558115594456/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz372088558115594456/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendAllToQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz372088558115594456/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz372088558115594456/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 41, exec speed = 124680 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 6.00; [11.00,17.00,385.00]
2; /tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 3; 2.00; [11.00,17.00,19.00]
3; /tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 3; 6.00; [11.00,17.00,87.00]
4; /tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 3; 6.00; [11.00,17.00,121.00]
10; /tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 3; 6.00; [11.00,17.00,57.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
/tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 36, 41, 83)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(38, 110, 34, 153, 98, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(55, 81, 101, 122, 10, 16, 81, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz372088558115594456/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(23, 23, 60, 4, 24, 133, 75, 23, 185, 23, 23, 56, 5, 158, 24, 103, 23, 23, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 38, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 55, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 23, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.772s
user	0m11.423s
sys	0m0.830s

2023-01-10 20:15:37,770 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
2023-01-10 20:15:42,722 INFO     Done. Execution time: 4.951755046844482 seconds
2023-01-10 20:15:42,722 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendAllTo`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, types}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendAllTo] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(38, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(55, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(23, 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 56):
                                                                                                   
 Index  |              Commands               |  Costs  |  R  |  builder  |  i  |  sep  |  types  |
---------------------------------------------------------------------------------------------------
    17  |                   int builder = 0;  |         |     |        0  |     |    4  |      2  |
    19  |                         int R = 0;  |         |  0  |        0  |     |    4  |      2  |
    20  |  // mostPreciseBound(R <= types...  |         |  0  |        0  |     |    4  |      2  |
    21  |  // lessPreciseBound(R <= MAX *...  |         |  0  |        0  |     |    4  |      2  |
    25  |             builder = builder + 1;  |         |  0  |        1  |     |    4  |      2  |
    28  |                         R = R + 1;  |      1  |  1  |        1  |     |    4  |      2  |
    30  |                         int i = 1;  |         |  1  |        1  |  1  |    4  |      2  |
    37  |           builder = builder + sep;  |         |  1  |        5  |  1  |    4  |      2  |
    40  |                       R = R + sep;  |      4  |  5  |        5  |  1  |    4  |      2  |
    44  |             builder = builder + 1;  |         |  5  |        6  |  1  |    4  |      2  |
    47  |                         R = R + 1;  |      1  |  6  |        6  |  1  |    4  |      2  |
    51  |                         i = i + 1;  |         |  6  |        6  |  2  |    4  |      2  |
    52  |              resetPlaceHolder_1();  |         |  6  |        6  |  2  |    4  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28, 40, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28, 40, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [28, 40, 47]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [28, 40, 47]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {28}, {47} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    28  |             R = R + 1;  |      1  |                         0  |
    40  |           R = R + sep;  |      4  |                            |
    47  |             R = R + 1;  |      1  |                         1  |
    52  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {28}, {47}
GroupID(1): {40}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    28  |             R = R + 1;  |      1  |                         0  |                            |
    40  |           R = R + sep;  |      4  |                            |                         0  |
    47  |             R = R + 1;  |      1  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [29, 46])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    28  |             R = R + 1;  |      1  |                         0  |                            |
    40  |           R = R + sep;  |      4  |                            |                         0  |
    47  |             R = R + 1;  |      1  |                         1  |                            |
    52  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R sep -> R1 = R1 + sep;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java

real	0m4.946s
user	0m10.006s
sys	0m1.527s

2023-01-10 20:15:42,722 INFO     Generated the expected decomposition
2023-01-10 20:15:42,722 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:15:56,884 INFO     Done. Execution time: 14.161364316940308 seconds
2023-01-10 20:15:56,884 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendAllTo.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((types * sep) + types) + 1)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int R = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendAllTo  {
  void execute(int sep, int types)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((((((8 * types) * types) + ((8 * sep) * sep)) + ((8 * types) * sep)) + (8 * types)) + (8 * sep)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((types * sep) + types) + 1)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((types * sep) + types) + 1)));
    if (((sep < 0) || (sep == 0)) || ((types < 0) || (types == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int R = 0;
    builder = builder + 1;
    D0 = D0 + 1;
    int i = 1;
    while (i < types)
    {
      builder = builder + sep;
      D1 = D1 + sep;
      builder = builder + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 types)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* types sep) types 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendAllTo`)
INFO  brbo.BrboMain - Time consumption: `12.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2015-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2015-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m14.157s
user	0m36.916s
sys	0m5.677s

2023-01-10 20:15:56,884 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-10 20:15:56,884 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:16:22,514 INFO     Done. Execution time: 25.630040407180786 seconds
2023-01-10 20:16:22,514 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDetailQFuzzDriver.java -d /tmp/qfuzz5050011001977135144/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5050011001977135144/bin -o /tmp/qfuzz5050011001977135144/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5050011001977135144/bin
Found file /tmp/qfuzz5050011001977135144/bin/brbo/fuzz/drivers/AppendDetail.class
Found file /tmp/qfuzz5050011001977135144/bin/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDetail.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/brbo/fuzz/drivers/AppendDetail.class
Instrumenting class: brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/brbo/fuzz/drivers/AppendDetailQFuzzDriver.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5050011001977135144/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5050011001977135144/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDetailQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5050011001977135144/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5050011001977135144/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 35, exec speed = 117523 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m35 to 35 bits (average: 35.00 bits)
[1;90m        Exec timing : [0m117k to 117k us (average: 117k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5050011001977135144/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 3.00; [11.00,14.00,20.00]
2; /tmp/qfuzz5050011001977135144/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 3; 3.00; [11.00,14.00,20.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5050011001977135144/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5050011001977135144/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(122, 18, 29, 59, 125, 72)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.624s
user	0m11.931s
sys	0m0.725s

2023-01-10 20:16:22,514 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
2023-01-10 20:16:27,479 INFO     Done. Execution time: 4.9642698764801025 seconds
2023-01-10 20:16:27,479 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDetail`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {array, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDetail] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 74):
                                                                                          
 Index  |              Commands               |  Costs  |  R  |  array  |  buffer  |  i  |
------------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |      2  |       0  |     |
    11  |                         int R = 0;  |         |  0  |      2  |       0  |     |
    12  |  // mostPreciseBound(R <= 1 + a...  |         |  0  |      2  |       0  |     |
    13  |  // lessPreciseBound(R <= MAX +...  |         |  0  |      2  |       0  |     |
    15  |                         int i = 0;  |         |  0  |      2  |       0  |  0  |
    31  |               buffer = buffer + 1;  |         |  0  |      2  |       1  |  0  |
    34  |                         R = R + 1;  |      1  |  1  |      2  |       1  |  0  |
    38  |                         i = i + 1;  |         |  1  |      2  |       1  |  1  |
    39  |              resetPlaceHolder_1();  |         |  1  |      2  |       1  |  1  |
    55  |               buffer = buffer + 1;  |         |  1  |      2  |       2  |  1  |
    58  |                         R = R + 1;  |      1  |  2  |      2  |       2  |  1  |
    62  |               buffer = buffer + 1;  |         |  2  |      2  |       3  |  1  |
    65  |                         R = R + 1;  |      1  |  3  |      2  |       3  |  1  |
    69  |                         i = i + 1;  |         |  3  |      2  |       3  |  2  |
    70  |              resetPlaceHolder_1();  |         |  3  |      2  |       3  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34, 58, 65]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [34, 58, 65]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [34, 58, 65]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [34, 58, 65]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {34}, {58}, {65} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    58  |             R = R + 1;  |      1  |                         1  |
    65  |             R = R + 1;  |      1  |                         2  |
    70  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {34}, {58}, {65}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    58  |             R = R + 1;  |      1  |                         1  |
    65  |             R = R + 1;  |      1  |                         2  |
    70  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [59, 64])
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    34  |             R = R + 1;  |      1  |                         0  |
    39  |  resetPlaceHolder_1();  |         |                            |
    58  |             R = R + 1;  |      1  |                         1  |
    65  |             R = R + 1;  |      1  |                         2  |
    70  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(39)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java

real	0m4.958s
user	0m9.738s
sys	0m1.712s

2023-01-10 20:16:27,479 INFO     Generated the expected decomposition
2023-01-10 20:16:27,479 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:16:35,076 INFO     Done. Execution time: 7.597411394119263 seconds
2023-01-10 20:16:35,077 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDetail.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (8 + (8 * array))) || ((0 + (D0p * C0)) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0p * C0)) < (1 + array)) || ((0 + (D0p * C0)) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDetail  {
  void execute(int array)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (8 + (8 * array))) || ((0 + (D0p * C0)) == (8 + (8 * array))));
    mostPreciseBound(((0 + (D0p * C0)) < (1 + array)) || ((0 + (D0p * C0)) == (1 + array)));
    if ((array < 0) || (array == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < array)
    {
      if (!((i < 0)) && !((i == 0)))
      {
        buffer = buffer + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) (+ 1 array)) (= (+ 0 (* D0p C0)) (+ 1 array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) (+ 1 array)) (= (+ 0 (* D0p C0)) (+ 1 array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 array)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) (+ 1 array)) (= (+ 0 (* D0p C0)) (+ 1 array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDetail`)
INFO  brbo.BrboMain - Time consumption: `5.9` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2016-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2016-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.593s
user	0m16.590s
sys	0m2.410s

2023-01-10 20:16:35,077 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-10 20:16:35,077 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:17:00,913 INFO     Done. Execution time: 25.8362717628479 seconds
2023-01-10 20:17:00,913 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.java -d /tmp/qfuzz8482692111270914409/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8482692111270914409/bin -o /tmp/qfuzz8482692111270914409/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8482692111270914409/bin
Found file /tmp/qfuzz8482692111270914409/bin/brbo/fuzz/drivers/AppendDisplayNames.class
Found file /tmp/qfuzz8482692111270914409/bin/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/brbo/fuzz/drivers/AppendDisplayNamesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/brbo/fuzz/drivers/AppendDisplayNames.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8482692111270914409/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8482692111270914409/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendDisplayNamesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8482692111270914409/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8482692111270914409/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 43, exec speed = 132061 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m43 to 43 bits (average: 43.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000000,orig:example.txt; 4; 2.00; [12.00,14.00,22.00,31.00]
2; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 4; 2.00; [12.00,14.00,20.00,31.00]
3; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32; 4; 2.00; [12.00,14.00,22.00,31.00]
4; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 4; 2.00; [12.00,14.00,20.00,31.00]
5; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+partition,+delta; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
6; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
7; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16; 4; 2.00; [12.00,14.00,20.00,31.00]
9; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
10; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4; 4; 2.00; [12.00,14.00,22.00,31.00]
11; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2; 4; 2.00; [12.00,14.00,22.00,31.00]
13; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128; 4; 2.00; [12.00,14.00,20.00,31.00]
14; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]
15; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8; 4; 2.00; [12.00,14.00,20.00,31.00]
17; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16; 4; 2.00; [12.00,14.00,20.00,31.00]
19; /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16; 5; 2.00; [12.00,14.00,20.00,22.00,31.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+partition,+delta
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16
/tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(106, 91)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(64, 167, 90, 160, 102, 194, 5, 140)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 83)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(157)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(35, 11, 54)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 152, 176, 178, 67, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27, 110, 33, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(139, 144)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000012,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000013,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8482692111270914409/fuzzer-out/afl/queue/id:000014,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [106,91]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [64,167,90,160,102]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [7,83]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [157]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [35,11,54]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,152,176,178,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [27,110,33,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [139,144]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,63]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.830s
user	0m12.108s
sys	0m1.069s

2023-01-10 20:17:00,914 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
2023-01-10 20:17:11,576 INFO     Done. Execution time: 10.662603616714478 seconds
2023-01-10 20:17:11,576 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendDisplayNames`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {entry, i, j}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendDisplayNames] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([106,91])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 14 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([64,167,90,160,102])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([7,83])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([157])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([35,11,54])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,152,176,178,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([27,110,33,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 8 / 14 (57.14%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([139,144])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,63])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 14 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 2224):
                                                                                                      
 Index  |              Commands               |  Costs  |   R   |  entry  |  i  |   j   |   sorted   |
------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |       |  [106,91]  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |       |  [106,91]  |
    11  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |       |  [106,91]  |
    13  |                     int entry = 0;  |         |    0  |      0  |     |       |  [106,91]  |
    15  |                         int i = 0;  |         |    0  |      0  |  0  |       |  [106,91]  |
    21  |      entry = arrayRead(sorted, i);  |         |    0  |    106  |  0  |       |  [106,91]  |
    23  |                         int j = 0;  |         |    0  |    106  |  0  |    0  |  [106,91]  |
    29  |                         R = R + 2;  |      2  |    2  |    106  |  0  |    0  |  [106,91]  |
    33  |                         j = j + 1;  |         |    2  |    106  |  0  |    1  |  [106,91]  |
    34  |              resetPlaceHolder_2();  |         |    2  |    106  |  0  |    1  |  [106,91]  |
    40  |                         R = R + 2;  |      2  |    4  |    106  |  0  |    1  |  [106,91]  |
    44  |                         j = j + 1;  |         |    4  |    106  |  0  |    2  |  [106,91]  |
    45  |              resetPlaceHolder_2();  |         |    4  |    106  |  0  |    2  |  [106,91]  |
    51  |                         R = R + 2;  |      2  |    6  |    106  |  0  |    2  |  [106,91]  |
    55  |                         j = j + 1;  |         |    6  |    106  |  0  |    3  |  [106,91]  |
    56  |              resetPlaceHolder_2();  |         |    6  |    106  |  0  |    3  |  [106,91]  |
    62  |                         R = R + 2;  |      2  |    8  |    106  |  0  |    3  |  [106,91]  |
    66  |                         j = j + 1;  |         |    8  |    106  |  0  |    4  |  [106,91]  |
    67  |              resetPlaceHolder_2();  |         |    8  |    106  |  0  |    4  |  [106,91]  |
    73  |                         R = R + 2;  |      2  |   10  |    106  |  0  |    4  |  [106,91]  |
    77  |                         j = j + 1;  |         |   10  |    106  |  0  |    5  |  [106,91]  |
    78  |              resetPlaceHolder_2();  |         |   10  |    106  |  0  |    5  |  [106,91]  |
    84  |                         R = R + 2;  |      2  |   12  |    106  |  0  |    5  |  [106,91]  |
    88  |                         j = j + 1;  |         |   12  |    106  |  0  |    6  |  [106,91]  |
    89  |              resetPlaceHolder_2();  |         |   12  |    106  |  0  |    6  |  [106,91]  |
    95  |                         R = R + 2;  |      2  |   14  |    106  |  0  |    6  |  [106,91]  |
    99  |                         j = j + 1;  |         |   14  |    106  |  0  |    7  |  [106,91]  |
   100  |              resetPlaceHolder_2();  |         |   14  |    106  |  0  |    7  |  [106,91]  |
   106  |                         R = R + 2;  |      2  |   16  |    106  |  0  |    7  |  [106,91]  |
   110  |                         j = j + 1;  |         |   16  |    106  |  0  |    8  |  [106,91]  |
   111  |              resetPlaceHolder_2();  |         |   16  |    106  |  0  |    8  |  [106,91]  |
   117  |                         R = R + 2;  |      2  |   18  |    106  |  0  |    8  |  [106,91]  |
   121  |                         j = j + 1;  |         |   18  |    106  |  0  |    9  |  [106,91]  |
   122  |              resetPlaceHolder_2();  |         |   18  |    106  |  0  |    9  |  [106,91]  |
   128  |                         R = R + 2;  |      2  |   20  |    106  |  0  |    9  |  [106,91]  |
   132  |                         j = j + 1;  |         |   20  |    106  |  0  |   10  |  [106,91]  |
   133  |              resetPlaceHolder_2();  |         |   20  |    106  |  0  |   10  |  [106,91]  |
   139  |                         R = R + 2;  |      2  |   22  |    106  |  0  |   10  |  [106,91]  |
   143  |                         j = j + 1;  |         |   22  |    106  |  0  |   11  |  [106,91]  |
   144  |              resetPlaceHolder_2();  |         |   22  |    106  |  0  |   11  |  [106,91]  |
   150  |                         R = R + 2;  |      2  |   24  |    106  |  0  |   11  |  [106,91]  |
   154  |                         j = j + 1;  |         |   24  |    106  |  0  |   12  |  [106,91]  |
   155  |              resetPlaceHolder_2();  |         |   24  |    106  |  0  |   12  |  [106,91]  |
   161  |                         R = R + 2;  |      2  |   26  |    106  |  0  |   12  |  [106,91]  |
   165  |                         j = j + 1;  |         |   26  |    106  |  0  |   13  |  [106,91]  |
   166  |              resetPlaceHolder_2();  |         |   26  |    106  |  0  |   13  |  [106,91]  |
   172  |                         R = R + 2;  |      2  |   28  |    106  |  0  |   13  |  [106,91]  |
   176  |                         j = j + 1;  |         |   28  |    106  |  0  |   14  |  [106,91]  |
   177  |              resetPlaceHolder_2();  |         |   28  |    106  |  0  |   14  |  [106,91]  |
   183  |                         R = R + 2;  |      2  |   30  |    106  |  0  |   14  |  [106,91]  |
   187  |                         j = j + 1;  |         |   30  |    106  |  0  |   15  |  [106,91]  |
   188  |              resetPlaceHolder_2();  |         |   30  |    106  |  0  |   15  |  [106,91]  |
   194  |                         R = R + 2;  |      2  |   32  |    106  |  0  |   15  |  [106,91]  |
   198  |                         j = j + 1;  |         |   32  |    106  |  0  |   16  |  [106,91]  |
   199  |              resetPlaceHolder_2();  |         |   32  |    106  |  0  |   16  |  [106,91]  |
   205  |                         R = R + 2;  |      2  |   34  |    106  |  0  |   16  |  [106,91]  |
   209  |                         j = j + 1;  |         |   34  |    106  |  0  |   17  |  [106,91]  |
   210  |              resetPlaceHolder_2();  |         |   34  |    106  |  0  |   17  |  [106,91]  |
   216  |                         R = R + 2;  |      2  |   36  |    106  |  0  |   17  |  [106,91]  |
   220  |                         j = j + 1;  |         |   36  |    106  |  0  |   18  |  [106,91]  |
   221  |              resetPlaceHolder_2();  |         |   36  |    106  |  0  |   18  |  [106,91]  |
   227  |                         R = R + 2;  |      2  |   38  |    106  |  0  |   18  |  [106,91]  |
   231  |                         j = j + 1;  |         |   38  |    106  |  0  |   19  |  [106,91]  |
   232  |              resetPlaceHolder_2();  |         |   38  |    106  |  0  |   19  |  [106,91]  |
   238  |                         R = R + 2;  |      2  |   40  |    106  |  0  |   19  |  [106,91]  |
   242  |                         j = j + 1;  |         |   40  |    106  |  0  |   20  |  [106,91]  |
   243  |              resetPlaceHolder_2();  |         |   40  |    106  |  0  |   20  |  [106,91]  |
   249  |                         R = R + 2;  |      2  |   42  |    106  |  0  |   20  |  [106,91]  |
   253  |                         j = j + 1;  |         |   42  |    106  |  0  |   21  |  [106,91]  |
   254  |              resetPlaceHolder_2();  |         |   42  |    106  |  0  |   21  |  [106,91]  |
   260  |                         R = R + 2;  |      2  |   44  |    106  |  0  |   21  |  [106,91]  |
   264  |                         j = j + 1;  |         |   44  |    106  |  0  |   22  |  [106,91]  |
   265  |              resetPlaceHolder_2();  |         |   44  |    106  |  0  |   22  |  [106,91]  |
   271  |                         R = R + 2;  |      2  |   46  |    106  |  0  |   22  |  [106,91]  |
   275  |                         j = j + 1;  |         |   46  |    106  |  0  |   23  |  [106,91]  |
   276  |              resetPlaceHolder_2();  |         |   46  |    106  |  0  |   23  |  [106,91]  |
   282  |                         R = R + 2;  |      2  |   48  |    106  |  0  |   23  |  [106,91]  |
   286  |                         j = j + 1;  |         |   48  |    106  |  0  |   24  |  [106,91]  |
   287  |              resetPlaceHolder_2();  |         |   48  |    106  |  0  |   24  |  [106,91]  |
   293  |                         R = R + 2;  |      2  |   50  |    106  |  0  |   24  |  [106,91]  |
   297  |                         j = j + 1;  |         |   50  |    106  |  0  |   25  |  [106,91]  |
   298  |              resetPlaceHolder_2();  |         |   50  |    106  |  0  |   25  |  [106,91]  |
   304  |                         R = R + 2;  |      2  |   52  |    106  |  0  |   25  |  [106,91]  |
   308  |                         j = j + 1;  |         |   52  |    106  |  0  |   26  |  [106,91]  |
   309  |              resetPlaceHolder_2();  |         |   52  |    106  |  0  |   26  |  [106,91]  |
   315  |                         R = R + 2;  |      2  |   54  |    106  |  0  |   26  |  [106,91]  |
   319  |                         j = j + 1;  |         |   54  |    106  |  0  |   27  |  [106,91]  |
   320  |              resetPlaceHolder_2();  |         |   54  |    106  |  0  |   27  |  [106,91]  |
   326  |                         R = R + 2;  |      2  |   56  |    106  |  0  |   27  |  [106,91]  |
   330  |                         j = j + 1;  |         |   56  |    106  |  0  |   28  |  [106,91]  |
   331  |              resetPlaceHolder_2();  |         |   56  |    106  |  0  |   28  |  [106,91]  |
   337  |                         R = R + 2;  |      2  |   58  |    106  |  0  |   28  |  [106,91]  |
   341  |                         j = j + 1;  |         |   58  |    106  |  0  |   29  |  [106,91]  |
   342  |              resetPlaceHolder_2();  |         |   58  |    106  |  0  |   29  |  [106,91]  |
   348  |                         R = R + 2;  |      2  |   60  |    106  |  0  |   29  |  [106,91]  |
   352  |                         j = j + 1;  |         |   60  |    106  |  0  |   30  |  [106,91]  |
   353  |              resetPlaceHolder_2();  |         |   60  |    106  |  0  |   30  |  [106,91]  |
   359  |                         R = R + 2;  |      2  |   62  |    106  |  0  |   30  |  [106,91]  |
   363  |                         j = j + 1;  |         |   62  |    106  |  0  |   31  |  [106,91]  |
   364  |              resetPlaceHolder_2();  |         |   62  |    106  |  0  |   31  |  [106,91]  |
   370  |                         R = R + 2;  |      2  |   64  |    106  |  0  |   31  |  [106,91]  |
   374  |                         j = j + 1;  |         |   64  |    106  |  0  |   32  |  [106,91]  |
   375  |              resetPlaceHolder_2();  |         |   64  |    106  |  0  |   32  |  [106,91]  |
   381  |                         R = R + 2;  |      2  |   66  |    106  |  0  |   32  |  [106,91]  |
   385  |                         j = j + 1;  |         |   66  |    106  |  0  |   33  |  [106,91]  |
   386  |              resetPlaceHolder_2();  |         |   66  |    106  |  0  |   33  |  [106,91]  |
   392  |                         R = R + 2;  |      2  |   68  |    106  |  0  |   33  |  [106,91]  |
   396  |                         j = j + 1;  |         |   68  |    106  |  0  |   34  |  [106,91]  |
   397  |              resetPlaceHolder_2();  |         |   68  |    106  |  0  |   34  |  [106,91]  |
   403  |                         R = R + 2;  |      2  |   70  |    106  |  0  |   34  |  [106,91]  |
   407  |                         j = j + 1;  |         |   70  |    106  |  0  |   35  |  [106,91]  |
   408  |              resetPlaceHolder_2();  |         |   70  |    106  |  0  |   35  |  [106,91]  |
   414  |                         R = R + 2;  |      2  |   72  |    106  |  0  |   35  |  [106,91]  |
   418  |                         j = j + 1;  |         |   72  |    106  |  0  |   36  |  [106,91]  |
   419  |              resetPlaceHolder_2();  |         |   72  |    106  |  0  |   36  |  [106,91]  |
   425  |                         R = R + 2;  |      2  |   74  |    106  |  0  |   36  |  [106,91]  |
   429  |                         j = j + 1;  |         |   74  |    106  |  0  |   37  |  [106,91]  |
   430  |              resetPlaceHolder_2();  |         |   74  |    106  |  0  |   37  |  [106,91]  |
   436  |                         R = R + 2;  |      2  |   76  |    106  |  0  |   37  |  [106,91]  |
   440  |                         j = j + 1;  |         |   76  |    106  |  0  |   38  |  [106,91]  |
   441  |              resetPlaceHolder_2();  |         |   76  |    106  |  0  |   38  |  [106,91]  |
   447  |                         R = R + 2;  |      2  |   78  |    106  |  0  |   38  |  [106,91]  |
   451  |                         j = j + 1;  |         |   78  |    106  |  0  |   39  |  [106,91]  |
   452  |              resetPlaceHolder_2();  |         |   78  |    106  |  0  |   39  |  [106,91]  |
   458  |                         R = R + 2;  |      2  |   80  |    106  |  0  |   39  |  [106,91]  |
   462  |                         j = j + 1;  |         |   80  |    106  |  0  |   40  |  [106,91]  |
   463  |              resetPlaceHolder_2();  |         |   80  |    106  |  0  |   40  |  [106,91]  |
   469  |                         R = R + 2;  |      2  |   82  |    106  |  0  |   40  |  [106,91]  |
   473  |                         j = j + 1;  |         |   82  |    106  |  0  |   41  |  [106,91]  |
   474  |              resetPlaceHolder_2();  |         |   82  |    106  |  0  |   41  |  [106,91]  |
   480  |                         R = R + 2;  |      2  |   84  |    106  |  0  |   41  |  [106,91]  |
   484  |                         j = j + 1;  |         |   84  |    106  |  0  |   42  |  [106,91]  |
   485  |              resetPlaceHolder_2();  |         |   84  |    106  |  0  |   42  |  [106,91]  |
   491  |                         R = R + 2;  |      2  |   86  |    106  |  0  |   42  |  [106,91]  |
   495  |                         j = j + 1;  |         |   86  |    106  |  0  |   43  |  [106,91]  |
   496  |              resetPlaceHolder_2();  |         |   86  |    106  |  0  |   43  |  [106,91]  |
   502  |                         R = R + 2;  |      2  |   88  |    106  |  0  |   43  |  [106,91]  |
   506  |                         j = j + 1;  |         |   88  |    106  |  0  |   44  |  [106,91]  |
   507  |              resetPlaceHolder_2();  |         |   88  |    106  |  0  |   44  |  [106,91]  |
   513  |                         R = R + 2;  |      2  |   90  |    106  |  0  |   44  |  [106,91]  |
   517  |                         j = j + 1;  |         |   90  |    106  |  0  |   45  |  [106,91]  |
   518  |              resetPlaceHolder_2();  |         |   90  |    106  |  0  |   45  |  [106,91]  |
   524  |                         R = R + 2;  |      2  |   92  |    106  |  0  |   45  |  [106,91]  |
   528  |                         j = j + 1;  |         |   92  |    106  |  0  |   46  |  [106,91]  |
   529  |              resetPlaceHolder_2();  |         |   92  |    106  |  0  |   46  |  [106,91]  |
   535  |                         R = R + 2;  |      2  |   94  |    106  |  0  |   46  |  [106,91]  |
   539  |                         j = j + 1;  |         |   94  |    106  |  0  |   47  |  [106,91]  |
   540  |              resetPlaceHolder_2();  |         |   94  |    106  |  0  |   47  |  [106,91]  |
   546  |                         R = R + 2;  |      2  |   96  |    106  |  0  |   47  |  [106,91]  |
   550  |                         j = j + 1;  |         |   96  |    106  |  0  |   48  |  [106,91]  |
   551  |              resetPlaceHolder_2();  |         |   96  |    106  |  0  |   48  |  [106,91]  |
   557  |                         R = R + 2;  |      2  |   98  |    106  |  0  |   48  |  [106,91]  |
   561  |                         j = j + 1;  |         |   98  |    106  |  0  |   49  |  [106,91]  |
   562  |              resetPlaceHolder_2();  |         |   98  |    106  |  0  |   49  |  [106,91]  |
   568  |                         R = R + 2;  |      2  |  100  |    106  |  0  |   49  |  [106,91]  |
   572  |                         j = j + 1;  |         |  100  |    106  |  0  |   50  |  [106,91]  |
   573  |              resetPlaceHolder_2();  |         |  100  |    106  |  0  |   50  |  [106,91]  |
   579  |                         R = R + 2;  |      2  |  102  |    106  |  0  |   50  |  [106,91]  |
   583  |                         j = j + 1;  |         |  102  |    106  |  0  |   51  |  [106,91]  |
   584  |              resetPlaceHolder_2();  |         |  102  |    106  |  0  |   51  |  [106,91]  |
   590  |                         R = R + 2;  |      2  |  104  |    106  |  0  |   51  |  [106,91]  |
   594  |                         j = j + 1;  |         |  104  |    106  |  0  |   52  |  [106,91]  |
   595  |              resetPlaceHolder_2();  |         |  104  |    106  |  0  |   52  |  [106,91]  |
   601  |                         R = R + 2;  |      2  |  106  |    106  |  0  |   52  |  [106,91]  |
   605  |                         j = j + 1;  |         |  106  |    106  |  0  |   53  |  [106,91]  |
   606  |              resetPlaceHolder_2();  |         |  106  |    106  |  0  |   53  |  [106,91]  |
   612  |                         R = R + 2;  |      2  |  108  |    106  |  0  |   53  |  [106,91]  |
   616  |                         j = j + 1;  |         |  108  |    106  |  0  |   54  |  [106,91]  |
   617  |              resetPlaceHolder_2();  |         |  108  |    106  |  0  |   54  |  [106,91]  |
   623  |                         R = R + 2;  |      2  |  110  |    106  |  0  |   54  |  [106,91]  |
   627  |                         j = j + 1;  |         |  110  |    106  |  0  |   55  |  [106,91]  |
   628  |              resetPlaceHolder_2();  |         |  110  |    106  |  0  |   55  |  [106,91]  |
   634  |                         R = R + 2;  |      2  |  112  |    106  |  0  |   55  |  [106,91]  |
   638  |                         j = j + 1;  |         |  112  |    106  |  0  |   56  |  [106,91]  |
   639  |              resetPlaceHolder_2();  |         |  112  |    106  |  0  |   56  |  [106,91]  |
   645  |                         R = R + 2;  |      2  |  114  |    106  |  0  |   56  |  [106,91]  |
   649  |                         j = j + 1;  |         |  114  |    106  |  0  |   57  |  [106,91]  |
   650  |              resetPlaceHolder_2();  |         |  114  |    106  |  0  |   57  |  [106,91]  |
   656  |                         R = R + 2;  |      2  |  116  |    106  |  0  |   57  |  [106,91]  |
   660  |                         j = j + 1;  |         |  116  |    106  |  0  |   58  |  [106,91]  |
   661  |              resetPlaceHolder_2();  |         |  116  |    106  |  0  |   58  |  [106,91]  |
   667  |                         R = R + 2;  |      2  |  118  |    106  |  0  |   58  |  [106,91]  |
   671  |                         j = j + 1;  |         |  118  |    106  |  0  |   59  |  [106,91]  |
   672  |              resetPlaceHolder_2();  |         |  118  |    106  |  0  |   59  |  [106,91]  |
   678  |                         R = R + 2;  |      2  |  120  |    106  |  0  |   59  |  [106,91]  |
   682  |                         j = j + 1;  |         |  120  |    106  |  0  |   60  |  [106,91]  |
   683  |              resetPlaceHolder_2();  |         |  120  |    106  |  0  |   60  |  [106,91]  |
   689  |                         R = R + 2;  |      2  |  122  |    106  |  0  |   60  |  [106,91]  |
   693  |                         j = j + 1;  |         |  122  |    106  |  0  |   61  |  [106,91]  |
   694  |              resetPlaceHolder_2();  |         |  122  |    106  |  0  |   61  |  [106,91]  |
   700  |                         R = R + 2;  |      2  |  124  |    106  |  0  |   61  |  [106,91]  |
   704  |                         j = j + 1;  |         |  124  |    106  |  0  |   62  |  [106,91]  |
   705  |              resetPlaceHolder_2();  |         |  124  |    106  |  0  |   62  |  [106,91]  |
   711  |                         R = R + 2;  |      2  |  126  |    106  |  0  |   62  |  [106,91]  |
   715  |                         j = j + 1;  |         |  126  |    106  |  0  |   63  |  [106,91]  |
   716  |              resetPlaceHolder_2();  |         |  126  |    106  |  0  |   63  |  [106,91]  |
   722  |                         R = R + 2;  |      2  |  128  |    106  |  0  |   63  |  [106,91]  |
   726  |                         j = j + 1;  |         |  128  |    106  |  0  |   64  |  [106,91]  |
   727  |              resetPlaceHolder_2();  |         |  128  |    106  |  0  |   64  |  [106,91]  |
   733  |                         R = R + 2;  |      2  |  130  |    106  |  0  |   64  |  [106,91]  |
   737  |                         j = j + 1;  |         |  130  |    106  |  0  |   65  |  [106,91]  |
   738  |              resetPlaceHolder_2();  |         |  130  |    106  |  0  |   65  |  [106,91]  |
   744  |                         R = R + 2;  |      2  |  132  |    106  |  0  |   65  |  [106,91]  |
   748  |                         j = j + 1;  |         |  132  |    106  |  0  |   66  |  [106,91]  |
   749  |              resetPlaceHolder_2();  |         |  132  |    106  |  0  |   66  |  [106,91]  |
   755  |                         R = R + 2;  |      2  |  134  |    106  |  0  |   66  |  [106,91]  |
   759  |                         j = j + 1;  |         |  134  |    106  |  0  |   67  |  [106,91]  |
   760  |              resetPlaceHolder_2();  |         |  134  |    106  |  0  |   67  |  [106,91]  |
   766  |                         R = R + 2;  |      2  |  136  |    106  |  0  |   67  |  [106,91]  |
   770  |                         j = j + 1;  |         |  136  |    106  |  0  |   68  |  [106,91]  |
   771  |              resetPlaceHolder_2();  |         |  136  |    106  |  0  |   68  |  [106,91]  |
   777  |                         R = R + 2;  |      2  |  138  |    106  |  0  |   68  |  [106,91]  |
   781  |                         j = j + 1;  |         |  138  |    106  |  0  |   69  |  [106,91]  |
   782  |              resetPlaceHolder_2();  |         |  138  |    106  |  0  |   69  |  [106,91]  |
   788  |                         R = R + 2;  |      2  |  140  |    106  |  0  |   69  |  [106,91]  |
   792  |                         j = j + 1;  |         |  140  |    106  |  0  |   70  |  [106,91]  |
   793  |              resetPlaceHolder_2();  |         |  140  |    106  |  0  |   70  |  [106,91]  |
   799  |                         R = R + 2;  |      2  |  142  |    106  |  0  |   70  |  [106,91]  |
   803  |                         j = j + 1;  |         |  142  |    106  |  0  |   71  |  [106,91]  |
   804  |              resetPlaceHolder_2();  |         |  142  |    106  |  0  |   71  |  [106,91]  |
   810  |                         R = R + 2;  |      2  |  144  |    106  |  0  |   71  |  [106,91]  |
   814  |                         j = j + 1;  |         |  144  |    106  |  0  |   72  |  [106,91]  |
   815  |              resetPlaceHolder_2();  |         |  144  |    106  |  0  |   72  |  [106,91]  |
   821  |                         R = R + 2;  |      2  |  146  |    106  |  0  |   72  |  [106,91]  |
   825  |                         j = j + 1;  |         |  146  |    106  |  0  |   73  |  [106,91]  |
   826  |              resetPlaceHolder_2();  |         |  146  |    106  |  0  |   73  |  [106,91]  |
   832  |                         R = R + 2;  |      2  |  148  |    106  |  0  |   73  |  [106,91]  |
   836  |                         j = j + 1;  |         |  148  |    106  |  0  |   74  |  [106,91]  |
   837  |              resetPlaceHolder_2();  |         |  148  |    106  |  0  |   74  |  [106,91]  |
   843  |                         R = R + 2;  |      2  |  150  |    106  |  0  |   74  |  [106,91]  |
   847  |                         j = j + 1;  |         |  150  |    106  |  0  |   75  |  [106,91]  |
   848  |              resetPlaceHolder_2();  |         |  150  |    106  |  0  |   75  |  [106,91]  |
   854  |                         R = R + 2;  |      2  |  152  |    106  |  0  |   75  |  [106,91]  |
   858  |                         j = j + 1;  |         |  152  |    106  |  0  |   76  |  [106,91]  |
   859  |              resetPlaceHolder_2();  |         |  152  |    106  |  0  |   76  |  [106,91]  |
   865  |                         R = R + 2;  |      2  |  154  |    106  |  0  |   76  |  [106,91]  |
   869  |                         j = j + 1;  |         |  154  |    106  |  0  |   77  |  [106,91]  |
   870  |              resetPlaceHolder_2();  |         |  154  |    106  |  0  |   77  |  [106,91]  |
   876  |                         R = R + 2;  |      2  |  156  |    106  |  0  |   77  |  [106,91]  |
   880  |                         j = j + 1;  |         |  156  |    106  |  0  |   78  |  [106,91]  |
   881  |              resetPlaceHolder_2();  |         |  156  |    106  |  0  |   78  |  [106,91]  |
   887  |                         R = R + 2;  |      2  |  158  |    106  |  0  |   78  |  [106,91]  |
   891  |                         j = j + 1;  |         |  158  |    106  |  0  |   79  |  [106,91]  |
   892  |              resetPlaceHolder_2();  |         |  158  |    106  |  0  |   79  |  [106,91]  |
   898  |                         R = R + 2;  |      2  |  160  |    106  |  0  |   79  |  [106,91]  |
   902  |                         j = j + 1;  |         |  160  |    106  |  0  |   80  |  [106,91]  |
   903  |              resetPlaceHolder_2();  |         |  160  |    106  |  0  |   80  |  [106,91]  |
   909  |                         R = R + 2;  |      2  |  162  |    106  |  0  |   80  |  [106,91]  |
   913  |                         j = j + 1;  |         |  162  |    106  |  0  |   81  |  [106,91]  |
   914  |              resetPlaceHolder_2();  |         |  162  |    106  |  0  |   81  |  [106,91]  |
   920  |                         R = R + 2;  |      2  |  164  |    106  |  0  |   81  |  [106,91]  |
   924  |                         j = j + 1;  |         |  164  |    106  |  0  |   82  |  [106,91]  |
   925  |              resetPlaceHolder_2();  |         |  164  |    106  |  0  |   82  |  [106,91]  |
   931  |                         R = R + 2;  |      2  |  166  |    106  |  0  |   82  |  [106,91]  |
   935  |                         j = j + 1;  |         |  166  |    106  |  0  |   83  |  [106,91]  |
   936  |              resetPlaceHolder_2();  |         |  166  |    106  |  0  |   83  |  [106,91]  |
   942  |                         R = R + 2;  |      2  |  168  |    106  |  0  |   83  |  [106,91]  |
   946  |                         j = j + 1;  |         |  168  |    106  |  0  |   84  |  [106,91]  |
   947  |              resetPlaceHolder_2();  |         |  168  |    106  |  0  |   84  |  [106,91]  |
   953  |                         R = R + 2;  |      2  |  170  |    106  |  0  |   84  |  [106,91]  |
   957  |                         j = j + 1;  |         |  170  |    106  |  0  |   85  |  [106,91]  |
   958  |              resetPlaceHolder_2();  |         |  170  |    106  |  0  |   85  |  [106,91]  |
   964  |                         R = R + 2;  |      2  |  172  |    106  |  0  |   85  |  [106,91]  |
   968  |                         j = j + 1;  |         |  172  |    106  |  0  |   86  |  [106,91]  |
   969  |              resetPlaceHolder_2();  |         |  172  |    106  |  0  |   86  |  [106,91]  |
   975  |                         R = R + 2;  |      2  |  174  |    106  |  0  |   86  |  [106,91]  |
   979  |                         j = j + 1;  |         |  174  |    106  |  0  |   87  |  [106,91]  |
   980  |              resetPlaceHolder_2();  |         |  174  |    106  |  0  |   87  |  [106,91]  |
   986  |                         R = R + 2;  |      2  |  176  |    106  |  0  |   87  |  [106,91]  |
   990  |                         j = j + 1;  |         |  176  |    106  |  0  |   88  |  [106,91]  |
   991  |              resetPlaceHolder_2();  |         |  176  |    106  |  0  |   88  |  [106,91]  |
   997  |                         R = R + 2;  |      2  |  178  |    106  |  0  |   88  |  [106,91]  |
  1001  |                         j = j + 1;  |         |  178  |    106  |  0  |   89  |  [106,91]  |
  1002  |              resetPlaceHolder_2();  |         |  178  |    106  |  0  |   89  |  [106,91]  |
  1008  |                         R = R + 2;  |      2  |  180  |    106  |  0  |   89  |  [106,91]  |
  1012  |                         j = j + 1;  |         |  180  |    106  |  0  |   90  |  [106,91]  |
  1013  |              resetPlaceHolder_2();  |         |  180  |    106  |  0  |   90  |  [106,91]  |
  1019  |                         R = R + 2;  |      2  |  182  |    106  |  0  |   90  |  [106,91]  |
  1023  |                         j = j + 1;  |         |  182  |    106  |  0  |   91  |  [106,91]  |
  1024  |              resetPlaceHolder_2();  |         |  182  |    106  |  0  |   91  |  [106,91]  |
  1030  |                         R = R + 2;  |      2  |  184  |    106  |  0  |   91  |  [106,91]  |
  1034  |                         j = j + 1;  |         |  184  |    106  |  0  |   92  |  [106,91]  |
  1035  |              resetPlaceHolder_2();  |         |  184  |    106  |  0  |   92  |  [106,91]  |
  1041  |                         R = R + 2;  |      2  |  186  |    106  |  0  |   92  |  [106,91]  |
  1045  |                         j = j + 1;  |         |  186  |    106  |  0  |   93  |  [106,91]  |
  1046  |              resetPlaceHolder_2();  |         |  186  |    106  |  0  |   93  |  [106,91]  |
  1052  |                         R = R + 2;  |      2  |  188  |    106  |  0  |   93  |  [106,91]  |
  1056  |                         j = j + 1;  |         |  188  |    106  |  0  |   94  |  [106,91]  |
  1057  |              resetPlaceHolder_2();  |         |  188  |    106  |  0  |   94  |  [106,91]  |
  1063  |                         R = R + 2;  |      2  |  190  |    106  |  0  |   94  |  [106,91]  |
  1067  |                         j = j + 1;  |         |  190  |    106  |  0  |   95  |  [106,91]  |
  1068  |              resetPlaceHolder_2();  |         |  190  |    106  |  0  |   95  |  [106,91]  |
  1074  |                         R = R + 2;  |      2  |  192  |    106  |  0  |   95  |  [106,91]  |
  1078  |                         j = j + 1;  |         |  192  |    106  |  0  |   96  |  [106,91]  |
  1079  |              resetPlaceHolder_2();  |         |  192  |    106  |  0  |   96  |  [106,91]  |
  1085  |                         R = R + 2;  |      2  |  194  |    106  |  0  |   96  |  [106,91]  |
  1089  |                         j = j + 1;  |         |  194  |    106  |  0  |   97  |  [106,91]  |
  1090  |              resetPlaceHolder_2();  |         |  194  |    106  |  0  |   97  |  [106,91]  |
  1096  |                         R = R + 2;  |      2  |  196  |    106  |  0  |   97  |  [106,91]  |
  1100  |                         j = j + 1;  |         |  196  |    106  |  0  |   98  |  [106,91]  |
  1101  |              resetPlaceHolder_2();  |         |  196  |    106  |  0  |   98  |  [106,91]  |
  1107  |                         R = R + 2;  |      2  |  198  |    106  |  0  |   98  |  [106,91]  |
  1111  |                         j = j + 1;  |         |  198  |    106  |  0  |   99  |  [106,91]  |
  1112  |              resetPlaceHolder_2();  |         |  198  |    106  |  0  |   99  |  [106,91]  |
  1118  |                         R = R + 2;  |      2  |  200  |    106  |  0  |   99  |  [106,91]  |
  1122  |                         j = j + 1;  |         |  200  |    106  |  0  |  100  |  [106,91]  |
  1123  |              resetPlaceHolder_2();  |         |  200  |    106  |  0  |  100  |  [106,91]  |
  1129  |                         R = R + 2;  |      2  |  202  |    106  |  0  |  100  |  [106,91]  |
  1133  |                         j = j + 1;  |         |  202  |    106  |  0  |  101  |  [106,91]  |
  1134  |              resetPlaceHolder_2();  |         |  202  |    106  |  0  |  101  |  [106,91]  |
  1140  |                         R = R + 2;  |      2  |  204  |    106  |  0  |  101  |  [106,91]  |
  1144  |                         j = j + 1;  |         |  204  |    106  |  0  |  102  |  [106,91]  |
  1145  |              resetPlaceHolder_2();  |         |  204  |    106  |  0  |  102  |  [106,91]  |
  1151  |                         R = R + 2;  |      2  |  206  |    106  |  0  |  102  |  [106,91]  |
  1155  |                         j = j + 1;  |         |  206  |    106  |  0  |  103  |  [106,91]  |
  1156  |              resetPlaceHolder_2();  |         |  206  |    106  |  0  |  103  |  [106,91]  |
  1162  |                         R = R + 2;  |      2  |  208  |    106  |  0  |  103  |  [106,91]  |
  1166  |                         j = j + 1;  |         |  208  |    106  |  0  |  104  |  [106,91]  |
  1167  |              resetPlaceHolder_2();  |         |  208  |    106  |  0  |  104  |  [106,91]  |
  1173  |                         R = R + 2;  |      2  |  210  |    106  |  0  |  104  |  [106,91]  |
  1177  |                         j = j + 1;  |         |  210  |    106  |  0  |  105  |  [106,91]  |
  1178  |              resetPlaceHolder_2();  |         |  210  |    106  |  0  |  105  |  [106,91]  |
  1184  |                         R = R + 2;  |      2  |  212  |    106  |  0  |  105  |  [106,91]  |
  1188  |                         j = j + 1;  |         |  212  |    106  |  0  |  106  |  [106,91]  |
  1189  |              resetPlaceHolder_2();  |         |  212  |    106  |  0  |  106  |  [106,91]  |
  1195  |                         R = R + 1;  |      1  |  213  |    106  |  0  |  106  |  [106,91]  |
  1199  |                         i = i + 1;  |         |  213  |    106  |  1  |  106  |  [106,91]  |
  1200  |              resetPlaceHolder_1();  |         |  213  |    106  |  1  |  106  |  [106,91]  |
  1206  |      entry = arrayRead(sorted, i);  |         |  213  |     91  |  1  |  106  |  [106,91]  |
  1208  |                         int j = 0;  |         |  213  |     91  |  1  |    0  |  [106,91]  |
  1214  |                         R = R + 2;  |      2  |  215  |     91  |  1  |    0  |  [106,91]  |
  1218  |                         j = j + 1;  |         |  215  |     91  |  1  |    1  |  [106,91]  |
  1219  |              resetPlaceHolder_2();  |         |  215  |     91  |  1  |    1  |  [106,91]  |
  1225  |                         R = R + 2;  |      2  |  217  |     91  |  1  |    1  |  [106,91]  |
  1229  |                         j = j + 1;  |         |  217  |     91  |  1  |    2  |  [106,91]  |
  1230  |              resetPlaceHolder_2();  |         |  217  |     91  |  1  |    2  |  [106,91]  |
  1236  |                         R = R + 2;  |      2  |  219  |     91  |  1  |    2  |  [106,91]  |
  1240  |                         j = j + 1;  |         |  219  |     91  |  1  |    3  |  [106,91]  |
  1241  |              resetPlaceHolder_2();  |         |  219  |     91  |  1  |    3  |  [106,91]  |
  1247  |                         R = R + 2;  |      2  |  221  |     91  |  1  |    3  |  [106,91]  |
  1251  |                         j = j + 1;  |         |  221  |     91  |  1  |    4  |  [106,91]  |
  1252  |              resetPlaceHolder_2();  |         |  221  |     91  |  1  |    4  |  [106,91]  |
  1258  |                         R = R + 2;  |      2  |  223  |     91  |  1  |    4  |  [106,91]  |
  1262  |                         j = j + 1;  |         |  223  |     91  |  1  |    5  |  [106,91]  |
  1263  |              resetPlaceHolder_2();  |         |  223  |     91  |  1  |    5  |  [106,91]  |
  1269  |                         R = R + 2;  |      2  |  225  |     91  |  1  |    5  |  [106,91]  |
  1273  |                         j = j + 1;  |         |  225  |     91  |  1  |    6  |  [106,91]  |
  1274  |              resetPlaceHolder_2();  |         |  225  |     91  |  1  |    6  |  [106,91]  |
  1280  |                         R = R + 2;  |      2  |  227  |     91  |  1  |    6  |  [106,91]  |
  1284  |                         j = j + 1;  |         |  227  |     91  |  1  |    7  |  [106,91]  |
  1285  |              resetPlaceHolder_2();  |         |  227  |     91  |  1  |    7  |  [106,91]  |
  1291  |                         R = R + 2;  |      2  |  229  |     91  |  1  |    7  |  [106,91]  |
  1295  |                         j = j + 1;  |         |  229  |     91  |  1  |    8  |  [106,91]  |
  1296  |              resetPlaceHolder_2();  |         |  229  |     91  |  1  |    8  |  [106,91]  |
  1302  |                         R = R + 2;  |      2  |  231  |     91  |  1  |    8  |  [106,91]  |
  1306  |                         j = j + 1;  |         |  231  |     91  |  1  |    9  |  [106,91]  |
  1307  |              resetPlaceHolder_2();  |         |  231  |     91  |  1  |    9  |  [106,91]  |
  1313  |                         R = R + 2;  |      2  |  233  |     91  |  1  |    9  |  [106,91]  |
  1317  |                         j = j + 1;  |         |  233  |     91  |  1  |   10  |  [106,91]  |
  1318  |              resetPlaceHolder_2();  |         |  233  |     91  |  1  |   10  |  [106,91]  |
  1324  |                         R = R + 2;  |      2  |  235  |     91  |  1  |   10  |  [106,91]  |
  1328  |                         j = j + 1;  |         |  235  |     91  |  1  |   11  |  [106,91]  |
  1329  |              resetPlaceHolder_2();  |         |  235  |     91  |  1  |   11  |  [106,91]  |
  1335  |                         R = R + 2;  |      2  |  237  |     91  |  1  |   11  |  [106,91]  |
  1339  |                         j = j + 1;  |         |  237  |     91  |  1  |   12  |  [106,91]  |
  1340  |              resetPlaceHolder_2();  |         |  237  |     91  |  1  |   12  |  [106,91]  |
  1346  |                         R = R + 2;  |      2  |  239  |     91  |  1  |   12  |  [106,91]  |
  1350  |                         j = j + 1;  |         |  239  |     91  |  1  |   13  |  [106,91]  |
  1351  |              resetPlaceHolder_2();  |         |  239  |     91  |  1  |   13  |  [106,91]  |
  1357  |                         R = R + 2;  |      2  |  241  |     91  |  1  |   13  |  [106,91]  |
  1361  |                         j = j + 1;  |         |  241  |     91  |  1  |   14  |  [106,91]  |
  1362  |              resetPlaceHolder_2();  |         |  241  |     91  |  1  |   14  |  [106,91]  |
  1368  |                         R = R + 2;  |      2  |  243  |     91  |  1  |   14  |  [106,91]  |
  1372  |                         j = j + 1;  |         |  243  |     91  |  1  |   15  |  [106,91]  |
  1373  |              resetPlaceHolder_2();  |         |  243  |     91  |  1  |   15  |  [106,91]  |
  1379  |                         R = R + 2;  |      2  |  245  |     91  |  1  |   15  |  [106,91]  |
  1383  |                         j = j + 1;  |         |  245  |     91  |  1  |   16  |  [106,91]  |
  1384  |              resetPlaceHolder_2();  |         |  245  |     91  |  1  |   16  |  [106,91]  |
  1390  |                         R = R + 2;  |      2  |  247  |     91  |  1  |   16  |  [106,91]  |
  1394  |                         j = j + 1;  |         |  247  |     91  |  1  |   17  |  [106,91]  |
  1395  |              resetPlaceHolder_2();  |         |  247  |     91  |  1  |   17  |  [106,91]  |
  1401  |                         R = R + 2;  |      2  |  249  |     91  |  1  |   17  |  [106,91]  |
  1405  |                         j = j + 1;  |         |  249  |     91  |  1  |   18  |  [106,91]  |
  1406  |              resetPlaceHolder_2();  |         |  249  |     91  |  1  |   18  |  [106,91]  |
  1412  |                         R = R + 2;  |      2  |  251  |     91  |  1  |   18  |  [106,91]  |
  1416  |                         j = j + 1;  |         |  251  |     91  |  1  |   19  |  [106,91]  |
  1417  |              resetPlaceHolder_2();  |         |  251  |     91  |  1  |   19  |  [106,91]  |
  1423  |                         R = R + 2;  |      2  |  253  |     91  |  1  |   19  |  [106,91]  |
  1427  |                         j = j + 1;  |         |  253  |     91  |  1  |   20  |  [106,91]  |
  1428  |              resetPlaceHolder_2();  |         |  253  |     91  |  1  |   20  |  [106,91]  |
  1434  |                         R = R + 2;  |      2  |  255  |     91  |  1  |   20  |  [106,91]  |
  1438  |                         j = j + 1;  |         |  255  |     91  |  1  |   21  |  [106,91]  |
  1439  |              resetPlaceHolder_2();  |         |  255  |     91  |  1  |   21  |  [106,91]  |
  1445  |                         R = R + 2;  |      2  |  257  |     91  |  1  |   21  |  [106,91]  |
  1449  |                         j = j + 1;  |         |  257  |     91  |  1  |   22  |  [106,91]  |
  1450  |              resetPlaceHolder_2();  |         |  257  |     91  |  1  |   22  |  [106,91]  |
  1456  |                         R = R + 2;  |      2  |  259  |     91  |  1  |   22  |  [106,91]  |
  1460  |                         j = j + 1;  |         |  259  |     91  |  1  |   23  |  [106,91]  |
  1461  |              resetPlaceHolder_2();  |         |  259  |     91  |  1  |   23  |  [106,91]  |
  1467  |                         R = R + 2;  |      2  |  261  |     91  |  1  |   23  |  [106,91]  |
  1471  |                         j = j + 1;  |         |  261  |     91  |  1  |   24  |  [106,91]  |
  1472  |              resetPlaceHolder_2();  |         |  261  |     91  |  1  |   24  |  [106,91]  |
  1478  |                         R = R + 2;  |      2  |  263  |     91  |  1  |   24  |  [106,91]  |
  1482  |                         j = j + 1;  |         |  263  |     91  |  1  |   25  |  [106,91]  |
  1483  |              resetPlaceHolder_2();  |         |  263  |     91  |  1  |   25  |  [106,91]  |
  1489  |                         R = R + 2;  |      2  |  265  |     91  |  1  |   25  |  [106,91]  |
  1493  |                         j = j + 1;  |         |  265  |     91  |  1  |   26  |  [106,91]  |
  1494  |              resetPlaceHolder_2();  |         |  265  |     91  |  1  |   26  |  [106,91]  |
  1500  |                         R = R + 2;  |      2  |  267  |     91  |  1  |   26  |  [106,91]  |
  1504  |                         j = j + 1;  |         |  267  |     91  |  1  |   27  |  [106,91]  |
  1505  |              resetPlaceHolder_2();  |         |  267  |     91  |  1  |   27  |  [106,91]  |
  1511  |                         R = R + 2;  |      2  |  269  |     91  |  1  |   27  |  [106,91]  |
  1515  |                         j = j + 1;  |         |  269  |     91  |  1  |   28  |  [106,91]  |
  1516  |              resetPlaceHolder_2();  |         |  269  |     91  |  1  |   28  |  [106,91]  |
  1522  |                         R = R + 2;  |      2  |  271  |     91  |  1  |   28  |  [106,91]  |
  1526  |                         j = j + 1;  |         |  271  |     91  |  1  |   29  |  [106,91]  |
  1527  |              resetPlaceHolder_2();  |         |  271  |     91  |  1  |   29  |  [106,91]  |
  1533  |                         R = R + 2;  |      2  |  273  |     91  |  1  |   29  |  [106,91]  |
  1537  |                         j = j + 1;  |         |  273  |     91  |  1  |   30  |  [106,91]  |
  1538  |              resetPlaceHolder_2();  |         |  273  |     91  |  1  |   30  |  [106,91]  |
  1544  |                         R = R + 2;  |      2  |  275  |     91  |  1  |   30  |  [106,91]  |
  1548  |                         j = j + 1;  |         |  275  |     91  |  1  |   31  |  [106,91]  |
  1549  |              resetPlaceHolder_2();  |         |  275  |     91  |  1  |   31  |  [106,91]  |
  1555  |                         R = R + 2;  |      2  |  277  |     91  |  1  |   31  |  [106,91]  |
  1559  |                         j = j + 1;  |         |  277  |     91  |  1  |   32  |  [106,91]  |
  1560  |              resetPlaceHolder_2();  |         |  277  |     91  |  1  |   32  |  [106,91]  |
  1566  |                         R = R + 2;  |      2  |  279  |     91  |  1  |   32  |  [106,91]  |
  1570  |                         j = j + 1;  |         |  279  |     91  |  1  |   33  |  [106,91]  |
  1571  |              resetPlaceHolder_2();  |         |  279  |     91  |  1  |   33  |  [106,91]  |
  1577  |                         R = R + 2;  |      2  |  281  |     91  |  1  |   33  |  [106,91]  |
  1581  |                         j = j + 1;  |         |  281  |     91  |  1  |   34  |  [106,91]  |
  1582  |              resetPlaceHolder_2();  |         |  281  |     91  |  1  |   34  |  [106,91]  |
  1588  |                         R = R + 2;  |      2  |  283  |     91  |  1  |   34  |  [106,91]  |
  1592  |                         j = j + 1;  |         |  283  |     91  |  1  |   35  |  [106,91]  |
  1593  |              resetPlaceHolder_2();  |         |  283  |     91  |  1  |   35  |  [106,91]  |
  1599  |                         R = R + 2;  |      2  |  285  |     91  |  1  |   35  |  [106,91]  |
  1603  |                         j = j + 1;  |         |  285  |     91  |  1  |   36  |  [106,91]  |
  1604  |              resetPlaceHolder_2();  |         |  285  |     91  |  1  |   36  |  [106,91]  |
  1610  |                         R = R + 2;  |      2  |  287  |     91  |  1  |   36  |  [106,91]  |
  1614  |                         j = j + 1;  |         |  287  |     91  |  1  |   37  |  [106,91]  |
  1615  |              resetPlaceHolder_2();  |         |  287  |     91  |  1  |   37  |  [106,91]  |
  1621  |                         R = R + 2;  |      2  |  289  |     91  |  1  |   37  |  [106,91]  |
  1625  |                         j = j + 1;  |         |  289  |     91  |  1  |   38  |  [106,91]  |
  1626  |              resetPlaceHolder_2();  |         |  289  |     91  |  1  |   38  |  [106,91]  |
  1632  |                         R = R + 2;  |      2  |  291  |     91  |  1  |   38  |  [106,91]  |
  1636  |                         j = j + 1;  |         |  291  |     91  |  1  |   39  |  [106,91]  |
  1637  |              resetPlaceHolder_2();  |         |  291  |     91  |  1  |   39  |  [106,91]  |
  1643  |                         R = R + 2;  |      2  |  293  |     91  |  1  |   39  |  [106,91]  |
  1647  |                         j = j + 1;  |         |  293  |     91  |  1  |   40  |  [106,91]  |
  1648  |              resetPlaceHolder_2();  |         |  293  |     91  |  1  |   40  |  [106,91]  |
  1654  |                         R = R + 2;  |      2  |  295  |     91  |  1  |   40  |  [106,91]  |
  1658  |                         j = j + 1;  |         |  295  |     91  |  1  |   41  |  [106,91]  |
  1659  |              resetPlaceHolder_2();  |         |  295  |     91  |  1  |   41  |  [106,91]  |
  1665  |                         R = R + 2;  |      2  |  297  |     91  |  1  |   41  |  [106,91]  |
  1669  |                         j = j + 1;  |         |  297  |     91  |  1  |   42  |  [106,91]  |
  1670  |              resetPlaceHolder_2();  |         |  297  |     91  |  1  |   42  |  [106,91]  |
  1676  |                         R = R + 2;  |      2  |  299  |     91  |  1  |   42  |  [106,91]  |
  1680  |                         j = j + 1;  |         |  299  |     91  |  1  |   43  |  [106,91]  |
  1681  |              resetPlaceHolder_2();  |         |  299  |     91  |  1  |   43  |  [106,91]  |
  1687  |                         R = R + 2;  |      2  |  301  |     91  |  1  |   43  |  [106,91]  |
  1691  |                         j = j + 1;  |         |  301  |     91  |  1  |   44  |  [106,91]  |
  1692  |              resetPlaceHolder_2();  |         |  301  |     91  |  1  |   44  |  [106,91]  |
  1698  |                         R = R + 2;  |      2  |  303  |     91  |  1  |   44  |  [106,91]  |
  1702  |                         j = j + 1;  |         |  303  |     91  |  1  |   45  |  [106,91]  |
  1703  |              resetPlaceHolder_2();  |         |  303  |     91  |  1  |   45  |  [106,91]  |
  1709  |                         R = R + 2;  |      2  |  305  |     91  |  1  |   45  |  [106,91]  |
  1713  |                         j = j + 1;  |         |  305  |     91  |  1  |   46  |  [106,91]  |
  1714  |              resetPlaceHolder_2();  |         |  305  |     91  |  1  |   46  |  [106,91]  |
  1720  |                         R = R + 2;  |      2  |  307  |     91  |  1  |   46  |  [106,91]  |
  1724  |                         j = j + 1;  |         |  307  |     91  |  1  |   47  |  [106,91]  |
  1725  |              resetPlaceHolder_2();  |         |  307  |     91  |  1  |   47  |  [106,91]  |
  1731  |                         R = R + 2;  |      2  |  309  |     91  |  1  |   47  |  [106,91]  |
  1735  |                         j = j + 1;  |         |  309  |     91  |  1  |   48  |  [106,91]  |
  1736  |              resetPlaceHolder_2();  |         |  309  |     91  |  1  |   48  |  [106,91]  |
  1742  |                         R = R + 2;  |      2  |  311  |     91  |  1  |   48  |  [106,91]  |
  1746  |                         j = j + 1;  |         |  311  |     91  |  1  |   49  |  [106,91]  |
  1747  |              resetPlaceHolder_2();  |         |  311  |     91  |  1  |   49  |  [106,91]  |
  1753  |                         R = R + 2;  |      2  |  313  |     91  |  1  |   49  |  [106,91]  |
  1757  |                         j = j + 1;  |         |  313  |     91  |  1  |   50  |  [106,91]  |
  1758  |              resetPlaceHolder_2();  |         |  313  |     91  |  1  |   50  |  [106,91]  |
  1764  |                         R = R + 2;  |      2  |  315  |     91  |  1  |   50  |  [106,91]  |
  1768  |                         j = j + 1;  |         |  315  |     91  |  1  |   51  |  [106,91]  |
  1769  |              resetPlaceHolder_2();  |         |  315  |     91  |  1  |   51  |  [106,91]  |
  1775  |                         R = R + 2;  |      2  |  317  |     91  |  1  |   51  |  [106,91]  |
  1779  |                         j = j + 1;  |         |  317  |     91  |  1  |   52  |  [106,91]  |
  1780  |              resetPlaceHolder_2();  |         |  317  |     91  |  1  |   52  |  [106,91]  |
  1786  |                         R = R + 2;  |      2  |  319  |     91  |  1  |   52  |  [106,91]  |
  1790  |                         j = j + 1;  |         |  319  |     91  |  1  |   53  |  [106,91]  |
  1791  |              resetPlaceHolder_2();  |         |  319  |     91  |  1  |   53  |  [106,91]  |
  1797  |                         R = R + 2;  |      2  |  321  |     91  |  1  |   53  |  [106,91]  |
  1801  |                         j = j + 1;  |         |  321  |     91  |  1  |   54  |  [106,91]  |
  1802  |              resetPlaceHolder_2();  |         |  321  |     91  |  1  |   54  |  [106,91]  |
  1808  |                         R = R + 2;  |      2  |  323  |     91  |  1  |   54  |  [106,91]  |
  1812  |                         j = j + 1;  |         |  323  |     91  |  1  |   55  |  [106,91]  |
  1813  |              resetPlaceHolder_2();  |         |  323  |     91  |  1  |   55  |  [106,91]  |
  1819  |                         R = R + 2;  |      2  |  325  |     91  |  1  |   55  |  [106,91]  |
  1823  |                         j = j + 1;  |         |  325  |     91  |  1  |   56  |  [106,91]  |
  1824  |              resetPlaceHolder_2();  |         |  325  |     91  |  1  |   56  |  [106,91]  |
  1830  |                         R = R + 2;  |      2  |  327  |     91  |  1  |   56  |  [106,91]  |
  1834  |                         j = j + 1;  |         |  327  |     91  |  1  |   57  |  [106,91]  |
  1835  |              resetPlaceHolder_2();  |         |  327  |     91  |  1  |   57  |  [106,91]  |
  1841  |                         R = R + 2;  |      2  |  329  |     91  |  1  |   57  |  [106,91]  |
  1845  |                         j = j + 1;  |         |  329  |     91  |  1  |   58  |  [106,91]  |
  1846  |              resetPlaceHolder_2();  |         |  329  |     91  |  1  |   58  |  [106,91]  |
  1852  |                         R = R + 2;  |      2  |  331  |     91  |  1  |   58  |  [106,91]  |
  1856  |                         j = j + 1;  |         |  331  |     91  |  1  |   59  |  [106,91]  |
  1857  |              resetPlaceHolder_2();  |         |  331  |     91  |  1  |   59  |  [106,91]  |
  1863  |                         R = R + 2;  |      2  |  333  |     91  |  1  |   59  |  [106,91]  |
  1867  |                         j = j + 1;  |         |  333  |     91  |  1  |   60  |  [106,91]  |
  1868  |              resetPlaceHolder_2();  |         |  333  |     91  |  1  |   60  |  [106,91]  |
  1874  |                         R = R + 2;  |      2  |  335  |     91  |  1  |   60  |  [106,91]  |
  1878  |                         j = j + 1;  |         |  335  |     91  |  1  |   61  |  [106,91]  |
  1879  |              resetPlaceHolder_2();  |         |  335  |     91  |  1  |   61  |  [106,91]  |
  1885  |                         R = R + 2;  |      2  |  337  |     91  |  1  |   61  |  [106,91]  |
  1889  |                         j = j + 1;  |         |  337  |     91  |  1  |   62  |  [106,91]  |
  1890  |              resetPlaceHolder_2();  |         |  337  |     91  |  1  |   62  |  [106,91]  |
  1896  |                         R = R + 2;  |      2  |  339  |     91  |  1  |   62  |  [106,91]  |
  1900  |                         j = j + 1;  |         |  339  |     91  |  1  |   63  |  [106,91]  |
  1901  |              resetPlaceHolder_2();  |         |  339  |     91  |  1  |   63  |  [106,91]  |
  1907  |                         R = R + 2;  |      2  |  341  |     91  |  1  |   63  |  [106,91]  |
  1911  |                         j = j + 1;  |         |  341  |     91  |  1  |   64  |  [106,91]  |
  1912  |              resetPlaceHolder_2();  |         |  341  |     91  |  1  |   64  |  [106,91]  |
  1918  |                         R = R + 2;  |      2  |  343  |     91  |  1  |   64  |  [106,91]  |
  1922  |                         j = j + 1;  |         |  343  |     91  |  1  |   65  |  [106,91]  |
  1923  |              resetPlaceHolder_2();  |         |  343  |     91  |  1  |   65  |  [106,91]  |
  1929  |                         R = R + 2;  |      2  |  345  |     91  |  1  |   65  |  [106,91]  |
  1933  |                         j = j + 1;  |         |  345  |     91  |  1  |   66  |  [106,91]  |
  1934  |              resetPlaceHolder_2();  |         |  345  |     91  |  1  |   66  |  [106,91]  |
  1940  |                         R = R + 2;  |      2  |  347  |     91  |  1  |   66  |  [106,91]  |
  1944  |                         j = j + 1;  |         |  347  |     91  |  1  |   67  |  [106,91]  |
  1945  |              resetPlaceHolder_2();  |         |  347  |     91  |  1  |   67  |  [106,91]  |
  1951  |                         R = R + 2;  |      2  |  349  |     91  |  1  |   67  |  [106,91]  |
  1955  |                         j = j + 1;  |         |  349  |     91  |  1  |   68  |  [106,91]  |
  1956  |              resetPlaceHolder_2();  |         |  349  |     91  |  1  |   68  |  [106,91]  |
  1962  |                         R = R + 2;  |      2  |  351  |     91  |  1  |   68  |  [106,91]  |
  1966  |                         j = j + 1;  |         |  351  |     91  |  1  |   69  |  [106,91]  |
  1967  |              resetPlaceHolder_2();  |         |  351  |     91  |  1  |   69  |  [106,91]  |
  1973  |                         R = R + 2;  |      2  |  353  |     91  |  1  |   69  |  [106,91]  |
  1977  |                         j = j + 1;  |         |  353  |     91  |  1  |   70  |  [106,91]  |
  1978  |              resetPlaceHolder_2();  |         |  353  |     91  |  1  |   70  |  [106,91]  |
  1984  |                         R = R + 2;  |      2  |  355  |     91  |  1  |   70  |  [106,91]  |
  1988  |                         j = j + 1;  |         |  355  |     91  |  1  |   71  |  [106,91]  |
  1989  |              resetPlaceHolder_2();  |         |  355  |     91  |  1  |   71  |  [106,91]  |
  1995  |                         R = R + 2;  |      2  |  357  |     91  |  1  |   71  |  [106,91]  |
  1999  |                         j = j + 1;  |         |  357  |     91  |  1  |   72  |  [106,91]  |
  2000  |              resetPlaceHolder_2();  |         |  357  |     91  |  1  |   72  |  [106,91]  |
  2006  |                         R = R + 2;  |      2  |  359  |     91  |  1  |   72  |  [106,91]  |
  2010  |                         j = j + 1;  |         |  359  |     91  |  1  |   73  |  [106,91]  |
  2011  |              resetPlaceHolder_2();  |         |  359  |     91  |  1  |   73  |  [106,91]  |
  2017  |                         R = R + 2;  |      2  |  361  |     91  |  1  |   73  |  [106,91]  |
  2021  |                         j = j + 1;  |         |  361  |     91  |  1  |   74  |  [106,91]  |
  2022  |              resetPlaceHolder_2();  |         |  361  |     91  |  1  |   74  |  [106,91]  |
  2028  |                         R = R + 2;  |      2  |  363  |     91  |  1  |   74  |  [106,91]  |
  2032  |                         j = j + 1;  |         |  363  |     91  |  1  |   75  |  [106,91]  |
  2033  |              resetPlaceHolder_2();  |         |  363  |     91  |  1  |   75  |  [106,91]  |
  2039  |                         R = R + 2;  |      2  |  365  |     91  |  1  |   75  |  [106,91]  |
  2043  |                         j = j + 1;  |         |  365  |     91  |  1  |   76  |  [106,91]  |
  2044  |              resetPlaceHolder_2();  |         |  365  |     91  |  1  |   76  |  [106,91]  |
  2050  |                         R = R + 2;  |      2  |  367  |     91  |  1  |   76  |  [106,91]  |
  2054  |                         j = j + 1;  |         |  367  |     91  |  1  |   77  |  [106,91]  |
  2055  |              resetPlaceHolder_2();  |         |  367  |     91  |  1  |   77  |  [106,91]  |
  2061  |                         R = R + 2;  |      2  |  369  |     91  |  1  |   77  |  [106,91]  |
  2065  |                         j = j + 1;  |         |  369  |     91  |  1  |   78  |  [106,91]  |
  2066  |              resetPlaceHolder_2();  |         |  369  |     91  |  1  |   78  |  [106,91]  |
  2072  |                         R = R + 2;  |      2  |  371  |     91  |  1  |   78  |  [106,91]  |
  2076  |                         j = j + 1;  |         |  371  |     91  |  1  |   79  |  [106,91]  |
  2077  |              resetPlaceHolder_2();  |         |  371  |     91  |  1  |   79  |  [106,91]  |
  2083  |                         R = R + 2;  |      2  |  373  |     91  |  1  |   79  |  [106,91]  |
  2087  |                         j = j + 1;  |         |  373  |     91  |  1  |   80  |  [106,91]  |
  2088  |              resetPlaceHolder_2();  |         |  373  |     91  |  1  |   80  |  [106,91]  |
  2094  |                         R = R + 2;  |      2  |  375  |     91  |  1  |   80  |  [106,91]  |
  2098  |                         j = j + 1;  |         |  375  |     91  |  1  |   81  |  [106,91]  |
  2099  |              resetPlaceHolder_2();  |         |  375  |     91  |  1  |   81  |  [106,91]  |
  2105  |                         R = R + 2;  |      2  |  377  |     91  |  1  |   81  |  [106,91]  |
  2109  |                         j = j + 1;  |         |  377  |     91  |  1  |   82  |  [106,91]  |
  2110  |              resetPlaceHolder_2();  |         |  377  |     91  |  1  |   82  |  [106,91]  |
  2116  |                         R = R + 2;  |      2  |  379  |     91  |  1  |   82  |  [106,91]  |
  2120  |                         j = j + 1;  |         |  379  |     91  |  1  |   83  |  [106,91]  |
  2121  |              resetPlaceHolder_2();  |         |  379  |     91  |  1  |   83  |  [106,91]  |
  2127  |                         R = R + 2;  |      2  |  381  |     91  |  1  |   83  |  [106,91]  |
  2131  |                         j = j + 1;  |         |  381  |     91  |  1  |   84  |  [106,91]  |
  2132  |              resetPlaceHolder_2();  |         |  381  |     91  |  1  |   84  |  [106,91]  |
  2138  |                         R = R + 2;  |      2  |  383  |     91  |  1  |   84  |  [106,91]  |
  2142  |                         j = j + 1;  |         |  383  |     91  |  1  |   85  |  [106,91]  |
  2143  |              resetPlaceHolder_2();  |         |  383  |     91  |  1  |   85  |  [106,91]  |
  2149  |                         R = R + 2;  |      2  |  385  |     91  |  1  |   85  |  [106,91]  |
  2153  |                         j = j + 1;  |         |  385  |     91  |  1  |   86  |  [106,91]  |
  2154  |              resetPlaceHolder_2();  |         |  385  |     91  |  1  |   86  |  [106,91]  |
  2160  |                         R = R + 2;  |      2  |  387  |     91  |  1  |   86  |  [106,91]  |
  2164  |                         j = j + 1;  |         |  387  |     91  |  1  |   87  |  [106,91]  |
  2165  |              resetPlaceHolder_2();  |         |  387  |     91  |  1  |   87  |  [106,91]  |
  2171  |                         R = R + 2;  |      2  |  389  |     91  |  1  |   87  |  [106,91]  |
  2175  |                         j = j + 1;  |         |  389  |     91  |  1  |   88  |  [106,91]  |
  2176  |              resetPlaceHolder_2();  |         |  389  |     91  |  1  |   88  |  [106,91]  |
  2182  |                         R = R + 2;  |      2  |  391  |     91  |  1  |   88  |  [106,91]  |
  2186  |                         j = j + 1;  |         |  391  |     91  |  1  |   89  |  [106,91]  |
  2187  |              resetPlaceHolder_2();  |         |  391  |     91  |  1  |   89  |  [106,91]  |
  2193  |                         R = R + 2;  |      2  |  393  |     91  |  1  |   89  |  [106,91]  |
  2197  |                         j = j + 1;  |         |  393  |     91  |  1  |   90  |  [106,91]  |
  2198  |              resetPlaceHolder_2();  |         |  393  |     91  |  1  |   90  |  [106,91]  |
  2204  |                         R = R + 2;  |      2  |  395  |     91  |  1  |   90  |  [106,91]  |
  2208  |                         j = j + 1;  |         |  395  |     91  |  1  |   91  |  [106,91]  |
  2209  |              resetPlaceHolder_2();  |         |  395  |     91  |  1  |   91  |  [106,91]  |
  2215  |                         R = R + 1;  |      1  |  396  |     91  |  1  |   91  |  [106,91]  |
  2219  |                         i = i + 1;  |         |  396  |     91  |  2  |   91  |  [106,91]  |
  2220  |              resetPlaceHolder_1();  |         |  396  |     91  |  2  |   91  |  [106,91]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 1665, 2094, 2072, 1995, 909, 249, 777, 1522, 1808, 1401, 1544, 1269, 1533, 1041, 1173, 1063, 898, 436, 1709, 2039, 1907, 1511, 1313, 1577, 1379, 1247, 29, 216, 1489, 1302, 2105, 1632, 623, 106, 238, 1151, 348, 84, 821, 2017, 480, 766, 634, 1896, 293, 1863, 1074, 920, 117, 942, 2204, 678, 546, 810, 381, 2083, 2061, 260, 1676, 392, 788, 1423, 1555, 1951, 1687, 1819, 1195, 1291, 403, 1096, 1118, 1214, 590, 1324, 997, 1588, 1478, 1456, 2006, 1984, 1852, 1874, 1599, 1720, 1434, 73, 128, 205, 953, 1764, 425, 513, 1698, 2149, 161, 2028, 689, 733, 601, 975, 843, 1929, 711, 579, 2193, 1786, 1107, 1258, 172, 2116, 271, 2182, 535, 1731, 799, 1162, 700, 964, 1841, 2171, 1445, 1643, 986, 1775, 1973, 722, 1467, 458, 194, 557, 282, 1225, 150, 887, 414, 95, 1566, 1368, 1753, 2160, 370, 502, 1830, 1085, 359, 744, 656, 1052, 1140, 1797, 1008, 612, 876, 1940, 1918, 931, 524, 1654, 1412, 2215, 1390, 40, 304, 139, 1030, 568, 667, 832, 447, 315, 1280, 51, 854, 183, 2050, 865, 326, 1335, 1346, 1610, 1742, 1236, 2127, 1129, 1019, 1357, 1500, 62, 1885, 1621, 2138, 227, 337, 469, 1962, 1184, 755, 491]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [645, 1665, 2094, 2072, 1995, 909, 249, 777, 1522, 1808, 1401, 1544, 1269, 1533, 1041, 1173, 1063, 898, 436, 1709, 2039, 1907, 1511, 1313, 1577, 1379, 1247, 29, 216, 1489, 1302, 2105, 1632, 623, 106, 238, 1151, 348, 84, 821, 2017, 480, 766, 634, 1896, 293, 1863, 1074, 920, 117, 942, 2204, 678, 546, 810, 381, 2083, 2061, 260, 1676, 392, 788, 1423, 1555, 1951, 1687, 1819, 1195, 1291, 403, 1096, 1118, 1214, 590, 1324, 997, 1588, 1478, 1456, 2006, 1984, 1852, 1874, 1599, 1720, 1434, 73, 128, 205, 953, 1764, 425, 513, 1698, 2149, 161, 2028, 689, 733, 601, 975, 843, 1929, 711, 579, 2193, 1786, 1107, 1258, 172, 2116, 271, 2182, 535, 1731, 799, 1162, 700, 964, 1841, 2171, 1445, 1643, 986, 1775, 1973, 722, 1467, 458, 194, 557, 282, 1225, 150, 887, 414, 95, 1566, 1368, 1753, 2160, 370, 502, 1830, 1085, 359, 744, 656, 1052, 1140, 1797, 1008, 612, 876, 1940, 1918, 931, 524, 1654, 1412, 2215, 1390, 40, 304, 139, 1030, 568, 667, 832, 447, 315, 1280, 51, 854, 183, 2050, 865, 326, 1335, 1346, 1610, 1742, 1236, 2127, 1129, 1019, 1357, 1500, 62, 1885, 1621, 2138, 227, 337, 469, 1962, 1184, 755, 491]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [645, 1665, 2094, 2072, 1995, 909, 249, 777, 1522, 1808, 1401, 1544, 1269, 1533, 1041, 1173, 1063, 898, 436, 1709, 2039, 1907, 1511, 1313, 1577, 1379, 1247, 29, 216, 1489, 1302, 2105, 1632, 623, 106, 238, 1151, 348, 84, 821, 2017, 480, 766, 634, 1896, 293, 1863, 1074, 920, 117, 942, 2204, 678, 546, 810, 381, 2083, 2061, 260, 1676, 392, 788, 1423, 1555, 1951, 1687, 1819, 1195, 1291, 403, 1096, 1118, 1214, 590, 1324, 997, 1588, 1478, 1456, 2006, 1984, 1852, 1874, 1599, 1720, 1434, 73, 128, 205, 953, 1764, 425, 513, 1698, 2149, 161, 2028, 689, 733, 601, 975, 843, 1929, 711, 579, 2193, 1786, 1107, 1258, 172, 2116, 271, 2182, 535, 1731, 799, 1162, 700, 964, 1841, 2171, 1445, 1643, 986, 1775, 1973, 722, 1467, 458, 194, 557, 282, 1225, 150, 887, 414, 95, 1566, 1368, 1753, 2160, 370, 502, 1830, 1085, 359, 744, 656, 1052, 1140, 1797, 1008, 612, 876, 1940, 1918, 931, 524, 1654, 1412, 2215, 1390, 40, 304, 139, 1030, 568, 667, 832, 447, 315, 1280, 51, 854, 183, 2050, 865, 326, 1335, 1346, 1610, 1742, 1236, 2127, 1129, 1019, 1357, 1500, 62, 1885, 1621, 2138, 227, 337, 469, 1962, 1184, 755, 491]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 1665, 2094, 2072, 1995, 909, 249, 777, 1522, 1808, 1401, 1544, 1269, 1533, 1041, 1173, 1063, 898, 436, 1709, 2039, 1907, 1511, 1313, 1577, 1379, 1247, 29, 216, 1489, 1302, 2105, 1632, 623, 106, 238, 1151, 348, 84, 821, 2017, 480, 766, 634, 1896, 293, 1863, 1074, 920, 117, 942, 2204, 678, 546, 810, 381, 2083, 2061, 260, 1676, 392, 788, 1423, 1555, 1951, 1687, 1819, 1195, 1291, 403, 1096, 1118, 1214, 590, 1324, 997, 1588, 1478, 1456, 2006, 1984, 1852, 1874, 1599, 1720, 1434, 73, 128, 205, 953, 1764, 425, 513, 1698, 2149, 161, 2028, 689, 733, 601, 975, 843, 1929, 711, 579, 2193, 1786, 1107, 1258, 172, 2116, 271, 2182, 535, 1731, 799, 1162, 700, 964, 1841, 2171, 1445, 1643, 986, 1775, 1973, 722, 1467, 458, 194, 557, 282, 1225, 150, 887, 414, 95, 1566, 1368, 1753, 2160, 370, 502, 1830, 1085, 359, 744, 656, 1052, 1140, 1797, 1008, 612, 876, 1940, 1918, 931, 524, 1654, 1412, 2215, 1390, 40, 304, 139, 1030, 568, 667, 832, 447, 315, 1280, 51, 854, 183, 2050, 865, 326, 1335, 1346, 1610, 1742, 1236, 2127, 1129, 1019, 1357, 1500, 62, 1885, 1621, 2138, 227, 337, 469, 1962, 1184, 755, 491]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [645, 1665, 2094, 2072, 1995, 909, 249, 777, 1522, 1808, 1401, 1544, 1269, 1533, 1041, 1173, 1063, 898, 436, 1709, 2039, 1907, 1511, 1313, 1577, 1379, 1247, 29, 216, 1489, 1302, 2105, 1632, 623, 106, 238, 1151, 348, 84, 821, 2017, 480, 766, 634, 1896, 293, 1863, 1074, 920, 117, 942, 2204, 678, 546, 810, 381, 2083, 2061, 260, 1676, 392, 788, 1423, 1555, 1951, 1687, 1819, 1195, 1291, 403, 1096, 1118, 1214, 590, 1324, 997, 1588, 1478, 1456, 2006, 1984, 1852, 1874, 1599, 1720, 1434, 73, 128, 205, 953, 1764, 425, 513, 1698, 2149, 161, 2028, 689, 733, 601, 975, 843, 1929, 711, 579, 2193, 1786, 1107, 1258, 172, 2116, 271, 2182, 535, 1731, 799, 1162, 700, 964, 1841, 2171, 1445, 1643, 986, 1775, 1973, 722, 1467, 458, 194, 557, 282, 1225, 150, 887, 414, 95, 1566, 1368, 1753, 2160, 370, 502, 1830, 1085, 359, 744, 656, 1052, 1140, 1797, 1008, 612, 876, 1940, 1918, 931, 524, 1654, 1412, 2215, 1390, 40, 304, 139, 1030, 568, 667, 832, 447, 315, 1280, 51, 854, 183, 2050, 865, 326, 1335, 1346, 1610, 1742, 1236, 2127, 1129, 1019, 1357, 1500, 62, 1885, 1621, 2138, 227, 337, 469, 1962, 1184, 755, 491]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [645, 1665, 2094, 2072, 1995, 909, 249, 777, 1522, 1808, 1401, 1544, 1269, 1533, 1041, 1173, 1063, 898, 436, 1709, 2039, 1907, 1511, 1313, 1577, 1379, 1247, 29, 216, 1489, 1302, 2105, 1632, 623, 106, 238, 1151, 348, 84, 821, 2017, 480, 766, 634, 1896, 293, 1863, 1074, 920, 117, 942, 2204, 678, 546, 810, 381, 2083, 2061, 260, 1676, 392, 788, 1423, 1555, 1951, 1687, 1819, 1195, 1291, 403, 1096, 1118, 1214, 590, 1324, 997, 1588, 1478, 1456, 2006, 1984, 1852, 1874, 1599, 1720, 1434, 73, 128, 205, 953, 1764, 425, 513, 1698, 2149, 161, 2028, 689, 733, 601, 975, 843, 1929, 711, 579, 2193, 1786, 1107, 1258, 172, 2116, 271, 2182, 535, 1731, 799, 1162, 700, 964, 1841, 2171, 1445, 1643, 986, 1775, 1973, 722, 1467, 458, 194, 557, 282, 1225, 150, 887, 414, 95, 1566, 1368, 1753, 2160, 370, 502, 1830, 1085, 359, 744, 656, 1052, 1140, 1797, 1008, 612, 876, 1940, 1918, 931, 524, 1654, 1412, 2215, 1390, 40, 304, 139, 1030, 568, 667, 832, 447, 315, 1280, 51, 854, 183, 2050, 865, 326, 1335, 1346, 1610, 1742, 1236, 2127, 1129, 1019, 1357, 1500, 62, 1885, 1621, 2138, 227, 337, 469, 1962, 1184, 755, 491]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 1665, 2094, 2072, 1995, 909, 249, 777, 1522, 1808, 1401, 1544, 1269, 1533, 1041, 1173, 1063, 898, 436, 1709, 2039, 1907, 1511, 1313, 1577, 1379, 1247, 29, 216, 1489, 1302, 2105, 1632, 623, 106, 238, 1151, 348, 84, 821, 2017, 480, 766, 634, 1896, 293, 1863, 1074, 920, 117, 942, 2204, 678, 546, 810, 381, 2083, 2061, 260, 1676, 392, 788, 1423, 1555, 1951, 1687, 1819, 1195, 1291, 403, 1096, 1118, 1214, 590, 1324, 997, 1588, 1478, 1456, 2006, 1984, 1852, 1874, 1599, 1720, 1434, 73, 128, 205, 953, 1764, 425, 513, 1698, 2149, 161, 2028, 689, 733, 601, 975, 843, 1929, 711, 579, 2193, 1786, 1107, 1258, 172, 2116, 271, 2182, 535, 1731, 799, 1162, 700, 964, 1841, 2171, 1445, 1643, 986, 1775, 1973, 722, 1467, 458, 194, 557, 282, 1225, 150, 887, 414, 95, 1566, 1368, 1753, 2160, 370, 502, 1830, 1085, 359, 744, 656, 1052, 1140, 1797, 1008, 612, 876, 1940, 1918, 931, 524, 1654, 1412, 2215, 1390, 40, 304, 139, 1030, 568, 667, 832, 447, 315, 1280, 51, 854, 183, 2050, 865, 326, 1335, 1346, 1610, 1742, 1236, 2127, 1129, 1019, 1357, 1500, 62, 1885, 1621, 2138, 227, 337, 469, 1962, 1184, 755, 491]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 1665, 2094, 2072, 1995, 909, 249, 777, 1522, 1808, 1401, 1544, 1269, 1533, 1041, 1173, 1063, 898, 436, 1709, 2039, 1907, 1511, 1313, 1577, 1379, 1247, 29, 216, 1489, 1302, 2105, 1632, 623, 106, 238, 1151, 348, 84, 821, 2017, 480, 766, 634, 1896, 293, 1863, 1074, 920, 117, 942, 2204, 678, 546, 810, 381, 2083, 2061, 260, 1676, 392, 788, 1423, 1555, 1951, 1687, 1819, 1195, 1291, 403, 1096, 1118, 1214, 590, 1324, 997, 1588, 1478, 1456, 2006, 1984, 1852, 1874, 1599, 1720, 1434, 73, 128, 205, 953, 1764, 425, 513, 1698, 2149, 161, 2028, 689, 733, 601, 975, 843, 1929, 711, 579, 2193, 1786, 1107, 1258, 172, 2116, 271, 2182, 535, 1731, 799, 1162, 700, 964, 1841, 2171, 1445, 1643, 986, 1775, 1973, 722, 1467, 458, 194, 557, 282, 1225, 150, 887, 414, 95, 1566, 1368, 1753, 2160, 370, 502, 1830, 1085, 359, 744, 656, 1052, 1140, 1797, 1008, 612, 876, 1940, 1918, 931, 524, 1654, 1412, 2215, 1390, 40, 304, 139, 1030, 568, 667, 832, 447, 315, 1280, 51, 854, 183, 2050, 865, 326, 1335, 1346, 1610, 1742, 1236, 2127, 1129, 1019, 1357, 1500, 62, 1885, 1621, 2138, 227, 337, 469, 1962, 1184, 755, 491]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [645, 1665, 2094, 2072, 1995, 909, 249, 777, 1522, 1808, 1401, 1544, 1269, 1533, 1041, 1173, 1063, 898, 436, 1709, 2039, 1907, 1511, 1313, 1577, 1379, 1247, 29, 216, 1489, 1302, 2105, 1632, 623, 106, 238, 1151, 348, 84, 821, 2017, 480, 766, 634, 1896, 293, 1863, 1074, 920, 117, 942, 2204, 678, 546, 810, 381, 2083, 2061, 260, 1676, 392, 788, 1423, 1555, 1951, 1687, 1819, 1195, 1291, 403, 1096, 1118, 1214, 590, 1324, 997, 1588, 1478, 1456, 2006, 1984, 1852, 1874, 1599, 1720, 1434, 73, 128, 205, 953, 1764, 425, 513, 1698, 2149, 161, 2028, 689, 733, 601, 975, 843, 1929, 711, 579, 2193, 1786, 1107, 1258, 172, 2116, 271, 2182, 535, 1731, 799, 1162, 700, 964, 1841, 2171, 1445, 1643, 986, 1775, 1973, 722, 1467, 458, 194, 557, 282, 1225, 150, 887, 414, 95, 1566, 1368, 1753, 2160, 370, 502, 1830, 1085, 359, 744, 656, 1052, 1140, 1797, 1008, 612, 876, 1940, 1918, 931, 524, 1654, 1412, 2215, 1390, 40, 304, 139, 1030, 568, 667, 832, 447, 315, 1280, 51, 854, 183, 2050, 865, 326, 1335, 1346, 1610, 1742, 1236, 2127, 1129, 1019, 1357, 1500, 62, 1885, 1621, 2138, 227, 337, 469, 1962, 1184, 755, 491]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {29,40,51,62,73,84,95,106,117,128,139,150,161,172,183,194,205,216,227,238,249,260,271,282,293,304,315,326,337,348,359,370,381,392,403,414,425,436,447,458,469,480,491,502,513,524,535,546,557,568,579,590,601,612,623,634,645,656,667,678,689,700,711,722,733,744,755,766,777,788,799,810,821,832,843,854,865,876,887,898,909,920,931,942,953,964,975,986,997,1008,1019,1030,1041,1052,1063,1074,1085,1096,1107,1118,1129,1140,1151,1162,1173,1184,1195,1214,1225,1236,1247,1258,1269,1280,1291,1302,1313,1324,1335,1346,1357,1368,1379,1390,1401,1412,1423,1434,1445,1456,1467,1478,1489,1500,1511,1522,1533,1544,1555,1566,1577,1588,1599,1610,1621,1632,1643,1654,1665,1676,1687,1698,1709,1720,1731,1742,1753,1764,1775,1786,1797,1808,1819,1830,1841,1852,1863,1874,1885,1896,1907,1918,1929,1940,1951,1962,1973,1984,1995,2006,2017,2028,2039,2050,2061,2072,2083,2094,2105,2116,2127,2138,2149,2160,2171,2182,2193,2204,2215}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    29  |             R = R + 2;  |      2  |                         0  |
    34  |  resetPlaceHolder_2();  |         |                            |
    40  |             R = R + 2;  |      2  |                         0  |
    45  |  resetPlaceHolder_2();  |         |                            |
    51  |             R = R + 2;  |      2  |                         0  |
    56  |  resetPlaceHolder_2();  |         |                            |
    62  |             R = R + 2;  |      2  |                         0  |
    67  |  resetPlaceHolder_2();  |         |                            |
    73  |             R = R + 2;  |      2  |                         0  |
    78  |  resetPlaceHolder_2();  |         |                            |
    84  |             R = R + 2;  |      2  |                         0  |
    89  |  resetPlaceHolder_2();  |         |                            |
    95  |             R = R + 2;  |      2  |                         0  |
   100  |  resetPlaceHolder_2();  |         |                            |
   106  |             R = R + 2;  |      2  |                         0  |
   111  |  resetPlaceHolder_2();  |         |                            |
   117  |             R = R + 2;  |      2  |                         0  |
   122  |  resetPlaceHolder_2();  |         |                            |
   128  |             R = R + 2;  |      2  |                         0  |
   133  |  resetPlaceHolder_2();  |         |                            |
   139  |             R = R + 2;  |      2  |                         0  |
   144  |  resetPlaceHolder_2();  |         |                            |
   150  |             R = R + 2;  |      2  |                         0  |
   155  |  resetPlaceHolder_2();  |         |                            |
   161  |             R = R + 2;  |      2  |                         0  |
   166  |  resetPlaceHolder_2();  |         |                            |
   172  |             R = R + 2;  |      2  |                         0  |
   177  |  resetPlaceHolder_2();  |         |                            |
   183  |             R = R + 2;  |      2  |                         0  |
   188  |  resetPlaceHolder_2();  |         |                            |
   194  |             R = R + 2;  |      2  |                         0  |
   199  |  resetPlaceHolder_2();  |         |                            |
   205  |             R = R + 2;  |      2  |                         0  |
   210  |  resetPlaceHolder_2();  |         |                            |
   216  |             R = R + 2;  |      2  |                         0  |
   221  |  resetPlaceHolder_2();  |         |                            |
   227  |             R = R + 2;  |      2  |                         0  |
   232  |  resetPlaceHolder_2();  |         |                            |
   238  |             R = R + 2;  |      2  |                         0  |
   243  |  resetPlaceHolder_2();  |         |                            |
   249  |             R = R + 2;  |      2  |                         0  |
   254  |  resetPlaceHolder_2();  |         |                            |
   260  |             R = R + 2;  |      2  |                         0  |
   265  |  resetPlaceHolder_2();  |         |                            |
   271  |             R = R + 2;  |      2  |                         0  |
   276  |  resetPlaceHolder_2();  |         |                            |
   282  |             R = R + 2;  |      2  |                         0  |
   287  |  resetPlaceHolder_2();  |         |                            |
   293  |             R = R + 2;  |      2  |                         0  |
   298  |  resetPlaceHolder_2();  |         |                            |
   304  |             R = R + 2;  |      2  |                         0  |
   309  |  resetPlaceHolder_2();  |         |                            |
   315  |             R = R + 2;  |      2  |                         0  |
   320  |  resetPlaceHolder_2();  |         |                            |
   326  |             R = R + 2;  |      2  |                         0  |
   331  |  resetPlaceHolder_2();  |         |                            |
   337  |             R = R + 2;  |      2  |                         0  |
   342  |  resetPlaceHolder_2();  |         |                            |
   348  |             R = R + 2;  |      2  |                         0  |
   353  |  resetPlaceHolder_2();  |         |                            |
   359  |             R = R + 2;  |      2  |                         0  |
   364  |  resetPlaceHolder_2();  |         |                            |
   370  |             R = R + 2;  |      2  |                         0  |
   375  |  resetPlaceHolder_2();  |         |                            |
   381  |             R = R + 2;  |      2  |                         0  |
   386  |  resetPlaceHolder_2();  |         |                            |
   392  |             R = R + 2;  |      2  |                         0  |
   397  |  resetPlaceHolder_2();  |         |                            |
   403  |             R = R + 2;  |      2  |                         0  |
   408  |  resetPlaceHolder_2();  |         |                            |
   414  |             R = R + 2;  |      2  |                         0  |
   419  |  resetPlaceHolder_2();  |         |                            |
   425  |             R = R + 2;  |      2  |                         0  |
   430  |  resetPlaceHolder_2();  |         |                            |
   436  |             R = R + 2;  |      2  |                         0  |
   441  |  resetPlaceHolder_2();  |         |                            |
   447  |             R = R + 2;  |      2  |                         0  |
   452  |  resetPlaceHolder_2();  |         |                            |
   458  |             R = R + 2;  |      2  |                         0  |
   463  |  resetPlaceHolder_2();  |         |                            |
   469  |             R = R + 2;  |      2  |                         0  |
   474  |  resetPlaceHolder_2();  |         |                            |
   480  |             R = R + 2;  |      2  |                         0  |
   485  |  resetPlaceHolder_2();  |         |                            |
   491  |             R = R + 2;  |      2  |                         0  |
   496  |  resetPlaceHolder_2();  |         |                            |
   502  |             R = R + 2;  |      2  |                         0  |
   507  |  resetPlaceHolder_2();  |         |                            |
   513  |             R = R + 2;  |      2  |                         0  |
   518  |  resetPlaceHolder_2();  |         |                            |
   524  |             R = R + 2;  |      2  |                         0  |
   529  |  resetPlaceHolder_2();  |         |                            |
   535  |             R = R + 2;  |      2  |                         0  |
   540  |  resetPlaceHolder_2();  |         |                            |
   546  |             R = R + 2;  |      2  |                         0  |
   551  |  resetPlaceHolder_2();  |         |                            |
   557  |             R = R + 2;  |      2  |                         0  |
   562  |  resetPlaceHolder_2();  |         |                            |
   568  |             R = R + 2;  |      2  |                         0  |
   573  |  resetPlaceHolder_2();  |         |                            |
   579  |             R = R + 2;  |      2  |                         0  |
   584  |  resetPlaceHolder_2();  |         |                            |
   590  |             R = R + 2;  |      2  |                         0  |
   595  |  resetPlaceHolder_2();  |         |                            |
   601  |             R = R + 2;  |      2  |                         0  |
   606  |  resetPlaceHolder_2();  |         |                            |
   612  |             R = R + 2;  |      2  |                         0  |
   617  |  resetPlaceHolder_2();  |         |                            |
   623  |             R = R + 2;  |      2  |                         0  |
   628  |  resetPlaceHolder_2();  |         |                            |
   634  |             R = R + 2;  |      2  |                         0  |
   639  |  resetPlaceHolder_2();  |         |                            |
   645  |             R = R + 2;  |      2  |                         0  |
   650  |  resetPlaceHolder_2();  |         |                            |
   656  |             R = R + 2;  |      2  |                         0  |
   661  |  resetPlaceHolder_2();  |         |                            |
   667  |             R = R + 2;  |      2  |                         0  |
   672  |  resetPlaceHolder_2();  |         |                            |
   678  |             R = R + 2;  |      2  |                         0  |
   683  |  resetPlaceHolder_2();  |         |                            |
   689  |             R = R + 2;  |      2  |                         0  |
   694  |  resetPlaceHolder_2();  |         |                            |
   700  |             R = R + 2;  |      2  |                         0  |
   705  |  resetPlaceHolder_2();  |         |                            |
   711  |             R = R + 2;  |      2  |                         0  |
   716  |  resetPlaceHolder_2();  |         |                            |
   722  |             R = R + 2;  |      2  |                         0  |
   727  |  resetPlaceHolder_2();  |         |                            |
   733  |             R = R + 2;  |      2  |                         0  |
   738  |  resetPlaceHolder_2();  |         |                            |
   744  |             R = R + 2;  |      2  |                         0  |
   749  |  resetPlaceHolder_2();  |         |                            |
   755  |             R = R + 2;  |      2  |                         0  |
   760  |  resetPlaceHolder_2();  |         |                            |
   766  |             R = R + 2;  |      2  |                         0  |
   771  |  resetPlaceHolder_2();  |         |                            |
   777  |             R = R + 2;  |      2  |                         0  |
   782  |  resetPlaceHolder_2();  |         |                            |
   788  |             R = R + 2;  |      2  |                         0  |
   793  |  resetPlaceHolder_2();  |         |                            |
   799  |             R = R + 2;  |      2  |                         0  |
   804  |  resetPlaceHolder_2();  |         |                            |
   810  |             R = R + 2;  |      2  |                         0  |
   815  |  resetPlaceHolder_2();  |         |                            |
   821  |             R = R + 2;  |      2  |                         0  |
   826  |  resetPlaceHolder_2();  |         |                            |
   832  |             R = R + 2;  |      2  |                         0  |
   837  |  resetPlaceHolder_2();  |         |                            |
   843  |             R = R + 2;  |      2  |                         0  |
   848  |  resetPlaceHolder_2();  |         |                            |
   854  |             R = R + 2;  |      2  |                         0  |
   859  |  resetPlaceHolder_2();  |         |                            |
   865  |             R = R + 2;  |      2  |                         0  |
   870  |  resetPlaceHolder_2();  |         |                            |
   876  |             R = R + 2;  |      2  |                         0  |
   881  |  resetPlaceHolder_2();  |         |                            |
   887  |             R = R + 2;  |      2  |                         0  |
   892  |  resetPlaceHolder_2();  |         |                            |
   898  |             R = R + 2;  |      2  |                         0  |
   903  |  resetPlaceHolder_2();  |         |                            |
   909  |             R = R + 2;  |      2  |                         0  |
   914  |  resetPlaceHolder_2();  |         |                            |
   920  |             R = R + 2;  |      2  |                         0  |
   925  |  resetPlaceHolder_2();  |         |                            |
   931  |             R = R + 2;  |      2  |                         0  |
   936  |  resetPlaceHolder_2();  |         |                            |
   942  |             R = R + 2;  |      2  |                         0  |
   947  |  resetPlaceHolder_2();  |         |                            |
   953  |             R = R + 2;  |      2  |                         0  |
   958  |  resetPlaceHolder_2();  |         |                            |
   964  |             R = R + 2;  |      2  |                         0  |
   969  |  resetPlaceHolder_2();  |         |                            |
   975  |             R = R + 2;  |      2  |                         0  |
   980  |  resetPlaceHolder_2();  |         |                            |
   986  |             R = R + 2;  |      2  |                         0  |
   991  |  resetPlaceHolder_2();  |         |                            |
   997  |             R = R + 2;  |      2  |                         0  |
  1002  |  resetPlaceHolder_2();  |         |                            |
  1008  |             R = R + 2;  |      2  |                         0  |
  1013  |  resetPlaceHolder_2();  |         |                            |
  1019  |             R = R + 2;  |      2  |                         0  |
  1024  |  resetPlaceHolder_2();  |         |                            |
  1030  |             R = R + 2;  |      2  |                         0  |
  1035  |  resetPlaceHolder_2();  |         |                            |
  1041  |             R = R + 2;  |      2  |                         0  |
  1046  |  resetPlaceHolder_2();  |         |                            |
  1052  |             R = R + 2;  |      2  |                         0  |
  1057  |  resetPlaceHolder_2();  |         |                            |
  1063  |             R = R + 2;  |      2  |                         0  |
  1068  |  resetPlaceHolder_2();  |         |                            |
  1074  |             R = R + 2;  |      2  |                         0  |
  1079  |  resetPlaceHolder_2();  |         |                            |
  1085  |             R = R + 2;  |      2  |                         0  |
  1090  |  resetPlaceHolder_2();  |         |                            |
  1096  |             R = R + 2;  |      2  |                         0  |
  1101  |  resetPlaceHolder_2();  |         |                            |
  1107  |             R = R + 2;  |      2  |                         0  |
  1112  |  resetPlaceHolder_2();  |         |                            |
  1118  |             R = R + 2;  |      2  |                         0  |
  1123  |  resetPlaceHolder_2();  |         |                            |
  1129  |             R = R + 2;  |      2  |                         0  |
  1134  |  resetPlaceHolder_2();  |         |                            |
  1140  |             R = R + 2;  |      2  |                         0  |
  1145  |  resetPlaceHolder_2();  |         |                            |
  1151  |             R = R + 2;  |      2  |                         0  |
  1156  |  resetPlaceHolder_2();  |         |                            |
  1162  |             R = R + 2;  |      2  |                         0  |
  1167  |  resetPlaceHolder_2();  |         |                            |
  1173  |             R = R + 2;  |      2  |                         0  |
  1178  |  resetPlaceHolder_2();  |         |                            |
  1184  |             R = R + 2;  |      2  |                         0  |
  1189  |  resetPlaceHolder_2();  |         |                            |
  1195  |             R = R + 1;  |      1  |                         0  |
  1200  |  resetPlaceHolder_1();  |         |                            |
  1214  |             R = R + 2;  |      2  |                         0  |
  1219  |  resetPlaceHolder_2();  |         |                            |
  1225  |             R = R + 2;  |      2  |                         0  |
  1230  |  resetPlaceHolder_2();  |         |                            |
  1236  |             R = R + 2;  |      2  |                         0  |
  1241  |  resetPlaceHolder_2();  |         |                            |
  1247  |             R = R + 2;  |      2  |                         0  |
  1252  |  resetPlaceHolder_2();  |         |                            |
  1258  |             R = R + 2;  |      2  |                         0  |
  1263  |  resetPlaceHolder_2();  |         |                            |
  1269  |             R = R + 2;  |      2  |                         0  |
  1274  |  resetPlaceHolder_2();  |         |                            |
  1280  |             R = R + 2;  |      2  |                         0  |
  1285  |  resetPlaceHolder_2();  |         |                            |
  1291  |             R = R + 2;  |      2  |                         0  |
  1296  |  resetPlaceHolder_2();  |         |                            |
  1302  |             R = R + 2;  |      2  |                         0  |
  1307  |  resetPlaceHolder_2();  |         |                            |
  1313  |             R = R + 2;  |      2  |                         0  |
  1318  |  resetPlaceHolder_2();  |         |                            |
  1324  |             R = R + 2;  |      2  |                         0  |
  1329  |  resetPlaceHolder_2();  |         |                            |
  1335  |             R = R + 2;  |      2  |                         0  |
  1340  |  resetPlaceHolder_2();  |         |                            |
  1346  |             R = R + 2;  |      2  |                         0  |
  1351  |  resetPlaceHolder_2();  |         |                            |
  1357  |             R = R + 2;  |      2  |                         0  |
  1362  |  resetPlaceHolder_2();  |         |                            |
  1368  |             R = R + 2;  |      2  |                         0  |
  1373  |  resetPlaceHolder_2();  |         |                            |
  1379  |             R = R + 2;  |      2  |                         0  |
  1384  |  resetPlaceHolder_2();  |         |                            |
  1390  |             R = R + 2;  |      2  |                         0  |
  1395  |  resetPlaceHolder_2();  |         |                            |
  1401  |             R = R + 2;  |      2  |                         0  |
  1406  |  resetPlaceHolder_2();  |         |                            |
  1412  |             R = R + 2;  |      2  |                         0  |
  1417  |  resetPlaceHolder_2();  |         |                            |
  1423  |             R = R + 2;  |      2  |                         0  |
  1428  |  resetPlaceHolder_2();  |         |                            |
  1434  |             R = R + 2;  |      2  |                         0  |
  1439  |  resetPlaceHolder_2();  |         |                            |
  1445  |             R = R + 2;  |      2  |                         0  |
  1450  |  resetPlaceHolder_2();  |         |                            |
  1456  |             R = R + 2;  |      2  |                         0  |
  1461  |  resetPlaceHolder_2();  |         |                            |
  1467  |             R = R + 2;  |      2  |                         0  |
  1472  |  resetPlaceHolder_2();  |         |                            |
  1478  |             R = R + 2;  |      2  |                         0  |
  1483  |  resetPlaceHolder_2();  |         |                            |
  1489  |             R = R + 2;  |      2  |                         0  |
  1494  |  resetPlaceHolder_2();  |         |                            |
  1500  |             R = R + 2;  |      2  |                         0  |
  1505  |  resetPlaceHolder_2();  |         |                            |
  1511  |             R = R + 2;  |      2  |                         0  |
  1516  |  resetPlaceHolder_2();  |         |                            |
  1522  |             R = R + 2;  |      2  |                         0  |
  1527  |  resetPlaceHolder_2();  |         |                            |
  1533  |             R = R + 2;  |      2  |                         0  |
  1538  |  resetPlaceHolder_2();  |         |                            |
  1544  |             R = R + 2;  |      2  |                         0  |
  1549  |  resetPlaceHolder_2();  |         |                            |
  1555  |             R = R + 2;  |      2  |                         0  |
  1560  |  resetPlaceHolder_2();  |         |                            |
  1566  |             R = R + 2;  |      2  |                         0  |
  1571  |  resetPlaceHolder_2();  |         |                            |
  1577  |             R = R + 2;  |      2  |                         0  |
  1582  |  resetPlaceHolder_2();  |         |                            |
  1588  |             R = R + 2;  |      2  |                         0  |
  1593  |  resetPlaceHolder_2();  |         |                            |
  1599  |             R = R + 2;  |      2  |                         0  |
  1604  |  resetPlaceHolder_2();  |         |                            |
  1610  |             R = R + 2;  |      2  |                         0  |
  1615  |  resetPlaceHolder_2();  |         |                            |
  1621  |             R = R + 2;  |      2  |                         0  |
  1626  |  resetPlaceHolder_2();  |         |                            |
  1632  |             R = R + 2;  |      2  |                         0  |
  1637  |  resetPlaceHolder_2();  |         |                            |
  1643  |             R = R + 2;  |      2  |                         0  |
  1648  |  resetPlaceHolder_2();  |         |                            |
  1654  |             R = R + 2;  |      2  |                         0  |
  1659  |  resetPlaceHolder_2();  |         |                            |
  1665  |             R = R + 2;  |      2  |                         0  |
  1670  |  resetPlaceHolder_2();  |         |                            |
  1676  |             R = R + 2;  |      2  |                         0  |
  1681  |  resetPlaceHolder_2();  |         |                            |
  1687  |             R = R + 2;  |      2  |                         0  |
  1692  |  resetPlaceHolder_2();  |         |                            |
  1698  |             R = R + 2;  |      2  |                         0  |
  1703  |  resetPlaceHolder_2();  |         |                            |
  1709  |             R = R + 2;  |      2  |                         0  |
  1714  |  resetPlaceHolder_2();  |         |                            |
  1720  |             R = R + 2;  |      2  |                         0  |
  1725  |  resetPlaceHolder_2();  |         |                            |
  1731  |             R = R + 2;  |      2  |                         0  |
  1736  |  resetPlaceHolder_2();  |         |                            |
  1742  |             R = R + 2;  |      2  |                         0  |
  1747  |  resetPlaceHolder_2();  |         |                            |
  1753  |             R = R + 2;  |      2  |                         0  |
  1758  |  resetPlaceHolder_2();  |         |                            |
  1764  |             R = R + 2;  |      2  |                         0  |
  1769  |  resetPlaceHolder_2();  |         |                            |
  1775  |             R = R + 2;  |      2  |                         0  |
  1780  |  resetPlaceHolder_2();  |         |                            |
  1786  |             R = R + 2;  |      2  |                         0  |
  1791  |  resetPlaceHolder_2();  |         |                            |
  1797  |             R = R + 2;  |      2  |                         0  |
  1802  |  resetPlaceHolder_2();  |         |                            |
  1808  |             R = R + 2;  |      2  |                         0  |
  1813  |  resetPlaceHolder_2();  |         |                            |
  1819  |             R = R + 2;  |      2  |                         0  |
  1824  |  resetPlaceHolder_2();  |         |                            |
  1830  |             R = R + 2;  |      2  |                         0  |
  1835  |  resetPlaceHolder_2();  |         |                            |
  1841  |             R = R + 2;  |      2  |                         0  |
  1846  |  resetPlaceHolder_2();  |         |                            |
  1852  |             R = R + 2;  |      2  |                         0  |
  1857  |  resetPlaceHolder_2();  |         |                            |
  1863  |             R = R + 2;  |      2  |                         0  |
  1868  |  resetPlaceHolder_2();  |         |                            |
  1874  |             R = R + 2;  |      2  |                         0  |
  1879  |  resetPlaceHolder_2();  |         |                            |
  1885  |             R = R + 2;  |      2  |                         0  |
  1890  |  resetPlaceHolder_2();  |         |                            |
  1896  |             R = R + 2;  |      2  |                         0  |
  1901  |  resetPlaceHolder_2();  |         |                            |
  1907  |             R = R + 2;  |      2  |                         0  |
  1912  |  resetPlaceHolder_2();  |         |                            |
  1918  |             R = R + 2;  |      2  |                         0  |
  1923  |  resetPlaceHolder_2();  |         |                            |
  1929  |             R = R + 2;  |      2  |                         0  |
  1934  |  resetPlaceHolder_2();  |         |                            |
  1940  |             R = R + 2;  |      2  |                         0  |
  1945  |  resetPlaceHolder_2();  |         |                            |
  1951  |             R = R + 2;  |      2  |                         0  |
  1956  |  resetPlaceHolder_2();  |         |                            |
  1962  |             R = R + 2;  |      2  |                         0  |
  1967  |  resetPlaceHolder_2();  |         |                            |
  1973  |             R = R + 2;  |      2  |                         0  |
  1978  |  resetPlaceHolder_2();  |         |                            |
  1984  |             R = R + 2;  |      2  |                         0  |
  1989  |  resetPlaceHolder_2();  |         |                            |
  1995  |             R = R + 2;  |      2  |                         0  |
  2000  |  resetPlaceHolder_2();  |         |                            |
  2006  |             R = R + 2;  |      2  |                         0  |
  2011  |  resetPlaceHolder_2();  |         |                            |
  2017  |             R = R + 2;  |      2  |                         0  |
  2022  |  resetPlaceHolder_2();  |         |                            |
  2028  |             R = R + 2;  |      2  |                         0  |
  2033  |  resetPlaceHolder_2();  |         |                            |
  2039  |             R = R + 2;  |      2  |                         0  |
  2044  |  resetPlaceHolder_2();  |         |                            |
  2050  |             R = R + 2;  |      2  |                         0  |
  2055  |  resetPlaceHolder_2();  |         |                            |
  2061  |             R = R + 2;  |      2  |                         0  |
  2066  |  resetPlaceHolder_2();  |         |                            |
  2072  |             R = R + 2;  |      2  |                         0  |
  2077  |  resetPlaceHolder_2();  |         |                            |
  2083  |             R = R + 2;  |      2  |                         0  |
  2088  |  resetPlaceHolder_2();  |         |                            |
  2094  |             R = R + 2;  |      2  |                         0  |
  2099  |  resetPlaceHolder_2();  |         |                            |
  2105  |             R = R + 2;  |      2  |                         0  |
  2110  |  resetPlaceHolder_2();  |         |                            |
  2116  |             R = R + 2;  |      2  |                         0  |
  2121  |  resetPlaceHolder_2();  |         |                            |
  2127  |             R = R + 2;  |      2  |                         0  |
  2132  |  resetPlaceHolder_2();  |         |                            |
  2138  |             R = R + 2;  |      2  |                         0  |
  2143  |  resetPlaceHolder_2();  |         |                            |
  2149  |             R = R + 2;  |      2  |                         0  |
  2154  |  resetPlaceHolder_2();  |         |                            |
  2160  |             R = R + 2;  |      2  |                         0  |
  2165  |  resetPlaceHolder_2();  |         |                            |
  2171  |             R = R + 2;  |      2  |                         0  |
  2176  |  resetPlaceHolder_2();  |         |                            |
  2182  |             R = R + 2;  |      2  |                         0  |
  2187  |  resetPlaceHolder_2();  |         |                            |
  2193  |             R = R + 2;  |      2  |                         0  |
  2198  |  resetPlaceHolder_2();  |         |                            |
  2204  |             R = R + 2;  |      2  |                         0  |
  2209  |  resetPlaceHolder_2();  |         |                            |
  2215  |             R = R + 1;  |      1  |                         0  |
  2220  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_2(); -> // reset R0
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> // reset R0
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java

real	0m10.657s
user	0m28.480s
sys	0m1.539s

2023-01-10 20:17:11,577 INFO     Generated the expected decomposition
2023-01-10 20:17:11,577 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:17:21,599 INFO     Done. Execution time: 10.021360874176025 seconds
2023-01-10 20:17:21,599 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendDisplayNames.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * sorted) + 8)) || ((0 + (D0p * C0)) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (sorted + (2 * sorted))) || ((0 + (D0p * C0)) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendDisplayNames  {
  void execute(int sorted)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporarySorted = 0;
    int lastIndexOfSorted = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * sorted) + 8)) || ((0 + (D0p * C0)) == ((8 * sorted) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (sorted + (2 * sorted))) || ((0 + (D0p * C0)) == (sorted + (2 * sorted))));
    if ((sorted < 1) || (sorted == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int entry = 0;
    int i = 0;
    while (i < sorted)
    {
      {
        temporarySorted = ndInt2(lastIndexOfSorted, sorted);
        entry = temporarySorted - lastIndexOfSorted;
        lastIndexOfSorted = temporarySorted;
      }
      int j = 0;
      while (j < entry)
      {
        D0 = D0 + 2;
        j = j + 1;
      }
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) (+ sorted (* 2 sorted)))
    (= (+ 0 (* D0p C0)) (+ sorted (* 2 sorted))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) (+ sorted (* 2 sorted)))
    (= (+ 0 (* D0p C0)) (+ sorted (* 2 sorted))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 sorted)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) (+ sorted (* 2 sorted)))
    (= (+ 0 (* D0p C0)) (+ sorted (* 2 sorted))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendDisplayNames`)
INFO  brbo.BrboMain - Time consumption: `8.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2017-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2017-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.016s
user	0m21.423s
sys	0m2.298s

2023-01-10 20:17:21,599 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-10 20:17:21,599 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:17:23,295 INFO     Done. Execution time: 1.6960010528564453 seconds
2023-01-10 20:17:23,295 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
INFO  brbo.BrboMain$ - Failed to fuzz program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
ERROR brbo.BrboMain$ - Reason: java.lang.Exception: Unsupported binary tree: `value / 10`

real	0m1.690s
user	0m3.096s
sys	0m0.154s

2023-01-10 20:17:23,295 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
2023-01-10 20:17:24,962 INFO     Done. Execution time: 1.6666994094848633 seconds
2023-01-10 20:17:24,962 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendFullDigits`
ERROR brbo.BrboMain$ - Failed to decompose program /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java
java.lang.Exception: Unsupported binary tree: `value / 10`
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:212)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:182)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:105)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:130)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:130)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:153)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:130)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:130)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:145)
	at brbo.frontend.TargetProgram$Translate.toAST(TargetProgram.scala:88)
	at brbo.frontend.TargetProgram$Translate.$anonfun$toASTInternal$1(TargetProgram.scala:130)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:285)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at scala.collection.IterableLike.foreach(IterableLike.scala:74)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:73)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:56)
	at scala.collection.TraversableLike.map(TraversableLike.scala:285)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:278)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at brbo.frontend.TargetProgram$Translate.toASTInternal(TargetProgram.scala:130)
	at brbo.frontend.TargetProgram$.toBrboFunction(TargetProgram.scala:70)
	at brbo.frontend.TargetProgram.<init>(TargetProgram.scala:51)
	at brbo.frontend.BasicProcessor$.getTargetProgram(BasicProcessor.scala:139)
	at brbo.BrboMain$.$anonfun$runBatch$1(BrboMain.scala:104)
	at brbo.BrboMain$.$anonfun$runBatch$1$adapted(BrboMain.scala:87)
	at scala.collection.immutable.List.foreach(List.scala:431)
	at brbo.BrboMain$.runBatch(BrboMain.scala:87)
	at brbo.BrboMain$.$anonfun$main$6(BrboMain.scala:63)
	at brbo.BrboMain$.$anonfun$main$6$adapted(BrboMain.scala:62)
	at scala.collection.Iterator.foreach(Iterator.scala:943)
	at scala.collection.Iterator.foreach$(Iterator.scala:943)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1431)
	at brbo.BrboMain$.$anonfun$main$5(BrboMain.scala:62)
	at brbo.BrboMain$.$anonfun$main$5$adapted(BrboMain.scala:58)
	at scala.collection.immutable.Map$Map1.foreach(Map.scala:179)
	at brbo.BrboMain$.main(BrboMain.scala:58)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.660s
user	0m3.160s
sys	0m0.235s

2023-01-10 20:17:24,962 INFO     Generated the expected decomposition
2023-01-10 20:17:24,962 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:17:25,988 INFO     Done. Execution time: 1.0253398418426514 seconds
2023-01-10 20:17:25,988 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java`
Exception in thread "main" java.io.FileNotFoundException: /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendFullDigits.java (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at scala.io.Source$.fromFile(Source.scala:94)
	at scala.io.Source$.fromFile(Source.scala:79)
	at scala.io.Source$.fromFile(Source.scala:57)
	at brbo.BrboMain$.readFromFile(BrboMain.scala:231)
	at brbo.BrboMain$.$anonfun$main$4(BrboMain.scala:63)
	at scala.collection.immutable.List.map(List.scala:293)
	at brbo.BrboMain$.main(BrboMain.scala:60)
	at brbo.BrboMain.main(BrboMain.scala)

real	0m1.020s
user	0m1.714s
sys	0m0.117s

2023-01-10 20:17:25,988 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-10 20:17:25,988 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:17:51,566 INFO     Done. Execution time: 25.578038692474365 seconds
2023-01-10 20:17:51,567 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.java -d /tmp/qfuzz2779563357021027065/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2779563357021027065/bin -o /tmp/qfuzz2779563357021027065/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2779563357021027065/bin
Found file /tmp/qfuzz2779563357021027065/bin/brbo/fuzz/drivers/AppendQuotedString.class
Found file /tmp/qfuzz2779563357021027065/bin/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedString.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/brbo/fuzz/drivers/AppendQuotedString.class
Instrumenting class: brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/brbo/fuzz/drivers/AppendQuotedStringQFuzzDriver.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2779563357021027065/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2779563357021027065/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendQuotedStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2779563357021027065/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2779563357021027065/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 125443 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz2779563357021027065/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.572s
user	0m10.942s
sys	0m0.706s

2023-01-10 20:17:51,567 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
2023-01-10 20:17:53,323 INFO     Done. Execution time: 1.756464958190918 seconds
2023-01-10 20:17:53,323 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendQuotedString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendQuotedString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.749s
user	0m3.344s
sys	0m0.167s

2023-01-10 20:17:53,324 INFO     Generated the expected decomposition
2023-01-10 20:17:53,324 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:18:15,464 INFO     Done. Execution time: 22.14010763168335 seconds
2023-01-10 20:18:15,464 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendQuotedString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * pattern) + (8 * pos)) + 8)) || ((0 + (D0p * C0)) == (((8 * pattern) + (8 * pos)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < pattern) || ((0 + (D0p * C0)) == pattern));
    if (((((pattern < 0) || (pattern == 0)) || ((pos < 0) || (pos == 0))) || (pattern < pos)) || !((((stopIndex < pattern) || (stopIndex == pattern)) && !((stopIndex < pos)))))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int R = 0;
    int start = pos;
    int lastHold = start;
    int i = pos;
    while (i < pattern)
    {
      if (i == stopIndex)
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendQuotedString  {
  void execute(int pattern, int stopIndex, int pos)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * pattern) + (8 * pos)) + 8)) || ((0 + (D0p * C0)) == (((8 * pattern) + (8 * pos)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < pattern) || ((0 + (D0p * C0)) == pattern));
    if (((((pattern < 0) || (pattern == 0)) || ((pos < 0) || (pos == 0))) || (pattern < pos)) || !((((stopIndex < pattern) || (stopIndex == pattern)) && !((stopIndex < pos)))))
    {
      return;
    }
    else
    {
      ;
    }
    int appendTo = 0;
    int R = 0;
    int start = pos;
    int lastHold = start;
    int i = pos;
    while (i < pattern)
    {
      if (i == stopIndex)
      {
        pos = pos + 1;
        appendTo = appendTo + (pos - lastHold);
        D0 = D0 + (pos - lastHold);
        break;
      }
      else
      {
        ;
      }
      pos = pos + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 stopIndex)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendQuotedString`)
INFO  brbo.BrboMain - Time consumption: `20.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2017-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2017-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m22.135s
user	0m34.152s
sys	0m5.292s

2023-01-10 20:18:15,464 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-10 20:18:15,464 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:18:41,114 INFO     Done. Execution time: 25.64991593360901 seconds
2023-01-10 20:18:41,114 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.java -d /tmp/qfuzz2575214576111484413/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2575214576111484413/bin -o /tmp/qfuzz2575214576111484413/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2575214576111484413/bin
Found file /tmp/qfuzz2575214576111484413/bin/brbo/fuzz/drivers/AppendRecursiveTypes.class
Found file /tmp/qfuzz2575214576111484413/bin/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypes.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypes.class
Instrumenting class: brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/brbo/fuzz/drivers/AppendRecursiveTypesQFuzzDriver.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2575214576111484413/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2575214576111484413/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.AppendRecursiveTypesQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2575214576111484413/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2575214576111484413/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 122214 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2575214576111484413/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.643s
user	0m10.781s
sys	0m0.715s

2023-01-10 20:18:41,114 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
2023-01-10 20:18:42,926 INFO     Done. Execution time: 1.8114051818847656 seconds
2023-01-10 20:18:42,926 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {argumentsFiltered, i, j, k, recursiveTypeIndexes}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing AppendRecursiveTypes] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.805s
user	0m3.294s
sys	0m0.190s

2023-01-10 20:18:42,926 INFO     Generated the expected decomposition
2023-01-10 20:18:42,926 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:19:19,829 INFO     Done. Execution time: 36.90240216255188 seconds
2023-01-10 20:19:19,829 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/AppendRecursiveTypes.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int R = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      D0 = D0 + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      D0 = D0 + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        D1 = D1 + sep2;
        builder = builder + 1;
        D0 = D0 + 1;
        k = k + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class AppendRecursiveTypes  {
  void execute(int argumentTypes, int recursiveTypeIndexes, int d)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((8 * recursiveTypeIndexes) + (8 * argumentTypes)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((recursiveTypeIndexes + 1) + (argumentTypes * 3))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((recursiveTypeIndexes + 1) + (argumentTypes * 3))));
    if ((((argumentTypes < 0) || (argumentTypes == 0)) || ((recursiveTypeIndexes < 0) || (recursiveTypeIndexes == 0))) || !((((d < recursiveTypeIndexes) || (d == recursiveTypeIndexes)) && !((d < 0)))))
    {
      return;
    }
    else
    {
      ;
    }
    int builder = 0;
    int R = 0;
    int i = 0;
    while (i < recursiveTypeIndexes)
    {
      int sep = 2;
      builder = builder + 1;
      D0 = D0 + 1;
      int j = 1;
      while (j < 1)
      {
        builder = builder + sep;
        R = R + sep;
        builder = builder + 1;
        R = R + 1;
        j = j + 1;
      }
      i = i + 1;
    }
    int argumentsFiltered = argumentTypes - d;
    if (!((argumentsFiltered < 0)) && !((argumentsFiltered == 0)))
    {
      builder = builder + 1;
      D0 = D0 + 1;
      int sep2 = 2;
      int k = 1;
      while (k < argumentsFiltered)
      {
        builder = builder + sep2;
        D1 = D1 + sep2;
        builder = builder + 1;
        D0 = D0 + 1;
        k = k + 1;
        D1p = D1;
        D1 = 0;
        C1 = C1 + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 argumentTypes) (* 1 1 recursiveTypeIndexes)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 argumentTypes)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3)))
    (= (+ 0 (* D0p C0) (* D1p C1))
       (+ recursiveTypeIndexes 1 (* argumentTypes 3))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.AppendRecursiveTypes`)
INFO  brbo.BrboMain - Time consumption: `35.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2018-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2018-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m36.897s
user	1m32.333s
sys	0m11.716s

2023-01-10 20:19:19,829 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-10 20:19:19,829 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:19:45,507 INFO     Done. Execution time: 25.67766523361206 seconds
2023-01-10 20:19:45,507 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DbgPrintQFuzzDriver.java -d /tmp/qfuzz4398451957446217877/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4398451957446217877/bin -o /tmp/qfuzz4398451957446217877/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4398451957446217877/bin
Found file /tmp/qfuzz4398451957446217877/bin/brbo/fuzz/drivers/DbgPrint.class
Found file /tmp/qfuzz4398451957446217877/bin/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DbgPrint.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/brbo/fuzz/drivers/DbgPrint.class
Instrumenting class: brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/brbo/fuzz/drivers/DbgPrintQFuzzDriver.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4398451957446217877/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4398451957446217877/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DbgPrintQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4398451957446217877/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4398451957446217877/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 112414 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m112k to 112k us (average: 112k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4398451957446217877/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
1; /tmp/qfuzz4398451957446217877/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4398451957446217877/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4398451957446217877/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 31, 34, 122, 195, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.672s
user	0m11.220s
sys	0m0.728s

2023-01-10 20:19:45,507 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
2023-01-10 20:19:50,473 INFO     Done. Execution time: 4.965764045715332 seconds
2023-01-10 20:19:50,473 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DbgPrint`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, src}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DbgPrint] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                    
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  src  |
------------------------------------------------------------------------------------
     9  |                        int sb = 0;  |         |     |     |   0  |    2  |
    11  |                         int R = 0;  |         |  0  |     |   0  |    2  |
    12  |      // mostPreciseBound(R <= src)  |         |  0  |     |   0  |    2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |    2  |
    15  |                         int i = 0;  |         |  0  |  0  |   0  |    2  |
    22  |                       sb = sb + 1;  |         |  0  |  0  |   1  |    2  |
    25  |                         R = R + 1;  |      1  |  1  |  0  |   1  |    2  |
    29  |                         i = i + 1;  |         |  1  |  1  |   1  |    2  |
    30  |              resetPlaceHolder_1();  |         |  1  |  1  |   1  |    2  |
    37  |                       sb = sb + 1;  |         |  1  |  1  |   2  |    2  |
    40  |                         R = R + 1;  |      1  |  2  |  1  |   2  |    2  |
    44  |                         i = i + 1;  |         |  2  |  2  |   2  |    2  |
    45  |              resetPlaceHolder_1();  |         |  2  |  2  |   2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java

real	0m4.959s
user	0m8.846s
sys	0m1.525s

2023-01-10 20:19:50,474 INFO     Generated the expected decomposition
2023-01-10 20:19:50,474 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:19:57,554 INFO     Done. Execution time: 7.080440521240234 seconds
2023-01-10 20:19:57,554 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DbgPrint.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * src) + 8)) || ((0 + (D0p * C0)) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < src) || ((0 + (D0p * C0)) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DbgPrint  {
  void execute(int src)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * src) + 8)) || ((0 + (D0p * C0)) == ((8 * src) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < src) || ((0 + (D0p * C0)) == src));
    if ((src < 0) || (src == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < src)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) src) (= (+ 0 (* D0p C0)) src))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) src) (= (+ 0 (* D0p C0)) src))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 src)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) src) (= (+ 0 (* D0p C0)) src))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DbgPrint`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2019-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2019-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.075s
user	0m14.832s
sys	0m2.245s

2023-01-10 20:19:57,555 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-10 20:19:57,555 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:20:23,549 INFO     Done. Execution time: 25.99438786506653 seconds
2023-01-10 20:20:23,549 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.java -d /tmp/qfuzz5435909889719839550/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5435909889719839550/bin -o /tmp/qfuzz5435909889719839550/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5435909889719839550/bin
Found file /tmp/qfuzz5435909889719839550/bin/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Found file /tmp/qfuzz5435909889719839550/bin/brbo/fuzz/drivers/DiffResultToString.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/brbo/fuzz/drivers/DiffResultToStringQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/brbo/fuzz/drivers/DiffResultToString.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5435909889719839550/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5435909889719839550/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DiffResultToStringQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5435909889719839550/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5435909889719839550/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 33, exec speed = 126527 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m33 to 33 bits (average: 33.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000000,orig:example.txt; 5; 68.00; [81.00,149.00,235.00,321.00,401.00]
2; /tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 200.00; [15.00,215.00]
5; /tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64; 3; 170.00; [15.00,195.00,365.00]
7; /tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8; 5; 14.00; [23.00,235.00,367.00,387.00,401.00]
10; /tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64; 5; 26.00; [47.00,85.00,255.00,281.00,369.00]
18; /tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 5; 26.00; [23.00,147.00,253.00,283.00,309.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
/tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
/tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
/tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
/tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(84, 175)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 176, 4, 186, 62, 62, 4, 14)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(171, 133, 35, 120, 16, 74, 130, 104, 61)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5435909889719839550/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(141, 134, 66, 119, 4, 127, 95, 14, 12, 19, 19, 56, 8, 57)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: []
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [84,175]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,176,4,186]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [171,133,35,120,16]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [141,134,66,119,4]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.987s
user	0m12.117s
sys	0m0.809s

2023-01-10 20:20:23,550 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
2023-01-10 20:20:26,483 INFO     Done. Execution time: 2.9335029125213623 seconds
2023-01-10 20:20:26,483 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DiffResultToString`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DiffResultToString] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([84,175])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,176,4,186])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([171,133,35,120,16])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([141,134,66,119,4])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 9):
                                         
 Index  |  Commands  |  Costs  |  diff  |
-----------------------------------------
     8  |   return;  |         |    []  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

If we are printing a decomposed use, then we have failed to decompose `R = R + chunk;`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java	2023-01-10 17:12:24.477251388 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java.actual	2023-01-10 20:20:26.338082014 -0700
@@ -2,13 +2,10 @@
   void execute(int diff) 
   {
     int BOOLEAN_SEPARATOR = 102;
-    int C0 = -1;
-    int D0 = 0;
-    int D0p = 0;
     int temporaryDiff = 0;
     int lastIndexOfDiff = 0;
-    lessPreciseBound(((0 + (D0p * C0)) < ((8 * diff) + 8)) || ((0 + (D0p * C0)) == ((8 * diff) + 8)));
-    mostPreciseBound(((0 + (D0p * C0)) < diff) || ((0 + (D0p * C0)) == diff));
+    lessPreciseBound((0 < ((8 * diff) + 8)) || (0 == ((8 * diff) + 8)));
+    mostPreciseBound((0 < diff) || (0 == diff));
     if ((diff < 1) || (diff == 1))
     {
       return;
@@ -31,9 +28,9 @@
         chunk = temporaryDiff - lastIndexOfDiff;
         lastIndexOfDiff = temporaryDiff;
       }
-      D0 = D0 + chunk;
+      R = R + chunk;
       i = i + 1;
-      // reset R0
+      // resetPlaceHolder_1();
     }
   }
   // Declare these methods such that these generated code can be parsed


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java

real	0m2.923s
user	0m5.665s
sys	0m0.286s

2023-01-10 20:20:26,484 INFO     Overwrite the existing decomposition
2023-01-10 20:20:26,484 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
2023-01-10 20:20:26,486 INFO     Done. Execution time: 0.001809835433959961 seconds
2023-01-10 20:20:26,486 INFO     Output: 
2023-01-10 20:20:26,486 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:20:28,356 INFO     Done. Execution time: 1.870213270187378 seconds
2023-01-10 20:20:28,356 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DiffResultToString.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((0 < ((8 * diff) + 8)) || (0 == ((8 * diff) + 8)));
    mostPreciseBound((0 < diff) || (0 == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DiffResultToString  {
  void execute(int diff)
  {

    int BOOLEAN_SEPARATOR = 102;
    int temporaryDiff = 0;
    int lastIndexOfDiff = 0;
    lessPreciseBound((0 < ((8 * diff) + 8)) || (0 == ((8 * diff) + 8)));
    mostPreciseBound((0 < diff) || (0 == diff));
    if ((diff < 1) || (diff == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int lhsBuilder = 0;
    int rhsBuilder = 0;
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < diff)
    {
      {
        temporaryDiff = ndInt2(lastIndexOfDiff, diff);
        chunk = temporaryDiff - lastIndexOfDiff;
        lastIndexOfDiff = temporaryDiff;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< 0 diff) (= 0 diff))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< 0 diff) (= 0 diff))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< 0 diff) (= 0 diff))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DiffResultToString`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2020-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2020-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.865s
user	0m3.332s
sys	0m0.221s

2023-01-10 20:20:28,356 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-10 20:20:28,356 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:20:54,118 INFO     Done. Execution time: 25.76089835166931 seconds
2023-01-10 20:20:54,118 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/DurationFormatQFuzzDriver.java -d /tmp/qfuzz528415444207237539/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz528415444207237539/bin -o /tmp/qfuzz528415444207237539/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz528415444207237539/bin
Found file /tmp/qfuzz528415444207237539/bin/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
Found file /tmp/qfuzz528415444207237539/bin/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormat.class
File written: /tmp/qfuzz528415444207237539/bin-instr/brbo/fuzz/drivers/DurationFormat.class
Instrumenting class: brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz528415444207237539/bin-instr/brbo/fuzz/drivers/DurationFormatQFuzzDriver.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz528415444207237539/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz528415444207237539/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.DurationFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz528415444207237539/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz528415444207237539/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 109840 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m109k to 109k us (average: 109k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
5; /tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta; 4; 7.00; [18.00,25.00,35.00,59.00]
6; /tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+partition,+delta; 7; 10.00; [81.00,108.00,142.00,235.00,319.00,389.00,399.00]
7; /tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 7; 11.00; [71.00,83.00,94.00,282.00,317.00,387.00,399.00]
9; /tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta; 7; 16.00; [57.00,74.00,201.00,235.00,358.00,389.00,405.00]
15; /tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64; 3; 7.00; [16.00,23.00,345.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta
/tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+partition,+delta
/tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(5, 22, 5, 5, 5, 5, 5, 5, 5, 56, 190)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:2,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 187, 110, 33, 152, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 151, 28, 186, 34, 43, 137, 6, 53, 186, 126, 8, 186, 186, 68, 186, 53, 153, 186, 10, 186, 186, 194, 179)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 93, 21, 187, 110, 33, 175, 11, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz528415444207237539/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 4, 4, 4, 4, 4, 4, 4, 165, 4, 4, 4, 4, 4, 191, 63, 4, 69, 25, 25, 25, 25, 163, 25, 81, 87, 4, 93, 25, 36, 175, 73, 13, 175, 195, 52, 167)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [5,22,5,5,5], 5, 5
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,187,110,33,152], 67, 50
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,151,28,186,34], 43, 137
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [190,93,21,187,110], 33, 175
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,4,4,4,4], 4, 4
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.755s
user	0m10.962s
sys	0m0.726s

2023-01-10 20:20:54,118 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
2023-01-10 20:21:00,651 INFO     Done. Execution time: 6.5335822105407715 seconds
2023-01-10 20:21:00,652 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.DurationFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing DurationFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([5,22,5,5,5], 5, 5)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 5 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,187,110,33,152], 67, 50)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,151,28,186,34], 43, 137)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([190,93,21,187,110], 33, 175)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([160,4,4,4,4], 4, 4)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 5 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 135):
                                                                                                                      
 Index  |              Commands               |  Costs  |  R   |  chunk  |  i  |  months  |     tokens     |  years  |
----------------------------------------------------------------------------------------------------------------------
    25  |                         int R = 0;  |         |   0  |         |     |       5  |  [5,22,5,5,5]  |      5  |
    26  |  // mostPreciseBound(R <= array...  |         |   0  |         |     |       5  |  [5,22,5,5,5]  |      5  |
    27  |  // lessPreciseBound(R <= MAX *...  |         |   0  |         |     |       5  |  [5,22,5,5,5]  |      5  |
    29  |                     int chunk = 0;  |         |   0  |      0  |     |       5  |  [5,22,5,5,5]  |      5  |
    31  |                         int i = 0;  |         |   0  |      0  |  0  |       5  |  [5,22,5,5,5]  |      5  |
    37  |      chunk = arrayRead(tokens, i);  |         |   0  |      5  |  0  |       5  |  [5,22,5,5,5]  |      5  |
    40  |                     R = R + chunk;  |      5  |   5  |      5  |  0  |       5  |  [5,22,5,5,5]  |      5  |
    43  |                     R = R + years;  |      5  |  10  |      5  |  0  |       5  |  [5,22,5,5,5]  |      5  |
    46  |                    R = R + months;  |      5  |  15  |      5  |  0  |       5  |  [5,22,5,5,5]  |      5  |
    50  |                         i = i + 1;  |         |  15  |      5  |  1  |       5  |  [5,22,5,5,5]  |      5  |
    51  |              resetPlaceHolder_1();  |         |  15  |      5  |  1  |       5  |  [5,22,5,5,5]  |      5  |
    57  |      chunk = arrayRead(tokens, i);  |         |  15  |     22  |  1  |       5  |  [5,22,5,5,5]  |      5  |
    60  |                     R = R + chunk;  |     22  |  37  |     22  |  1  |       5  |  [5,22,5,5,5]  |      5  |
    63  |                     R = R + years;  |      5  |  42  |     22  |  1  |       5  |  [5,22,5,5,5]  |      5  |
    66  |                    R = R + months;  |      5  |  47  |     22  |  1  |       5  |  [5,22,5,5,5]  |      5  |
    70  |                         i = i + 1;  |         |  47  |     22  |  2  |       5  |  [5,22,5,5,5]  |      5  |
    71  |              resetPlaceHolder_1();  |         |  47  |     22  |  2  |       5  |  [5,22,5,5,5]  |      5  |
    77  |      chunk = arrayRead(tokens, i);  |         |  47  |      5  |  2  |       5  |  [5,22,5,5,5]  |      5  |
    80  |                     R = R + chunk;  |      5  |  52  |      5  |  2  |       5  |  [5,22,5,5,5]  |      5  |
    83  |                     R = R + years;  |      5  |  57  |      5  |  2  |       5  |  [5,22,5,5,5]  |      5  |
    86  |                    R = R + months;  |      5  |  62  |      5  |  2  |       5  |  [5,22,5,5,5]  |      5  |
    90  |                         i = i + 1;  |         |  62  |      5  |  3  |       5  |  [5,22,5,5,5]  |      5  |
    91  |              resetPlaceHolder_1();  |         |  62  |      5  |  3  |       5  |  [5,22,5,5,5]  |      5  |
    97  |      chunk = arrayRead(tokens, i);  |         |  62  |      5  |  3  |       5  |  [5,22,5,5,5]  |      5  |
   100  |                     R = R + chunk;  |      5  |  67  |      5  |  3  |       5  |  [5,22,5,5,5]  |      5  |
   103  |                     R = R + years;  |      5  |  72  |      5  |  3  |       5  |  [5,22,5,5,5]  |      5  |
   106  |                    R = R + months;  |      5  |  77  |      5  |  3  |       5  |  [5,22,5,5,5]  |      5  |
   110  |                         i = i + 1;  |         |  77  |      5  |  4  |       5  |  [5,22,5,5,5]  |      5  |
   111  |              resetPlaceHolder_1();  |         |  77  |      5  |  4  |       5  |  [5,22,5,5,5]  |      5  |
   117  |      chunk = arrayRead(tokens, i);  |         |  77  |      5  |  4  |       5  |  [5,22,5,5,5]  |      5  |
   120  |                     R = R + chunk;  |      5  |  82  |      5  |  4  |       5  |  [5,22,5,5,5]  |      5  |
   123  |                     R = R + years;  |      5  |  87  |      5  |  4  |       5  |  [5,22,5,5,5]  |      5  |
   126  |                    R = R + months;  |      5  |  92  |      5  |  4  |       5  |  [5,22,5,5,5]  |      5  |
   130  |                         i = i + 1;  |         |  92  |      5  |  5  |       5  |  [5,22,5,5,5]  |      5  |
   131  |              resetPlaceHolder_1();  |         |  92  |      5  |  5  |       5  |  [5,22,5,5,5]  |      5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [120, 46, 106, 60, 86, 103, 66, 80, 123, 63, 43, 40, 126, 83, 100]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {60} because there exists a longer and subsuming segment {60,100} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {100}, {103}, {106}, {120}, {123}, {126}, {40}, {43}, {46}, {63}, {66}, {80}, {83}, {86} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    40  |         R = R + chunk;  |      5  |                         0  |
    43  |         R = R + years;  |      5  |                         1  |
    46  |        R = R + months;  |      5  |                         2  |
    51  |  resetPlaceHolder_1();  |         |                            |
    60  |         R = R + chunk;  |     22  |                            |
    63  |         R = R + years;  |      5  |                         3  |
    66  |        R = R + months;  |      5  |                         4  |
    71  |  resetPlaceHolder_1();  |         |                            |
    80  |         R = R + chunk;  |      5  |                         5  |
    83  |         R = R + years;  |      5  |                         6  |
    86  |        R = R + months;  |      5  |                         7  |
    91  |  resetPlaceHolder_1();  |         |                            |
   100  |         R = R + chunk;  |      5  |                         8  |
   103  |         R = R + years;  |      5  |                         9  |
   106  |        R = R + months;  |      5  |                        10  |
   111  |  resetPlaceHolder_1();  |         |                            |
   120  |         R = R + chunk;  |      5  |                        11  |
   123  |         R = R + years;  |      5  |                        12  |
   126  |        R = R + months;  |      5  |                        13  |
   131  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {100}, {103}, {106}, {120}, {123}, {126}, {40}, {43}, {46}, {63}, {66}, {80}, {83}, {86}
GroupID(1): {60}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |      5  |                         0  |                            |
    43  |         R = R + years;  |      5  |                         1  |                            |
    46  |        R = R + months;  |      5  |                         2  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |     22  |                            |                         0  |
    63  |         R = R + years;  |      5  |                         3  |                            |
    66  |        R = R + months;  |      5  |                         4  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |      5  |                         5  |                            |
    83  |         R = R + years;  |      5  |                         6  |                            |
    86  |        R = R + months;  |      5  |                         7  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |      5  |                         8  |                            |
   103  |         R = R + years;  |      5  |                         9  |                            |
   106  |        R = R + months;  |      5  |                        10  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |      5  |                        11  |                            |
   123  |         R = R + years;  |      5  |                        12  |                            |
   126  |        R = R + months;  |      5  |                        13  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [41, 42])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |      5  |                         0  |                            |
    43  |         R = R + years;  |      5  |                         1  |                            |
    46  |        R = R + months;  |      5  |                         2  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |     22  |                            |                         0  |
    63  |         R = R + years;  |      5  |                         3  |                            |
    66  |        R = R + months;  |      5  |                         4  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |      5  |                         5  |                            |
    83  |         R = R + years;  |      5  |                         6  |                            |
    86  |        R = R + months;  |      5  |                         7  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |      5  |                         8  |                            |
   103  |         R = R + years;  |      5  |                         9  |                            |
   106  |        R = R + months;  |      5  |                        10  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |      5  |                        11  |                            |
   123  |         R = R + years;  |      5  |                        12  |                            |
   126  |        R = R + months;  |      5  |                        13  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [44, 45])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |      5  |                         0  |                            |
    43  |         R = R + years;  |      5  |                         1  |                            |
    46  |        R = R + months;  |      5  |                         2  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |     22  |                            |                         0  |
    63  |         R = R + years;  |      5  |                         3  |                            |
    66  |        R = R + months;  |      5  |                         4  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |      5  |                         5  |                            |
    83  |         R = R + years;  |      5  |                         6  |                            |
    86  |        R = R + months;  |      5  |                         7  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |      5  |                         8  |                            |
   103  |         R = R + years;  |      5  |                         9  |                            |
   106  |        R = R + months;  |      5  |                        10  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |      5  |                        11  |                            |
   123  |         R = R + years;  |      5  |                        12  |                            |
   126  |        R = R + months;  |      5  |                        13  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [64, 65])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |      5  |                         0  |                            |
    43  |         R = R + years;  |      5  |                         1  |                            |
    46  |        R = R + months;  |      5  |                         2  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |     22  |                            |                         0  |
    63  |         R = R + years;  |      5  |                         3  |                            |
    66  |        R = R + months;  |      5  |                         4  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |      5  |                         5  |                            |
    83  |         R = R + years;  |      5  |                         6  |                            |
    86  |        R = R + months;  |      5  |                         7  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |      5  |                         8  |                            |
   103  |         R = R + years;  |      5  |                         9  |                            |
   106  |        R = R + months;  |      5  |                        10  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |      5  |                        11  |                            |
   123  |         R = R + years;  |      5  |                        12  |                            |
   126  |        R = R + months;  |      5  |                        13  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [81, 82])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |      5  |                         0  |                            |
    43  |         R = R + years;  |      5  |                         1  |                            |
    46  |        R = R + months;  |      5  |                         2  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |     22  |                            |                         0  |
    63  |         R = R + years;  |      5  |                         3  |                            |
    66  |        R = R + months;  |      5  |                         4  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |      5  |                         5  |                            |
    83  |         R = R + years;  |      5  |                         6  |                            |
    86  |        R = R + months;  |      5  |                         7  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |      5  |                         8  |                            |
   103  |         R = R + years;  |      5  |                         9  |                            |
   106  |        R = R + months;  |      5  |                        10  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |      5  |                        11  |                            |
   123  |         R = R + years;  |      5  |                        12  |                            |
   126  |        R = R + months;  |      5  |                        13  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [84, 85])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |      5  |                         0  |                            |
    43  |         R = R + years;  |      5  |                         1  |                            |
    46  |        R = R + months;  |      5  |                         2  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |     22  |                            |                         0  |
    63  |         R = R + years;  |      5  |                         3  |                            |
    66  |        R = R + months;  |      5  |                         4  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |      5  |                         5  |                            |
    83  |         R = R + years;  |      5  |                         6  |                            |
    86  |        R = R + months;  |      5  |                         7  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |      5  |                         8  |                            |
   103  |         R = R + years;  |      5  |                         9  |                            |
   106  |        R = R + months;  |      5  |                        10  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |      5  |                        11  |                            |
   123  |         R = R + years;  |      5  |                        12  |                            |
   126  |        R = R + months;  |      5  |                        13  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [101, 102])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |      5  |                         0  |                            |
    43  |         R = R + years;  |      5  |                         1  |                            |
    46  |        R = R + months;  |      5  |                         2  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |     22  |                            |                         0  |
    63  |         R = R + years;  |      5  |                         3  |                            |
    66  |        R = R + months;  |      5  |                         4  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |      5  |                         5  |                            |
    83  |         R = R + years;  |      5  |                         6  |                            |
    86  |        R = R + months;  |      5  |                         7  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |      5  |                         8  |                            |
   103  |         R = R + years;  |      5  |                         9  |                            |
   106  |        R = R + months;  |      5  |                        10  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |      5  |                        11  |                            |
   123  |         R = R + years;  |      5  |                        12  |                            |
   126  |        R = R + months;  |      5  |                        13  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [104, 105])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |      5  |                         0  |                            |
    43  |         R = R + years;  |      5  |                         1  |                            |
    46  |        R = R + months;  |      5  |                         2  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |     22  |                            |                         0  |
    63  |         R = R + years;  |      5  |                         3  |                            |
    66  |        R = R + months;  |      5  |                         4  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |      5  |                         5  |                            |
    83  |         R = R + years;  |      5  |                         6  |                            |
    86  |        R = R + months;  |      5  |                         7  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |      5  |                         8  |                            |
   103  |         R = R + years;  |      5  |                         9  |                            |
   106  |        R = R + months;  |      5  |                        10  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |      5  |                        11  |                            |
   123  |         R = R + years;  |      5  |                        12  |                            |
   126  |        R = R + months;  |      5  |                        13  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [121, 122])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |      5  |                         0  |                            |
    43  |         R = R + years;  |      5  |                         1  |                            |
    46  |        R = R + months;  |      5  |                         2  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |     22  |                            |                         0  |
    63  |         R = R + years;  |      5  |                         3  |                            |
    66  |        R = R + months;  |      5  |                         4  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |      5  |                         5  |                            |
    83  |         R = R + years;  |      5  |                         6  |                            |
    86  |        R = R + months;  |      5  |                         7  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |      5  |                         8  |                            |
   103  |         R = R + years;  |      5  |                         9  |                            |
   106  |        R = R + months;  |      5  |                        10  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |      5  |                        11  |                            |
   123  |         R = R + years;  |      5  |                        12  |                            |
   126  |        R = R + months;  |      5  |                        13  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [124, 125])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    40  |         R = R + chunk;  |      5  |                         0  |                            |
    43  |         R = R + years;  |      5  |                         1  |                            |
    46  |        R = R + months;  |      5  |                         2  |                            |
    51  |  resetPlaceHolder_1();  |         |                            |                            |
    60  |         R = R + chunk;  |     22  |                            |                         0  |
    63  |         R = R + years;  |      5  |                         3  |                            |
    66  |        R = R + months;  |      5  |                         4  |                            |
    71  |  resetPlaceHolder_1();  |         |                            |                            |
    80  |         R = R + chunk;  |      5  |                         5  |                            |
    83  |         R = R + years;  |      5  |                         6  |                            |
    86  |        R = R + months;  |      5  |                         7  |                            |
    91  |  resetPlaceHolder_1();  |         |                            |                            |
   100  |         R = R + chunk;  |      5  |                         8  |                            |
   103  |         R = R + years;  |      5  |                         9  |                            |
   106  |        R = R + months;  |      5  |                        10  |                            |
   111  |  resetPlaceHolder_1();  |         |                            |                            |
   120  |         R = R + chunk;  |      5  |                        11  |                            |
   123  |         R = R + years;  |      5  |                        12  |                            |
   126  |        R = R + months;  |      5  |                        13  |                            |
   131  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(51, 71, 91, 111)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R months -> R0 = R0 + months;
use R years -> R0 = R0 + years;
use R chunk -> if ((i < 1) || (i == 1))
{
  if ((i < 0) || (i == 0))
  {
    R0 = R0 + chunk;
  }
  else
  {
    R1 = R1 + chunk;
  }
}
else
{
  R0 = R0 + chunk;
}
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java	2023-01-10 19:42:35.273391133 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java.actual	2023-01-10 20:21:00.606572905 -0700
@@ -4,20 +4,14 @@
     int BOOLEAN_SEPARATOR = 102;
     int C0 = -1;
     int C1 = -1;
-    int C2 = -1;
-    int C3 = -1;
     int D0 = 0;
     int D0p = 0;
     int D1 = 0;
     int D1p = 0;
-    int D2 = 0;
-    int D2p = 0;
-    int D3 = 0;
-    int D3p = 0;
     int temporaryTokens = 0;
     int lastIndexOfTokens = 0;
-    lessPreciseBound((((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) + (D3p * C3)) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) + (D3p * C3)) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
-    mostPreciseBound((((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) + (D3p * C3)) < (tokens + (tokens * (years + months)))) || (((((0 + (D0p * C0)) + (D1p * C1)) + (D2p * C2)) + (D3p * C3)) == (tokens + (tokens * (years + months)))));
+    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
+    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (tokens + (tokens * (years + months)))) || (((0 + (D0p * C0)) + (D1p * C1)) == (tokens + (tokens * (years + months)))));
     if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
     {
       return;
@@ -38,43 +32,25 @@
         chunk = temporaryTokens - lastIndexOfTokens;
         lastIndexOfTokens = temporaryTokens;
       }
-      if ((i < 0) || (i == 0))
+      if ((i < 1) || (i == 1))
       {
-        D2 = D2 + chunk;
-      }
-      else
-      {
-        if ((i < 1) || (i == 1))
+        if ((i < 0) || (i == 0))
         {
-          D3 = D3 + chunk;
+          D0 = D0 + chunk;
         }
         else
         {
-          if ((i < 2) || (i == 2))
-          {
-            D2 = D2 + chunk;
-          }
-          else
-          {
-            if ((i < 3) || (i == 3))
-            {
-              D3 = D3 + chunk;
-            }
-            else
-            {
-              D2 = D2 + chunk;
-            }
-          }
+          D1 = D1 + chunk;
         }
       }
+      else
+      {
+        D0 = D0 + chunk;
+      }
       D0 = D0 + years;
-      D1 = D1 + months;
+      D0 = D0 + months;
       i = i + 1;
-      // reset R3
-      // reset R2
-      D1p = D1;
-      D1 = 0;
-      C1 = C1 + 1;
+      // reset R1
       D0p = D0;
       D0 = 0;
       C0 = C0 + 1;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java

real	0m6.527s
user	0m13.918s
sys	0m2.213s

2023-01-10 20:21:00,652 INFO     Overwrite the existing decomposition
2023-01-10 20:21:00,652 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
2023-01-10 20:21:00,654 INFO     Done. Execution time: 0.0021109580993652344 seconds
2023-01-10 20:21:00,654 INFO     Output: 
2023-01-10 20:21:00,654 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:24:39,774 INFO     Done. Execution time: 219.11895751953125 seconds
2023-01-10 20:24:39,774 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/DurationFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (tokens + (tokens * (years + months)))) || (((0 + (D0p * C0)) + (D1p * C1)) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 1) || (i == 1))
      {
        if ((i < 0) || (i == 0))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      else
      {
        D0 = D0 + chunk;
      }
      D0 = D0 + years;
      D0 = D0 + months;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class DurationFormat  {
  void execute(int years, int tokens, int months)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryTokens = 0;
    int lastIndexOfTokens = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((((((((((8 * tokens) * tokens) + ((8 * years) * years)) + ((8 * months) * months)) + ((8 * tokens) * years)) + ((8 * tokens) * months)) + (8 * months)) + (8 * years)) + (8 * tokens)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (tokens + (tokens * (years + months)))) || (((0 + (D0p * C0)) + (D1p * C1)) == (tokens + (tokens * (years + months)))));
    if ((((tokens < 1) || (tokens == 1)) || ((years < 0) || (years == 0))) || ((months < 0) || (months == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while (i < tokens)
    {
      {
        temporaryTokens = ndInt2(lastIndexOfTokens, tokens);
        chunk = temporaryTokens - lastIndexOfTokens;
        lastIndexOfTokens = temporaryTokens;
      }
      if ((i < 1) || (i == 1))
      {
        if ((i < 0) || (i == 0))
        {
          D0 = D0 + chunk;
        }
        else
        {
          D1 = D1 + chunk;
        }
      }
      else
      {
        D0 = D0 + chunk;
      }
      D0 = D0 + years;
      D0 = D0 + months;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(let ((a!1 (< (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months)))))
      (a!2 (= (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months))))))
  (or a!1 a!2))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(let ((a!1 (< (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months)))))
      (a!2 (= (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months))))))
  (or a!1 a!2))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 tokens)))` for variable `D1`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6265772841366864752.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-6543418158397533822.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 months) (* 1 1 years) (* 1 1 tokens)))` for variable `D0p`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1430299053694877808.c`
ERROR brbo.common.icra.Icra - stderr:

FATAL brbo.common.icra.Icra - ICRA timed out after `60 seconds`!
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-756096967399644107.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 months) (* 8 1 years) (* 1 1 tokens)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 tokens)))` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 years years months) (* 1 1 months months months)))` for variable `C1`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(let ((a!1 (< (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months)))))
      (a!2 (= (+ 0 (* D0p C0) (* D1p C1))
              (+ tokens (* tokens (+ years months))))))
  (or a!1 a!2))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.DurationFormat`)
INFO  brbo.BrboMain - Time consumption: `217.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2021-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2021-transparentAmortize-60s-mostPrecise-000-099.csv`

real	3m39.114s
user	11m19.044s
sys	0m17.156s

2023-01-10 20:24:39,774 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-10 20:24:39,774 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:25:05,403 INFO     Done. Execution time: 25.628872632980347 seconds
2023-01-10 20:25:05,403 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.java -d /tmp/qfuzz7957561493848158002/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7957561493848158002/bin -o /tmp/qfuzz7957561493848158002/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7957561493848158002/bin
Found file /tmp/qfuzz7957561493848158002/bin/brbo/fuzz/drivers/GetCanonicalName.class
Found file /tmp/qfuzz7957561493848158002/bin/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalName.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/brbo/fuzz/drivers/GetCanonicalName.class
Instrumenting class: brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/brbo/fuzz/drivers/GetCanonicalNameQFuzzDriver.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7957561493848158002/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7957561493848158002/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetCanonicalNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7957561493848158002/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7957561493848158002/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 23, exec speed = 114899 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m114k to 114k us (average: 114k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7957561493848158002/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 5.00; [12.00,17.00]
2; /tmp/qfuzz7957561493848158002/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 2; 5.00; [12.00,17.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7957561493848158002/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7957561493848158002/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 17, 41, 41, 89)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.623s
user	0m11.045s
sys	0m0.662s

2023-01-10 20:25:05,403 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
2023-01-10 20:25:10,890 INFO     Done. Execution time: 5.48642635345459 seconds
2023-01-10 20:25:10,890 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetCanonicalName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetCanonicalName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 39):
                                                                                   
 Index  |              Commands               |  Costs  |  R  |  className  |  i  |
-----------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |  0  |          2  |     |
    10  |  // mostPreciseBound(R <= class...  |         |  0  |          2  |     |
    11  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          2  |     |
    13  |                         int i = 0;  |         |  0  |          2  |  0  |
    19  |                         R = R + 1;  |      1  |  1  |          2  |  0  |
    23  |                         i = i + 1;  |         |  1  |          2  |  1  |
    24  |              resetPlaceHolder_1();  |         |  1  |          2  |  1  |
    30  |                         R = R + 1;  |      1  |  2  |          2  |  1  |
    34  |                         i = i + 1;  |         |  2  |          2  |  2  |
    35  |              resetPlaceHolder_1();  |         |  2  |          2  |  2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [19, 30]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [19, 30]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [19, 30]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [19, 30]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {19}, {30} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    19  |             R = R + 1;  |      1  |                         0  |
    24  |  resetPlaceHolder_1();  |         |                            |
    30  |             R = R + 1;  |      1  |                         1  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {19}, {30}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    19  |             R = R + 1;  |      1  |                         0  |
    24  |  resetPlaceHolder_1();  |         |                            |
    30  |             R = R + 1;  |      1  |                         1  |
    35  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(24)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java

real	0m5.480s
user	0m9.632s
sys	0m1.612s

2023-01-10 20:25:10,890 INFO     Generated the expected decomposition
2023-01-10 20:25:10,890 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:25:17,746 INFO     Done. Execution time: 6.855935096740723 seconds
2023-01-10 20:25:17,746 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetCanonicalName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * className) + 8)) || ((0 + (D0p * C0)) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < className) || ((0 + (D0p * C0)) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetCanonicalName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * className) + 8)) || ((0 + (D0p * C0)) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < className) || ((0 + (D0p * C0)) == className));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    while (i < className)
    {
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) className) (= (+ 0 (* D0p C0)) className))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) className) (= (+ 0 (* D0p C0)) className))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 className)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) className) (= (+ 0 (* D0p C0)) className))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetCanonicalName`)
INFO  brbo.BrboMain - Time consumption: `5.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2025-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2025-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.850s
user	0m14.627s
sys	0m2.084s

2023-01-10 20:25:17,746 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-10 20:25:17,746 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:25:43,422 INFO     Done. Execution time: 25.67549777030945 seconds
2023-01-10 20:25:43,422 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.java -d /tmp/qfuzz7723623595554731056/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7723623595554731056/bin -o /tmp/qfuzz7723623595554731056/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7723623595554731056/bin
Found file /tmp/qfuzz7723623595554731056/bin/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
Found file /tmp/qfuzz7723623595554731056/bin/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessageQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/brbo/fuzz/drivers/GetFormattedExceptionMessage.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7723623595554731056/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7723623595554731056/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetFormattedExceptionMessageQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7723623595554731056/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7723623595554731056/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 95, exec speed = 134757 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m95 to 95 bits (average: 95.00 bits)
[1;90m        Exec timing : [0m134k to 134k us (average: 134k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000000,orig:example.txt; 9; 2.00; [10.00,14.00,17.50,20.00,74.00,142.00,228.00,314.00,382.00]
2; /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 5; 1.00; [10.00,14.00,16.50,18.00,20.00]
3; /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 7; 2.00; [8.00,10.00,14.00,17.50,20.00,226.00,382.00]
7; /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2; 9; 2.00; [10.00,14.00,17.50,20.00,30.00,74.00,228.00,314.00,328.00]
12; /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 9; 2.00; [10.00,14.00,17.50,20.00,58.00,62.00,142.00,228.00,314.00]
13; /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32; 6; 2.00; [8.00,10.00,14.00,17.50,20.00,282.00]
18; /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2; 6; 2.00; [10.00,14.00,17.50,20.00,226.00,384.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
/tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
/tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 4, 4, 22, 4, 4, 4, 22, 29, 4, 65, 22, 4, 4, 4, 22, 46, 4, 46, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 109)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(160, 110, 33, 153, 11, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(27, 110, 25, 153, 67, 50, 153, 67, 49, 153, 67, 133, 152, 16, 187, 113, 16, 187, 54, 16, 187, 113, 16, 187, 153, 67, 153, 16, 187, 148, 153, 67, 54, 16, 192, 16, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(137)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7723623595554731056/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(188, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 50, 170, 93, 16, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,4,4,4]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,109]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [160,110,33,153,11]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [27,110,25,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [137]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [188,109,109,109,109]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.669s
user	0m11.361s
sys	0m0.836s

2023-01-10 20:25:43,422 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
2023-01-10 20:25:53,064 INFO     Done. Execution time: 9.641518592834473 seconds
2023-01-10 20:25:53,064 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetFormattedExceptionMessage] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,4,4,4])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([160,110,33,153,11])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([27,110,25,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,109])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([137])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([188,109,109,109,109])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 190):
                                                                                                           
 Index  |              Commands               |  Costs  |  R   |  baseMessage  |  buffer  |  chunk  |  i  |
-----------------------------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |      |  [4,4,4,4,4]  |       0  |         |     |
    11  |                         int R = 0;  |         |   0  |  [4,4,4,4,4]  |       0  |         |     |
    12  |  // mostPreciseBound(R <= 3 + 6...  |         |   0  |  [4,4,4,4,4]  |       0  |         |     |
    13  |  // lessPreciseBound(R <= MAX +...  |         |   0  |  [4,4,4,4,4]  |       0  |         |     |
    16  |                         R = R + 1;  |      1  |   1  |  [4,4,4,4,4]  |       0  |         |     |
    19  |                         R = R + 1;  |      1  |   2  |  [4,4,4,4,4]  |       0  |         |     |
    21  |                     int chunk = 0;  |         |   2  |  [4,4,4,4,4]  |       0  |      0  |     |
    23  |                         int i = 0;  |         |   2  |  [4,4,4,4,4]  |       0  |      0  |  0  |
    29  |  chunk = arrayRead(baseMessage,...  |         |   2  |  [4,4,4,4,4]  |       0  |      4  |  0  |
    32  |                         R = R + 1;  |      1  |   3  |  [4,4,4,4,4]  |       0  |      4  |  0  |
    35  |                         R = R + 1;  |      1  |   4  |  [4,4,4,4,4]  |       0  |      4  |  0  |
    38  |                         R = R + 1;  |      1  |   5  |  [4,4,4,4,4]  |       0  |      4  |  0  |
    41  |                     R = R + chunk;  |      4  |   9  |  [4,4,4,4,4]  |       0  |      4  |  0  |
    44  |                         R = R + 1;  |      1  |  10  |  [4,4,4,4,4]  |       0  |      4  |  0  |
    47  |                         R = R + 1;  |      1  |  11  |  [4,4,4,4,4]  |       0  |      4  |  0  |
    50  |                         R = R + 1;  |      1  |  12  |  [4,4,4,4,4]  |       0  |      4  |  0  |
    54  |                         i = i + 1;  |         |  12  |  [4,4,4,4,4]  |       0  |      4  |  1  |
    55  |              resetPlaceHolder_1();  |         |  12  |  [4,4,4,4,4]  |       0  |      4  |  1  |
    61  |  chunk = arrayRead(baseMessage,...  |         |  12  |  [4,4,4,4,4]  |       0  |      4  |  1  |
    64  |                         R = R + 1;  |      1  |  13  |  [4,4,4,4,4]  |       0  |      4  |  1  |
    67  |                         R = R + 1;  |      1  |  14  |  [4,4,4,4,4]  |       0  |      4  |  1  |
    70  |                         R = R + 1;  |      1  |  15  |  [4,4,4,4,4]  |       0  |      4  |  1  |
    73  |                     R = R + chunk;  |      4  |  19  |  [4,4,4,4,4]  |       0  |      4  |  1  |
    76  |                         R = R + 1;  |      1  |  20  |  [4,4,4,4,4]  |       0  |      4  |  1  |
    79  |                         R = R + 1;  |      1  |  21  |  [4,4,4,4,4]  |       0  |      4  |  1  |
    82  |                         R = R + 1;  |      1  |  22  |  [4,4,4,4,4]  |       0  |      4  |  1  |
    86  |                         i = i + 1;  |         |  22  |  [4,4,4,4,4]  |       0  |      4  |  2  |
    87  |              resetPlaceHolder_1();  |         |  22  |  [4,4,4,4,4]  |       0  |      4  |  2  |
    93  |  chunk = arrayRead(baseMessage,...  |         |  22  |  [4,4,4,4,4]  |       0  |      4  |  2  |
    96  |                         R = R + 1;  |      1  |  23  |  [4,4,4,4,4]  |       0  |      4  |  2  |
    99  |                         R = R + 1;  |      1  |  24  |  [4,4,4,4,4]  |       0  |      4  |  2  |
   102  |                         R = R + 1;  |      1  |  25  |  [4,4,4,4,4]  |       0  |      4  |  2  |
   105  |                     R = R + chunk;  |      4  |  29  |  [4,4,4,4,4]  |       0  |      4  |  2  |
   108  |                         R = R + 1;  |      1  |  30  |  [4,4,4,4,4]  |       0  |      4  |  2  |
   111  |                         R = R + 1;  |      1  |  31  |  [4,4,4,4,4]  |       0  |      4  |  2  |
   114  |                         R = R + 1;  |      1  |  32  |  [4,4,4,4,4]  |       0  |      4  |  2  |
   118  |                         i = i + 1;  |         |  32  |  [4,4,4,4,4]  |       0  |      4  |  3  |
   119  |              resetPlaceHolder_1();  |         |  32  |  [4,4,4,4,4]  |       0  |      4  |  3  |
   125  |  chunk = arrayRead(baseMessage,...  |         |  32  |  [4,4,4,4,4]  |       0  |      4  |  3  |
   128  |                         R = R + 1;  |      1  |  33  |  [4,4,4,4,4]  |       0  |      4  |  3  |
   131  |                         R = R + 1;  |      1  |  34  |  [4,4,4,4,4]  |       0  |      4  |  3  |
   134  |                         R = R + 1;  |      1  |  35  |  [4,4,4,4,4]  |       0  |      4  |  3  |
   137  |                     R = R + chunk;  |      4  |  39  |  [4,4,4,4,4]  |       0  |      4  |  3  |
   140  |                         R = R + 1;  |      1  |  40  |  [4,4,4,4,4]  |       0  |      4  |  3  |
   143  |                         R = R + 1;  |      1  |  41  |  [4,4,4,4,4]  |       0  |      4  |  3  |
   146  |                         R = R + 1;  |      1  |  42  |  [4,4,4,4,4]  |       0  |      4  |  3  |
   150  |                         i = i + 1;  |         |  42  |  [4,4,4,4,4]  |       0  |      4  |  4  |
   151  |              resetPlaceHolder_1();  |         |  42  |  [4,4,4,4,4]  |       0  |      4  |  4  |
   157  |  chunk = arrayRead(baseMessage,...  |         |  42  |  [4,4,4,4,4]  |       0  |      4  |  4  |
   160  |                         R = R + 1;  |      1  |  43  |  [4,4,4,4,4]  |       0  |      4  |  4  |
   163  |                         R = R + 1;  |      1  |  44  |  [4,4,4,4,4]  |       0  |      4  |  4  |
   166  |                         R = R + 1;  |      1  |  45  |  [4,4,4,4,4]  |       0  |      4  |  4  |
   169  |                     R = R + chunk;  |      4  |  49  |  [4,4,4,4,4]  |       0  |      4  |  4  |
   172  |                         R = R + 1;  |      1  |  50  |  [4,4,4,4,4]  |       0  |      4  |  4  |
   175  |                         R = R + 1;  |      1  |  51  |  [4,4,4,4,4]  |       0  |      4  |  4  |
   178  |                         R = R + 1;  |      1  |  52  |  [4,4,4,4,4]  |       0  |      4  |  4  |
   182  |                         i = i + 1;  |         |  52  |  [4,4,4,4,4]  |       0  |      4  |  5  |
   183  |              resetPlaceHolder_1();  |         |  52  |  [4,4,4,4,4]  |       0  |      4  |  5  |
   189  |                         R = R + 1;  |      1  |  53  |  [4,4,4,4,4]  |       0  |      4  |  5  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [189, 102, 38, 160, 70, 137, 169, 96, 41, 134, 73, 128, 105, 166, 32, 64, 44, 172, 76, 140, 108, 35, 50, 67, 16, 175, 143, 99, 114, 82, 146, 19, 79, 131, 47, 163, 178, 111]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [189, 102, 38, 160, 70, 137, 169, 96, 41, 134, 73, 128, 105, 166, 32, 64, 44, 172, 76, 140, 108, 35, 50, 67, 16, 175, 143, 99, 114, 82, 146, 19, 79, 131, 47, 163, 178, 111]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [189, 102, 38, 160, 70, 137, 169, 96, 41, 134, 73, 128, 105, 166, 32, 64, 44, 172, 76, 140, 108, 35, 50, 67, 16, 175, 143, 99, 114, 82, 146, 19, 79, 131, 47, 163, 178, 111]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [189, 102, 38, 160, 70, 137, 169, 96, 41, 134, 73, 128, 105, 166, 32, 64, 44, 172, 76, 140, 108, 35, 50, 67, 16, 175, 143, 99, 114, 82, 146, 19, 79, 131, 47, 163, 178, 111]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 2 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {102}, {108}, {111}, {114}, {128}, {131}, {134}, {140}, {143}, {146}, {160}, {163}, {166}, {16}, {172}, {175}, {178}, {189}, {19}, {32}, {35}, {38}, {44}, {47}, {50}, {64}, {67}, {70}, {76}, {79}, {82}, {96}, {99} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |
    19  |             R = R + 1;  |      1  |                         1  |
    32  |             R = R + 1;  |      1  |                         2  |
    35  |             R = R + 1;  |      1  |                         3  |
    38  |             R = R + 1;  |      1  |                         4  |
    41  |         R = R + chunk;  |      4  |                            |
    44  |             R = R + 1;  |      1  |                         5  |
    47  |             R = R + 1;  |      1  |                         6  |
    50  |             R = R + 1;  |      1  |                         7  |
    55  |  resetPlaceHolder_1();  |         |                            |
    64  |             R = R + 1;  |      1  |                         8  |
    67  |             R = R + 1;  |      1  |                         9  |
    70  |             R = R + 1;  |      1  |                        10  |
    73  |         R = R + chunk;  |      4  |                            |
    76  |             R = R + 1;  |      1  |                        11  |
    79  |             R = R + 1;  |      1  |                        12  |
    82  |             R = R + 1;  |      1  |                        13  |
    87  |  resetPlaceHolder_1();  |         |                            |
    96  |             R = R + 1;  |      1  |                        14  |
    99  |             R = R + 1;  |      1  |                        15  |
   102  |             R = R + 1;  |      1  |                        16  |
   105  |         R = R + chunk;  |      4  |                            |
   108  |             R = R + 1;  |      1  |                        17  |
   111  |             R = R + 1;  |      1  |                        18  |
   114  |             R = R + 1;  |      1  |                        19  |
   119  |  resetPlaceHolder_1();  |         |                            |
   128  |             R = R + 1;  |      1  |                        20  |
   131  |             R = R + 1;  |      1  |                        21  |
   134  |             R = R + 1;  |      1  |                        22  |
   137  |         R = R + chunk;  |      4  |                            |
   140  |             R = R + 1;  |      1  |                        23  |
   143  |             R = R + 1;  |      1  |                        24  |
   146  |             R = R + 1;  |      1  |                        25  |
   151  |  resetPlaceHolder_1();  |         |                            |
   160  |             R = R + 1;  |      1  |                        26  |
   163  |             R = R + 1;  |      1  |                        27  |
   166  |             R = R + 1;  |      1  |                        28  |
   169  |         R = R + chunk;  |      4  |                            |
   172  |             R = R + 1;  |      1  |                        29  |
   175  |             R = R + 1;  |      1  |                        30  |
   178  |             R = R + 1;  |      1  |                        31  |
   183  |  resetPlaceHolder_1();  |         |                            |
   189  |             R = R + 1;  |      1  |                        32  |
INFO  brbo.backend2.learning.SegmentClustering - Visit 1-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 1-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {105}, {137}, {169}, {41}, {73} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                            |
    19  |             R = R + 1;  |      1  |                            |
    32  |             R = R + 1;  |      1  |                            |
    35  |             R = R + 1;  |      1  |                            |
    38  |             R = R + 1;  |      1  |                            |
    41  |         R = R + chunk;  |      4  |                         0  |
    44  |             R = R + 1;  |      1  |                            |
    47  |             R = R + 1;  |      1  |                            |
    50  |             R = R + 1;  |      1  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |
    64  |             R = R + 1;  |      1  |                            |
    67  |             R = R + 1;  |      1  |                            |
    70  |             R = R + 1;  |      1  |                            |
    73  |         R = R + chunk;  |      4  |                         1  |
    76  |             R = R + 1;  |      1  |                            |
    79  |             R = R + 1;  |      1  |                            |
    82  |             R = R + 1;  |      1  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |
    96  |             R = R + 1;  |      1  |                            |
    99  |             R = R + 1;  |      1  |                            |
   102  |             R = R + 1;  |      1  |                            |
   105  |         R = R + chunk;  |      4  |                         2  |
   108  |             R = R + 1;  |      1  |                            |
   111  |             R = R + 1;  |      1  |                            |
   114  |             R = R + 1;  |      1  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |
   128  |             R = R + 1;  |      1  |                            |
   131  |             R = R + 1;  |      1  |                            |
   134  |             R = R + 1;  |      1  |                            |
   137  |         R = R + chunk;  |      4  |                         3  |
   140  |             R = R + 1;  |      1  |                            |
   143  |             R = R + 1;  |      1  |                            |
   146  |             R = R + 1;  |      1  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |
   160  |             R = R + 1;  |      1  |                            |
   163  |             R = R + 1;  |      1  |                            |
   166  |             R = R + 1;  |      1  |                            |
   169  |         R = R + chunk;  |      4  |                         4  |
   172  |             R = R + 1;  |      1  |                            |
   175  |             R = R + 1;  |      1  |                            |
   178  |             R = R + 1;  |      1  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |
   189  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {102}, {108}, {111}, {114}, {128}, {131}, {134}, {140}, {143}, {146}, {160}, {163}, {166}, {16}, {172}, {175}, {178}, {189}, {19}, {32}, {35}, {38}, {44}, {47}, {50}, {64}, {67}, {70}, {76}, {79}, {82}, {96}, {99}
GroupID(1): {105}, {137}, {169}, {41}, {73}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
GroupID(1): resetPlaceHolder_1();
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 0 and 1 segment (index range: [17, 18])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 1 and 2 segment (index range: [20, 31])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 2 and 3 segment (index range: [33, 34])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 3 and 4 segment (index range: [36, 37])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 4 and 5 segment (index range: [39, 43])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 5 and 6 segment (index range: [45, 46])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 6 and 7 segment (index range: [48, 49])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 7 and 8 segment (index range: [51, 63])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 8 and 9 segment (index range: [65, 66])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 9 and 10 segment (index range: [68, 69])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 10 and 11 segment (index range: [71, 75])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 11 and 12 segment (index range: [77, 78])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 12 and 13 segment (index range: [80, 81])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 13 and 14 segment (index range: [83, 95])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 14 and 15 segment (index range: [97, 98])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 15 and 16 segment (index range: [100, 101])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 16 and 17 segment (index range: [103, 107])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 17 and 18 segment (index range: [109, 110])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 18 and 19 segment (index range: [112, 113])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 19 and 20 segment (index range: [115, 127])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 20 and 21 segment (index range: [129, 130])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 21 and 22 segment (index range: [132, 133])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 22 and 23 segment (index range: [135, 139])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 23 and 24 segment (index range: [141, 142])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 24 and 25 segment (index range: [144, 145])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 25 and 26 segment (index range: [147, 159])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 26 and 27 segment (index range: [161, 162])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 27 and 28 segment (index range: [164, 165])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 28 and 29 segment (index range: [167, 171])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 29 and 30 segment (index range: [173, 174])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 30 and 31 segment (index range: [176, 177])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
ERROR brbo.common.ast.ResetPlaceHolder$ - Failed to find a reset place holder between GroupID(0)'s 31 and 32 segment (index range: [179, 188])
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    16  |             R = R + 1;  |      1  |                         0  |                            |
    19  |             R = R + 1;  |      1  |                         1  |                            |
    32  |             R = R + 1;  |      1  |                         2  |                            |
    35  |             R = R + 1;  |      1  |                         3  |                            |
    38  |             R = R + 1;  |      1  |                         4  |                            |
    41  |         R = R + chunk;  |      4  |                            |                         0  |
    44  |             R = R + 1;  |      1  |                         5  |                            |
    47  |             R = R + 1;  |      1  |                         6  |                            |
    50  |             R = R + 1;  |      1  |                         7  |                            |
    55  |  resetPlaceHolder_1();  |         |                            |                            |
    64  |             R = R + 1;  |      1  |                         8  |                            |
    67  |             R = R + 1;  |      1  |                         9  |                            |
    70  |             R = R + 1;  |      1  |                        10  |                            |
    73  |         R = R + chunk;  |      4  |                            |                         1  |
    76  |             R = R + 1;  |      1  |                        11  |                            |
    79  |             R = R + 1;  |      1  |                        12  |                            |
    82  |             R = R + 1;  |      1  |                        13  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
    96  |             R = R + 1;  |      1  |                        14  |                            |
    99  |             R = R + 1;  |      1  |                        15  |                            |
   102  |             R = R + 1;  |      1  |                        16  |                            |
   105  |         R = R + chunk;  |      4  |                            |                         2  |
   108  |             R = R + 1;  |      1  |                        17  |                            |
   111  |             R = R + 1;  |      1  |                        18  |                            |
   114  |             R = R + 1;  |      1  |                        19  |                            |
   119  |  resetPlaceHolder_1();  |         |                            |                            |
   128  |             R = R + 1;  |      1  |                        20  |                            |
   131  |             R = R + 1;  |      1  |                        21  |                            |
   134  |             R = R + 1;  |      1  |                        22  |                            |
   137  |         R = R + chunk;  |      4  |                            |                         3  |
   140  |             R = R + 1;  |      1  |                        23  |                            |
   143  |             R = R + 1;  |      1  |                        24  |                            |
   146  |             R = R + 1;  |      1  |                        25  |                            |
   151  |  resetPlaceHolder_1();  |         |                            |                            |
   160  |             R = R + 1;  |      1  |                        26  |                            |
   163  |             R = R + 1;  |      1  |                        27  |                            |
   166  |             R = R + 1;  |      1  |                        28  |                            |
   169  |         R = R + chunk;  |      4  |                            |                         4  |
   172  |             R = R + 1;  |      1  |                        29  |                            |
   175  |             R = R + 1;  |      1  |                        30  |                            |
   178  |             R = R + 1;  |      1  |                        31  |                            |
   183  |  resetPlaceHolder_1();  |         |                            |                            |
   189  |             R = R + 1;  |      1  |                        32  |                            |
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
GroupID(1): Set(55, 87, 119, 151)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R chunk -> R1 = R1 + chunk;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  if (S1 < R1)
  {
    S1 = R1;
  }
  else
  {
    ;
  }
  R1 = 0;
  C1 = C1 + 1;
  // reset R0
}
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java	2023-01-10 19:44:50.747328501 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java.actual	2023-01-10 20:25:53.010759988 -0700
@@ -43,7 +43,9 @@
       D0 = D0 + 1;
       D0 = D0 + 1;
       i = i + 1;
-      // reset R1
+      D1p = D1;
+      D1 = 0;
+      C1 = C1 + 1;
       // reset R0
     }
     D0 = D0 + 1;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java

real	0m9.636s
user	0m21.836s
sys	0m4.375s

2023-01-10 20:25:53,065 INFO     Overwrite the existing decomposition
2023-01-10 20:25:53,065 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
2023-01-10 20:25:53,067 INFO     Done. Execution time: 0.001867532730102539 seconds
2023-01-10 20:25:53,067 INFO     Output: 
2023-01-10 20:25:53,067 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:26:06,180 INFO     Done. Execution time: 13.11273717880249 seconds
2023-01-10 20:26:06,180 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetFormattedExceptionMessage.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (8 + (8 * baseMessage))) || (((0 + (D0p * C0)) + (D1p * C1)) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (3 + (6 * baseMessage))) || (((0 + (D0p * C0)) + (D1p * C1)) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
    D0 = D0 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetFormattedExceptionMessage  {
  void execute(int baseMessage)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryBaseMessage = 0;
    int lastIndexOfBaseMessage = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (8 + (8 * baseMessage))) || (((0 + (D0p * C0)) + (D1p * C1)) == (8 + (8 * baseMessage))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (3 + (6 * baseMessage))) || (((0 + (D0p * C0)) + (D1p * C1)) == (3 + (6 * baseMessage))));
    if ((baseMessage < 1) || (baseMessage == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    D0 = D0 + 1;
    D0 = D0 + 1;
    int chunk = 0;
    int i = 0;
    while (i < baseMessage)
    {
      {
        temporaryBaseMessage = ndInt2(lastIndexOfBaseMessage, baseMessage);
        chunk = temporaryBaseMessage - lastIndexOfBaseMessage;
        lastIndexOfBaseMessage = temporaryBaseMessage;
      }
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D1 = D1 + chunk;
      D0 = D0 + 1;
      D0 = D0 + 1;
      D0 = D0 + 1;
      i = i + 1;
      D1p = D1;
      D1 = 0;
      C1 = C1 + 1;
    }
    D0 = D0 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p (+ 0 (* 1 1 baseMessage)))` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 baseMessage)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 (+ 0 (* 1 1 baseMessage)))` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 baseMessage)))` for variable `D0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ 3 (* 6 baseMessage))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetFormattedExceptionMessage`)
INFO  brbo.BrboMain - Time consumption: `11.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2025-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2025-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m13.107s
user	0m39.106s
sys	0m4.757s

2023-01-10 20:26:06,180 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-10 20:26:06,181 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:26:31,881 INFO     Done. Execution time: 25.700390100479126 seconds
2023-01-10 20:26:31,881 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.java -d /tmp/qfuzz448714424892678890/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz448714424892678890/bin -o /tmp/qfuzz448714424892678890/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz448714424892678890/bin
Found file /tmp/qfuzz448714424892678890/bin/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Found file /tmp/qfuzz448714424892678890/bin/brbo/fuzz/drivers/GetShortClassName.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
File written: /tmp/qfuzz448714424892678890/bin-instr/brbo/fuzz/drivers/GetShortClassNameQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz448714424892678890/bin-instr/brbo/fuzz/drivers/GetShortClassName.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz448714424892678890/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz448714424892678890/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetShortClassNameQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz448714424892678890/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz448714424892678890/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 132843 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m132k to 132k us (average: 132k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 7.00; [15.00,22.00]
2; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 2; 7.00; [15.00,22.00]
3; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128; 2; 7.00; [15.00,22.00]
5; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128; 2; 7.00; [15.00,22.00]
6; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 2; 7.00; [15.00,22.00]
8; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8; 2; 7.00; [15.00,22.00]
10; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32; 2; 7.00; [15.00,22.00]
11; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32; 2; 7.00; [15.00,22.00]
14; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16; 2; 7.00; [15.00,22.00]
15; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2; 2; 7.00; [15.00,22.00]
17; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8; 2; 7.00; [15.00,22.00]
19; /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128; 2; 7.00; [15.00,22.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
/tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
/tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
/tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
/tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
/tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
/tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
/tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2
/tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
/tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(109, 109, 70, 139, 4)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(25)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(32, 197)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 4, 4, 4, 70, 4, 132, 4, 4, 4, 4, 4, 5, 4, 32, 63, 159)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(151, 4, 72, 157, 62, 63)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000008,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195, 131)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000009,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(16, 110, 33, 153, 67, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000010,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 20, 8, 187, 108, 5)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz448714424892678890/fuzzer-out/afl/queue/id:000011,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 109
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 25
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 32
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 4
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 151
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 195
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 16
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 50
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.694s
user	0m11.328s
sys	0m0.833s

2023-01-10 20:26:31,881 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
2023-01-10 20:26:37,350 INFO     Done. Execution time: 5.468500852584839 seconds
2023-01-10 20:26:37,350 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.GetShortClassName`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {className_}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetShortClassName] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(109)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(4)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(32)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(25)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 8 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(151)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(195)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(16)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(50)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 8 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 2314):
                                                                                                              
 Index  |              Commands               |  Costs  |   R   |  arrayPrefix  |  className  |  className_  |
--------------------------------------------------------------------------------------------------------------
     9  |               int arrayPrefix = 0;  |         |       |            0  |        109  |              |
    11  |                         int R = 0;  |         |    0  |            0  |        109  |              |
    12  |  // mostPreciseBound(R <= 2 * c...  |         |    0  |            0  |        109  |              |
    13  |  // lessPreciseBound(R <= MAX *...  |         |    0  |            0  |        109  |              |
    15  |        int className_ = className;  |         |    0  |            0  |        109  |         109  |
    28  |       className_ = className_ - 1;  |         |    0  |            0  |        109  |         108  |
    32  |     arrayPrefix = arrayPrefix + 2;  |         |    0  |            2  |        109  |         108  |
    35  |                         R = R + 2;  |      2  |    2  |            2  |        109  |         108  |
    36  |              resetPlaceHolder_1();  |         |    2  |            2  |        109  |         108  |
    49  |       className_ = className_ - 1;  |         |    2  |            2  |        109  |         107  |
    53  |     arrayPrefix = arrayPrefix + 2;  |         |    2  |            4  |        109  |         107  |
    56  |                         R = R + 2;  |      2  |    4  |            4  |        109  |         107  |
    57  |              resetPlaceHolder_1();  |         |    4  |            4  |        109  |         107  |
    70  |       className_ = className_ - 1;  |         |    4  |            4  |        109  |         106  |
    74  |     arrayPrefix = arrayPrefix + 2;  |         |    4  |            6  |        109  |         106  |
    77  |                         R = R + 2;  |      2  |    6  |            6  |        109  |         106  |
    78  |              resetPlaceHolder_1();  |         |    6  |            6  |        109  |         106  |
    91  |       className_ = className_ - 1;  |         |    6  |            6  |        109  |         105  |
    95  |     arrayPrefix = arrayPrefix + 2;  |         |    6  |            8  |        109  |         105  |
    98  |                         R = R + 2;  |      2  |    8  |            8  |        109  |         105  |
    99  |              resetPlaceHolder_1();  |         |    8  |            8  |        109  |         105  |
   112  |       className_ = className_ - 1;  |         |    8  |            8  |        109  |         104  |
   116  |     arrayPrefix = arrayPrefix + 2;  |         |    8  |           10  |        109  |         104  |
   119  |                         R = R + 2;  |      2  |   10  |           10  |        109  |         104  |
   120  |              resetPlaceHolder_1();  |         |   10  |           10  |        109  |         104  |
   133  |       className_ = className_ - 1;  |         |   10  |           10  |        109  |         103  |
   137  |     arrayPrefix = arrayPrefix + 2;  |         |   10  |           12  |        109  |         103  |
   140  |                         R = R + 2;  |      2  |   12  |           12  |        109  |         103  |
   141  |              resetPlaceHolder_1();  |         |   12  |           12  |        109  |         103  |
   154  |       className_ = className_ - 1;  |         |   12  |           12  |        109  |         102  |
   158  |     arrayPrefix = arrayPrefix + 2;  |         |   12  |           14  |        109  |         102  |
   161  |                         R = R + 2;  |      2  |   14  |           14  |        109  |         102  |
   162  |              resetPlaceHolder_1();  |         |   14  |           14  |        109  |         102  |
   175  |       className_ = className_ - 1;  |         |   14  |           14  |        109  |         101  |
   179  |     arrayPrefix = arrayPrefix + 2;  |         |   14  |           16  |        109  |         101  |
   182  |                         R = R + 2;  |      2  |   16  |           16  |        109  |         101  |
   183  |              resetPlaceHolder_1();  |         |   16  |           16  |        109  |         101  |
   196  |       className_ = className_ - 1;  |         |   16  |           16  |        109  |         100  |
   200  |     arrayPrefix = arrayPrefix + 2;  |         |   16  |           18  |        109  |         100  |
   203  |                         R = R + 2;  |      2  |   18  |           18  |        109  |         100  |
   204  |              resetPlaceHolder_1();  |         |   18  |           18  |        109  |         100  |
   217  |       className_ = className_ - 1;  |         |   18  |           18  |        109  |          99  |
   221  |     arrayPrefix = arrayPrefix + 2;  |         |   18  |           20  |        109  |          99  |
   224  |                         R = R + 2;  |      2  |   20  |           20  |        109  |          99  |
   225  |              resetPlaceHolder_1();  |         |   20  |           20  |        109  |          99  |
   238  |       className_ = className_ - 1;  |         |   20  |           20  |        109  |          98  |
   242  |     arrayPrefix = arrayPrefix + 2;  |         |   20  |           22  |        109  |          98  |
   245  |                         R = R + 2;  |      2  |   22  |           22  |        109  |          98  |
   246  |              resetPlaceHolder_1();  |         |   22  |           22  |        109  |          98  |
   259  |       className_ = className_ - 1;  |         |   22  |           22  |        109  |          97  |
   263  |     arrayPrefix = arrayPrefix + 2;  |         |   22  |           24  |        109  |          97  |
   266  |                         R = R + 2;  |      2  |   24  |           24  |        109  |          97  |
   267  |              resetPlaceHolder_1();  |         |   24  |           24  |        109  |          97  |
   280  |       className_ = className_ - 1;  |         |   24  |           24  |        109  |          96  |
   284  |     arrayPrefix = arrayPrefix + 2;  |         |   24  |           26  |        109  |          96  |
   287  |                         R = R + 2;  |      2  |   26  |           26  |        109  |          96  |
   288  |              resetPlaceHolder_1();  |         |   26  |           26  |        109  |          96  |
   301  |       className_ = className_ - 1;  |         |   26  |           26  |        109  |          95  |
   305  |     arrayPrefix = arrayPrefix + 2;  |         |   26  |           28  |        109  |          95  |
   308  |                         R = R + 2;  |      2  |   28  |           28  |        109  |          95  |
   309  |              resetPlaceHolder_1();  |         |   28  |           28  |        109  |          95  |
   322  |       className_ = className_ - 1;  |         |   28  |           28  |        109  |          94  |
   326  |     arrayPrefix = arrayPrefix + 2;  |         |   28  |           30  |        109  |          94  |
   329  |                         R = R + 2;  |      2  |   30  |           30  |        109  |          94  |
   330  |              resetPlaceHolder_1();  |         |   30  |           30  |        109  |          94  |
   343  |       className_ = className_ - 1;  |         |   30  |           30  |        109  |          93  |
   347  |     arrayPrefix = arrayPrefix + 2;  |         |   30  |           32  |        109  |          93  |
   350  |                         R = R + 2;  |      2  |   32  |           32  |        109  |          93  |
   351  |              resetPlaceHolder_1();  |         |   32  |           32  |        109  |          93  |
   364  |       className_ = className_ - 1;  |         |   32  |           32  |        109  |          92  |
   368  |     arrayPrefix = arrayPrefix + 2;  |         |   32  |           34  |        109  |          92  |
   371  |                         R = R + 2;  |      2  |   34  |           34  |        109  |          92  |
   372  |              resetPlaceHolder_1();  |         |   34  |           34  |        109  |          92  |
   385  |       className_ = className_ - 1;  |         |   34  |           34  |        109  |          91  |
   389  |     arrayPrefix = arrayPrefix + 2;  |         |   34  |           36  |        109  |          91  |
   392  |                         R = R + 2;  |      2  |   36  |           36  |        109  |          91  |
   393  |              resetPlaceHolder_1();  |         |   36  |           36  |        109  |          91  |
   406  |       className_ = className_ - 1;  |         |   36  |           36  |        109  |          90  |
   410  |     arrayPrefix = arrayPrefix + 2;  |         |   36  |           38  |        109  |          90  |
   413  |                         R = R + 2;  |      2  |   38  |           38  |        109  |          90  |
   414  |              resetPlaceHolder_1();  |         |   38  |           38  |        109  |          90  |
   427  |       className_ = className_ - 1;  |         |   38  |           38  |        109  |          89  |
   431  |     arrayPrefix = arrayPrefix + 2;  |         |   38  |           40  |        109  |          89  |
   434  |                         R = R + 2;  |      2  |   40  |           40  |        109  |          89  |
   435  |              resetPlaceHolder_1();  |         |   40  |           40  |        109  |          89  |
   448  |       className_ = className_ - 1;  |         |   40  |           40  |        109  |          88  |
   452  |     arrayPrefix = arrayPrefix + 2;  |         |   40  |           42  |        109  |          88  |
   455  |                         R = R + 2;  |      2  |   42  |           42  |        109  |          88  |
   456  |              resetPlaceHolder_1();  |         |   42  |           42  |        109  |          88  |
   469  |       className_ = className_ - 1;  |         |   42  |           42  |        109  |          87  |
   473  |     arrayPrefix = arrayPrefix + 2;  |         |   42  |           44  |        109  |          87  |
   476  |                         R = R + 2;  |      2  |   44  |           44  |        109  |          87  |
   477  |              resetPlaceHolder_1();  |         |   44  |           44  |        109  |          87  |
   490  |       className_ = className_ - 1;  |         |   44  |           44  |        109  |          86  |
   494  |     arrayPrefix = arrayPrefix + 2;  |         |   44  |           46  |        109  |          86  |
   497  |                         R = R + 2;  |      2  |   46  |           46  |        109  |          86  |
   498  |              resetPlaceHolder_1();  |         |   46  |           46  |        109  |          86  |
   511  |       className_ = className_ - 1;  |         |   46  |           46  |        109  |          85  |
   515  |     arrayPrefix = arrayPrefix + 2;  |         |   46  |           48  |        109  |          85  |
   518  |                         R = R + 2;  |      2  |   48  |           48  |        109  |          85  |
   519  |              resetPlaceHolder_1();  |         |   48  |           48  |        109  |          85  |
   532  |       className_ = className_ - 1;  |         |   48  |           48  |        109  |          84  |
   536  |     arrayPrefix = arrayPrefix + 2;  |         |   48  |           50  |        109  |          84  |
   539  |                         R = R + 2;  |      2  |   50  |           50  |        109  |          84  |
   540  |              resetPlaceHolder_1();  |         |   50  |           50  |        109  |          84  |
   553  |       className_ = className_ - 1;  |         |   50  |           50  |        109  |          83  |
   557  |     arrayPrefix = arrayPrefix + 2;  |         |   50  |           52  |        109  |          83  |
   560  |                         R = R + 2;  |      2  |   52  |           52  |        109  |          83  |
   561  |              resetPlaceHolder_1();  |         |   52  |           52  |        109  |          83  |
   574  |       className_ = className_ - 1;  |         |   52  |           52  |        109  |          82  |
   578  |     arrayPrefix = arrayPrefix + 2;  |         |   52  |           54  |        109  |          82  |
   581  |                         R = R + 2;  |      2  |   54  |           54  |        109  |          82  |
   582  |              resetPlaceHolder_1();  |         |   54  |           54  |        109  |          82  |
   595  |       className_ = className_ - 1;  |         |   54  |           54  |        109  |          81  |
   599  |     arrayPrefix = arrayPrefix + 2;  |         |   54  |           56  |        109  |          81  |
   602  |                         R = R + 2;  |      2  |   56  |           56  |        109  |          81  |
   603  |              resetPlaceHolder_1();  |         |   56  |           56  |        109  |          81  |
   616  |       className_ = className_ - 1;  |         |   56  |           56  |        109  |          80  |
   620  |     arrayPrefix = arrayPrefix + 2;  |         |   56  |           58  |        109  |          80  |
   623  |                         R = R + 2;  |      2  |   58  |           58  |        109  |          80  |
   624  |              resetPlaceHolder_1();  |         |   58  |           58  |        109  |          80  |
   637  |       className_ = className_ - 1;  |         |   58  |           58  |        109  |          79  |
   641  |     arrayPrefix = arrayPrefix + 2;  |         |   58  |           60  |        109  |          79  |
   644  |                         R = R + 2;  |      2  |   60  |           60  |        109  |          79  |
   645  |              resetPlaceHolder_1();  |         |   60  |           60  |        109  |          79  |
   658  |       className_ = className_ - 1;  |         |   60  |           60  |        109  |          78  |
   662  |     arrayPrefix = arrayPrefix + 2;  |         |   60  |           62  |        109  |          78  |
   665  |                         R = R + 2;  |      2  |   62  |           62  |        109  |          78  |
   666  |              resetPlaceHolder_1();  |         |   62  |           62  |        109  |          78  |
   679  |       className_ = className_ - 1;  |         |   62  |           62  |        109  |          77  |
   683  |     arrayPrefix = arrayPrefix + 2;  |         |   62  |           64  |        109  |          77  |
   686  |                         R = R + 2;  |      2  |   64  |           64  |        109  |          77  |
   687  |              resetPlaceHolder_1();  |         |   64  |           64  |        109  |          77  |
   700  |       className_ = className_ - 1;  |         |   64  |           64  |        109  |          76  |
   704  |     arrayPrefix = arrayPrefix + 2;  |         |   64  |           66  |        109  |          76  |
   707  |                         R = R + 2;  |      2  |   66  |           66  |        109  |          76  |
   708  |              resetPlaceHolder_1();  |         |   66  |           66  |        109  |          76  |
   721  |       className_ = className_ - 1;  |         |   66  |           66  |        109  |          75  |
   725  |     arrayPrefix = arrayPrefix + 2;  |         |   66  |           68  |        109  |          75  |
   728  |                         R = R + 2;  |      2  |   68  |           68  |        109  |          75  |
   729  |              resetPlaceHolder_1();  |         |   68  |           68  |        109  |          75  |
   742  |       className_ = className_ - 1;  |         |   68  |           68  |        109  |          74  |
   746  |     arrayPrefix = arrayPrefix + 2;  |         |   68  |           70  |        109  |          74  |
   749  |                         R = R + 2;  |      2  |   70  |           70  |        109  |          74  |
   750  |              resetPlaceHolder_1();  |         |   70  |           70  |        109  |          74  |
   763  |       className_ = className_ - 1;  |         |   70  |           70  |        109  |          73  |
   767  |     arrayPrefix = arrayPrefix + 2;  |         |   70  |           72  |        109  |          73  |
   770  |                         R = R + 2;  |      2  |   72  |           72  |        109  |          73  |
   771  |              resetPlaceHolder_1();  |         |   72  |           72  |        109  |          73  |
   784  |       className_ = className_ - 1;  |         |   72  |           72  |        109  |          72  |
   788  |     arrayPrefix = arrayPrefix + 2;  |         |   72  |           74  |        109  |          72  |
   791  |                         R = R + 2;  |      2  |   74  |           74  |        109  |          72  |
   792  |              resetPlaceHolder_1();  |         |   74  |           74  |        109  |          72  |
   805  |       className_ = className_ - 1;  |         |   74  |           74  |        109  |          71  |
   809  |     arrayPrefix = arrayPrefix + 2;  |         |   74  |           76  |        109  |          71  |
   812  |                         R = R + 2;  |      2  |   76  |           76  |        109  |          71  |
   813  |              resetPlaceHolder_1();  |         |   76  |           76  |        109  |          71  |
   826  |       className_ = className_ - 1;  |         |   76  |           76  |        109  |          70  |
   830  |     arrayPrefix = arrayPrefix + 2;  |         |   76  |           78  |        109  |          70  |
   833  |                         R = R + 2;  |      2  |   78  |           78  |        109  |          70  |
   834  |              resetPlaceHolder_1();  |         |   78  |           78  |        109  |          70  |
   847  |       className_ = className_ - 1;  |         |   78  |           78  |        109  |          69  |
   851  |     arrayPrefix = arrayPrefix + 2;  |         |   78  |           80  |        109  |          69  |
   854  |                         R = R + 2;  |      2  |   80  |           80  |        109  |          69  |
   855  |              resetPlaceHolder_1();  |         |   80  |           80  |        109  |          69  |
   868  |       className_ = className_ - 1;  |         |   80  |           80  |        109  |          68  |
   872  |     arrayPrefix = arrayPrefix + 2;  |         |   80  |           82  |        109  |          68  |
   875  |                         R = R + 2;  |      2  |   82  |           82  |        109  |          68  |
   876  |              resetPlaceHolder_1();  |         |   82  |           82  |        109  |          68  |
   889  |       className_ = className_ - 1;  |         |   82  |           82  |        109  |          67  |
   893  |     arrayPrefix = arrayPrefix + 2;  |         |   82  |           84  |        109  |          67  |
   896  |                         R = R + 2;  |      2  |   84  |           84  |        109  |          67  |
   897  |              resetPlaceHolder_1();  |         |   84  |           84  |        109  |          67  |
   910  |       className_ = className_ - 1;  |         |   84  |           84  |        109  |          66  |
   914  |     arrayPrefix = arrayPrefix + 2;  |         |   84  |           86  |        109  |          66  |
   917  |                         R = R + 2;  |      2  |   86  |           86  |        109  |          66  |
   918  |              resetPlaceHolder_1();  |         |   86  |           86  |        109  |          66  |
   931  |       className_ = className_ - 1;  |         |   86  |           86  |        109  |          65  |
   935  |     arrayPrefix = arrayPrefix + 2;  |         |   86  |           88  |        109  |          65  |
   938  |                         R = R + 2;  |      2  |   88  |           88  |        109  |          65  |
   939  |              resetPlaceHolder_1();  |         |   88  |           88  |        109  |          65  |
   952  |       className_ = className_ - 1;  |         |   88  |           88  |        109  |          64  |
   956  |     arrayPrefix = arrayPrefix + 2;  |         |   88  |           90  |        109  |          64  |
   959  |                         R = R + 2;  |      2  |   90  |           90  |        109  |          64  |
   960  |              resetPlaceHolder_1();  |         |   90  |           90  |        109  |          64  |
   973  |       className_ = className_ - 1;  |         |   90  |           90  |        109  |          63  |
   977  |     arrayPrefix = arrayPrefix + 2;  |         |   90  |           92  |        109  |          63  |
   980  |                         R = R + 2;  |      2  |   92  |           92  |        109  |          63  |
   981  |              resetPlaceHolder_1();  |         |   92  |           92  |        109  |          63  |
   994  |       className_ = className_ - 1;  |         |   92  |           92  |        109  |          62  |
   998  |     arrayPrefix = arrayPrefix + 2;  |         |   92  |           94  |        109  |          62  |
  1001  |                         R = R + 2;  |      2  |   94  |           94  |        109  |          62  |
  1002  |              resetPlaceHolder_1();  |         |   94  |           94  |        109  |          62  |
  1015  |       className_ = className_ - 1;  |         |   94  |           94  |        109  |          61  |
  1019  |     arrayPrefix = arrayPrefix + 2;  |         |   94  |           96  |        109  |          61  |
  1022  |                         R = R + 2;  |      2  |   96  |           96  |        109  |          61  |
  1023  |              resetPlaceHolder_1();  |         |   96  |           96  |        109  |          61  |
  1036  |       className_ = className_ - 1;  |         |   96  |           96  |        109  |          60  |
  1040  |     arrayPrefix = arrayPrefix + 2;  |         |   96  |           98  |        109  |          60  |
  1043  |                         R = R + 2;  |      2  |   98  |           98  |        109  |          60  |
  1044  |              resetPlaceHolder_1();  |         |   98  |           98  |        109  |          60  |
  1057  |       className_ = className_ - 1;  |         |   98  |           98  |        109  |          59  |
  1061  |     arrayPrefix = arrayPrefix + 2;  |         |   98  |          100  |        109  |          59  |
  1064  |                         R = R + 2;  |      2  |  100  |          100  |        109  |          59  |
  1065  |              resetPlaceHolder_1();  |         |  100  |          100  |        109  |          59  |
  1078  |       className_ = className_ - 1;  |         |  100  |          100  |        109  |          58  |
  1082  |     arrayPrefix = arrayPrefix + 2;  |         |  100  |          102  |        109  |          58  |
  1085  |                         R = R + 2;  |      2  |  102  |          102  |        109  |          58  |
  1086  |              resetPlaceHolder_1();  |         |  102  |          102  |        109  |          58  |
  1099  |       className_ = className_ - 1;  |         |  102  |          102  |        109  |          57  |
  1103  |     arrayPrefix = arrayPrefix + 2;  |         |  102  |          104  |        109  |          57  |
  1106  |                         R = R + 2;  |      2  |  104  |          104  |        109  |          57  |
  1107  |              resetPlaceHolder_1();  |         |  104  |          104  |        109  |          57  |
  1120  |       className_ = className_ - 1;  |         |  104  |          104  |        109  |          56  |
  1124  |     arrayPrefix = arrayPrefix + 2;  |         |  104  |          106  |        109  |          56  |
  1127  |                         R = R + 2;  |      2  |  106  |          106  |        109  |          56  |
  1128  |              resetPlaceHolder_1();  |         |  106  |          106  |        109  |          56  |
  1141  |       className_ = className_ - 1;  |         |  106  |          106  |        109  |          55  |
  1145  |     arrayPrefix = arrayPrefix + 2;  |         |  106  |          108  |        109  |          55  |
  1148  |                         R = R + 2;  |      2  |  108  |          108  |        109  |          55  |
  1149  |              resetPlaceHolder_1();  |         |  108  |          108  |        109  |          55  |
  1162  |       className_ = className_ - 1;  |         |  108  |          108  |        109  |          54  |
  1166  |     arrayPrefix = arrayPrefix + 2;  |         |  108  |          110  |        109  |          54  |
  1169  |                         R = R + 2;  |      2  |  110  |          110  |        109  |          54  |
  1170  |              resetPlaceHolder_1();  |         |  110  |          110  |        109  |          54  |
  1183  |       className_ = className_ - 1;  |         |  110  |          110  |        109  |          53  |
  1187  |     arrayPrefix = arrayPrefix + 2;  |         |  110  |          112  |        109  |          53  |
  1190  |                         R = R + 2;  |      2  |  112  |          112  |        109  |          53  |
  1191  |              resetPlaceHolder_1();  |         |  112  |          112  |        109  |          53  |
  1204  |       className_ = className_ - 1;  |         |  112  |          112  |        109  |          52  |
  1208  |     arrayPrefix = arrayPrefix + 2;  |         |  112  |          114  |        109  |          52  |
  1211  |                         R = R + 2;  |      2  |  114  |          114  |        109  |          52  |
  1212  |              resetPlaceHolder_1();  |         |  114  |          114  |        109  |          52  |
  1225  |       className_ = className_ - 1;  |         |  114  |          114  |        109  |          51  |
  1229  |     arrayPrefix = arrayPrefix + 2;  |         |  114  |          116  |        109  |          51  |
  1232  |                         R = R + 2;  |      2  |  116  |          116  |        109  |          51  |
  1233  |              resetPlaceHolder_1();  |         |  116  |          116  |        109  |          51  |
  1246  |       className_ = className_ - 1;  |         |  116  |          116  |        109  |          50  |
  1250  |     arrayPrefix = arrayPrefix + 2;  |         |  116  |          118  |        109  |          50  |
  1253  |                         R = R + 2;  |      2  |  118  |          118  |        109  |          50  |
  1254  |              resetPlaceHolder_1();  |         |  118  |          118  |        109  |          50  |
  1267  |       className_ = className_ - 1;  |         |  118  |          118  |        109  |          49  |
  1271  |     arrayPrefix = arrayPrefix + 2;  |         |  118  |          120  |        109  |          49  |
  1274  |                         R = R + 2;  |      2  |  120  |          120  |        109  |          49  |
  1275  |              resetPlaceHolder_1();  |         |  120  |          120  |        109  |          49  |
  1288  |       className_ = className_ - 1;  |         |  120  |          120  |        109  |          48  |
  1292  |     arrayPrefix = arrayPrefix + 2;  |         |  120  |          122  |        109  |          48  |
  1295  |                         R = R + 2;  |      2  |  122  |          122  |        109  |          48  |
  1296  |              resetPlaceHolder_1();  |         |  122  |          122  |        109  |          48  |
  1309  |       className_ = className_ - 1;  |         |  122  |          122  |        109  |          47  |
  1313  |     arrayPrefix = arrayPrefix + 2;  |         |  122  |          124  |        109  |          47  |
  1316  |                         R = R + 2;  |      2  |  124  |          124  |        109  |          47  |
  1317  |              resetPlaceHolder_1();  |         |  124  |          124  |        109  |          47  |
  1330  |       className_ = className_ - 1;  |         |  124  |          124  |        109  |          46  |
  1334  |     arrayPrefix = arrayPrefix + 2;  |         |  124  |          126  |        109  |          46  |
  1337  |                         R = R + 2;  |      2  |  126  |          126  |        109  |          46  |
  1338  |              resetPlaceHolder_1();  |         |  126  |          126  |        109  |          46  |
  1351  |       className_ = className_ - 1;  |         |  126  |          126  |        109  |          45  |
  1355  |     arrayPrefix = arrayPrefix + 2;  |         |  126  |          128  |        109  |          45  |
  1358  |                         R = R + 2;  |      2  |  128  |          128  |        109  |          45  |
  1359  |              resetPlaceHolder_1();  |         |  128  |          128  |        109  |          45  |
  1372  |       className_ = className_ - 1;  |         |  128  |          128  |        109  |          44  |
  1376  |     arrayPrefix = arrayPrefix + 2;  |         |  128  |          130  |        109  |          44  |
  1379  |                         R = R + 2;  |      2  |  130  |          130  |        109  |          44  |
  1380  |              resetPlaceHolder_1();  |         |  130  |          130  |        109  |          44  |
  1393  |       className_ = className_ - 1;  |         |  130  |          130  |        109  |          43  |
  1397  |     arrayPrefix = arrayPrefix + 2;  |         |  130  |          132  |        109  |          43  |
  1400  |                         R = R + 2;  |      2  |  132  |          132  |        109  |          43  |
  1401  |              resetPlaceHolder_1();  |         |  132  |          132  |        109  |          43  |
  1414  |       className_ = className_ - 1;  |         |  132  |          132  |        109  |          42  |
  1418  |     arrayPrefix = arrayPrefix + 2;  |         |  132  |          134  |        109  |          42  |
  1421  |                         R = R + 2;  |      2  |  134  |          134  |        109  |          42  |
  1422  |              resetPlaceHolder_1();  |         |  134  |          134  |        109  |          42  |
  1435  |       className_ = className_ - 1;  |         |  134  |          134  |        109  |          41  |
  1439  |     arrayPrefix = arrayPrefix + 2;  |         |  134  |          136  |        109  |          41  |
  1442  |                         R = R + 2;  |      2  |  136  |          136  |        109  |          41  |
  1443  |              resetPlaceHolder_1();  |         |  136  |          136  |        109  |          41  |
  1456  |       className_ = className_ - 1;  |         |  136  |          136  |        109  |          40  |
  1460  |     arrayPrefix = arrayPrefix + 2;  |         |  136  |          138  |        109  |          40  |
  1463  |                         R = R + 2;  |      2  |  138  |          138  |        109  |          40  |
  1464  |              resetPlaceHolder_1();  |         |  138  |          138  |        109  |          40  |
  1477  |       className_ = className_ - 1;  |         |  138  |          138  |        109  |          39  |
  1481  |     arrayPrefix = arrayPrefix + 2;  |         |  138  |          140  |        109  |          39  |
  1484  |                         R = R + 2;  |      2  |  140  |          140  |        109  |          39  |
  1485  |              resetPlaceHolder_1();  |         |  140  |          140  |        109  |          39  |
  1498  |       className_ = className_ - 1;  |         |  140  |          140  |        109  |          38  |
  1502  |     arrayPrefix = arrayPrefix + 2;  |         |  140  |          142  |        109  |          38  |
  1505  |                         R = R + 2;  |      2  |  142  |          142  |        109  |          38  |
  1506  |              resetPlaceHolder_1();  |         |  142  |          142  |        109  |          38  |
  1519  |       className_ = className_ - 1;  |         |  142  |          142  |        109  |          37  |
  1523  |     arrayPrefix = arrayPrefix + 2;  |         |  142  |          144  |        109  |          37  |
  1526  |                         R = R + 2;  |      2  |  144  |          144  |        109  |          37  |
  1527  |              resetPlaceHolder_1();  |         |  144  |          144  |        109  |          37  |
  1540  |       className_ = className_ - 1;  |         |  144  |          144  |        109  |          36  |
  1544  |     arrayPrefix = arrayPrefix + 2;  |         |  144  |          146  |        109  |          36  |
  1547  |                         R = R + 2;  |      2  |  146  |          146  |        109  |          36  |
  1548  |              resetPlaceHolder_1();  |         |  146  |          146  |        109  |          36  |
  1561  |       className_ = className_ - 1;  |         |  146  |          146  |        109  |          35  |
  1565  |     arrayPrefix = arrayPrefix + 2;  |         |  146  |          148  |        109  |          35  |
  1568  |                         R = R + 2;  |      2  |  148  |          148  |        109  |          35  |
  1569  |              resetPlaceHolder_1();  |         |  148  |          148  |        109  |          35  |
  1582  |       className_ = className_ - 1;  |         |  148  |          148  |        109  |          34  |
  1586  |     arrayPrefix = arrayPrefix + 2;  |         |  148  |          150  |        109  |          34  |
  1589  |                         R = R + 2;  |      2  |  150  |          150  |        109  |          34  |
  1590  |              resetPlaceHolder_1();  |         |  150  |          150  |        109  |          34  |
  1603  |       className_ = className_ - 1;  |         |  150  |          150  |        109  |          33  |
  1607  |     arrayPrefix = arrayPrefix + 2;  |         |  150  |          152  |        109  |          33  |
  1610  |                         R = R + 2;  |      2  |  152  |          152  |        109  |          33  |
  1611  |              resetPlaceHolder_1();  |         |  152  |          152  |        109  |          33  |
  1624  |       className_ = className_ - 1;  |         |  152  |          152  |        109  |          32  |
  1628  |     arrayPrefix = arrayPrefix + 2;  |         |  152  |          154  |        109  |          32  |
  1631  |                         R = R + 2;  |      2  |  154  |          154  |        109  |          32  |
  1632  |              resetPlaceHolder_1();  |         |  154  |          154  |        109  |          32  |
  1645  |       className_ = className_ - 1;  |         |  154  |          154  |        109  |          31  |
  1649  |     arrayPrefix = arrayPrefix + 2;  |         |  154  |          156  |        109  |          31  |
  1652  |                         R = R + 2;  |      2  |  156  |          156  |        109  |          31  |
  1653  |              resetPlaceHolder_1();  |         |  156  |          156  |        109  |          31  |
  1666  |       className_ = className_ - 1;  |         |  156  |          156  |        109  |          30  |
  1670  |     arrayPrefix = arrayPrefix + 2;  |         |  156  |          158  |        109  |          30  |
  1673  |                         R = R + 2;  |      2  |  158  |          158  |        109  |          30  |
  1674  |              resetPlaceHolder_1();  |         |  158  |          158  |        109  |          30  |
  1687  |       className_ = className_ - 1;  |         |  158  |          158  |        109  |          29  |
  1691  |     arrayPrefix = arrayPrefix + 2;  |         |  158  |          160  |        109  |          29  |
  1694  |                         R = R + 2;  |      2  |  160  |          160  |        109  |          29  |
  1695  |              resetPlaceHolder_1();  |         |  160  |          160  |        109  |          29  |
  1708  |       className_ = className_ - 1;  |         |  160  |          160  |        109  |          28  |
  1712  |     arrayPrefix = arrayPrefix + 2;  |         |  160  |          162  |        109  |          28  |
  1715  |                         R = R + 2;  |      2  |  162  |          162  |        109  |          28  |
  1716  |              resetPlaceHolder_1();  |         |  162  |          162  |        109  |          28  |
  1729  |       className_ = className_ - 1;  |         |  162  |          162  |        109  |          27  |
  1733  |     arrayPrefix = arrayPrefix + 2;  |         |  162  |          164  |        109  |          27  |
  1736  |                         R = R + 2;  |      2  |  164  |          164  |        109  |          27  |
  1737  |              resetPlaceHolder_1();  |         |  164  |          164  |        109  |          27  |
  1750  |       className_ = className_ - 1;  |         |  164  |          164  |        109  |          26  |
  1754  |     arrayPrefix = arrayPrefix + 2;  |         |  164  |          166  |        109  |          26  |
  1757  |                         R = R + 2;  |      2  |  166  |          166  |        109  |          26  |
  1758  |              resetPlaceHolder_1();  |         |  166  |          166  |        109  |          26  |
  1771  |       className_ = className_ - 1;  |         |  166  |          166  |        109  |          25  |
  1775  |     arrayPrefix = arrayPrefix + 2;  |         |  166  |          168  |        109  |          25  |
  1778  |                         R = R + 2;  |      2  |  168  |          168  |        109  |          25  |
  1779  |              resetPlaceHolder_1();  |         |  168  |          168  |        109  |          25  |
  1792  |       className_ = className_ - 1;  |         |  168  |          168  |        109  |          24  |
  1796  |     arrayPrefix = arrayPrefix + 2;  |         |  168  |          170  |        109  |          24  |
  1799  |                         R = R + 2;  |      2  |  170  |          170  |        109  |          24  |
  1800  |              resetPlaceHolder_1();  |         |  170  |          170  |        109  |          24  |
  1813  |       className_ = className_ - 1;  |         |  170  |          170  |        109  |          23  |
  1817  |     arrayPrefix = arrayPrefix + 2;  |         |  170  |          172  |        109  |          23  |
  1820  |                         R = R + 2;  |      2  |  172  |          172  |        109  |          23  |
  1821  |              resetPlaceHolder_1();  |         |  172  |          172  |        109  |          23  |
  1834  |       className_ = className_ - 1;  |         |  172  |          172  |        109  |          22  |
  1838  |     arrayPrefix = arrayPrefix + 2;  |         |  172  |          174  |        109  |          22  |
  1841  |                         R = R + 2;  |      2  |  174  |          174  |        109  |          22  |
  1842  |              resetPlaceHolder_1();  |         |  174  |          174  |        109  |          22  |
  1855  |       className_ = className_ - 1;  |         |  174  |          174  |        109  |          21  |
  1859  |     arrayPrefix = arrayPrefix + 2;  |         |  174  |          176  |        109  |          21  |
  1862  |                         R = R + 2;  |      2  |  176  |          176  |        109  |          21  |
  1863  |              resetPlaceHolder_1();  |         |  176  |          176  |        109  |          21  |
  1876  |       className_ = className_ - 1;  |         |  176  |          176  |        109  |          20  |
  1880  |     arrayPrefix = arrayPrefix + 2;  |         |  176  |          178  |        109  |          20  |
  1883  |                         R = R + 2;  |      2  |  178  |          178  |        109  |          20  |
  1884  |              resetPlaceHolder_1();  |         |  178  |          178  |        109  |          20  |
  1897  |       className_ = className_ - 1;  |         |  178  |          178  |        109  |          19  |
  1901  |     arrayPrefix = arrayPrefix + 2;  |         |  178  |          180  |        109  |          19  |
  1904  |                         R = R + 2;  |      2  |  180  |          180  |        109  |          19  |
  1905  |              resetPlaceHolder_1();  |         |  180  |          180  |        109  |          19  |
  1918  |       className_ = className_ - 1;  |         |  180  |          180  |        109  |          18  |
  1922  |     arrayPrefix = arrayPrefix + 2;  |         |  180  |          182  |        109  |          18  |
  1925  |                         R = R + 2;  |      2  |  182  |          182  |        109  |          18  |
  1926  |              resetPlaceHolder_1();  |         |  182  |          182  |        109  |          18  |
  1939  |       className_ = className_ - 1;  |         |  182  |          182  |        109  |          17  |
  1943  |     arrayPrefix = arrayPrefix + 2;  |         |  182  |          184  |        109  |          17  |
  1946  |                         R = R + 2;  |      2  |  184  |          184  |        109  |          17  |
  1947  |              resetPlaceHolder_1();  |         |  184  |          184  |        109  |          17  |
  1960  |       className_ = className_ - 1;  |         |  184  |          184  |        109  |          16  |
  1964  |     arrayPrefix = arrayPrefix + 2;  |         |  184  |          186  |        109  |          16  |
  1967  |                         R = R + 2;  |      2  |  186  |          186  |        109  |          16  |
  1968  |              resetPlaceHolder_1();  |         |  186  |          186  |        109  |          16  |
  1981  |       className_ = className_ - 1;  |         |  186  |          186  |        109  |          15  |
  1985  |     arrayPrefix = arrayPrefix + 2;  |         |  186  |          188  |        109  |          15  |
  1988  |                         R = R + 2;  |      2  |  188  |          188  |        109  |          15  |
  1989  |              resetPlaceHolder_1();  |         |  188  |          188  |        109  |          15  |
  2002  |       className_ = className_ - 1;  |         |  188  |          188  |        109  |          14  |
  2006  |     arrayPrefix = arrayPrefix + 2;  |         |  188  |          190  |        109  |          14  |
  2009  |                         R = R + 2;  |      2  |  190  |          190  |        109  |          14  |
  2010  |              resetPlaceHolder_1();  |         |  190  |          190  |        109  |          14  |
  2023  |       className_ = className_ - 1;  |         |  190  |          190  |        109  |          13  |
  2027  |     arrayPrefix = arrayPrefix + 2;  |         |  190  |          192  |        109  |          13  |
  2030  |                         R = R + 2;  |      2  |  192  |          192  |        109  |          13  |
  2031  |              resetPlaceHolder_1();  |         |  192  |          192  |        109  |          13  |
  2044  |       className_ = className_ - 1;  |         |  192  |          192  |        109  |          12  |
  2048  |     arrayPrefix = arrayPrefix + 2;  |         |  192  |          194  |        109  |          12  |
  2051  |                         R = R + 2;  |      2  |  194  |          194  |        109  |          12  |
  2052  |              resetPlaceHolder_1();  |         |  194  |          194  |        109  |          12  |
  2065  |       className_ = className_ - 1;  |         |  194  |          194  |        109  |          11  |
  2069  |     arrayPrefix = arrayPrefix + 2;  |         |  194  |          196  |        109  |          11  |
  2072  |                         R = R + 2;  |      2  |  196  |          196  |        109  |          11  |
  2073  |              resetPlaceHolder_1();  |         |  196  |          196  |        109  |          11  |
  2086  |       className_ = className_ - 1;  |         |  196  |          196  |        109  |          10  |
  2090  |     arrayPrefix = arrayPrefix + 2;  |         |  196  |          198  |        109  |          10  |
  2093  |                         R = R + 2;  |      2  |  198  |          198  |        109  |          10  |
  2094  |              resetPlaceHolder_1();  |         |  198  |          198  |        109  |          10  |
  2107  |       className_ = className_ - 1;  |         |  198  |          198  |        109  |           9  |
  2111  |     arrayPrefix = arrayPrefix + 2;  |         |  198  |          200  |        109  |           9  |
  2114  |                         R = R + 2;  |      2  |  200  |          200  |        109  |           9  |
  2115  |              resetPlaceHolder_1();  |         |  200  |          200  |        109  |           9  |
  2128  |       className_ = className_ - 1;  |         |  200  |          200  |        109  |           8  |
  2132  |     arrayPrefix = arrayPrefix + 2;  |         |  200  |          202  |        109  |           8  |
  2135  |                         R = R + 2;  |      2  |  202  |          202  |        109  |           8  |
  2136  |              resetPlaceHolder_1();  |         |  202  |          202  |        109  |           8  |
  2149  |       className_ = className_ - 1;  |         |  202  |          202  |        109  |           7  |
  2153  |     arrayPrefix = arrayPrefix + 2;  |         |  202  |          204  |        109  |           7  |
  2156  |                         R = R + 2;  |      2  |  204  |          204  |        109  |           7  |
  2157  |              resetPlaceHolder_1();  |         |  204  |          204  |        109  |           7  |
  2170  |       className_ = className_ - 1;  |         |  204  |          204  |        109  |           6  |
  2174  |     arrayPrefix = arrayPrefix + 2;  |         |  204  |          206  |        109  |           6  |
  2177  |                         R = R + 2;  |      2  |  206  |          206  |        109  |           6  |
  2178  |              resetPlaceHolder_1();  |         |  206  |          206  |        109  |           6  |
  2191  |       className_ = className_ - 1;  |         |  206  |          206  |        109  |           5  |
  2195  |     arrayPrefix = arrayPrefix + 2;  |         |  206  |          208  |        109  |           5  |
  2198  |                         R = R + 2;  |      2  |  208  |          208  |        109  |           5  |
  2199  |              resetPlaceHolder_1();  |         |  208  |          208  |        109  |           5  |
  2212  |       className_ = className_ - 1;  |         |  208  |          208  |        109  |           4  |
  2216  |     arrayPrefix = arrayPrefix + 2;  |         |  208  |          210  |        109  |           4  |
  2219  |                         R = R + 2;  |      2  |  210  |          210  |        109  |           4  |
  2220  |              resetPlaceHolder_1();  |         |  210  |          210  |        109  |           4  |
  2233  |       className_ = className_ - 1;  |         |  210  |          210  |        109  |           3  |
  2237  |     arrayPrefix = arrayPrefix + 2;  |         |  210  |          212  |        109  |           3  |
  2240  |                         R = R + 2;  |      2  |  212  |          212  |        109  |           3  |
  2241  |              resetPlaceHolder_1();  |         |  212  |          212  |        109  |           3  |
  2254  |       className_ = className_ - 1;  |         |  212  |          212  |        109  |           2  |
  2258  |     arrayPrefix = arrayPrefix + 2;  |         |  212  |          214  |        109  |           2  |
  2261  |                         R = R + 2;  |      2  |  214  |          214  |        109  |           2  |
  2262  |              resetPlaceHolder_1();  |         |  214  |          214  |        109  |           2  |
  2275  |       className_ = className_ - 1;  |         |  214  |          214  |        109  |           1  |
  2279  |     arrayPrefix = arrayPrefix + 2;  |         |  214  |          216  |        109  |           1  |
  2282  |                         R = R + 2;  |      2  |  216  |          216  |        109  |           1  |
  2283  |              resetPlaceHolder_1();  |         |  216  |          216  |        109  |           1  |
  2296  |       className_ = className_ - 1;  |         |  216  |          216  |        109  |           0  |
  2300  |     arrayPrefix = arrayPrefix + 2;  |         |  216  |          218  |        109  |           0  |
  2303  |                         R = R + 2;  |      2  |  218  |          218  |        109  |           0  |
  2304  |              resetPlaceHolder_1();  |         |  218  |          218  |        109  |           0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [1337, 1190, 2072, 518, 1295, 1211, 308, 2282, 2114, 56, 1988, 1001, 1127, 1967, 1904, 917, 1379, 770, 1568, 1778, 1232, 1946, 623, 602, 1169, 1526, 2093, 1736, 1274, 392, 1883, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 2240, 1799, 1715, 371, 938, 266, 161, 1631, 1652, 875, 413, 350, 1589, 245, 1043, 434, 98, 2261, 140, 1862, 1022, 1820, 1841, 959, 2051, 455, 2303, 2156, 1694, 35, 812, 749, 1547, 1400, 707, 1484, 791, 182, 2219, 1085, 1358, 2030, 497, 1421, 1316, 539, 203, 581, 1253, 896, 2135, 2009, 119, 2198, 1442, 287, 833, 854, 1148, 1673, 1757, 1610, 728, 644, 1925, 1505, 1463, 560, 2177]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [1337, 1190, 2072, 518, 1295, 1211, 308, 2282, 2114, 56, 1988, 1001, 1127, 1967, 1904, 917, 1379, 770, 1568, 1778, 1232, 1946, 623, 602, 1169, 1526, 2093, 1736, 1274, 392, 1883, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 2240, 1799, 1715, 371, 938, 266, 161, 1631, 1652, 875, 413, 350, 1589, 245, 1043, 434, 98, 2261, 140, 1862, 1022, 1820, 1841, 959, 2051, 455, 2303, 2156, 1694, 35, 812, 749, 1547, 1400, 707, 1484, 791, 182, 2219, 1085, 1358, 2030, 497, 1421, 1316, 539, 203, 581, 1253, 896, 2135, 2009, 119, 2198, 1442, 287, 833, 854, 1148, 1673, 1757, 1610, 728, 644, 1925, 1505, 1463, 560, 2177]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [1337, 1190, 2072, 518, 1295, 1211, 308, 2282, 2114, 56, 1988, 1001, 1127, 1967, 1904, 917, 1379, 770, 1568, 1778, 1232, 1946, 623, 602, 1169, 1526, 2093, 1736, 1274, 392, 1883, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 2240, 1799, 1715, 371, 938, 266, 161, 1631, 1652, 875, 413, 350, 1589, 245, 1043, 434, 98, 2261, 140, 1862, 1022, 1820, 1841, 959, 2051, 455, 2303, 2156, 1694, 35, 812, 749, 1547, 1400, 707, 1484, 791, 182, 2219, 1085, 1358, 2030, 497, 1421, 1316, 539, 203, 581, 1253, 896, 2135, 2009, 119, 2198, 1442, 287, 833, 854, 1148, 1673, 1757, 1610, 728, 644, 1925, 1505, 1463, 560, 2177]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1337, 1190, 2072, 518, 1295, 1211, 308, 2282, 2114, 56, 1988, 1001, 1127, 1967, 1904, 917, 1379, 770, 1568, 1778, 1232, 1946, 623, 602, 1169, 1526, 2093, 1736, 1274, 392, 1883, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 2240, 1799, 1715, 371, 938, 266, 161, 1631, 1652, 875, 413, 350, 1589, 245, 1043, 434, 98, 2261, 140, 1862, 1022, 1820, 1841, 959, 2051, 455, 2303, 2156, 1694, 35, 812, 749, 1547, 1400, 707, 1484, 791, 182, 2219, 1085, 1358, 2030, 497, 1421, 1316, 539, 203, 581, 1253, 896, 2135, 2009, 119, 2198, 1442, 287, 833, 854, 1148, 1673, 1757, 1610, 728, 644, 1925, 1505, 1463, 560, 2177]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [1337, 1190, 2072, 518, 1295, 1211, 308, 2282, 2114, 56, 1988, 1001, 1127, 1967, 1904, 917, 1379, 770, 1568, 1778, 1232, 1946, 623, 602, 1169, 1526, 2093, 1736, 1274, 392, 1883, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 2240, 1799, 1715, 371, 938, 266, 161, 1631, 1652, 875, 413, 350, 1589, 245, 1043, 434, 98, 2261, 140, 1862, 1022, 1820, 1841, 959, 2051, 455, 2303, 2156, 1694, 35, 812, 749, 1547, 1400, 707, 1484, 791, 182, 2219, 1085, 1358, 2030, 497, 1421, 1316, 539, 203, 581, 1253, 896, 2135, 2009, 119, 2198, 1442, 287, 833, 854, 1148, 1673, 1757, 1610, 728, 644, 1925, 1505, 1463, 560, 2177]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [1337, 1190, 2072, 518, 1295, 1211, 308, 2282, 2114, 56, 1988, 1001, 1127, 1967, 1904, 917, 1379, 770, 1568, 1778, 1232, 1946, 623, 602, 1169, 1526, 2093, 1736, 1274, 392, 1883, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 2240, 1799, 1715, 371, 938, 266, 161, 1631, 1652, 875, 413, 350, 1589, 245, 1043, 434, 98, 2261, 140, 1862, 1022, 1820, 1841, 959, 2051, 455, 2303, 2156, 1694, 35, 812, 749, 1547, 1400, 707, 1484, 791, 182, 2219, 1085, 1358, 2030, 497, 1421, 1316, 539, 203, 581, 1253, 896, 2135, 2009, 119, 2198, 1442, 287, 833, 854, 1148, 1673, 1757, 1610, 728, 644, 1925, 1505, 1463, 560, 2177]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1337, 1190, 2072, 518, 1295, 1211, 308, 2282, 2114, 56, 1988, 1001, 1127, 1967, 1904, 917, 1379, 770, 1568, 1778, 1232, 1946, 623, 602, 1169, 1526, 2093, 1736, 1274, 392, 1883, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 2240, 1799, 1715, 371, 938, 266, 161, 1631, 1652, 875, 413, 350, 1589, 245, 1043, 434, 98, 2261, 140, 1862, 1022, 1820, 1841, 959, 2051, 455, 2303, 2156, 1694, 35, 812, 749, 1547, 1400, 707, 1484, 791, 182, 2219, 1085, 1358, 2030, 497, 1421, 1316, 539, 203, 581, 1253, 896, 2135, 2009, 119, 2198, 1442, 287, 833, 854, 1148, 1673, 1757, 1610, 728, 644, 1925, 1505, 1463, 560, 2177]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1337, 1190, 2072, 518, 1295, 1211, 308, 2282, 2114, 56, 1988, 1001, 1127, 1967, 1904, 917, 1379, 770, 1568, 1778, 1232, 1946, 623, 602, 1169, 1526, 2093, 1736, 1274, 392, 1883, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 2240, 1799, 1715, 371, 938, 266, 161, 1631, 1652, 875, 413, 350, 1589, 245, 1043, 434, 98, 2261, 140, 1862, 1022, 1820, 1841, 959, 2051, 455, 2303, 2156, 1694, 35, 812, 749, 1547, 1400, 707, 1484, 791, 182, 2219, 1085, 1358, 2030, 497, 1421, 1316, 539, 203, 581, 1253, 896, 2135, 2009, 119, 2198, 1442, 287, 833, 854, 1148, 1673, 1757, 1610, 728, 644, 1925, 1505, 1463, 560, 2177]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [1337, 1190, 2072, 518, 1295, 1211, 308, 2282, 2114, 56, 1988, 1001, 1127, 1967, 1904, 917, 1379, 770, 1568, 1778, 1232, 1946, 623, 602, 1169, 1526, 2093, 1736, 1274, 392, 1883, 329, 665, 224, 1106, 1064, 980, 77, 686, 476, 2240, 1799, 1715, 371, 938, 266, 161, 1631, 1652, 875, 413, 350, 1589, 245, 1043, 434, 98, 2261, 140, 1862, 1022, 1820, 1841, 959, 2051, 455, 2303, 2156, 1694, 35, 812, 749, 1547, 1400, 707, 1484, 791, 182, 2219, 1085, 1358, 2030, 497, 1421, 1316, 539, 203, 581, 1253, 896, 2135, 2009, 119, 2198, 1442, 287, 833, 854, 1148, 1673, 1757, 1610, 728, 644, 1925, 1505, 1463, 560, 2177]
INFO  brbo.backend2.learning.SegmentClustering - Not generating segments due to too many nodes: more than 100
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {35,56,77,98,119,140,161,182,203,224,245,266,287,308,329,350,371,392,413,434,455,476,497,518,539,560,581,602,623,644,665,686,707,728,749,770,791,812,833,854,875,896,917,938,959,980,1001,1022,1043,1064,1085,1106,1127,1148,1169,1190,1211,1232,1253,1274,1295,1316,1337,1358,1379,1400,1421,1442,1463,1484,1505,1526,1547,1568,1589,1610,1631,1652,1673,1694,1715,1736,1757,1778,1799,1820,1841,1862,1883,1904,1925,1946,1967,1988,2009,2030,2051,2072,2093,2114,2135,2156,2177,2198,2219,2240,2261,2282,2303}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    35  |             R = R + 2;  |      2  |                         0  |
    36  |  resetPlaceHolder_1();  |         |                            |
    56  |             R = R + 2;  |      2  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    77  |             R = R + 2;  |      2  |                         0  |
    78  |  resetPlaceHolder_1();  |         |                            |
    98  |             R = R + 2;  |      2  |                         0  |
    99  |  resetPlaceHolder_1();  |         |                            |
   119  |             R = R + 2;  |      2  |                         0  |
   120  |  resetPlaceHolder_1();  |         |                            |
   140  |             R = R + 2;  |      2  |                         0  |
   141  |  resetPlaceHolder_1();  |         |                            |
   161  |             R = R + 2;  |      2  |                         0  |
   162  |  resetPlaceHolder_1();  |         |                            |
   182  |             R = R + 2;  |      2  |                         0  |
   183  |  resetPlaceHolder_1();  |         |                            |
   203  |             R = R + 2;  |      2  |                         0  |
   204  |  resetPlaceHolder_1();  |         |                            |
   224  |             R = R + 2;  |      2  |                         0  |
   225  |  resetPlaceHolder_1();  |         |                            |
   245  |             R = R + 2;  |      2  |                         0  |
   246  |  resetPlaceHolder_1();  |         |                            |
   266  |             R = R + 2;  |      2  |                         0  |
   267  |  resetPlaceHolder_1();  |         |                            |
   287  |             R = R + 2;  |      2  |                         0  |
   288  |  resetPlaceHolder_1();  |         |                            |
   308  |             R = R + 2;  |      2  |                         0  |
   309  |  resetPlaceHolder_1();  |         |                            |
   329  |             R = R + 2;  |      2  |                         0  |
   330  |  resetPlaceHolder_1();  |         |                            |
   350  |             R = R + 2;  |      2  |                         0  |
   351  |  resetPlaceHolder_1();  |         |                            |
   371  |             R = R + 2;  |      2  |                         0  |
   372  |  resetPlaceHolder_1();  |         |                            |
   392  |             R = R + 2;  |      2  |                         0  |
   393  |  resetPlaceHolder_1();  |         |                            |
   413  |             R = R + 2;  |      2  |                         0  |
   414  |  resetPlaceHolder_1();  |         |                            |
   434  |             R = R + 2;  |      2  |                         0  |
   435  |  resetPlaceHolder_1();  |         |                            |
   455  |             R = R + 2;  |      2  |                         0  |
   456  |  resetPlaceHolder_1();  |         |                            |
   476  |             R = R + 2;  |      2  |                         0  |
   477  |  resetPlaceHolder_1();  |         |                            |
   497  |             R = R + 2;  |      2  |                         0  |
   498  |  resetPlaceHolder_1();  |         |                            |
   518  |             R = R + 2;  |      2  |                         0  |
   519  |  resetPlaceHolder_1();  |         |                            |
   539  |             R = R + 2;  |      2  |                         0  |
   540  |  resetPlaceHolder_1();  |         |                            |
   560  |             R = R + 2;  |      2  |                         0  |
   561  |  resetPlaceHolder_1();  |         |                            |
   581  |             R = R + 2;  |      2  |                         0  |
   582  |  resetPlaceHolder_1();  |         |                            |
   602  |             R = R + 2;  |      2  |                         0  |
   603  |  resetPlaceHolder_1();  |         |                            |
   623  |             R = R + 2;  |      2  |                         0  |
   624  |  resetPlaceHolder_1();  |         |                            |
   644  |             R = R + 2;  |      2  |                         0  |
   645  |  resetPlaceHolder_1();  |         |                            |
   665  |             R = R + 2;  |      2  |                         0  |
   666  |  resetPlaceHolder_1();  |         |                            |
   686  |             R = R + 2;  |      2  |                         0  |
   687  |  resetPlaceHolder_1();  |         |                            |
   707  |             R = R + 2;  |      2  |                         0  |
   708  |  resetPlaceHolder_1();  |         |                            |
   728  |             R = R + 2;  |      2  |                         0  |
   729  |  resetPlaceHolder_1();  |         |                            |
   749  |             R = R + 2;  |      2  |                         0  |
   750  |  resetPlaceHolder_1();  |         |                            |
   770  |             R = R + 2;  |      2  |                         0  |
   771  |  resetPlaceHolder_1();  |         |                            |
   791  |             R = R + 2;  |      2  |                         0  |
   792  |  resetPlaceHolder_1();  |         |                            |
   812  |             R = R + 2;  |      2  |                         0  |
   813  |  resetPlaceHolder_1();  |         |                            |
   833  |             R = R + 2;  |      2  |                         0  |
   834  |  resetPlaceHolder_1();  |         |                            |
   854  |             R = R + 2;  |      2  |                         0  |
   855  |  resetPlaceHolder_1();  |         |                            |
   875  |             R = R + 2;  |      2  |                         0  |
   876  |  resetPlaceHolder_1();  |         |                            |
   896  |             R = R + 2;  |      2  |                         0  |
   897  |  resetPlaceHolder_1();  |         |                            |
   917  |             R = R + 2;  |      2  |                         0  |
   918  |  resetPlaceHolder_1();  |         |                            |
   938  |             R = R + 2;  |      2  |                         0  |
   939  |  resetPlaceHolder_1();  |         |                            |
   959  |             R = R + 2;  |      2  |                         0  |
   960  |  resetPlaceHolder_1();  |         |                            |
   980  |             R = R + 2;  |      2  |                         0  |
   981  |  resetPlaceHolder_1();  |         |                            |
  1001  |             R = R + 2;  |      2  |                         0  |
  1002  |  resetPlaceHolder_1();  |         |                            |
  1022  |             R = R + 2;  |      2  |                         0  |
  1023  |  resetPlaceHolder_1();  |         |                            |
  1043  |             R = R + 2;  |      2  |                         0  |
  1044  |  resetPlaceHolder_1();  |         |                            |
  1064  |             R = R + 2;  |      2  |                         0  |
  1065  |  resetPlaceHolder_1();  |         |                            |
  1085  |             R = R + 2;  |      2  |                         0  |
  1086  |  resetPlaceHolder_1();  |         |                            |
  1106  |             R = R + 2;  |      2  |                         0  |
  1107  |  resetPlaceHolder_1();  |         |                            |
  1127  |             R = R + 2;  |      2  |                         0  |
  1128  |  resetPlaceHolder_1();  |         |                            |
  1148  |             R = R + 2;  |      2  |                         0  |
  1149  |  resetPlaceHolder_1();  |         |                            |
  1169  |             R = R + 2;  |      2  |                         0  |
  1170  |  resetPlaceHolder_1();  |         |                            |
  1190  |             R = R + 2;  |      2  |                         0  |
  1191  |  resetPlaceHolder_1();  |         |                            |
  1211  |             R = R + 2;  |      2  |                         0  |
  1212  |  resetPlaceHolder_1();  |         |                            |
  1232  |             R = R + 2;  |      2  |                         0  |
  1233  |  resetPlaceHolder_1();  |         |                            |
  1253  |             R = R + 2;  |      2  |                         0  |
  1254  |  resetPlaceHolder_1();  |         |                            |
  1274  |             R = R + 2;  |      2  |                         0  |
  1275  |  resetPlaceHolder_1();  |         |                            |
  1295  |             R = R + 2;  |      2  |                         0  |
  1296  |  resetPlaceHolder_1();  |         |                            |
  1316  |             R = R + 2;  |      2  |                         0  |
  1317  |  resetPlaceHolder_1();  |         |                            |
  1337  |             R = R + 2;  |      2  |                         0  |
  1338  |  resetPlaceHolder_1();  |         |                            |
  1358  |             R = R + 2;  |      2  |                         0  |
  1359  |  resetPlaceHolder_1();  |         |                            |
  1379  |             R = R + 2;  |      2  |                         0  |
  1380  |  resetPlaceHolder_1();  |         |                            |
  1400  |             R = R + 2;  |      2  |                         0  |
  1401  |  resetPlaceHolder_1();  |         |                            |
  1421  |             R = R + 2;  |      2  |                         0  |
  1422  |  resetPlaceHolder_1();  |         |                            |
  1442  |             R = R + 2;  |      2  |                         0  |
  1443  |  resetPlaceHolder_1();  |         |                            |
  1463  |             R = R + 2;  |      2  |                         0  |
  1464  |  resetPlaceHolder_1();  |         |                            |
  1484  |             R = R + 2;  |      2  |                         0  |
  1485  |  resetPlaceHolder_1();  |         |                            |
  1505  |             R = R + 2;  |      2  |                         0  |
  1506  |  resetPlaceHolder_1();  |         |                            |
  1526  |             R = R + 2;  |      2  |                         0  |
  1527  |  resetPlaceHolder_1();  |         |                            |
  1547  |             R = R + 2;  |      2  |                         0  |
  1548  |  resetPlaceHolder_1();  |         |                            |
  1568  |             R = R + 2;  |      2  |                         0  |
  1569  |  resetPlaceHolder_1();  |         |                            |
  1589  |             R = R + 2;  |      2  |                         0  |
  1590  |  resetPlaceHolder_1();  |         |                            |
  1610  |             R = R + 2;  |      2  |                         0  |
  1611  |  resetPlaceHolder_1();  |         |                            |
  1631  |             R = R + 2;  |      2  |                         0  |
  1632  |  resetPlaceHolder_1();  |         |                            |
  1652  |             R = R + 2;  |      2  |                         0  |
  1653  |  resetPlaceHolder_1();  |         |                            |
  1673  |             R = R + 2;  |      2  |                         0  |
  1674  |  resetPlaceHolder_1();  |         |                            |
  1694  |             R = R + 2;  |      2  |                         0  |
  1695  |  resetPlaceHolder_1();  |         |                            |
  1715  |             R = R + 2;  |      2  |                         0  |
  1716  |  resetPlaceHolder_1();  |         |                            |
  1736  |             R = R + 2;  |      2  |                         0  |
  1737  |  resetPlaceHolder_1();  |         |                            |
  1757  |             R = R + 2;  |      2  |                         0  |
  1758  |  resetPlaceHolder_1();  |         |                            |
  1778  |             R = R + 2;  |      2  |                         0  |
  1779  |  resetPlaceHolder_1();  |         |                            |
  1799  |             R = R + 2;  |      2  |                         0  |
  1800  |  resetPlaceHolder_1();  |         |                            |
  1820  |             R = R + 2;  |      2  |                         0  |
  1821  |  resetPlaceHolder_1();  |         |                            |
  1841  |             R = R + 2;  |      2  |                         0  |
  1842  |  resetPlaceHolder_1();  |         |                            |
  1862  |             R = R + 2;  |      2  |                         0  |
  1863  |  resetPlaceHolder_1();  |         |                            |
  1883  |             R = R + 2;  |      2  |                         0  |
  1884  |  resetPlaceHolder_1();  |         |                            |
  1904  |             R = R + 2;  |      2  |                         0  |
  1905  |  resetPlaceHolder_1();  |         |                            |
  1925  |             R = R + 2;  |      2  |                         0  |
  1926  |  resetPlaceHolder_1();  |         |                            |
  1946  |             R = R + 2;  |      2  |                         0  |
  1947  |  resetPlaceHolder_1();  |         |                            |
  1967  |             R = R + 2;  |      2  |                         0  |
  1968  |  resetPlaceHolder_1();  |         |                            |
  1988  |             R = R + 2;  |      2  |                         0  |
  1989  |  resetPlaceHolder_1();  |         |                            |
  2009  |             R = R + 2;  |      2  |                         0  |
  2010  |  resetPlaceHolder_1();  |         |                            |
  2030  |             R = R + 2;  |      2  |                         0  |
  2031  |  resetPlaceHolder_1();  |         |                            |
  2051  |             R = R + 2;  |      2  |                         0  |
  2052  |  resetPlaceHolder_1();  |         |                            |
  2072  |             R = R + 2;  |      2  |                         0  |
  2073  |  resetPlaceHolder_1();  |         |                            |
  2093  |             R = R + 2;  |      2  |                         0  |
  2094  |  resetPlaceHolder_1();  |         |                            |
  2114  |             R = R + 2;  |      2  |                         0  |
  2115  |  resetPlaceHolder_1();  |         |                            |
  2135  |             R = R + 2;  |      2  |                         0  |
  2136  |  resetPlaceHolder_1();  |         |                            |
  2156  |             R = R + 2;  |      2  |                         0  |
  2157  |  resetPlaceHolder_1();  |         |                            |
  2177  |             R = R + 2;  |      2  |                         0  |
  2178  |  resetPlaceHolder_1();  |         |                            |
  2198  |             R = R + 2;  |      2  |                         0  |
  2199  |  resetPlaceHolder_1();  |         |                            |
  2219  |             R = R + 2;  |      2  |                         0  |
  2220  |  resetPlaceHolder_1();  |         |                            |
  2240  |             R = R + 2;  |      2  |                         0  |
  2241  |  resetPlaceHolder_1();  |         |                            |
  2261  |             R = R + 2;  |      2  |                         0  |
  2262  |  resetPlaceHolder_1();  |         |                            |
  2282  |             R = R + 2;  |      2  |                         0  |
  2283  |  resetPlaceHolder_1();  |         |                            |
  2303  |             R = R + 2;  |      2  |                         0  |
  2304  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 2 -> R0 = R0 + 2;
resetPlaceHolder_1(); -> // reset R0
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java	2023-01-10 17:20:13.793530374 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java.actual	2023-01-10 20:26:37.291393873 -0700
@@ -25,9 +25,7 @@
       className_ = className_ - 1;
       arrayPrefix = arrayPrefix + 2;
       D0 = D0 + 2;
-      D0p = D0;
-      D0 = 0;
-      C0 = C0 + 1;
+      // reset R0
     }
   }
   // Declare these methods such that these generated code can be parsed


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java

real	0m5.463s
user	0m10.883s
sys	0m1.222s

2023-01-10 20:26:37,351 INFO     Overwrite the existing decomposition
2023-01-10 20:26:37,351 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
2023-01-10 20:26:37,353 INFO     Done. Execution time: 0.0020210742950439453 seconds
2023-01-10 20:26:37,353 INFO     Output: 
2023-01-10 20:26:37,353 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:26:43,791 INFO     Done. Execution time: 6.438377141952515 seconds
2023-01-10 20:26:43,792 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/GetShortClassName.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * className) + 8)) || ((0 + (D0p * C0)) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (2 * className)) || ((0 + (D0p * C0)) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int R = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetShortClassName  {
  void execute(int className)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * className) + 8)) || ((0 + (D0p * C0)) == ((8 * className) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (2 * className)) || ((0 + (D0p * C0)) == (2 * className)));
    if ((className < 0) || (className == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int arrayPrefix = 0;
    int R = 0;
    int className_ = className;
    while (!((className_ < 0)) && !((className_ == 0)))
    {
      className_ = className_ - 1;
      arrayPrefix = arrayPrefix + 2;
      D0 = D0 + 2;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) (* 2 className)) (= (+ 0 (* D0p C0)) (* 2 className)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) (* 2 className)) (= (+ 0 (* D0p C0)) (* 2 className)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 8 1 className)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) (* 2 className)) (= (+ 0 (* D0p C0)) (* 2 className)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.GetShortClassName`)
INFO  brbo.BrboMain - Time consumption: `4.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2026-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2026-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.432s
user	0m14.717s
sys	0m2.128s

2023-01-10 20:26:43,792 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-10 20:26:43,792 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:27:09,657 INFO     Done. Execution time: 25.865535974502563 seconds
2023-01-10 20:27:09,658 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LexxQFuzzDriver.java -d /tmp/qfuzz5066080283916534564/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz5066080283916534564/bin -o /tmp/qfuzz5066080283916534564/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz5066080283916534564/bin
Found file /tmp/qfuzz5066080283916534564/bin/brbo/fuzz/drivers/LexxQFuzzDriver.class
Found file /tmp/qfuzz5066080283916534564/bin/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/Lexx.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/brbo/fuzz/drivers/Lexx.class
Instrumenting class: brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/brbo/fuzz/drivers/LexxQFuzzDriver.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz5066080283916534564/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz5066080283916534564/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LexxQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz5066080283916534564/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz5066080283916534564/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 29, exec speed = 112045 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m29 to 29 bits (average: 29.00 bits)
[1;90m        Exec timing : [0m112k to 112k us (average: 112k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz5066080283916534564/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [19.00]
2; /tmp/qfuzz5066080283916534564/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8; 1; 0.00; [19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz5066080283916534564/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz5066080283916534564/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(6, 16, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.860s
user	0m11.257s
sys	0m0.702s

2023-01-10 20:27:09,658 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
2023-01-10 20:27:13,585 INFO     Done. Execution time: 3.9271140098571777 seconds
2023-01-10 20:27:13,585 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Lexx`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {format, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Lexx] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 94):
                                                                                                         
 Index  |              Commands               |  Costs  |  R  |  buffer  |  format  |  i  |  inLiteral  |
---------------------------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |       0  |       2  |     |             |
    11  |                         int R = 0;  |         |  0  |       0  |       2  |     |             |
    12  |  // mostPreciseBound(R <= forma...  |         |  0  |       0  |       2  |     |             |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |       2  |     |             |
    15  |                 int inLiteral = 0;  |         |  0  |       0  |       2  |     |          0  |
    17  |                         int i = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    48  |              R = R + (0 - buffer);  |      0  |  0  |       0  |       2  |  0  |          0  |
    50  |                        buffer = 0;  |         |  0  |       0  |       2  |  0  |          0  |
    52  |                     inLiteral = 1;  |         |  0  |       0  |       2  |  0  |          1  |
    56  |                         i = i + 1;  |         |  0  |       0  |       2  |  1  |          1  |
    57  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  1  |          1  |
    85  |                     inLiteral = 0;  |         |  0  |       0  |       2  |  1  |          0  |
    89  |                         i = i + 1;  |         |  0  |       0  |       2  |  2  |          0  |
    90  |              resetPlaceHolder_1();  |         |  0  |       0  |       2  |  2  |          0  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [48]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [48]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [48]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [48]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {48}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    48  |  R = R + (0 - buffer);  |      0  |                         0  |
    57  |  resetPlaceHolder_1();  |         |                            |
    90  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R (0 - buffer) -> R0 = R0 + (0 - buffer);
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java

real	0m3.921s
user	0m6.979s
sys	0m0.797s

2023-01-10 20:27:13,585 INFO     Generated the expected decomposition
2023-01-10 20:27:13,585 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:27:20,711 INFO     Done. Execution time: 7.125572919845581 seconds
2023-01-10 20:27:20,711 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Lexx.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * format) + 8)) || ((0 + (D0p * C0)) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < format) || ((0 + (D0p * C0)) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if ((!((inLiteral < 0)) && !((inLiteral == 0))) && !((i < 2)))
      {
        buffer = buffer + 1;
        R = R + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Lexx  {
  void execute(int format)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * format) + 8)) || ((0 + (D0p * C0)) == ((8 * format) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < format) || ((0 + (D0p * C0)) == format));
    if ((format < 0) || (format == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int inLiteral = 0;
    int i = 0;
    while (i < format)
    {
      if ((!((inLiteral < 0)) && !((inLiteral == 0))) && !((i < 2)))
      {
        buffer = buffer + 1;
        R = R + 1;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      if (!((inLiteral < 0)) && !((inLiteral == 0)))
      {
        inLiteral = 0;
      }
      else
      {
        D0 = D0 + (0 - buffer);
        buffer = 0;
        inLiteral = 1;
      }
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) format) (= (+ 0 (* D0p C0)) format))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) format) (= (+ 0 (* D0p C0)) format))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 0)` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) format) (= (+ 0 (* D0p C0)) format))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Lexx`)
INFO  brbo.BrboMain - Time consumption: `5.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2027-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2027-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.120s
user	0m14.548s
sys	0m1.939s

2023-01-10 20:27:20,711 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-10 20:27:20,711 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:27:46,188 INFO     Done. Execution time: 25.476823806762695 seconds
2023-01-10 20:27:46,189 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LiteralQFuzzDriver.java -d /tmp/qfuzz1439238831654302130/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1439238831654302130/bin -o /tmp/qfuzz1439238831654302130/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1439238831654302130/bin
Found file /tmp/qfuzz1439238831654302130/bin/brbo/fuzz/drivers/Literal.class
Found file /tmp/qfuzz1439238831654302130/bin/brbo/fuzz/drivers/LiteralQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Literal.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/brbo/fuzz/drivers/Literal.class
Instrumenting class: brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/brbo/fuzz/drivers/LiteralQFuzzDriver.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1439238831654302130/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1439238831654302130/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LiteralQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1439238831654302130/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1439238831654302130/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 6, exec speed = 124013 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m6 to 6 bits (average: 6.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1439238831654302130/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.471s
user	0m10.584s
sys	0m0.733s

2023-01-10 20:27:46,189 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
2023-01-10 20:27:47,922 INFO     Done. Execution time: 1.7336115837097168 seconds
2023-01-10 20:27:47,923 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Literal`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {currentIdx, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Literal] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.728s
user	0m3.170s
sys	0m0.177s

2023-01-10 20:27:47,923 INFO     Generated the expected decomposition
2023-01-10 20:27:47,923 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:28:00,036 INFO     Done. Execution time: 12.11350131034851 seconds
2023-01-10 20:28:00,037 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Literal.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * pattern) + 8)) || ((0 + (D0p * C0)) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < pattern) || ((0 + (D0p * C0)) == pattern));
    if ((((pattern < 0) || (pattern == 0)) || ((currentIdx < 0) || (currentIdx == 0))) || !((currentIdx < (pattern - 1))))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Literal  {
  void execute(int pattern, int currentIdx)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * pattern) + 8)) || ((0 + (D0p * C0)) == ((8 * pattern) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < pattern) || ((0 + (D0p * C0)) == pattern));
    if ((((pattern < 0) || (pattern == 0)) || ((currentIdx < 0) || (currentIdx == 0))) || !((currentIdx < (pattern - 1))))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    while (currentIdx < pattern)
    {
      currentIdx = currentIdx + 1;
      sb = sb + 1;
      D0 = D0 + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 pattern)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) pattern) (= (+ 0 (* D0p C0)) pattern))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Literal`)
INFO  brbo.BrboMain - Time consumption: `10.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2027-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2027-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.108s
user	0m22.316s
sys	0m3.563s

2023-01-10 20:28:00,037 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-10 20:28:00,037 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:28:25,734 INFO     Done. Execution time: 25.69665217399597 seconds
2023-01-10 20:28:25,734 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LongToHexQFuzzDriver.java -d /tmp/qfuzz7768206878588687629/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7768206878588687629/bin -o /tmp/qfuzz7768206878588687629/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7768206878588687629/bin
Found file /tmp/qfuzz7768206878588687629/bin/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Found file /tmp/qfuzz7768206878588687629/bin/brbo/fuzz/drivers/LongToHex.class
Instrumenting class: brbo/fuzz/drivers/LongToHexQFuzzDriver.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/brbo/fuzz/drivers/LongToHexQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/brbo/fuzz/drivers/LongToHex.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7768206878588687629/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7768206878588687629/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LongToHexQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7768206878588687629/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7768206878588687629/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 125698 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m125k to 125k us (average: 125k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz7768206878588687629/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
2; /tmp/qfuzz7768206878588687629/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7768206878588687629/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7768206878588687629/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(194)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.690s
user	0m11.283s
sys	0m0.694s

2023-01-10 20:28:25,734 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
2023-01-10 20:28:30,517 INFO     Done. Execution time: 4.783462047576904 seconds
2023-01-10 20:28:30,518 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.LongToHex`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, nHexs}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LongToHex] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  nHexs  |  sb  |
--------------------------------------------------------------------------------------
     9  |                        int sb = 0;  |         |     |     |      2  |   0  |
    11  |                         int R = 0;  |         |  0  |     |      2  |   0  |
    12  |  // mostPreciseBound(R <= nHexs...  |         |  0  |     |      2  |   0  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |      2  |   0  |
    15  |                         int i = 0;  |         |  0  |  0  |      2  |   0  |
    22  |                       sb = sb + 1;  |         |  0  |  0  |      2  |   1  |
    25  |                         R = R + 1;  |      1  |  1  |  0  |      2  |   1  |
    29  |                         i = i + 1;  |         |  1  |  1  |      2  |   1  |
    30  |              resetPlaceHolder_1();  |         |  1  |  1  |      2  |   1  |
    37  |                       sb = sb + 1;  |         |  1  |  1  |      2  |   2  |
    40  |                         R = R + 1;  |      1  |  2  |  1  |      2  |   2  |
    44  |                         i = i + 1;  |         |  2  |  2  |      2  |   2  |
    45  |              resetPlaceHolder_1();  |         |  2  |  2  |      2  |   2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java

real	0m4.778s
user	0m8.611s
sys	0m1.594s

2023-01-10 20:28:30,518 INFO     Generated the expected decomposition
2023-01-10 20:28:30,518 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:28:37,495 INFO     Done. Execution time: 6.9775683879852295 seconds
2023-01-10 20:28:37,496 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/LongToHex.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * nHexs) + 8)) || ((0 + (D0p * C0)) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < nHexs) || ((0 + (D0p * C0)) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LongToHex  {
  void execute(int nHexs)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * nHexs) + 8)) || ((0 + (D0p * C0)) == ((8 * nHexs) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < nHexs) || ((0 + (D0p * C0)) == nHexs));
    if ((nHexs < 0) || (nHexs == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < nHexs)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) nHexs) (= (+ 0 (* D0p C0)) nHexs))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) nHexs) (= (+ 0 (* D0p C0)) nHexs))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 nHexs)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) nHexs) (= (+ 0 (* D0p C0)) nHexs))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.LongToHex`)
INFO  brbo.BrboMain - Time consumption: `5.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2028-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2028-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.973s
user	0m14.769s
sys	0m2.379s

2023-01-10 20:28:37,496 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-10 20:28:37,496 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:29:03,273 INFO     Done. Execution time: 25.777374744415283 seconds
2023-01-10 20:29:03,273 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ModifyQFuzzDriver.java -d /tmp/qfuzz2284094566913634977/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2284094566913634977/bin -o /tmp/qfuzz2284094566913634977/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2284094566913634977/bin
Found file /tmp/qfuzz2284094566913634977/bin/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Found file /tmp/qfuzz2284094566913634977/bin/brbo/fuzz/drivers/Modify.class
Instrumenting class: brbo/fuzz/drivers/ModifyQFuzzDriver.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/brbo/fuzz/drivers/ModifyQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/brbo/fuzz/drivers/Modify.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2284094566913634977/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2284094566913634977/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ModifyQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2284094566913634977/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2284094566913634977/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 122750 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz2284094566913634977/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
2; /tmp/qfuzz2284094566913634977/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2284094566913634977/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2284094566913634977/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(76)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.772s
user	0m11.304s
sys	0m0.768s

2023-01-10 20:29:03,273 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
2023-01-10 20:29:08,550 INFO     Done. Execution time: 5.276820421218872 seconds
2023-01-10 20:29:08,551 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Modify`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Modify] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 49):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |       0  |     |    2  |
    11  |                         int R = 0;  |         |  0  |       0  |     |    2  |
    12  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    15  |                         int i = 0;  |         |  0  |       0  |  0  |    2  |
    22  |               buffer = buffer + 1;  |         |  0  |       1  |  0  |    2  |
    25  |                         R = R + 1;  |      1  |  1  |       1  |  0  |    2  |
    29  |                         i = i + 1;  |         |  1  |       1  |  1  |    2  |
    30  |              resetPlaceHolder_1();  |         |  1  |       1  |  1  |    2  |
    37  |               buffer = buffer + 1;  |         |  1  |       2  |  1  |    2  |
    40  |                         R = R + 1;  |      1  |  2  |       2  |  1  |    2  |
    44  |                         i = i + 1;  |         |  2  |       2  |  2  |    2  |
    45  |              resetPlaceHolder_1();  |         |  2  |       2  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 1;  |      1  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java

real	0m5.270s
user	0m9.411s
sys	0m1.557s

2023-01-10 20:29:08,551 INFO     Generated the expected decomposition
2023-01-10 20:29:08,551 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:29:15,671 INFO     Done. Execution time: 7.119746446609497 seconds
2023-01-10 20:29:15,671 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Modify.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Modify  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 0;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Modify`)
INFO  brbo.BrboMain - Time consumption: `5.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2029-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2029-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.114s
user	0m15.398s
sys	0m2.385s

2023-01-10 20:29:15,671 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-10 20:29:15,671 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:29:41,596 INFO     Done. Execution time: 25.925215482711792 seconds
2023-01-10 20:29:41,597 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ParseTokenQFuzzDriver.java -d /tmp/qfuzz3380520803847647489/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz3380520803847647489/bin -o /tmp/qfuzz3380520803847647489/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz3380520803847647489/bin
Found file /tmp/qfuzz3380520803847647489/bin/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Found file /tmp/qfuzz3380520803847647489/bin/brbo/fuzz/drivers/ParseToken.class
Instrumenting class: brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/brbo/fuzz/drivers/ParseTokenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/brbo/fuzz/drivers/ParseToken.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz3380520803847647489/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz3380520803847647489/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ParseTokenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz3380520803847647489/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz3380520803847647489/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 22, exec speed = 122851 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m22 to 22 bits (average: 22.00 bits)
[1;90m        Exec timing : [0m122k to 122k us (average: 122k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz3380520803847647489/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [17.00]
2; /tmp/qfuzz3380520803847647489/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz3380520803847647489/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz3380520803847647489/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(103, 135, 152, 135, 31, 134, 60, 148, 13, 13, 129, 55, 151, 13, 13, 13, 13, 13, 13, 13, 47, 26, 135, 135)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.919s
user	0m11.278s
sys	0m0.672s

2023-01-10 20:29:41,597 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
2023-01-10 20:29:44,089 INFO     Done. Execution time: 2.4924702644348145 seconds
2023-01-10 20:29:44,089 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.ParseToken`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, pattern}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ParseToken] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 22):
                                                  
 Index  |  Commands  |  Costs  |  i  |  pattern  |
--------------------------------------------------
    21  |   return;  |         |  2  |        2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java	2023-01-10 17:24:20.721596008 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java.actual	2023-01-10 20:29:44.057919028 -0700
@@ -2,11 +2,8 @@
   void execute(int pattern, int i) 
   {
     int BOOLEAN_SEPARATOR = 102;
-    int C0 = -1;
-    int D0 = 0;
-    int D0p = 0;
-    lessPreciseBound(((0 + (D0p * C0)) < ((8 * pattern) + 8)) || ((0 + (D0p * C0)) == ((8 * pattern) + 8)));
-    mostPreciseBound(((0 + (D0p * C0)) < (pattern + 1)) || ((0 + (D0p * C0)) == (pattern + 1)));
+    lessPreciseBound((0 < ((8 * pattern) + 8)) || (0 == ((8 * pattern) + 8)));
+    mostPreciseBound((0 < (pattern + 1)) || (0 == (pattern + 1)));
     if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
     {
       return;
@@ -22,7 +19,7 @@
     if (true)
     {
       buf = buf + 1;
-      D0 = D0 + 1;
+      R = R + 1;
       while ((i + 1) < pattern)
       {
         buf = buf + 1;


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java

real	0m2.486s
user	0m5.082s
sys	0m0.209s

2023-01-10 20:29:44,090 INFO     Overwrite the existing decomposition
2023-01-10 20:29:44,090 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
2023-01-10 20:29:44,092 INFO     Done. Execution time: 0.0017914772033691406 seconds
2023-01-10 20:29:44,092 INFO     Output: 
2023-01-10 20:29:44,092 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:29:45,972 INFO     Done. Execution time: 1.8803653717041016 seconds
2023-01-10 20:29:45,972 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/ParseToken.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    lessPreciseBound((0 < ((8 * pattern) + 8)) || (0 == ((8 * pattern) + 8)));
    mostPreciseBound((0 < (pattern + 1)) || (0 == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    int R = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ParseToken  {
  void execute(int pattern, int i)
  {

    int BOOLEAN_SEPARATOR = 102;
    lessPreciseBound((0 < ((8 * pattern) + 8)) || (0 == ((8 * pattern) + 8)));
    mostPreciseBound((0 < (pattern + 1)) || (0 == (pattern + 1)));
    if ((((pattern < 0) || (pattern == 0)) || !((i < pattern))) || ((i < 0) || (i == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int buf = 0;
    int R = 0;
    {
      buf = buf + 1;
      R = R + 1;
      while ((i + 1) < pattern)
      {
        buf = buf + 1;
        R = R + 1;
        i = i + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< 0 (+ pattern 1)) (= 0 (+ pattern 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< 0 (+ pattern 1)) (= 0 (+ pattern 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< 0 (+ pattern 1)) (= 0 (+ pattern 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.ParseToken`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2029-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2029-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.875s
user	0m3.381s
sys	0m0.202s

2023-01-10 20:29:45,973 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-10 20:29:45,973 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:30:11,559 INFO     Done. Execution time: 25.586299896240234 seconds
2023-01-10 20:30:11,559 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.java -d /tmp/qfuzz7182971814750086897/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7182971814750086897/bin -o /tmp/qfuzz7182971814750086897/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7182971814750086897/bin
Found file /tmp/qfuzz7182971814750086897/bin/brbo/fuzz/drivers/SimpleQuote.class
Found file /tmp/qfuzz7182971814750086897/bin/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/brbo/fuzz/drivers/SimpleQuoteQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/brbo/fuzz/drivers/SimpleQuote.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7182971814750086897/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7182971814750086897/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SimpleQuoteQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7182971814750086897/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7182971814750086897/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 33, exec speed = 120051 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m33 to 33 bits (average: 33.00 bits)
[1;90m        Exec timing : [0m120k to 120k us (average: 120k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7182971814750086897/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 2.00; [13.00,15.00,21.00]
2; /tmp/qfuzz7182971814750086897/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16; 3; 2.00; [13.00,15.00,21.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7182971814750086897/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7182971814750086897/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(50, 50, 50, 50, 50, 50, 50, 50, 10, 50, 50, 50, 50, 56, 50, 50, 58)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.581s
user	0m11.158s
sys	0m0.714s

2023-01-10 20:30:11,559 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
2023-01-10 20:30:18,064 INFO     Done. Execution time: 6.505124568939209 seconds
2023-01-10 20:30:18,065 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.SimpleQuote`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, value}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SimpleQuote] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 56):
                                                                                      
 Index  |              Commands               |  Costs  |  R  |  i  |  sb  |  value  |
--------------------------------------------------------------------------------------
     9  |                        int sb = 0;  |         |     |     |   0  |      2  |
    11  |                         int R = 0;  |         |  0  |     |   0  |      2  |
    12  |  // mostPreciseBound(R <= value...  |         |  0  |     |   0  |      2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |     |   0  |      2  |
    15  |                         int i = 0;  |         |  0  |  0  |   0  |      2  |
    22  |                       sb = sb + 2;  |         |  0  |  0  |   2  |      2  |
    25  |                         R = R + 2;  |      2  |  2  |  0  |   2  |      2  |
    29  |                         i = i + 1;  |         |  2  |  1  |   2  |      2  |
    30  |              resetPlaceHolder_1();  |         |  2  |  1  |   2  |      2  |
    37  |                       sb = sb + 2;  |         |  2  |  1  |   4  |      2  |
    40  |                         R = R + 2;  |      2  |  4  |  1  |   4  |      2  |
    44  |                         i = i + 1;  |         |  4  |  2  |   4  |      2  |
    45  |              resetPlaceHolder_1();  |         |  4  |  2  |   4  |      2  |
    52  |                       sb = sb + 1;  |         |  4  |  2  |   5  |      2  |
    55  |                         R = R + 1;  |      1  |  5  |  2  |   5  |      2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40, 55]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25, 40, 55]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25, 40, 55]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25, 40, 55]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {25}, {40} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    25  |             R = R + 2;  |      2  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
    40  |             R = R + 2;  |      2  |                         1  |
    45  |  resetPlaceHolder_1();  |         |                            |
    55  |             R = R + 1;  |      1  |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}, {40}
GroupID(1): {55}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    25  |             R = R + 2;  |      2  |                         0  |                            |
    30  |  resetPlaceHolder_1();  |         |                            |                            |
    40  |             R = R + 2;  |      2  |                         1  |                            |
    45  |  resetPlaceHolder_1();  |         |                            |                            |
    55  |             R = R + 1;  |      1  |                            |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(30)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R 2 -> R0 = R0 + 2;
use R 1 -> R1 = R1 + 1;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java

real	0m6.499s
user	0m11.910s
sys	0m2.324s

2023-01-10 20:30:18,065 INFO     Generated the expected decomposition
2023-01-10 20:30:18,065 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:30:28,112 INFO     Done. Execution time: 10.047196388244629 seconds
2023-01-10 20:30:28,112 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/SimpleQuote.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 * value) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((value * 2) + 1)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SimpleQuote  {
  void execute(int value)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 * value) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 * value) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((value * 2) + 1)) || (((0 + (D0p * C0)) + (D1p * C1)) == ((value * 2) + 1)));
    if ((value < 0) || (value == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < value)
    {
      sb = sb + 2;
      D0 = D0 + 2;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + 1;
    D1 = D1 + 1;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 value)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ (* value 2) 1)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.SimpleQuote`)
INFO  brbo.BrboMain - Time consumption: `8.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2030-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2030-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m10.042s
user	0m27.287s
sys	0m4.270s

2023-01-10 20:30:28,112 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-10 20:30:28,112 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:30:53,578 INFO     Done. Execution time: 25.465890407562256 seconds
2023-01-10 20:30:53,579 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SpacerQFuzzDriver.java -d /tmp/qfuzz4013715128420968431/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4013715128420968431/bin -o /tmp/qfuzz4013715128420968431/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4013715128420968431/bin
Found file /tmp/qfuzz4013715128420968431/bin/brbo/fuzz/drivers/Spacer.class
Found file /tmp/qfuzz4013715128420968431/bin/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SpacerQFuzzDriver.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/brbo/fuzz/drivers/SpacerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/brbo/fuzz/drivers/Spacer.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4013715128420968431/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4013715128420968431/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SpacerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4013715128420968431/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4013715128420968431/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 126261 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m126k to 126k us (average: 126k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mFuzzing test case #1 (2 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (2 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz4013715128420968431/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
2; /tmp/qfuzz4013715128420968431/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64; 2; 6.00; [13.00,19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4013715128420968431/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4013715128420968431/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List()
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.460s
user	0m10.696s
sys	0m0.732s

2023-01-10 20:30:53,579 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
2023-01-10 20:30:55,385 INFO     Done. Execution time: 1.8062012195587158 seconds
2023-01-10 20:30:55,385 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Spacer`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, spaces}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Spacer] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.800s
user	0m3.373s
sys	0m0.179s

2023-01-10 20:30:55,385 INFO     Generated the expected decomposition
2023-01-10 20:30:55,385 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:31:03,424 INFO     Done. Execution time: 8.038766622543335 seconds
2023-01-10 20:31:03,425 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Spacer.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * spaces) + 8)) || ((0 + (D0p * C0)) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < spaces) || ((0 + (D0p * C0)) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Spacer  {
  void execute(int spaces)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * spaces) + 8)) || ((0 + (D0p * C0)) == ((8 * spaces) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < spaces) || ((0 + (D0p * C0)) == spaces));
    if ((spaces < 0) || (spaces == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = 0;
    while (i < spaces)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) spaces) (= (+ 0 (* D0p C0)) spaces))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) spaces) (= (+ 0 (* D0p C0)) spaces))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 spaces)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) spaces) (= (+ 0 (* D0p C0)) spaces))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Spacer`)
INFO  brbo.BrboMain - Time consumption: `6.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2030-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2030-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m8.034s
user	0m16.582s
sys	0m2.601s

2023-01-10 20:31:03,425 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-10 20:31:03,425 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:31:29,199 INFO     Done. Execution time: 25.773702383041382 seconds
2023-01-10 20:31:29,199 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SqueezeQFuzzDriver.java -d /tmp/qfuzz8182815863680312314/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8182815863680312314/bin -o /tmp/qfuzz8182815863680312314/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8182815863680312314/bin
Found file /tmp/qfuzz8182815863680312314/bin/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Found file /tmp/qfuzz8182815863680312314/bin/brbo/fuzz/drivers/Squeeze.class
Instrumenting class: brbo/fuzz/drivers/SqueezeQFuzzDriver.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/brbo/fuzz/drivers/SqueezeQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/brbo/fuzz/drivers/Squeeze.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8182815863680312314/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8182815863680312314/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SqueezeQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8182815863680312314/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8182815863680312314/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 25, exec speed = 118024 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m25 to 25 bits (average: 25.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz8182815863680312314/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 6.00; [13.00,19.00]
2; /tmp/qfuzz8182815863680312314/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 1; 0.00; [19.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8182815863680312314/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8182815863680312314/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(20)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.768s
user	0m11.350s
sys	0m0.706s

2023-01-10 20:31:29,199 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
2023-01-10 20:31:33,045 INFO     Done. Execution time: 3.845590591430664 seconds
2023-01-10 20:31:33,045 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `lang3`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.lang3.Squeeze`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Squeeze] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 34):
                                                                                        
 Index  |              Commands               |  Costs  |  R  |  buffer  |  i  |  str  |
----------------------------------------------------------------------------------------
     9  |                    int buffer = 0;  |         |     |       0  |     |    2  |
    11  |                         int R = 0;  |         |  0  |       0  |     |    2  |
    12  |      // mostPreciseBound(R <= str)  |         |  0  |       0  |     |    2  |
    13  |  // lessPreciseBound(R <= MAX *...  |         |  0  |       0  |     |    2  |
    15  |                         int i = 1;  |         |  0  |       0  |  1  |    2  |
    22  |               buffer = buffer + 1;  |         |  0  |       1  |  1  |    2  |
    25  |                         R = R + 1;  |      1  |  1  |       1  |  1  |    2  |
    29  |                         i = i + 1;  |         |  1  |       1  |  2  |    2  |
    30  |              resetPlaceHolder_1();  |         |  1  |       1  |  2  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [25]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [25]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [25]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {25}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    25  |             R = R + 1;  |      1  |                         0  |
    30  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java

real	0m3.839s
user	0m6.191s
sys	0m0.853s

2023-01-10 20:31:33,045 INFO     Generated the expected decomposition
2023-01-10 20:31:33,045 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:31:39,308 INFO     Done. Execution time: 6.26334285736084 seconds
2023-01-10 20:31:39,309 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `lang3`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/lang3/Squeeze.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Squeeze  {
  void execute(int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((str < 0) || (str == 0))
    {
      return;
    }
    else
    {
      ;
    }
    int buffer = 0;
    int R = 0;
    int i = 1;
    while (i < str)
    {
      buffer = buffer + 1;
      D0 = D0 + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.lang3.Squeeze`)
INFO  brbo.BrboMain - Time consumption: `4.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2031-transparentAmortize-60s-mostPrecise/lang3-raw-0110-2031-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m6.258s
user	0m13.346s
sys	0m2.017s

2023-01-10 20:31:39,309 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-10 20:31:39,309 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:32:05,056 INFO     Done. Execution time: 25.74688220024109 seconds
2023-01-10 20:32:05,056 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/GetDigitsQFuzzDriver.java -d /tmp/qfuzz8108587838160381799/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8108587838160381799/bin -o /tmp/qfuzz8108587838160381799/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8108587838160381799/bin
Found file /tmp/qfuzz8108587838160381799/bin/brbo/fuzz/drivers/GetDigits.class
Found file /tmp/qfuzz8108587838160381799/bin/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/GetDigits.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/brbo/fuzz/drivers/GetDigits.class
Instrumenting class: brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/brbo/fuzz/drivers/GetDigitsQFuzzDriver.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8108587838160381799/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8108587838160381799/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.GetDigitsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8108587838160381799/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8108587838160381799/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 33, exec speed = 124856 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m33 to 33 bits (average: 33.00 bits)
[1;90m        Exec timing : [0m124k to 124k us (average: 124k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000000,orig:example.txt; 2; 3.00; [23.00,26.00]
2; /tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 1; 0.00; [26.00]
5; /tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta; 2; 9.00; [17.00,26.00]
7; /tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta; 2; 15.00; [17.00,32.00]
9; /tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 2; 9.00; [17.00,26.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
/tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(186, 162, 171, 171, 171, 171, 27)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(71, 18, 171, 160, 18, 171, 32, 18, 18, 136, 179, 59)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 66, 37, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8108587838160381799/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 108, 153, 145, 6, 24)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [162,171,171,171,171]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [18,171,160,18,171]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [110,66,37,67,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [108,153,145,6,24]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.741s
user	0m11.035s
sys	0m0.850s

2023-01-10 20:32:05,056 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
2023-01-10 20:32:10,381 INFO     Done. Execution time: 5.324629783630371 seconds
2023-01-10 20:32:10,381 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.GetDigits`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing GetDigits] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [162,171,171,171,171])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [18,171,160,18,171])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [110,66,37,67,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [108,153,145,6,24])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 79):
                                                                                                                                
 Index  |              Commands               |  Costs  |  R  |  choice  |         choices         |  i  |  str  |  strDigits  |
--------------------------------------------------------------------------------------------------------------------------------
    13  |                         int R = 0;  |         |  0  |          |  [162,171,171,171,171]  |     |    2  |             |
    14  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [162,171,171,171,171]  |     |    2  |             |
    15  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [162,171,171,171,171]  |     |    2  |             |
    17  |                 int strDigits = 0;  |         |  0  |          |  [162,171,171,171,171]  |     |    2  |          0  |
    19  |                    int choice = 0;  |         |  0  |       0  |  [162,171,171,171,171]  |     |    2  |          0  |
    21  |                         int i = 0;  |         |  0  |       0  |  [162,171,171,171,171]  |  0  |    2  |          0  |
    27  |  choice = arrayRead(choices, i)...  |         |  0  |     162  |  [162,171,171,171,171]  |  0  |    2  |          0  |
    40  |         strDigits = strDigits + 1;  |         |  0  |     162  |  [162,171,171,171,171]  |  0  |    2  |          1  |
    43  |                         R = R + 1;  |      1  |  1  |     162  |  [162,171,171,171,171]  |  0  |    2  |          1  |
    47  |                         i = i + 1;  |         |  1  |     162  |  [162,171,171,171,171]  |  1  |    2  |          1  |
    48  |              resetPlaceHolder_1();  |         |  1  |     162  |  [162,171,171,171,171]  |  1  |    2  |          1  |
    54  |  choice = arrayRead(choices, i)...  |         |  1  |     171  |  [162,171,171,171,171]  |  1  |    2  |          1  |
    67  |         strDigits = strDigits + 1;  |         |  1  |     171  |  [162,171,171,171,171]  |  1  |    2  |          2  |
    70  |                         R = R + 1;  |      1  |  2  |     171  |  [162,171,171,171,171]  |  1  |    2  |          2  |
    74  |                         i = i + 1;  |         |  2  |     171  |  [162,171,171,171,171]  |  2  |    2  |          2  |
    75  |              resetPlaceHolder_1();  |         |  2  |     171  |  [162,171,171,171,171]  |  2  |    2  |          2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [43, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [43, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [43, 70]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [43, 70]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {43}, {70} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    43  |             R = R + 1;  |      1  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    70  |             R = R + 1;  |      1  |                         1  |
    75  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {43}, {70}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    43  |             R = R + 1;  |      1  |                         0  |
    48  |  resetPlaceHolder_1();  |         |                            |
    70  |             R = R + 1;  |      1  |                         1  |
    75  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(48)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java

real	0m5.318s
user	0m10.099s
sys	0m1.388s

2023-01-10 20:32:10,381 INFO     Generated the expected decomposition
2023-01-10 20:32:10,381 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:32:30,962 INFO     Done. Execution time: 20.580838203430176 seconds
2023-01-10 20:32:30,962 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/GetDigits.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (8 * str)) || ((0 + (D0p * C0)) == (8 * str)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class GetDigits  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (8 * str)) || ((0 + (D0p * C0)) == (8 * str)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int strDigits = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        strDigits = strDigits + 1;
        D0 = D0 + 1;
      }
      else
      {
        ;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 choices)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.GetDigits`)
INFO  brbo.BrboMain - Time consumption: `18.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2032-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-2032-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m20.575s
user	0m39.195s
sys	0m3.795s

2023-01-10 20:32:30,962 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-10 20:32:30,962 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:32:56,714 INFO     Done. Execution time: 25.751383066177368 seconds
2023-01-10 20:32:56,714 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinQFuzzDriver.java -d /tmp/qfuzz1624085039327021412/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1624085039327021412/bin -o /tmp/qfuzz1624085039327021412/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1624085039327021412/bin
Found file /tmp/qfuzz1624085039327021412/bin/brbo/fuzz/drivers/JoinQFuzzDriver.class
Found file /tmp/qfuzz1624085039327021412/bin/brbo/fuzz/drivers/Join.class
Instrumenting class: brbo/fuzz/drivers/JoinQFuzzDriver.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/brbo/fuzz/drivers/JoinQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/brbo/fuzz/drivers/Join.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1624085039327021412/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1624085039327021412/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1624085039327021412/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1624085039327021412/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 118934 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz1624085039327021412/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
5; /tmp/qfuzz1624085039327021412/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz1624085039327021412/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz1624085039327021412/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:16,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(63, 28, 151, 195, 18, 51, 68, 31, 68, 31, 68, 16, 67, 16)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [63,28,151,195,18], 51, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.745s
user	0m10.740s
sys	0m0.676s

2023-01-10 20:32:56,714 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
2023-01-10 20:32:59,357 INFO     Done. Execution time: 2.6427266597747803 seconds
2023-01-10 20:32:59,357 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {endIndex, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([63,28,151,195,18], 51, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 1 (0.00%)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 1 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 47):
                                                                                   
 Index  |  Commands  |  Costs  |        array         |  endIndex  |  startIndex  |
-----------------------------------------------------------------------------------
    46  |   return;  |         |  [63,28,151,195,18]  |         2  |          51  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

If we are printing a decomposed use, then we have failed to decompose `R = R + chunk;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + chunk;`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java	2023-01-09 22:30:16.749426156 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java.actual	2023-01-10 20:32:59.232428848 -0700
@@ -1,17 +1,11 @@
 abstract class Join {
   void execute(int array, int startIndex, int endIndex) 
   {
-    int BOOLEAN_SEPARATOR = 502;
-    int C0 = -1;
-    int C1 = -1;
-    int D0 = 0;
-    int D0p = 0;
-    int D1 = 0;
-    int D1p = 0;
+    int BOOLEAN_SEPARATOR = 102;
     int temporaryArray = 0;
     int lastIndexOfArray = 0;
-    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * array)) + (8 * array))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * array)) + (8 * array))));
-    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (array + array)) || (((0 + (D0p * C0)) + (D1p * C1)) == (array + array)));
+    lessPreciseBound((0 < ((8 + (8 * array)) + (8 * array))) || (0 == ((8 + (8 * array)) + (8 * array))));
+    mostPreciseBound((0 < (array + array)) || (0 == (array + array)));
     if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
     {
       return;
@@ -30,22 +24,19 @@
       chunk = temporaryArray - lastIndexOfArray;
       lastIndexOfArray = temporaryArray;
     }
-    D1 = D1 + chunk;
+    R = R + chunk;
     i = i + 1;
-    while (i < endIndex)
+    while ((i < endIndex) && (i < array))
     {
-      D0 = D0 + 1;
+      R = R + 1;
       {
         temporaryArray = ndInt2(lastIndexOfArray, array);
         chunk = temporaryArray - lastIndexOfArray;
         lastIndexOfArray = temporaryArray;
       }
-      D1 = D1 + chunk;
+      R = R + chunk;
       i = i + 1;
-      // reset R1
-      D0p = D0;
-      D0 = 0;
-      C0 = C0 + 1;
+      // resetPlaceHolder_1();
     }
   }
   // Declare these methods such that these generated code can be parsed


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java

real	0m2.637s
user	0m4.961s
sys	0m0.315s

2023-01-10 20:32:59,357 INFO     Overwrite the existing decomposition
2023-01-10 20:32:59,357 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
2023-01-10 20:32:59,359 INFO     Done. Execution time: 0.0016031265258789062 seconds
2023-01-10 20:32:59,359 INFO     Output: 
2023-01-10 20:32:59,359 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:33:01,355 INFO     Done. Execution time: 1.9961578845977783 seconds
2023-01-10 20:33:01,355 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((0 < ((8 + (8 * array)) + (8 * array))) || (0 == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((0 < (array + array)) || (0 == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join  {
  void execute(int array, int startIndex, int endIndex)
  {

    int BOOLEAN_SEPARATOR = 102;
    int temporaryArray = 0;
    int lastIndexOfArray = 0;
    lessPreciseBound((0 < ((8 + (8 * array)) + (8 * array))) || (0 == ((8 + (8 * array)) + (8 * array))));
    mostPreciseBound((0 < (array + array)) || (0 == (array + array)));
    if (((((((array < 1) || (array == 1)) || ((startIndex < 0) || (startIndex == 0))) || !((startIndex < array))) || ((endIndex < 0) || (endIndex == 0))) || !((endIndex < array))) || (((endIndex - startIndex) < 0) || ((endIndex - startIndex) == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = startIndex;
    int chunk = 0;
    {
      temporaryArray = ndInt2(lastIndexOfArray, array);
      chunk = temporaryArray - lastIndexOfArray;
      lastIndexOfArray = temporaryArray;
    }
    R = R + chunk;
    i = i + 1;
    while ((i < endIndex) && (i < array))
    {
      R = R + 1;
      {
        temporaryArray = ndInt2(lastIndexOfArray, array);
        chunk = temporaryArray - lastIndexOfArray;
        lastIndexOfArray = temporaryArray;
      }
      R = R + chunk;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< 0 (+ array array)) (= 0 (+ array array)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< 0 (+ array array)) (= 0 (+ array array)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< 0 (+ array array)) (= 0 (+ array array)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2033-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-2033-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.991s
user	0m3.427s
sys	0m0.213s

2023-01-10 20:33:01,356 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-10 20:33:01,356 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:33:27,112 INFO     Done. Execution time: 25.756048679351807 seconds
2023-01-10 20:33:27,112 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/Join2QFuzzDriver.java -d /tmp/qfuzz6188382905419042406/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6188382905419042406/bin -o /tmp/qfuzz6188382905419042406/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6188382905419042406/bin
Found file /tmp/qfuzz6188382905419042406/bin/brbo/fuzz/drivers/Join2QFuzzDriver.class
Found file /tmp/qfuzz6188382905419042406/bin/brbo/fuzz/drivers/Join2.class
Instrumenting class: brbo/fuzz/drivers/Join2QFuzzDriver.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/brbo/fuzz/drivers/Join2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/brbo/fuzz/drivers/Join2.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6188382905419042406/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6188382905419042406/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.Join2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6188382905419042406/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6188382905419042406/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 48, exec speed = 119561 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m48 to 48 bits (average: 48.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6188382905419042406/fuzzer-out/afl/queue/id:000000,orig:example.txt; 6; 63.00; [14.00,77.00,145.00,231.00,317.00,396.00]
2; /tmp/qfuzz6188382905419042406/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2; 6; 21.00; [14.00,35.00,145.00,235.00,317.00,396.00]
3; /tmp/qfuzz6188382905419042406/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 6; 32.00; [14.00,79.00,137.00,317.00,349.00,422.00]
7; /tmp/qfuzz6188382905419042406/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 5; 3.00; [11.00,14.00,135.00,387.00,398.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6188382905419042406/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
/tmp/qfuzz6188382905419042406/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz6188382905419042406/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6188382905419042406/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 112, 12, 153, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6188382905419042406/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(200, 169, 34, 63, 153, 120)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6188382905419042406/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(188, 188, 62)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,112,12,153,67]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [200,169,34,63,153]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [188,188,62]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.750s
user	0m10.945s
sys	0m0.694s

2023-01-10 20:33:27,112 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
2023-01-10 20:33:34,056 INFO     Done. Execution time: 6.943260669708252 seconds
2023-01-10 20:33:34,056 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Join2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Join2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,112,12,153,67])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([200,169,34,63,153])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([188,188,62])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 97):
                                                                                                         
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects        |
---------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |  [187,112,12,153,67]  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [187,112,12,153,67]  |
    11  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [187,112,12,153,67]  |
    13  |                         int i = 0;  |         |    0  |         |  0  |  [187,112,12,153,67]  |
    15  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [187,112,12,153,67]  |
    18  |     chunk = arrayRead(objects, i);  |         |    0  |    187  |  0  |  [187,112,12,153,67]  |
    21  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |  [187,112,12,153,67]  |
    25  |                         i = i + 1;  |         |  187  |    187  |  1  |  [187,112,12,153,67]  |
    31  |                         R = R + 1;  |      1  |  188  |    187  |  1  |  [187,112,12,153,67]  |
    34  |     chunk = arrayRead(objects, i);  |         |  188  |    112  |  1  |  [187,112,12,153,67]  |
    37  |                     R = R + chunk;  |    112  |  300  |    112  |  1  |  [187,112,12,153,67]  |
    41  |                         i = i + 1;  |         |  300  |    112  |  2  |  [187,112,12,153,67]  |
    42  |              resetPlaceHolder_1();  |         |  300  |    112  |  2  |  [187,112,12,153,67]  |
    48  |                         R = R + 1;  |      1  |  301  |    112  |  2  |  [187,112,12,153,67]  |
    51  |     chunk = arrayRead(objects, i);  |         |  301  |     12  |  2  |  [187,112,12,153,67]  |
    54  |                     R = R + chunk;  |     12  |  313  |     12  |  2  |  [187,112,12,153,67]  |
    58  |                         i = i + 1;  |         |  313  |     12  |  3  |  [187,112,12,153,67]  |
    59  |              resetPlaceHolder_1();  |         |  313  |     12  |  3  |  [187,112,12,153,67]  |
    65  |                         R = R + 1;  |      1  |  314  |     12  |  3  |  [187,112,12,153,67]  |
    68  |     chunk = arrayRead(objects, i);  |         |  314  |    153  |  3  |  [187,112,12,153,67]  |
    71  |                     R = R + chunk;  |    153  |  467  |    153  |  3  |  [187,112,12,153,67]  |
    75  |                         i = i + 1;  |         |  467  |    153  |  4  |  [187,112,12,153,67]  |
    76  |              resetPlaceHolder_1();  |         |  467  |    153  |  4  |  [187,112,12,153,67]  |
    82  |                         R = R + 1;  |      1  |  468  |    153  |  4  |  [187,112,12,153,67]  |
    85  |     chunk = arrayRead(objects, i);  |         |  468  |     67  |  4  |  [187,112,12,153,67]  |
    88  |                     R = R + chunk;  |     67  |  535  |     67  |  4  |  [187,112,12,153,67]  |
    92  |                         i = i + 1;  |         |  535  |     67  |  5  |  [187,112,12,153,67]  |
    93  |              resetPlaceHolder_1();  |         |  535  |     67  |  5  |  [187,112,12,153,67]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71} because there exists a longer and subsuming segment {37,71} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {88} because there exists a longer and subsuming segment {21,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21} because there exists a longer and subsuming segment {21,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {31}, {48}, {65}, {82} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    21  |         R = R + chunk;  |    187  |                            |
    31  |             R = R + 1;  |      1  |                         0  |
    37  |         R = R + chunk;  |    112  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |
    48  |             R = R + 1;  |      1  |                         1  |
    54  |         R = R + chunk;  |     12  |                            |
    59  |  resetPlaceHolder_1();  |         |                            |
    65  |             R = R + 1;  |      1  |                         2  |
    71  |         R = R + chunk;  |    153  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |
    82  |             R = R + 1;  |      1  |                         3  |
    88  |         R = R + chunk;  |     67  |                            |
    93  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,54} because there exists a longer and subsuming segment {21,37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,88} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,88} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,71} because there exists a longer and subsuming segment {21,37,71} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,88} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,71} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,71} because there exists a longer and subsuming segment {37,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,37} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71,88} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,54} because there exists a longer and subsuming segment {21,37,54} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {31}, {48}, {65}, {82}
GroupID(1): {21,37,54,71,88}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    21  |         R = R + chunk;  |    187  |                            |                         0  |
    31  |             R = R + 1;  |      1  |                         0  |                            |
    37  |         R = R + chunk;  |    112  |                            |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |                            |
    48  |             R = R + 1;  |      1  |                         1  |                            |
    54  |         R = R + chunk;  |     12  |                            |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |             R = R + 1;  |      1  |                         2  |                            |
    71  |         R = R + chunk;  |    153  |                            |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |                            |
    82  |             R = R + 1;  |      1  |                         3  |                            |
    88  |         R = R + chunk;  |     67  |                            |                         0  |
    93  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(42, 59, 76)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java

real	0m6.937s
user	0m13.739s
sys	0m2.699s

2023-01-10 20:33:34,056 INFO     Generated the expected decomposition
2023-01-10 20:33:34,056 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:33:46,546 INFO     Done. Execution time: 12.490099430084229 seconds
2023-01-10 20:33:46,546 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Join2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1), Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (objects + objects)) || (((0 + (D0p * C0)) + (D1p * C1)) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Join2  {
  void execute(int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * objects)) + (8 * objects))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * objects)) + (8 * objects))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (objects + objects)) || (((0 + (D0p * C0)) + (D1p * C1)) == (objects + objects)));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + 1;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ objects objects))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ objects objects)))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ objects objects))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ objects objects)))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 objects)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 objects)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p))
      (a!2 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D1 a!1 D0 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ objects objects))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ objects objects)))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Join2`)
INFO  brbo.BrboMain - Time consumption: `10.7` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2033-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-2033-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m12.485s
user	0m34.640s
sys	0m4.303s

2023-01-10 20:33:46,546 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-10 20:33:46,547 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:34:12,256 INFO     Done. Execution time: 25.708842039108276 seconds
2023-01-10 20:34:12,256 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/JoinWithQFuzzDriver.java -d /tmp/qfuzz4890550813996887411/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4890550813996887411/bin -o /tmp/qfuzz4890550813996887411/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4890550813996887411/bin
Found file /tmp/qfuzz4890550813996887411/bin/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
Found file /tmp/qfuzz4890550813996887411/bin/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWith.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/brbo/fuzz/drivers/JoinWith.class
Instrumenting class: brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/brbo/fuzz/drivers/JoinWithQFuzzDriver.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4890550813996887411/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4890550813996887411/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.JoinWithQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4890550813996887411/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4890550813996887411/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 48, exec speed = 109214 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m48 to 48 bits (average: 48.00 bits)
[1;90m        Exec timing : [0m109k to 109k us (average: 109k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000000,orig:example.txt; 6; 33.00; [77.00,112.00,145.00,231.00,317.00,396.00]
2; /tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32; 6; 21.00; [145.00,166.00,191.00,227.00,277.00,396.00]
3; /tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8; 6; 6.00; [73.00,130.00,176.00,205.00,231.00,237.00]
6; /tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta; 6; 36.00; [33.00,112.00,189.00,233.00,269.00,396.00]
10; /tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2; 6; 12.00; [65.00,77.00,145.00,231.00,264.00,396.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
/tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
/tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
/tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:8,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 111, 129, 11, 89, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 108, 67, 90, 133, 77, 94, 191, 134, 171, 171, 171, 32, 164, 171, 95, 62, 83)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(54, 110, 31, 97, 113, 82)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz4890550813996887411/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 33, 27, 67, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,111,129,11,89], 50
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,108,67,90,133], 77
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [54,110,31,97,113], 82
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,33,27,67], 126
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.703s
user	0m11.024s
sys	0m0.805s

2023-01-10 20:34:12,256 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
2023-01-10 20:34:19,176 INFO     Done. Execution time: 6.920409679412842 seconds
2023-01-10 20:34:19,176 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.JoinWith`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing JoinWith] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,111,129,11,89], 50)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,108,67,90,133], 77)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([54,110,31,97,113], 82)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,33,27,67], 126)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 97):
                                                                                                                       
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |        objects        |  separator  |
-----------------------------------------------------------------------------------------------------------------------
     9  |                         int R = 0;  |         |    0  |         |     |  [187,111,129,11,89]  |         50  |
    10  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [187,111,129,11,89]  |         50  |
    11  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  [187,111,129,11,89]  |         50  |
    13  |                         int i = 0;  |         |    0  |         |  0  |  [187,111,129,11,89]  |         50  |
    15  |                     int chunk = 0;  |         |    0  |      0  |  0  |  [187,111,129,11,89]  |         50  |
    18  |     chunk = arrayRead(objects, i);  |         |    0  |    187  |  0  |  [187,111,129,11,89]  |         50  |
    21  |                     R = R + chunk;  |    187  |  187  |    187  |  0  |  [187,111,129,11,89]  |         50  |
    25  |                         i = i + 1;  |         |  187  |    187  |  1  |  [187,111,129,11,89]  |         50  |
    31  |                 R = R + separator;  |     50  |  237  |    187  |  1  |  [187,111,129,11,89]  |         50  |
    34  |     chunk = arrayRead(objects, i);  |         |  237  |    111  |  1  |  [187,111,129,11,89]  |         50  |
    37  |                     R = R + chunk;  |    111  |  348  |    111  |  1  |  [187,111,129,11,89]  |         50  |
    41  |                         i = i + 1;  |         |  348  |    111  |  2  |  [187,111,129,11,89]  |         50  |
    42  |              resetPlaceHolder_1();  |         |  348  |    111  |  2  |  [187,111,129,11,89]  |         50  |
    48  |                 R = R + separator;  |     50  |  398  |    111  |  2  |  [187,111,129,11,89]  |         50  |
    51  |     chunk = arrayRead(objects, i);  |         |  398  |    129  |  2  |  [187,111,129,11,89]  |         50  |
    54  |                     R = R + chunk;  |    129  |  527  |    129  |  2  |  [187,111,129,11,89]  |         50  |
    58  |                         i = i + 1;  |         |  527  |    129  |  3  |  [187,111,129,11,89]  |         50  |
    59  |              resetPlaceHolder_1();  |         |  527  |    129  |  3  |  [187,111,129,11,89]  |         50  |
    65  |                 R = R + separator;  |     50  |  577  |    129  |  3  |  [187,111,129,11,89]  |         50  |
    68  |     chunk = arrayRead(objects, i);  |         |  577  |     11  |  3  |  [187,111,129,11,89]  |         50  |
    71  |                     R = R + chunk;  |     11  |  588  |     11  |  3  |  [187,111,129,11,89]  |         50  |
    75  |                         i = i + 1;  |         |  588  |     11  |  4  |  [187,111,129,11,89]  |         50  |
    76  |              resetPlaceHolder_1();  |         |  588  |     11  |  4  |  [187,111,129,11,89]  |         50  |
    82  |                 R = R + separator;  |     50  |  638  |     11  |  4  |  [187,111,129,11,89]  |         50  |
    85  |     chunk = arrayRead(objects, i);  |         |  638  |     89  |  4  |  [187,111,129,11,89]  |         50  |
    88  |                     R = R + chunk;  |     89  |  727  |     89  |  4  |  [187,111,129,11,89]  |         50  |
    92  |                         i = i + 1;  |         |  727  |     89  |  5  |  [187,111,129,11,89]  |         50  |
    93  |              resetPlaceHolder_1();  |         |  727  |     89  |  5  |  [187,111,129,11,89]  |         50  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 65, 71, 54, 48, 31, 82]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71} because there exists a longer and subsuming segment {71,82} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {88} because there exists a longer and subsuming segment {65,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54} because there exists a longer and subsuming segment {37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21} because there exists a longer and subsuming segment {21,48} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {31}, {48}, {65}, {82} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    21  |         R = R + chunk;  |    187  |                            |
    31  |     R = R + separator;  |     50  |                         0  |
    37  |         R = R + chunk;  |    111  |                            |
    42  |  resetPlaceHolder_1();  |         |                            |
    48  |     R = R + separator;  |     50  |                         1  |
    54  |         R = R + chunk;  |    129  |                            |
    59  |  resetPlaceHolder_1();  |         |                            |
    65  |     R = R + separator;  |     50  |                         2  |
    71  |         R = R + chunk;  |     11  |                            |
    76  |  resetPlaceHolder_1();  |         |                            |
    82  |     R = R + separator;  |     50  |                         3  |
    88  |         R = R + chunk;  |     89  |                            |
    93  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,54} because there exists a longer and subsuming segment {21,37,54} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,88} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,88} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,71} because there exists a longer and subsuming segment {21,37,71} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,88} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {54,71} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {37,71} because there exists a longer and subsuming segment {37,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,37} because there exists a longer and subsuming segment {21,37,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {71,88} because there exists a longer and subsuming segment {54,71,88} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {21,54} because there exists a longer and subsuming segment {21,37,54} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [88, 37, 21, 71, 54]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 0 segment clusters
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {31}, {48}, {65}, {82}
GroupID(1): {21,37,54,71,88}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    21  |         R = R + chunk;  |    187  |                            |                         0  |
    31  |     R = R + separator;  |     50  |                         0  |                            |
    37  |         R = R + chunk;  |    111  |                            |                         0  |
    42  |  resetPlaceHolder_1();  |         |                            |                            |
    48  |     R = R + separator;  |     50  |                         1  |                            |
    54  |         R = R + chunk;  |    129  |                            |                         0  |
    59  |  resetPlaceHolder_1();  |         |                            |                            |
    65  |     R = R + separator;  |     50  |                         2  |                            |
    71  |         R = R + chunk;  |     11  |                            |                         0  |
    76  |  resetPlaceHolder_1();  |         |                            |                            |
    82  |     R = R + separator;  |     50  |                         3  |                            |
    88  |         R = R + chunk;  |     89  |                            |                         0  |
    93  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(42, 59, 76)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R1 = R1 + chunk;
use R separator -> R0 = R0 + separator;
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java

real	0m6.915s
user	0m12.753s
sys	0m3.034s

2023-01-10 20:34:19,177 INFO     Generated the expected decomposition
2023-01-10 20:34:19,177 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:34:26,314 INFO     Done. Execution time: 7.137645959854126 seconds
2023-01-10 20:34:26,315 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/JoinWith.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (objects + (objects * separator))) || (((0 + (D0p * C0)) + (D1p * C1)) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class JoinWith  {
  void execute(int separator, int objects)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryObjects = 0;
    int lastIndexOfObjects = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * objects)) + ((8 * objects) * separator))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * objects)) + ((8 * objects) * separator))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (objects + (objects * separator))) || (((0 + (D0p * C0)) + (D1p * C1)) == (objects + (objects * separator))));
    if ((objects < 1) || (objects == 1))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int i = 0;
    int chunk = 0;
    {
      temporaryObjects = ndInt2(lastIndexOfObjects, objects);
      chunk = temporaryObjects - lastIndexOfObjects;
      lastIndexOfObjects = temporaryObjects;
    }
    D1 = D1 + chunk;
    i = i + 1;
    while (i < objects)
    {
      D0 = D0 + separator;
      {
        temporaryObjects = ndInt2(lastIndexOfObjects, objects);
        chunk = temporaryObjects - lastIndexOfObjects;
        lastIndexOfObjects = temporaryObjects;
      }
      D1 = D1 + chunk;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ objects (* objects separator))))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.JoinWith`)
INFO  brbo.BrboMain - Time consumption: `5.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2034-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-2034-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m7.133s
user	0m13.712s
sys	0m1.632s

2023-01-10 20:34:26,315 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-10 20:34:26,315 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:34:52,121 INFO     Done. Execution time: 25.80667543411255 seconds
2023-01-10 20:34:52,122 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceQFuzzDriver.java -d /tmp/qfuzz2835244723673666529/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz2835244723673666529/bin -o /tmp/qfuzz2835244723673666529/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz2835244723673666529/bin
Found file /tmp/qfuzz2835244723673666529/bin/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Found file /tmp/qfuzz2835244723673666529/bin/brbo/fuzz/drivers/Replace.class
Instrumenting class: brbo/fuzz/drivers/ReplaceQFuzzDriver.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/brbo/fuzz/drivers/ReplaceQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/brbo/fuzz/drivers/Replace.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz2835244723673666529/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz2835244723673666529/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz2835244723673666529/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz2835244723673666529/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 115248 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m115k to 115k us (average: 115k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
5; /tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov,+partition,+delta; 3; 75.00; [33.00,108.00,356.00]
7; /tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4; 3; 10.00; [38.00,48.00,375.00]
13; /tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 3; 13.00; [26.00,121.00,134.00]
18; /tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta; 3; 77.00; [142.00,219.00,376.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov,+partition,+delta
/tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
/tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
/tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(4, 4, 45, 196, 4, 4, 174, 102, 161, 106, 168, 37, 191, 7, 102, 161, 106, 75, 54, 98, 92)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(97, 170, 179, 190, 67, 67, 67, 67, 67, 67, 67, 25, 67, 67, 64, 32, 108, 32, 148, 50, 43, 57, 52, 47, 12, 32, 158, 129)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 114, 15, 15, 15, 15, 15, 15, 15, 11, 33, 175, 110, 33, 153, 73, 16, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz2835244723673666529/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(48, 140, 4, 116, 8, 120, 63, 51, 150, 59)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [4,4,45,196,4], 4, 174, 102
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [97,170,179,190,67], 67, 67, 67
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,114,15,15,15], 15, 15, 15
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [48,140,4,116,8], 120, 63, 51
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.800s
user	0m10.900s
sys	0m0.701s

2023-01-10 20:34:52,122 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
2023-01-10 20:34:58,269 INFO     Done. Execution time: 6.147175073623657 seconds
2023-01-10 20:34:58,269 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.Replace`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing Replace] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([4,4,45,196,4], 4, 174, 102)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([97,170,179,190,67], 67, 67, 67)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,114,15,15,15], 15, 15, 15)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([48,140,4,116,8], 120, 63, 51)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 93):
                                                                                                                                             
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |  max  |  replacement  |  searchString  |       text       |
---------------------------------------------------------------------------------------------------------------------------------------------
    33  |                         int R = 0;  |         |    0  |         |     |  102  |          174  |             4  |  [4,4,45,196,4]  |
    34  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  102  |          174  |             4  |  [4,4,45,196,4]  |
    35  |  // lessPreciseBound(R <= MAX +...  |         |    0  |         |     |  102  |          174  |             4  |  [4,4,45,196,4]  |
    37  |                     int chunk = 0;  |         |    0  |      0  |     |  102  |          174  |             4  |  [4,4,45,196,4]  |
    39  |                         int i = 0;  |         |    0  |      0  |  0  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    47  |        chunk = arrayRead(text, i);  |         |    0  |      4  |  0  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    50  |                     R = R + chunk;  |      4  |    4  |      4  |  0  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    53  |               R = R + replacement;  |    174  |  178  |      4  |  0  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    58  |  chunk = arrayRead(text, (i + 1...  |         |  178  |      4  |  0  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    62  |                         i = i + 2;  |         |  178  |      4  |  2  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    63  |              resetPlaceHolder_1();  |         |  178  |      4  |  2  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    71  |        chunk = arrayRead(text, i);  |         |  178  |     45  |  2  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    74  |                     R = R + chunk;  |     45  |  223  |     45  |  2  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    77  |               R = R + replacement;  |    174  |  397  |     45  |  2  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    82  |  chunk = arrayRead(text, (i + 1...  |         |  397  |    196  |  2  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    86  |                         i = i + 2;  |         |  397  |    196  |  4  |  102  |          174  |             4  |  [4,4,45,196,4]  |
    87  |              resetPlaceHolder_1();  |         |  397  |    196  |  4  |  102  |          174  |             4  |  [4,4,45,196,4]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [50, 53, 74, 77]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [50, 53, 74, 77]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [50, 53, 74, 77]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [50, 53, 74, 77]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {74} because there exists a longer and subsuming segment {50,74} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {53}, {77} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    50  |         R = R + chunk;  |      4  |                            |
    53  |   R = R + replacement;  |    174  |                         0  |
    63  |  resetPlaceHolder_1();  |         |                            |
    74  |         R = R + chunk;  |     45  |                            |
    77  |   R = R + replacement;  |    174  |                         1  |
    87  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [50, 74]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [50, 74]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [50, 74]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {53}, {77}
GroupID(1): {50,74}
                                                                                                       
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |  SegmentIDs in GroupID(1)  |
-------------------------------------------------------------------------------------------------------
    50  |         R = R + chunk;  |      4  |                            |                         0  |
    53  |   R = R + replacement;  |    174  |                         0  |                            |
    63  |  resetPlaceHolder_1();  |         |                            |                            |
    74  |         R = R + chunk;  |     45  |                            |                         0  |
    77  |   R = R + replacement;  |    174  |                         1  |                            |
    87  |  resetPlaceHolder_1();  |         |                            |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
GroupID(1): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(63)
GroupID(1): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> {
  // reset R1
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
use R replacement -> R0 = R0 + replacement;
use R chunk -> R1 = R1 + chunk;
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java

real	0m6.141s
user	0m11.719s
sys	0m2.097s

2023-01-10 20:34:58,269 INFO     Generated the expected decomposition
2023-01-10 20:34:58,269 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:36:15,423 INFO     Done. Execution time: 77.15387749671936 seconds
2023-01-10 20:36:15,424 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/Replace.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (text + (text * replacement))) || (((0 + (D0p * C0)) + (D1p * C1)) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class Replace  {
  void execute(int replacement, int text, int searchString, int max)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    int temporaryText = 0;
    int lastIndexOfText = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < ((8 + (8 * text)) + ((8 * text) * replacement))) || (((0 + (D0p * C0)) + (D1p * C1)) == ((8 + (8 * text)) + ((8 * text) * replacement))));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (text + (text * replacement))) || (((0 + (D0p * C0)) + (D1p * C1)) == (text + (text * replacement))));
    if (((((text < 1) || (text == 1)) || ((searchString < 0) || (searchString == 0))) || ((max < 0) || (max == 0))) || ((replacement < 0) || (replacement == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int i = 0;
    while ((i + 1) < text)
    {
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      D1 = D1 + chunk;
      D0 = D0 + replacement;
      {
        temporaryText = ndInt2(lastIndexOfText, text);
        chunk = temporaryText - lastIndexOfText;
        lastIndexOfText = temporaryText;
      }
      i = i + 2;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 replacement)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 text)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1 replacement)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 text)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement)))
    (= (+ 0 (* D0p C0) (* D1p C1)) (+ text (* text replacement))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.Replace`)
INFO  brbo.BrboMain - Time consumption: `75.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2034-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-2034-transparentAmortize-60s-mostPrecise-000-099.csv`

real	1m17.148s
user	2m57.475s
sys	0m17.285s

2023-01-10 20:36:15,424 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-10 20:36:15,424 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:36:41,006 INFO     Done. Execution time: 25.58191156387329 seconds
2023-01-10 20:36:41,006 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.java -d /tmp/qfuzz8926804010034869947/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz8926804010034869947/bin -o /tmp/qfuzz8926804010034869947/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz8926804010034869947/bin
Found file /tmp/qfuzz8926804010034869947/bin/brbo/fuzz/drivers/ReplaceChars.class
Found file /tmp/qfuzz8926804010034869947/bin/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/brbo/fuzz/drivers/ReplaceCharsQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/brbo/fuzz/drivers/ReplaceChars.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz8926804010034869947/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz8926804010034869947/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.ReplaceCharsQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz8926804010034869947/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz8926804010034869947/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 118336 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
5; /tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta; 2; 8.00; [17.00,25.00]
7; /tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov,+delta; 2; 9.00; [16.00,25.00]
10; /tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32; 2; 8.00; [16.00,24.00]
11; /tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8; 2; 9.00; [16.00,25.00]
12; /tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128; 2; 8.00; [17.00,25.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta
/tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov,+delta
/tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
/tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
/tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:32,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(72, 191, 105, 11, 62, 191, 132, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+cov,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(190, 127, 57, 17, 127, 16, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 58, 12, 147, 87, 116, 70, 58, 77)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:8
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 17, 98, 82, 132, 139, 161, 139, 139, 139, 139, 139, 139, 139, 139, 139, 70)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz8926804010034869947/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(71, 189, 189, 189, 71, 189, 189, 189, 189, 199, 116, 189, 10)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [191,105,11,62,191], 132, 43
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [7,7,7,7,7], 7, 7
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [110,17,98,82,132], 139, 161
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, [189,189,189,71,189], 189, 189
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.576s
user	0m11.029s
sys	0m0.740s

2023-01-10 20:36:41,006 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
2023-01-10 20:36:46,011 INFO     Done. Execution time: 5.005159378051758 seconds
2023-01-10 20:36:46,012 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.ReplaceChars`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing ReplaceChars] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [191,105,11,62,191], 132, 43)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [7,7,7,7,7], 7, 7)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [110,17,98,82,132], 139, 161)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, [189,189,189,71,189], 189, 189)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 91):
                                                                                                                                                 
 Index  |              Commands               |  Costs  |  R  |  choice  |        choices        |  i  |  replaceChars  |  searchChars  |  str  |
-------------------------------------------------------------------------------------------------------------------------------------------------
    29  |                         int R = 0;  |         |  0  |          |  [191,105,11,62,191]  |     |            43  |          132  |    2  |
    30  |      // mostPreciseBound(R <= str)  |         |  0  |          |  [191,105,11,62,191]  |     |            43  |          132  |    2  |
    31  |  // lessPreciseBound(R <= MAX *...  |         |  0  |          |  [191,105,11,62,191]  |     |            43  |          132  |    2  |
    33  |                    int choice = 0;  |         |  0  |       0  |  [191,105,11,62,191]  |     |            43  |          132  |    2  |
    35  |                         int i = 0;  |         |  0  |       0  |  [191,105,11,62,191]  |  0  |            43  |          132  |    2  |
    41  |  choice = arrayRead(choices, i)...  |         |  0  |     191  |  [191,105,11,62,191]  |  0  |            43  |          132  |    2  |
    56  |                         R = R + 1;  |      1  |  1  |     191  |  [191,105,11,62,191]  |  0  |            43  |          132  |    2  |
    60  |                         i = i + 1;  |         |  1  |     191  |  [191,105,11,62,191]  |  1  |            43  |          132  |    2  |
    61  |              resetPlaceHolder_1();  |         |  1  |     191  |  [191,105,11,62,191]  |  1  |            43  |          132  |    2  |
    67  |  choice = arrayRead(choices, i)...  |         |  1  |     105  |  [191,105,11,62,191]  |  1  |            43  |          132  |    2  |
    82  |                         R = R + 1;  |      1  |  2  |     105  |  [191,105,11,62,191]  |  1  |            43  |          132  |    2  |
    86  |                         i = i + 1;  |         |  2  |     105  |  [191,105,11,62,191]  |  2  |            43  |          132  |    2  |
    87  |              resetPlaceHolder_1();  |         |  2  |     105  |  [191,105,11,62,191]  |  2  |            43  |          132  |    2  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [56, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [56, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [56, 82]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [56, 82]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {56}, {82} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    56  |             R = R + 1;  |      1  |                         0  |
    61  |  resetPlaceHolder_1();  |         |                            |
    82  |             R = R + 1;  |      1  |                         1  |
    87  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {56}, {82}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    56  |             R = R + 1;  |      1  |                         0  |
    61  |  resetPlaceHolder_1();  |         |                            |
    82  |             R = R + 1;  |      1  |                         1  |
    87  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(61)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R 1 -> R0 = R0 + 1;
resetPlaceHolder_1(); -> if (S0 < R0)
{
  S0 = R0;
}
else
{
  ;
}
R0 = 0;
C0 = C0 + 1;
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java

real	0m4.999s
user	0m9.063s
sys	0m1.609s

2023-01-10 20:36:46,012 INFO     Generated the expected decomposition
2023-01-10 20:36:46,012 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:43:04,215 INFO     Done. Execution time: 378.20327258110046 seconds
2023-01-10 20:43:04,215 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/ReplaceChars.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((((str < 0) || (str == 0)) || ((searchChars < 0) || (searchChars == 0))) || ((replaceChars < 0) || (replaceChars == 0))) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        R = R + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class ReplaceChars  {
  void execute(int choices, int str, int replaceChars, int searchChars)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((((str < 0) || (str == 0)) || ((searchChars < 0) || (searchChars == 0))) || ((replaceChars < 0) || (replaceChars == 0))) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int choice = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 102)) && !((choice == 102)))
      {
        if (i < replaceChars)
        {
          D0 = D0 + 1;
        }
        else
        {
          ;
        }
      }
      else
      {
        R = R + 1;
      }
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.ReplaceChars`)
INFO  brbo.BrboMain - Time consumption: `376.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2036-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-2036-transparentAmortize-60s-mostPrecise-000-099.csv`

real	6m18.197s
user	9m7.157s
sys	0m11.011s

2023-01-10 20:43:04,216 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-10 20:43:04,216 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:43:29,876 INFO     Done. Execution time: 25.66071319580078 seconds
2023-01-10 20:43:29,877 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.java -d /tmp/qfuzz697118861614827960/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz697118861614827960/bin -o /tmp/qfuzz697118861614827960/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz697118861614827960/bin
Found file /tmp/qfuzz697118861614827960/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Found file /tmp/qfuzz697118861614827960/bin/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
File written: /tmp/qfuzz697118861614827960/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz697118861614827960/bin-instr/brbo/fuzz/drivers/SplitByWholeSeparatorWorker.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz697118861614827960/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz697118861614827960/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitByWholeSeparatorWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz697118861614827960/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz697118861614827960/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 1, exec speed = 118229 us
[0m[1;93m[!] [1;97mWARNING: [0mInstrumentation output varies across runs.[0m
[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 1 variable, 1 total
[1;90m       Bitmap range : [0m1 to 1 bits (average: 1.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
4; /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]
6; /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov,+partition,+delta; 2; 42.00; [344.00,386.00]
7; /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+partition,+delta; 3; 52.00; [240.00,292.00,410.00]
9; /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta; 4; 13.00; [66.00,79.00,278.00,410.00]
10; /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32; 2; 327.00; [79.00,406.00]
13; /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+partition,+delta; 5; 26.00; [90.00,158.00,246.00,292.00,318.00]
16; /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64; 1; 0.00; [0.00]
18; /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2; 2; 240.00; [170.00,410.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov,+partition,+delta
/tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+partition,+delta
/tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta
/tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+partition,+delta
/tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
/tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
/tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:4,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(162, 162, 162, 162, 162, 162, 162, 87, 99, 33, 185, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 18, 153, 123, 51, 33, 136, 123, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:16,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 129, 23, 23, 23, 23, 80, 23, 161, 23, 23, 78, 23, 110, 33, 120, 67, 23, 23, 23, 161, 23, 23, 78, 23, 187, 33, 97, 36, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000005,src:000000,op:havoc,rep:64,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(105, 136, 69, 35, 149, 68, 68, 66, 66, 68, 107, 4, 92, 68, 43)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:32
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(45, 15, 193, 193, 32, 193, 92, 80, 193, 190, 193, 41, 17, 134, 132, 4, 21, 27, 194, 193, 193, 92, 80, 193, 190, 193, 41, 50, 193, 132, 4, 21, 27, 194, 193, 13, 193, 41, 6, 89)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000006,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(170, 170, 170, 170, 192, 170, 170, 170, 170, 170, 170, 170, 6, 162)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz697118861614827960/fuzzer-out/afl/queue/id:000007,src:000000,op:havoc,rep:2
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 75, 75, 75, 75, 75, 75, 75, 69, 174, 75, 75, 75, 69, 170, 93, 16, 187)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [162,162,162,162,162], [162,162,87,99,33], 185
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,129,23,23,23], [23,80,23,161,23], 23
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [105,136,69,35,149], [68,68,66,66,68], 107
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [45,15,193,193,32], [193,92,80,193,190], 193
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [170,170,170,170,192], [170,170,170,170,170], 170
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,75,75,75,75], [75,75,75,69,174], 75
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.655s
user	0m10.824s
sys	0m0.759s

2023-01-10 20:43:29,877 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-10 20:43:34,720 INFO     Done. Execution time: 4.8436479568481445 seconds
2023-01-10 20:43:34,721 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitByWholeSeparatorWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([162,162,162,162,162], [162,162,87,99,33], 185)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 6 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,129,23,23,23], [23,80,23,161,23], 23)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([105,136,69,35,149], [68,68,66,66,68], 107)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([45,15,193,193,32], [193,92,80,193,190], 193)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([170,170,170,170,192], [170,170,170,170,170], 170)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,75,75,75,75], [75,75,75,69,174], 75)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 6 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 187):
                                                                                                                                                                                   
 Index  |              Commands               |  Costs  |   R   |  chunk  |  i  |     isSeparator      |  isSeparatorChunk  |  max  |  numberOfStrings  |           str           |
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    21  |                         int R = 0;  |         |    0  |         |     |  [162,162,87,99,33]  |                    |  185  |                   |  [162,162,162,162,162]  |
    22  |  // mostPreciseBound(R <= array...  |         |    0  |         |     |  [162,162,87,99,33]  |                    |  185  |                   |  [162,162,162,162,162]  |
    23  |  // lessPreciseBound(R <= MAX *...  |         |    0  |         |     |  [162,162,87,99,33]  |                    |  185  |                   |  [162,162,162,162,162]  |
    25  |           int numberOfStrings = 0;  |         |    0  |         |     |  [162,162,87,99,33]  |                    |  185  |                0  |  [162,162,162,162,162]  |
    27  |                     int chunk = 0;  |         |    0  |      0  |     |  [162,162,87,99,33]  |                    |  185  |                0  |  [162,162,162,162,162]  |
    29  |          int isSeparatorChunk = 0;  |         |    0  |      0  |     |  [162,162,87,99,33]  |                 0  |  185  |                0  |  [162,162,162,162,162]  |
    31  |                         int i = 0;  |         |    0  |      0  |  0  |  [162,162,87,99,33]  |                 0  |  185  |                0  |  [162,162,162,162,162]  |
    37  |         chunk = arrayRead(str, i);  |         |    0  |    162  |  0  |  [162,162,87,99,33]  |                 0  |  185  |                0  |  [162,162,162,162,162]  |
    44  |  isSeparatorChunk = arrayRead(i...  |         |    0  |    162  |  0  |  [162,162,87,99,33]  |               162  |  185  |                0  |  [162,162,162,162,162]  |
    57  |  numberOfStrings = numberOfStri...  |         |    0  |    162  |  0  |  [162,162,87,99,33]  |               162  |  185  |                1  |  [162,162,162,162,162]  |
    61  |                         i = i + 1;  |         |    0  |    162  |  1  |  [162,162,87,99,33]  |               162  |  185  |                1  |  [162,162,162,162,162]  |
    62  |              resetPlaceHolder_1();  |         |    0  |    162  |  1  |  [162,162,87,99,33]  |               162  |  185  |                1  |  [162,162,162,162,162]  |
    68  |         chunk = arrayRead(str, i);  |         |    0  |    162  |  1  |  [162,162,87,99,33]  |               162  |  185  |                1  |  [162,162,162,162,162]  |
    75  |  isSeparatorChunk = arrayRead(i...  |         |    0  |    162  |  1  |  [162,162,87,99,33]  |               162  |  185  |                1  |  [162,162,162,162,162]  |
    88  |  numberOfStrings = numberOfStri...  |         |    0  |    162  |  1  |  [162,162,87,99,33]  |               162  |  185  |                2  |  [162,162,162,162,162]  |
    92  |                         i = i + 1;  |         |    0  |    162  |  2  |  [162,162,87,99,33]  |               162  |  185  |                2  |  [162,162,162,162,162]  |
    93  |              resetPlaceHolder_1();  |         |    0  |    162  |  2  |  [162,162,87,99,33]  |               162  |  185  |                2  |  [162,162,162,162,162]  |
    99  |         chunk = arrayRead(str, i);  |         |    0  |    162  |  2  |  [162,162,87,99,33]  |               162  |  185  |                2  |  [162,162,162,162,162]  |
   106  |  isSeparatorChunk = arrayRead(i...  |         |    0  |    162  |  2  |  [162,162,87,99,33]  |                87  |  185  |                2  |  [162,162,162,162,162]  |
   118  |                     R = R + chunk;  |    162  |  162  |    162  |  2  |  [162,162,87,99,33]  |                87  |  185  |                2  |  [162,162,162,162,162]  |
   122  |                         i = i + 1;  |         |  162  |    162  |  3  |  [162,162,87,99,33]  |                87  |  185  |                2  |  [162,162,162,162,162]  |
   123  |              resetPlaceHolder_1();  |         |  162  |    162  |  3  |  [162,162,87,99,33]  |                87  |  185  |                2  |  [162,162,162,162,162]  |
   129  |         chunk = arrayRead(str, i);  |         |  162  |    162  |  3  |  [162,162,87,99,33]  |                87  |  185  |                2  |  [162,162,162,162,162]  |
   136  |  isSeparatorChunk = arrayRead(i...  |         |  162  |    162  |  3  |  [162,162,87,99,33]  |                99  |  185  |                2  |  [162,162,162,162,162]  |
   148  |                     R = R + chunk;  |    162  |  324  |    162  |  3  |  [162,162,87,99,33]  |                99  |  185  |                2  |  [162,162,162,162,162]  |
   152  |                         i = i + 1;  |         |  324  |    162  |  4  |  [162,162,87,99,33]  |                99  |  185  |                2  |  [162,162,162,162,162]  |
   153  |              resetPlaceHolder_1();  |         |  324  |    162  |  4  |  [162,162,87,99,33]  |                99  |  185  |                2  |  [162,162,162,162,162]  |
   159  |         chunk = arrayRead(str, i);  |         |  324  |    162  |  4  |  [162,162,87,99,33]  |                99  |  185  |                2  |  [162,162,162,162,162]  |
   166  |  isSeparatorChunk = arrayRead(i...  |         |  324  |    162  |  4  |  [162,162,87,99,33]  |                33  |  185  |                2  |  [162,162,162,162,162]  |
   178  |                     R = R + chunk;  |    162  |  486  |    162  |  4  |  [162,162,87,99,33]  |                33  |  185  |                2  |  [162,162,162,162,162]  |
   182  |                         i = i + 1;  |         |  486  |    162  |  5  |  [162,162,87,99,33]  |                33  |  185  |                2  |  [162,162,162,162,162]  |
   183  |              resetPlaceHolder_1();  |         |  486  |    162  |  5  |  [162,162,87,99,33]  |                33  |  185  |                2  |  [162,162,162,162,162]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [118, 148, 178]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [118, 148, 178]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [118, 148, 178]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [118, 148, 178]
INFO  brbo.backend2.learning.SegmentClustering - Clustered similar segments: Found 1 segment clusters
INFO  brbo.backend2.learning.SegmentClustering - Visit 0-th cluster (segment length: 1)
INFO  brbo.backend2.learning.SegmentClustering - Choose non-overlapping segments from 0-th cluster
INFO  brbo.backend2.learning.SegmentClustering - Found 1 possible groups (or non-overlapping sets of segments)
INFO  brbo.backend2.learning.SegmentClustering - Chosen group: {118}, {148}, {178} on trace:
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in PrintGroup  |
--------------------------------------------------------------------------
    62  |  resetPlaceHolder_1();  |         |                            |
    93  |  resetPlaceHolder_1();  |         |                            |
   118  |         R = R + chunk;  |    162  |                         0  |
   123  |  resetPlaceHolder_1();  |         |                            |
   148  |         R = R + chunk;  |    162  |                         1  |
   153  |  resetPlaceHolder_1();  |         |                            |
   178  |         R = R + chunk;  |    162  |                         2  |
   183  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {118}, {148}, {178}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    62  |  resetPlaceHolder_1();  |         |                            |
    93  |  resetPlaceHolder_1();  |         |                            |
   118  |         R = R + chunk;  |    162  |                         0  |
   123  |  resetPlaceHolder_1();  |         |                            |
   148  |         R = R + chunk;  |    162  |                         1  |
   153  |  resetPlaceHolder_1();  |         |                            |
   178  |         R = R + chunk;  |    162  |                         2  |
   183  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): resetPlaceHolder_1();
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set(123, 153)
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R chunk -> R0 = R0 + chunk;
resetPlaceHolder_1(); -> if ((i < 2) || (i == 2))
{
  // reset R0
}
else
{
  if (S0 < R0)
  {
    S0 = R0;
  }
  else
  {
    ;
  }
  R0 = 0;
  C0 = C0 + 1;
}
If we are printing a decomposed use, then we have failed to decompose `R = R + chunk;`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java	2023-01-10 20:04:01.631933360 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java.actual	2023-01-10 20:43:34.689014112 -0700
@@ -2,12 +2,15 @@
   void execute(int str, int isSeparator, int max) 
   {
     int BOOLEAN_SEPARATOR = 102;
+    int C0 = -1;
+    int D0 = 0;
+    int D0p = 0;
     int temporaryStr = 0;
     int lastIndexOfStr = 0;
     int temporaryIsSeparator = 0;
     int lastIndexOfIsSeparator = 0;
-    lessPreciseBound((0 < ((8 * str) + 8)) || (0 == ((8 * str) + 8)));
-    mostPreciseBound((0 < str) || (0 == str));
+    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
+    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
     if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || (isSeparator < str))
     {
       return;
@@ -51,10 +54,19 @@
       }
       else
       {
-        R = R + chunk;
+        D0 = D0 + chunk;
       }
       i = i + 1;
-      // resetPlaceHolder_1();
+      if ((i < 2) || (i == 2))
+      {
+        // reset R0
+      }
+      else
+      {
+        D0p = D0;
+        D0 = 0;
+        C0 = C0 + 1;
+      }
     }
   }
   // Declare these methods such that these generated code can be parsed


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java

real	0m4.838s
user	0m8.706s
sys	0m1.500s

2023-01-10 20:43:34,721 INFO     Overwrite the existing decomposition
2023-01-10 20:43:34,721 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
2023-01-10 20:43:34,723 INFO     Done. Execution time: 0.001850128173828125 seconds
2023-01-10 20:43:34,723 INFO     Output: 
2023-01-10 20:43:34,723 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:49:54,646 INFO     Done. Execution time: 379.9224729537964 seconds
2023-01-10 20:49:54,646 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitByWholeSeparatorWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    int temporaryIsSeparator = 0;
    int lastIndexOfIsSeparator = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || (isSeparator < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        R = R + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      {
        temporaryIsSeparator = ndInt2(lastIndexOfIsSeparator, isSeparator);
        isSeparatorChunk = temporaryIsSeparator - lastIndexOfIsSeparator;
        lastIndexOfIsSeparator = temporaryIsSeparator;
      }
      if (!((isSeparatorChunk < 102)) && !((isSeparatorChunk == 102)))
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitByWholeSeparatorWorker  {
  void execute(int str, int max, int isSeparator)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryStr = 0;
    int lastIndexOfStr = 0;
    int temporaryIsSeparator = 0;
    int lastIndexOfIsSeparator = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((((str < 1) || (str == 1)) || ((max < 0) || (max == 0))) || (isSeparator < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int numberOfStrings = 0;
    int chunk = 0;
    int isSeparatorChunk = 0;
    int i = 0;
    while (i < str)
    {
      {
        temporaryStr = ndInt2(lastIndexOfStr, str);
        chunk = temporaryStr - lastIndexOfStr;
        lastIndexOfStr = temporaryStr;
      }
      if (!((numberOfStrings < max)))
      {
        R = R + chunk;
        i = i + 1;
        continue;
      }
      else
      {
        ;
      }
      {
        temporaryIsSeparator = ndInt2(lastIndexOfIsSeparator, isSeparator);
        isSeparatorChunk = temporaryIsSeparator - lastIndexOfIsSeparator;
        lastIndexOfIsSeparator = temporaryIsSeparator;
      }
      if (!((isSeparatorChunk < 102)) && !((isSeparatorChunk == 102)))
      {
        numberOfStrings = numberOfStrings + 1;
      }
      else
      {
        D0 = D0 + chunk;
      }
      i = i + 1;
      if ((i < 2) || (i == 2))
      {

      }
      else
      {
        D0p = D0;
        D0 = 0;
        C0 = C0 + 1;
      }
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
FATAL brbo.common.icra.Icra - Error when running ICRA. Exit code: `124`
FATAL brbo.common.icra.Icra - Ran command `timeout 60s /root/Documents/workspace/icra/icra -cra-split-loops -cra-prsd /tmp/prefix-1156770312941328954.c`
ERROR brbo.common.icra.Icra - stderr:

ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 str)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? No! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitByWholeSeparatorWorker`)
INFO  brbo.BrboMain - Time consumption: `378.2` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2043-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-2043-transparentAmortize-60s-mostPrecise-000-099.csv`

real	6m19.918s
user	8m2.023s
sys	0m5.828s

2023-01-10 20:49:54,646 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-10 20:49:54,646 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:50:20,288 INFO     Done. Execution time: 25.64212656021118 seconds
2023-01-10 20:50:20,288 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.java -d /tmp/qfuzz6053558562319817876/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6053558562319817876/bin -o /tmp/qfuzz6053558562319817876/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6053558562319817876/bin
Found file /tmp/qfuzz6053558562319817876/bin/brbo/fuzz/drivers/SplitWorker.class
Found file /tmp/qfuzz6053558562319817876/bin/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/brbo/fuzz/drivers/SplitWorkerQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/brbo/fuzz/drivers/SplitWorker.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6053558562319817876/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6053558562319817876/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorkerQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6053558562319817876/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6053558562319817876/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 46, exec speed = 123109 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m46 to 46 bits (average: 46.00 bits)
[1;90m        Exec timing : [0m123k to 123k us (average: 123k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6053558562319817876/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [47.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.636s
user	0m11.382s
sys	0m0.631s

2023-01-10 20:50:20,288 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
2023-01-10 20:50:22,167 INFO     Done. Execution time: 1.8787751197814941 seconds
2023-01-10 20:50:22,167 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.873s
user	0m3.492s
sys	0m0.233s

2023-01-10 20:50:22,168 INFO     Generated the expected decomposition
2023-01-10 20:50:22,168 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:51:19,404 INFO     Done. Execution time: 57.23593831062317 seconds
2023-01-10 20:51:19,404 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 502)) && !((choice == 502)))
      {
        if (match)
        {
          list = list + (i - start);
          D0 = D0 + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker  {
  void execute(int choices, int str)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if (((str < 0) || (str == 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = 0;
    while (i < str)
    {
      {
        temporaryChoices = ndInt2(lastIndexOfChoices, choices);
        choice = temporaryChoices - lastIndexOfChoices;
        lastIndexOfChoices = temporaryChoices;
      }
      if (!((choice < 502)) && !((choice == 502)))
      {
        if (match)
        {
          list = list + (i - start);
          D0 = D0 + (i - start);
          match = false;
          lastMatch = true;
        }
        else
        {
          ;
        }
        i = i + 1;
        start = i;
        continue;
      }
      else
      {
        ;
      }
      lastMatch = false;
      match = true;
      i = i + 1;
    }
    if (match && lastMatch)
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `true` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker`)
INFO  brbo.BrboMain - Time consumption: `55.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2050-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-2050-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m57.230s
user	1m25.459s
sys	0m3.188s

2023-01-10 20:51:19,404 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-10 20:51:19,404 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:51:45,122 INFO     Done. Execution time: 25.717801570892334 seconds
2023-01-10 20:51:45,122 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.java -d /tmp/qfuzz6914873556814914824/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz6914873556814914824/bin -o /tmp/qfuzz6914873556814914824/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz6914873556814914824/bin
Found file /tmp/qfuzz6914873556814914824/bin/brbo/fuzz/drivers/SplitWorker2.class
Found file /tmp/qfuzz6914873556814914824/bin/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/brbo/fuzz/drivers/SplitWorker2.class
Instrumenting class: brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/brbo/fuzz/drivers/SplitWorker2QFuzzDriver.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz6914873556814914824/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz6914873556814914824/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SplitWorker2QFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz6914873556814914824/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz6914873556814914824/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 41, exec speed = 118241 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m41 to 41 bits (average: 41.00 bits)
[1;90m        Exec timing : [0m118k to 118k us (average: 118k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz6914873556814914824/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [57.00]
2; /tmp/qfuzz6914873556814914824/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov; 1; 0.00; [56.00]
3; /tmp/qfuzz6914873556814914824/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov,+partition,+delta; 2; 19.00; [25.00,44.00]
5; /tmp/qfuzz6914873556814914824/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+cov; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz6914873556814914824/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov,+partition,+delta
/tmp/qfuzz6914873556814914824/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
/tmp/qfuzz6914873556814914824/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6914873556814914824/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:8,+cov,+partition,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(195, 69, 53, 194, 51)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6914873556814914824/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:8,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(39, 22, 13, 4, 104, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz6914873556814914824/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4,+cov
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(31, 109, 109, 109, 109, 109, 109, 109, 109, 109, 108)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 69, 53, false, [51]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 22, 13, false, [104,50]
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 2, 109, 109, false, [109,109,109,109,109]
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.712s
user	0m11.730s
sys	0m0.762s

2023-01-10 20:51:45,122 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
2023-01-10 20:51:47,763 INFO     Done. Execution time: 2.64011549949646 seconds
2023-01-10 20:51:47,763 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SplitWorker2`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SplitWorker2] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 69, 53, false, [51])
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 3 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 22, 13, false, [104,50])
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(2, 109, 109, false, [109,109,109,109,109])
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 3 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 25):
                                                                                                     
 Index  |  Commands  |  Costs  |  choices  |  max  |  preserveAllTokens  |  separatorChars  |  str  |
-----------------------------------------------------------------------------------------------------
    24  |   return;  |         |     [51]  |   53  |              false  |              69  |    2  |
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:

                                
 Index  |  Commands  |  Costs  |
--------------------------------
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:

INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:

INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs

If we are printing a decomposed use, then we have failed to decompose `R = R + (i - start);`
If we are printing a decomposed use, then we have failed to decompose `R = R + (i - start);`
If we are printing a decomposed use, then we have failed to decompose `R = R + (i - start);`
If we are printing a decomposed use, then we have failed to decompose `R = R + (i - start);`
INFO  brbo.BrboMain$ - Write into file /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java.actual
INFO  brbo.BrboMain$ - New decomposition differs from the existing decomposition
INFO  brbo.BrboMain$ - --- /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java	2023-01-10 17:46:09.191040259 -0700
+++ /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java.actual	2023-01-10 20:51:47.627866574 -0700
@@ -2,13 +2,10 @@
   void execute(int str, int separatorChars, int max, boolean preserveAllTokens, int choices) 
   {
     int BOOLEAN_SEPARATOR = 102;
-    int C0 = -1;
-    int D0 = 0;
-    int D0p = 0;
     int temporaryChoices = 0;
     int lastIndexOfChoices = 0;
-    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
-    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
+    lessPreciseBound((0 < ((8 * str) + 8)) || (0 == ((8 * str) + 8)));
+    mostPreciseBound((0 < str) || (0 == str));
     if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || (choices < str))
     {
       return;
@@ -146,7 +143,7 @@
               }
               sizePlus1 = sizePlus1 + 1;
               list = list + (i - start);
-              D0 = D0 + (i - start);
+              R = R + (i - start);
               match = false;
             }
             else
@@ -164,7 +161,7 @@
           lastMatch = false;
           match = true;
           i = i + 1;
-          // reset R0
+          // resetPlaceHolder_3();
         }
       }
     }


INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java

real	0m2.634s
user	0m5.803s
sys	0m0.254s

2023-01-10 20:51:47,763 INFO     Overwrite the existing decomposition
2023-01-10 20:51:47,763 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `mv /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java.actual /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
2023-01-10 20:51:47,765 INFO     Done. Execution time: 0.0019919872283935547 seconds
2023-01-10 20:51:47,765 INFO     Output: 
2023-01-10 20:51:47,765 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:51:49,630 INFO     Done. Execution time: 1.864866018295288 seconds
2023-01-10 20:51:49,631 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SplitWorker2.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map()
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((0 < ((8 * str) + 8)) || (0 == ((8 * str) + 8)));
    mostPreciseBound((0 < str) || (0 == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = 0;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        {
          temporaryChoices = ndInt2(lastIndexOfChoices, choices);
          choice = temporaryChoices - lastIndexOfChoices;
          lastIndexOfChoices = temporaryChoices;
        }
        if (!((choice < 102)) && !((choice == 102)))
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          {
            temporaryChoices = ndInt2(lastIndexOfChoices, choices);
            choice = temporaryChoices - lastIndexOfChoices;
            lastIndexOfChoices = temporaryChoices;
          }
          if (!((choice < 102)) && !((choice == 102)))
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          {
            temporaryChoices = ndInt2(lastIndexOfChoices, choices);
            choice = temporaryChoices - lastIndexOfChoices;
            lastIndexOfChoices = temporaryChoices;
          }
          if (!((choice < 102)) && !((choice == 102)))
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SplitWorker2  {
  void execute(int choices, int str, int max, int separatorChars, boolean preserveAllTokens)
  {

    int BOOLEAN_SEPARATOR = 102;
    int temporaryChoices = 0;
    int lastIndexOfChoices = 0;
    lessPreciseBound((0 < ((8 * str) + 8)) || (0 == ((8 * str) + 8)));
    mostPreciseBound((0 < str) || (0 == str));
    if (((((str < 0) || (str == 0)) || ((max < 0) || (max == 0))) || (separatorChars < 0)) || (choices < str))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int sizePlus1 = 1;
    int i = 0;
    int start = 0;
    boolean match = false;
    boolean lastMatch = false;
    int choice = 0;
    if (separatorChars == 0)
    {
      while (i < str)
      {
        {
          temporaryChoices = ndInt2(lastIndexOfChoices, choices);
          choice = temporaryChoices - lastIndexOfChoices;
          lastIndexOfChoices = temporaryChoices;
        }
        if (!((choice < 102)) && !((choice == 102)))
        {
          if (match || preserveAllTokens)
          {
            lastMatch = true;
            if (sizePlus1 == max)
            {
              i = str;
              lastMatch = false;
            }
            else
            {
              ;
            }
            sizePlus1 = sizePlus1 + 1;
            list = list + (i - start);
            R = R + (i - start);
            match = false;
          }
          else
          {
            ;
          }
          i = i + 1;
          start = i;
          continue;
        }
        else
        {
          ;
        }
        lastMatch = false;
        match = true;
        i = i + 1;
      }
    }
    else
    {
      if (separatorChars == 1)
      {
        while (i < str)
        {
          {
            temporaryChoices = ndInt2(lastIndexOfChoices, choices);
            choice = temporaryChoices - lastIndexOfChoices;
            lastIndexOfChoices = temporaryChoices;
          }
          if (!((choice < 102)) && !((choice == 102)))
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
      else
      {
        while (i < str)
        {
          {
            temporaryChoices = ndInt2(lastIndexOfChoices, choices);
            choice = temporaryChoices - lastIndexOfChoices;
            lastIndexOfChoices = temporaryChoices;
          }
          if (!((choice < 102)) && !((choice == 102)))
          {
            if (match || preserveAllTokens)
            {
              lastMatch = true;
              if (sizePlus1 == max)
              {
                i = str;
                lastMatch = false;
              }
              else
              {
                ;
              }
              sizePlus1 = sizePlus1 + 1;
              list = list + (i - start);
              R = R + (i - start);
              match = false;
            }
            else
            {
              ;
            }
            i = i + 1;
            start = i;
            continue;
          }
          else
          {
            ;
          }
          lastMatch = false;
          match = true;
          i = i + 1;
        }
      }
    }
    if (match || (preserveAllTokens && lastMatch))
    {
      list = list + (i - start);
      R = R + (i - start);
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< 0 str) (= 0 str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< 0 str) (= 0 str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
FATAL brbo.verification.BoundChecking - No invariant was inferred by ICRA!
INFO  brbo.verification.BoundChecking - Inductive invariant:
(<= (+ R) 0)
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Not provide counter axioms
FATAL brbo.common.Z3Solver - Attempting to conjoin empty AST
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< 0 str) (= 0 str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SplitWorker2`)
INFO  brbo.BrboMain - Time consumption: `0.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2051-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-2051-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m1.860s
user	0m3.439s
sys	0m0.246s

2023-01-10 20:51:49,631 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-10 20:51:49,631 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:52:15,372 INFO     Done. Execution time: 25.740745782852173 seconds
2023-01-10 20:52:15,372 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.java -d /tmp/qfuzz4400661772395677992/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz4400661772395677992/bin -o /tmp/qfuzz4400661772395677992/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz4400661772395677992/bin
Found file /tmp/qfuzz4400661772395677992/bin/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Found file /tmp/qfuzz4400661772395677992/bin/brbo/fuzz/drivers/SubstringsBetween.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/brbo/fuzz/drivers/SubstringsBetweenQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/brbo/fuzz/drivers/SubstringsBetween.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz4400661772395677992/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz4400661772395677992/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.SubstringsBetweenQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz4400661772395677992/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz4400661772395677992/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 10, exec speed = 121991 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m10 to 10 bits (average: 10.00 bits)
[1;90m        Exec timing : [0m121k to 121k us (average: 121k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 8.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 9.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 10.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 11.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 12.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 13.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 14.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 15.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 16.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 17.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 18.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 19.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 20.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 21.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 22.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 23.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 24.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 25.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 26.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 27.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 28.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 29.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 30.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 31.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 32.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 33.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 34.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 35.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 36.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 37.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 38.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 39.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 40.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 41.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 42.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 43.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 44.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 45.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 46.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 47.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 48.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 49.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 50.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 51.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 52.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 53.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 54.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 55.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 56.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 57.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 58.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 59.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 60.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 61.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 62.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 63.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 64.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 65.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 66.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 67.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 68.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 69.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 70.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 71.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 72.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 73.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 74.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 75.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 76.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 77.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 78.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 79.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 80.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 81.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 82.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 83.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 84.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 85.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 86.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 87.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 88.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 89.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 90.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 91.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 92.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 93.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 94.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 95.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 96.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 97.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 98.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 99.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 100.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 101.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 102.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 103.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 104.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 105.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 106.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 107.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 108.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 109.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 110.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 111.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 112.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 113.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 114.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 115.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 116.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 117.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 118.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 119.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 120.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 121.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 122.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 123.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 124.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 125.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 126.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 127.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 128.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 129.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 130.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 131.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 132.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 133.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 134.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 135.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 136.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 137.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 138.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 139.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 140.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 141.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 142.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 143.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 144.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 145.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 146.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 147.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 148.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 149.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 150.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 151.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 152.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 153.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 154.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 155.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 156.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 157.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 158.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 159.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 160.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 161.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 162.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 163.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 164.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 165.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 166.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 167.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 168.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 169.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 170.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 171.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 172.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 173.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 174.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 175.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 176.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 177.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 178.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 179.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 180.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 181.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 182.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 183.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 184.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 185.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 186.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 187.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 188.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 189.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 190.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 191.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 192.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 193.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 194.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 195.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 196.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 197.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 198.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 199.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 200.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 201.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 202.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 203.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 204.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 205.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 206.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 207.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 208.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 209.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 210.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 211.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 212.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 213.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 214.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 215.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 216.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 217.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 218.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 219.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 220.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 221.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 222.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 223.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 224.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 225.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 226.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 227.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 228.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 229.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 230.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 231.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 232.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 233.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 234.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 235.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 236.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 237.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 238.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 239.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 240.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 241.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 242.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 243.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 244.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 245.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 246.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 247.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 248.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 249.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 250.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 251.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 252.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 253.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 254.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 255.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 256.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 257.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 258.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 259.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 260.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 261.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 262.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 263.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 264.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 265.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 266.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 267.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 268.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 269.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 270.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 271.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 272.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 273.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 274.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 275.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 276.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 277.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 278.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 279.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 280.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 281.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 282.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 283.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 284.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 285.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 286.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 287.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 288.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 289.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 290.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 291.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 292.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 293.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 294.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 295.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 296.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 297.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 298.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 299.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 300.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 301.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 302.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 303.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 304.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 305.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 306.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 307.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 308.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 309.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 310.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 311.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 312.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 313.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 314.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 315.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 316.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 317.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 318.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 319.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 320.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 321.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 322.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 323.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 324.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 325.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 326.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 327.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 328.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 329.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 330.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 331.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 332.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 333.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 334.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 335.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 336.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 337.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 338.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 339.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 340.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 341.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 342.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 343.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 344.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 345.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 346.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 347.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 348.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 349.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 350.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 351.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 352.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 353.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 354.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 355.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 356.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 357.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 358.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 359.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 360.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 361.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 362.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 363.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 364.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 365.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 366.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 367.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 368.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 369.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 370.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 371.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 372.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 373.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 374.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 375.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 376.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 377.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 378.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 379.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 380.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 381.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 382.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 383.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 384.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 385.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 386.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 387.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 388.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 389.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 390.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 391.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 392.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 393.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 394.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 395.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 396.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 397.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 398.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 399.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 400.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 401.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 402.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 403.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 404.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 405.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 406.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 407.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 408.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 409.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 410.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 411.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 412.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 413.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 414.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 415.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 416.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 417.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 418.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 419.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 420.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 421.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 422.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 423.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 424.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 425.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 426.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 427.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 428.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 429.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 430.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 431.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 432.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 433.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 434.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 435.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 436.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 437.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 438.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 439.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 440.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 441.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 442.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 443.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 444.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 445.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 446.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 447.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 448.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 449.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 450.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 451.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 452.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 453.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 454.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 455.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 456.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 457.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 458.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 459.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 460.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 461.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 462.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 463.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 464.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 465.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 466.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 467.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 468.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 469.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 470.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 471.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 472.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 473.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 474.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 475.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 476.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 477.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 478.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 479.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 480.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 481.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 482.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 483.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 484.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 485.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 486.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 487.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 488.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 489.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 490.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 491.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 492.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 493.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 494.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 495.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 496.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 497.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 498.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 499.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 500.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 501.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 502.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 503.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 504.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 505.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 506.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 507.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 508.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 509.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 510.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 511.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 512.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 513.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 514.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 515.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 516.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 517.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 518.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 519.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 520.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 521.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 522.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 523.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 524.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 525.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 526.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 527.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 528.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 529.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 530.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 531.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 532.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 533.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 534.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 535.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 536.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 537.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 538.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 539.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 540.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 541.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 542.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 543.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 544.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 545.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 546.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 547.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 548.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 549.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 550.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 551.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 552.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 553.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 554.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 555.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 556.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 557.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 558.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 559.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 560.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 561.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 562.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 563.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 564.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 565.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 566.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 567.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 568.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 569.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 570.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 571.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 572.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 573.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 574.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 575.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 576.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 577.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 578.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 579.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 580.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 581.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 582.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 583.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 584.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 585.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 586.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 587.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 588.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 589.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 590.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 591.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 592.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 593.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 594.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 595.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 596.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 597.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 598.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 599.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 600.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 601.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 602.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 603.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 604.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 605.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 606.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 607.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 608.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 609.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 610.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 611.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 612.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 613.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 614.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 615.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 616.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 617.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 618.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 619.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 620.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 621.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 622.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 623.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 624.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 625.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 626.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 627.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 628.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 629.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 630.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 631.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 632.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 633.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 634.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 635.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 636.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 637.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 638.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 639.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 640.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 641.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 642.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 643.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 644.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 645.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 646.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 647.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 648.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 649.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 650.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 651.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 652.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 653.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 654.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 655.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 656.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 657.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 658.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 659.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 660.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 661.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 662.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 663.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 664.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 665.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 666.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 667.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 668.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 669.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 670.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 671.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 672.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 673.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 674.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 675.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 676.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 677.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 678.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 679.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 680.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 681.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 682.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 683.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 684.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 685.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 686.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 687.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 688.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 689.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 690.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 691.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 692.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 693.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 694.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 695.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 696.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 697.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 698.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 699.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 700.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 701.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 702.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 703.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 704.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 705.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 706.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 707.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 708.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 709.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 710.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 711.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 712.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 713.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 714.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 715.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 716.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 717.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 718.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 719.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 720.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 721.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 722.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 723.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 724.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 725.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 726.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 727.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 728.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 729.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 730.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 731.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 732.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 733.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 734.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 735.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 736.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 737.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 738.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 739.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 740.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 741.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 742.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 743.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 744.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 745.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 746.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 747.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 748.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 749.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 750.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 751.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 752.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 753.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 754.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 755.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 756.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 757.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 758.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 759.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 760.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 761.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 762.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 763.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 764.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 765.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 766.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 767.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 768.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 769.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 770.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 771.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 772.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 773.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 774.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 775.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 776.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 777.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 778.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 779.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 780.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 781.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 782.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 783.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 784.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 785.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 786.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 787.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 788.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 789.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 790.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 791.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 792.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 793.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 794.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 795.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 796.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 797.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 798.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 799.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 800.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 801.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 802.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 803.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 804.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 805.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 806.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 807.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 808.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 809.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 810.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 811.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 812.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 813.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 814.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 815.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 816.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 817.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 818.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 819.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 820.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 821.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 822.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 823.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 824.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 825.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 826.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 827.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 828.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 829.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 830.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 831.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 832.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 833.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 834.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 835.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 836.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 837.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 838.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 839.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 840.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 841.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 842.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 843.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 844.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 845.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 846.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 847.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 848.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 849.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 850.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 851.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 852.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 853.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 854.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 855.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 856.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 857.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 858.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 859.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 860.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 861.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 862.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 863.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 864.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 865.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 866.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 867.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 868.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 869.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 870.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 871.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 872.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 873.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 874.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 875.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 876.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 877.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 878.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 879.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 880.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 881.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 882.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 883.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 884.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 885.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 886.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 887.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 888.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 889.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 890.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 891.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 892.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 893.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 894.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 895.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 896.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 897.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 898.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 899.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 900.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 901.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 902.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 903.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 904.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 905.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 906.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 907.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 908.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 909.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 910.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 911.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 912.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 913.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 914.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 915.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 916.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 917.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 918.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 919.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 920.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 921.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 922.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 923.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 924.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 925.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 926.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 927.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 928.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 929.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 930.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 931.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 932.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 933.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 934.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 935.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 936.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 937.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 938.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 939.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 940.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 941.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 942.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 943.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 944.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 945.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 946.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 947.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 948.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 949.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 950.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 951.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 952.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 953.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 954.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 955.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 956.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 957.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 958.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 959.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 960.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 961.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 962.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 963.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 964.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 965.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 966.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 967.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 968.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 969.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 970.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 971.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 972.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 973.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 974.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 975.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 976.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 977.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 978.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 979.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 980.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 981.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 982.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 983.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 984.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 985.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 986.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 987.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 988.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 989.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 990.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 991.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 992.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 993.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 994.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 995.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 996.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 997.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 998.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 999.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1000.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1001.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1002.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1003.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1004.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1005.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1006.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1007.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1008.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1009.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1010.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1011.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1012.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1013.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1014.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1015.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1016.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1017.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1018.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1019.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1020.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1021.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1022.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1023.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1024.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1025.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1026.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1027.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1028.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1029.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1030.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1031.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1032.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1033.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1034.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1035.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1036.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1037.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1038.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1039.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1040.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1041.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1042.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1043.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1044.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1045.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1046.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1047.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1048.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1049.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1050.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1051.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1052.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1053.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1054.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1055.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1056.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1057.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1058.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1059.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1060.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1061.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1062.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1063.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1064.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1065.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1066.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1067.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1068.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1069.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1070.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1071.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1072.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1073.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1074.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1075.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1076.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1077.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1078.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1079.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1080.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1081.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1082.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1083.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1084.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1085.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1086.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1087.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1088.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1089.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1090.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1091.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1092.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1093.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1094.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1095.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1096.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1097.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1098.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1099.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1100.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1101.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1102.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1103.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1104.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1105.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1106.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1107.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1108.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1109.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1110.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1111.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1112.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1113.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1114.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1115.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1116.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1117.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1118.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1119.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1120.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1121.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1122.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1123.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1124.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1125.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1126.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1127.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1128.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1129.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1130.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1131.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1132.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1133.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1134.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1135.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1136.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1137.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1138.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1139.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1140.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1141.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1142.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1143.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1144.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1145.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1146.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1147.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1148.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1149.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1150.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1151.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1152.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1153.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1154.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1155.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1156.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1157.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1158.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1159.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1160.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1161.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1162.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1163.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1164.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1165.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1166.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1167.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1168.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1169.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1170.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1171.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1172.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1173.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1174.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1175.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1176.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1177.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1178.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1179.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1180.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1181.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1182.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1183.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1184.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1185.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1186.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1187.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1188.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1189.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1190.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1191.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1192.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1193.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1194.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1195.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1196.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1197.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1198.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1199.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1200.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1201.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1202.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1203.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1204.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1205.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1206.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1207.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1208.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1209.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1210.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1211.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1212.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1213.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1214.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1215.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1216.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1217.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1218.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1219.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1220.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1221.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1222.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1223.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1224.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1225.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1226.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1227.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1228.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1229.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1230.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1231.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1232.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1233.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1234.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1235.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1236.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1237.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1238.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1239.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1240.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1241.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1242.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1243.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1244.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1245.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1246.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1247.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1248.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1249.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1250.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1251.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1252.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1253.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1254.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1255.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1256.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1257.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1258.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1259.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1260.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1261.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1262.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1263.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1264.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1265.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1266.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1267.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1268.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1269.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1270.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1271.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1272.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1273.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1274.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1275.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1276.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1277.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1278.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1279.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1280.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1281.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1282.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1283.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1284.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1285.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1286.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1287.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1288.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1289.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1290.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1291.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1292.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1293.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1294.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1295.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1296.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1297.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1298.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1299.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1300.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1301.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1302.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1303.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1304.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 1305.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz4400661772395677992/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.735s
user	0m6.583s
sys	0m1.706s

2023-01-10 20:52:15,373 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
2023-01-10 20:52:17,197 INFO     Done. Execution time: 1.8238084316253662 seconds
2023-01-10 20:52:17,197 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `stringutils`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.apache.stringutils.SubstringsBetween`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {close, pos, str}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing SubstringsBetween] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.818s
user	0m3.242s
sys	0m0.214s

2023-01-10 20:52:17,197 INFO     Generated the expected decomposition
2023-01-10 20:52:17,197 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:52:43,410 INFO     Done. Execution time: 26.212695360183716 seconds
2023-01-10 20:52:43,410 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `stringutils`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/stringutils/SubstringsBetween.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((((str < 0) || (str == 0)) || ((open < 0) || (open == 0))) || ((close < 0) || (close == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int pos = 0;
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      D0 = D0 + (end - start);
      pos = end + close;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class SubstringsBetween  {
  void execute(int open, int str, int close)
  {

    int BOOLEAN_SEPARATOR = 502;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < ((8 * str) + 8)) || ((0 + (D0p * C0)) == ((8 * str) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < str) || ((0 + (D0p * C0)) == str));
    if ((((str < 0) || (str == 0)) || ((open < 0) || (open == 0))) || ((close < 0) || (close == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int list = 0;
    int pos = 0;
    while (pos < (str - close))
    {
      int start = ndInt2(pos, str);
      if (start == str)
      {
        break;
      }
      else
      {
        ;
      }
      start = start + open;
      int end = ndInt2(start, str);
      if (end == str)
      {
        break;
      }
      else
      {
        ;
      }
      list = list + (end - start);
      D0 = D0 + (end - start);
      pos = end + close;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 str)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) str) (= (+ 0 (* D0p C0)) str))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.stringutils.SubstringsBetween`)
INFO  brbo.BrboMain - Time consumption: `24.5` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2052-transparentAmortize-60s-mostPrecise/stringutils-raw-0110-2052-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m26.207s
user	0m40.367s
sys	0m5.460s

2023-01-10 20:52:43,410 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-10 20:52:43,410 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:53:08,994 INFO     Done. Execution time: 25.583887338638306 seconds
2023-01-10 20:53:08,994 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/LenientFormatQFuzzDriver.java -d /tmp/qfuzz7624856670025318093/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz7624856670025318093/bin -o /tmp/qfuzz7624856670025318093/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz7624856670025318093/bin
Found file /tmp/qfuzz7624856670025318093/bin/brbo/fuzz/drivers/LenientFormat.class
Found file /tmp/qfuzz7624856670025318093/bin/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/brbo/fuzz/drivers/LenientFormatQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/brbo/fuzz/drivers/LenientFormat.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz7624856670025318093/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz7624856670025318093/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.LenientFormatQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz7624856670025318093/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz7624856670025318093/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 45, exec speed = 119772 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m45 to 45 bits (average: 45.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000000,orig:example.txt; 3; 68.00; [84.00,152.00,397.00]
2; /tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+delta; 3; 164.00; [42.00,206.00,397.00]
4; /tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta; 3; 168.00; [50.00,218.00,397.00]
10; /tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4; 3; 78.00; [74.00,152.00,373.00]
14; /tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16; 3; 81.00; [178.00,324.00,405.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+delta
/tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
/tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
/tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:2,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 110, 12, 153, 94, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:4,+delta
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(187, 50, 100, 54, 16, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:4
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(175, 110, 28, 106, 67, 50)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz7624856670025318093/fuzzer-out/afl/queue/id:000004,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(191, 97, 153, 153, 80, 153, 153, 110, 126)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,110,12,153,94], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [187,50,100,54,16], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [175,110,28,106,67], 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: [191,97,153,153,80], 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.578s
user	0m10.418s
sys	0m0.723s

2023-01-10 20:53:08,994 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
2023-01-10 20:53:13,041 INFO     Done. Execution time: 4.0467610359191895 seconds
2023-01-10 20:53:13,041 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.LenientFormat`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {args, i}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing LenientFormat] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,110,12,153,94], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 4 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([187,50,100,54,16], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([175,110,28,106,67], 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List([191,97,153,153,80], 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 4 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 86):
                                                                                                                                
 Index  |              Commands               |  Costs  |   R   |  args  |  chunk  |  i  |  separator  |       template        |
--------------------------------------------------------------------------------------------------------------------------------
    17  |                         int R = 0;  |         |    0  |     2  |         |     |             |  [187,110,12,153,94]  |
    18  |  // mostPreciseBound(R <= array...  |         |    0  |     2  |         |     |             |  [187,110,12,153,94]  |
    19  |  // lessPreciseBound(R <= MAX *...  |         |    0  |     2  |         |     |             |  [187,110,12,153,94]  |
    21  |                     int chunk = 0;  |         |    0  |     2  |      0  |     |             |  [187,110,12,153,94]  |
    23  |                 int separator = 0;  |         |    0  |     2  |      0  |     |          0  |  [187,110,12,153,94]  |
    25  |                         int i = 0;  |         |    0  |     2  |      0  |  0  |          0  |  [187,110,12,153,94]  |
    28  |  chunk = arrayRead(template, i)...  |         |    0  |     2  |    187  |  0  |          0  |  [187,110,12,153,94]  |
    31  |                     R = R + chunk;  |    187  |  187  |     2  |    187  |  0  |          0  |  [187,110,12,153,94]  |
    35  |                         i = i + 1;  |         |  187  |     2  |    187  |  1  |          0  |  [187,110,12,153,94]  |
    43  |  separator = arrayRead(template...  |         |  187  |     2  |    187  |  1  |        110  |  [187,110,12,153,94]  |
    48  |  chunk = arrayRead(template, (i...  |         |  187  |     2  |     12  |  1  |        110  |  [187,110,12,153,94]  |
    51  |                     R = R + chunk;  |     12  |  199  |     2  |     12  |  1  |        110  |  [187,110,12,153,94]  |
    55  |                         i = i + 2;  |         |  199  |     2  |     12  |  3  |        110  |  [187,110,12,153,94]  |
    56  |              resetPlaceHolder_1();  |         |  199  |     2  |     12  |  3  |        110  |  [187,110,12,153,94]  |
    64  |  separator = arrayRead(template...  |         |  199  |     2  |     12  |  3  |        153  |  [187,110,12,153,94]  |
    69  |  chunk = arrayRead(template, (i...  |         |  199  |     2  |     94  |  3  |        153  |  [187,110,12,153,94]  |
    72  |                     R = R + chunk;  |     94  |  293  |     2  |     94  |  3  |        153  |  [187,110,12,153,94]  |
    76  |                         i = i + 2;  |         |  293  |     2  |     94  |  5  |        153  |  [187,110,12,153,94]  |
    77  |              resetPlaceHolder_1();  |         |  293  |     2  |     94  |  5  |        153  |  [187,110,12,153,94]  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {51} because there exists a longer and subsuming segment {31,51} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {72} because there exists a longer and subsuming segment {31,72} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {31} because there exists a longer and subsuming segment {31,72} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 2
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {31,72} because there exists a longer and subsuming segment {31,51,72} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {31,51} because there exists a longer and subsuming segment {31,51,72} whose similarity with inputs is better
INFO  brbo.backend2.learning.SegmentClustering - Remove segment {51,72} because there exists a longer and subsuming segment {31,51,72} whose similarity with inputs is better
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 3
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [31, 51, 72]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {31,51,72}
                                                                          
 Index  |        Commands         |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------------
    31  |         R = R + chunk;  |    187  |                         0  |
    51  |         R = R + chunk;  |     12  |                         0  |
    56  |  resetPlaceHolder_1();  |         |                            |
    72  |         R = R + chunk;  |     94  |                         0  |
    77  |  resetPlaceHolder_1();  |         |                            |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
resetPlaceHolder_1(); -> // reset R0
use R chunk -> R0 = R0 + chunk;
use R chunk -> R0 = R0 + chunk;
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java

real	0m4.041s
user	0m9.133s
sys	0m1.127s

2023-01-10 20:53:13,042 INFO     Generated the expected decomposition
2023-01-10 20:53:13,042 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:53:28,191 INFO     Done. Execution time: 15.149006128311157 seconds
2023-01-10 20:53:28,191 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/LenientFormat.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryTemplate = 0;
    int lastIndexOfTemplate = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * template) + (8 * args)) + 8)) || ((0 + (D0p * C0)) == (((8 * template) + (8 * args)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (((template + args) + 2) + (2 * args))) || ((0 + (D0p * C0)) == (((template + args) + 2) + (2 * args))));
    if (((template < 1) || (template == 1)) || ((args < 0) || (args == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int separator = 0;
    int i = 0;
    {
      temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
      chunk = temporaryTemplate - lastIndexOfTemplate;
      lastIndexOfTemplate = temporaryTemplate;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < template)
    {
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        separator = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        chunk = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
    if (i < args)
    {
      R = R + 1;
      R = R + 1;
      i = i + 1;
      while (i < args)
      {
        R = R + 1;
        R = R + 1;
        i = i + 1;
      }
    }
    else
    {
      ;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class LenientFormat  {
  void execute(int template, int args)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    int temporaryTemplate = 0;
    int lastIndexOfTemplate = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * template) + (8 * args)) + 8)) || ((0 + (D0p * C0)) == (((8 * template) + (8 * args)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < (((template + args) + 2) + (2 * args))) || ((0 + (D0p * C0)) == (((template + args) + 2) + (2 * args))));
    if (((template < 1) || (template == 1)) || ((args < 0) || (args == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int R = 0;
    int chunk = 0;
    int separator = 0;
    int i = 0;
    {
      temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
      chunk = temporaryTemplate - lastIndexOfTemplate;
      lastIndexOfTemplate = temporaryTemplate;
    }
    D0 = D0 + chunk;
    i = i + 1;
    while ((i + 1) < template)
    {
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        separator = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      {
        temporaryTemplate = ndInt2(lastIndexOfTemplate, template);
        chunk = temporaryTemplate - lastIndexOfTemplate;
        lastIndexOfTemplate = temporaryTemplate;
      }
      D0 = D0 + chunk;
      i = i + 2;
    }
    if (i < args)
    {
      R = R + 1;
      R = R + 1;
      i = i + 1;
      while (i < args)
      {
        R = R + 1;
        R = R + 1;
        i = i + 1;
      }
    }
    else
    {
      ;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) (+ template args 2 (* 2 args)))
    (= (+ 0 (* D0p C0)) (+ template args 2 (* 2 args))))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) (+ template args 2 (* 2 args)))
    (= (+ 0 (* D0p C0)) (+ template args 2 (* 2 args))))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 template)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) (+ template args 2 (* 2 args)))
    (= (+ 0 (* D0p C0)) (+ template args 2 (* 2 args))))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.LenientFormat`)
INFO  brbo.BrboMain - Time consumption: `13.4` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2053-transparentAmortize-60s-mostPrecise/guava-raw-0110-2053-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.143s
user	0m26.913s
sys	0m3.675s

2023-01-10 20:53:28,191 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-10 20:53:28,191 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:53:54,036 INFO     Done. Execution time: 25.84511661529541 seconds
2023-01-10 20:53:54,036 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadEndQFuzzDriver.java -d /tmp/qfuzz995409935301105376/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz995409935301105376/bin -o /tmp/qfuzz995409935301105376/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz995409935301105376/bin
Found file /tmp/qfuzz995409935301105376/bin/brbo/fuzz/drivers/PadEndQFuzzDriver.class
Found file /tmp/qfuzz995409935301105376/bin/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEnd.class
File written: /tmp/qfuzz995409935301105376/bin-instr/brbo/fuzz/drivers/PadEnd.class
Instrumenting class: brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz995409935301105376/bin-instr/brbo/fuzz/drivers/PadEndQFuzzDriver.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz995409935301105376/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz995409935301105376/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadEndQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz995409935301105376/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz995409935301105376/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 1 runnable tasks (utilization: 25%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 23, exec speed = 128484 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m23 to 23 bits (average: 23.00 bits)
[1;90m        Exec timing : [0m128k to 128k us (average: 128k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
1; /tmp/qfuzz995409935301105376/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [389.00]
2; /tmp/qfuzz995409935301105376/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128; 1; 0.00; [193.00]
5; /tmp/qfuzz995409935301105376/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16; 1; 0.00; [291.00]
8; /tmp/qfuzz995409935301105376/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64; 1; 0.00; [185.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:
/tmp/qfuzz995409935301105376/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
/tmp/qfuzz995409935301105376/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
/tmp/qfuzz995409935301105376/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz995409935301105376/fuzzer-out/afl/queue/id:000001,src:000000,op:havoc,rep:128
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(89, 102, 100, 82)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz995409935301105376/fuzzer-out/afl/queue/id:000002,src:000000,op:havoc,rep:16
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(138)
INFO  brbo.backend2.qfuzz.Executor$ - Read shorts that are between [4, 200] from /tmp/qfuzz995409935301105376/fuzzer-out/afl/queue/id:000003,src:000000,op:havoc,rep:64
INFO  brbo.backend2.qfuzz.Executor$ - Inputs: List(85, 85, 85, 46, 132, 85)
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: Write interesting inputs (with descending interestingness) into file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd_fuzzing.json
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 89, 2
INFO  brbo.backend2.qfuzz.Executor$ - Interesting input: 85, 2
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.839s
user	0m11.227s
sys	0m0.675s

2023-01-10 20:53:54,036 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
2023-01-10 20:53:57,978 INFO     Done. Execution time: 3.9416072368621826 seconds
2023-01-10 20:53:57,978 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadEnd`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadEnd] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(89, 2)
INFO  brbo.backend2.interpreter.Interpreter$ - Progress: 0 / 2 (0.00%)
INFO  brbo.backend2.interpreter.Interpreter$ - Generate a trace with inputs: List(85, 2)
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from qfuzz generated traces
INFO  brbo.backend2.learning.TracePartition$ - Choose traces within range Vector(0) from 2 traces
INFO  brbo.backend2.DecompositionDriver - Step 3: Decompose 1 selected traces
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Decompose 0-th representative trace
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Trace (length 34):
                                                                                                       
 Index  |              Commands               |  Costs  |  R   |  i   |  minLength  |  sb  |  string  |
-------------------------------------------------------------------------------------------------------
    17  |                        int sb = 0;  |         |      |      |          2  |   0  |      89  |
    19  |                         int R = 0;  |         |   0  |      |          2  |   0  |      89  |
    20  |  // mostPreciseBound(R <= minLe...  |         |   0  |      |          2  |   0  |      89  |
    21  |  // lessPreciseBound(R <= MAX *...  |         |   0  |      |          2  |   0  |      89  |
    25  |                  sb = sb + string;  |         |   0  |      |          2  |  89  |      89  |
    28  |                    R = R + string;  |     89  |  89  |      |          2  |  89  |      89  |
    30  |                    int i = string;  |         |  89  |  89  |          2  |  89  |      89  |
INFO  brbo.backend2.learning.SegmentClustering - --------------------------------------------------------------------------------
INFO  brbo.backend2.learning.SegmentClustering - Cluster segments with length 1
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 1 among trace node indices [28]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 2 among trace node indices [28]
ERROR brbo.backend2.learning.SegmentClustering - Choose segments with sizes of 3 among trace node indices [28]
FATAL brbo.backend2.learning.SegmentClustering - Failed to find similar segments
INFO  brbo.backend2.DecompositionDriver - Step 3.1: Selected decomposition:
GroupID(0): {28}
                                                                    
 Index  |     Commands      |  Costs  |  SegmentIDs in GroupID(0)  |
--------------------------------------------------------------------
    28  |  R = R + string;  |     89  |                         0  |
INFO  brbo.backend2.DecompositionDriver - Step 3.2: (TODO) Select reset locations for the groups
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder candidates:
GroupID(0): None
INFO  brbo.common.ast.ResetPlaceHolder$ - Reset place holder locations:
GroupID(0): Set()
INFO  brbo.backend2.DecompositionDriver - Step 3.3: Generate tables for training classifiers
INFO  brbo.backend2.DecompositionDriver - Step 3.4: Generate classifiers on the tables
INFO  brbo.backend2.DecompositionDriver - Step 3.5: Generate program transformations
INFO  brbo.backend2.DecompositionDriver - See below for a mapping from existing ASTs to new ASTs
use R string -> R0 = R0 + string;
If we are printing a decomposed use, then we have failed to decompose `R = R + 1;`
INFO  brbo.BrboMain$ - Generated the expected decomposition at /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java
INFO  brbo.BrboMain$ - Finished decomposing /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java

real	0m3.936s
user	0m6.994s
sys	0m0.838s

2023-01-10 20:53:57,979 INFO     Generated the expected decomposition
2023-01-10 20:53:57,979 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:54:09,049 INFO     Done. Execution time: 11.069623947143555 seconds
2023-01-10 20:54:09,049 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadEnd.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0p * C0)) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < minLength) || ((0 + (D0p * C0)) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    sb = sb + string;
    D0 = D0 + string;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadEnd  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int D0 = 0;
    int D0p = 0;
    lessPreciseBound(((0 + (D0p * C0)) < (((8 * minLength) + (8 * string)) + 8)) || ((0 + (D0p * C0)) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound(((0 + (D0p * C0)) < minLength) || ((0 + (D0p * C0)) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    sb = sb + string;
    D0 = D0 + string;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      R = R + 1;
      i = i + 1;
    }
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0)) minLength) (= (+ 0 (* D0p C0)) minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0)) minLength) (= (+ 0 (* D0p C0)) minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p 0)` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1 string)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 0)` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p)))
  (<= (+ R) (+ D0 a!1)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0)) minLength) (= (+ 0 (* D0p C0)) minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadEnd`)
INFO  brbo.BrboMain - Time consumption: `9.3` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2053-transparentAmortize-60s-mostPrecise/guava-raw-0110-2053-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m11.064s
user	0m20.554s
sys	0m3.264s

2023-01-10 20:54:09,049 INFO     Process file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-10 20:54:09,049 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/`
2023-01-10 20:54:34,588 INFO     Done. Execution time: 25.539425134658813 seconds
2023-01-10 20:54:34,589 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain fuzz --timeout 20 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java --qfuzz /root/Documents/workspace/qfuzz/
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Prepare a QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 1: Written into `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java`
INFO  brbo.backend2.qfuzz.Executor$ - Step 2: Compile and instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Step 2.1: Compile the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `javac -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/drivers/PadStartQFuzzDriver.java -d /tmp/qfuzz1329933850831609338/bin`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Step 2.2: Instrument the QFuzz driver
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar edu.cmu.sv.kelinci.instrumentor.Instrumentor -mode LABELS -i /tmp/qfuzz1329933850831609338/bin -o /tmp/qfuzz1329933850831609338/bin-instr -skipmain`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
Loading dir: /tmp/qfuzz1329933850831609338/bin
Found file /tmp/qfuzz1329933850831609338/bin/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Found file /tmp/qfuzz1329933850831609338/bin/brbo/fuzz/drivers/PadStart.class
Instrumenting class: brbo/fuzz/drivers/PadStartQFuzzDriver.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/brbo/fuzz/drivers/PadStartQFuzzDriver.class
Instrumenting class: brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/brbo/fuzz/drivers/PadStart.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/Kelinci.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/Kelinci$1.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/Kelinci$2.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/Kelinci$3.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/Kelinci$ApplicationCall.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/Kelinci$FuzzRequest.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/Kelinci$NullOutputStream.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/Mem.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionSet.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/quantification/Partition.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/quantification/Pair.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/quantification/KDynamic.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/quantification/Greedy.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithm.class
File written: /tmp/qfuzz1329933850831609338/bin-instr/edu/cmu/sv/kelinci/quantification/PartitionAlgorithmByIndex.class


INFO  brbo.backend2.qfuzz.Executor$ - Step 3: Run Kelinci server. Timeout: 23 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `java -cp .:/root/Documents/workspace/qfuzz//tool/instrumentor/build/libs/kelinci.jar:/tmp/qfuzz1329933850831609338/bin-instr edu.cmu.sv.kelinci.Kelinci -K 100 brbo.fuzz.drivers.PadStartQFuzzDriver @@`
INFO  brbo.backend2.qfuzz.Executor$ - Step 4: Run AFL. Output directory: /tmp/qfuzz1329933850831609338/fuzzer-out. Timeout: 20 sec.
INFO  brbo.backend2.qfuzz.Executor$ - Execute `sleep 3`
INFO  brbo.backend2.qfuzz.Executor$ - Output:


INFO  brbo.backend2.qfuzz.Executor$ - Execute `/root/Documents/workspace/qfuzz//tool/afl-2.51b-qfuzz/afl-fuzz -i /root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs -o /tmp/qfuzz1329933850831609338/fuzzer-out -c quantify -K 100 -S afl -t 999999999 /root/Documents/workspace/qfuzz//tool/fuzzerside/interface -K 100 @@`
INFO  brbo.backend2.qfuzz.Executor$ - Output:
[0;36mafl-fuzz [1;97m2.51b[0m by <lcamtuf@google.com>
[1;92m[+] [0m[SC-Quantify] Quantification of Side-Channels[0m
[1;92m[+] [0mLooks like we're not running on a tty, so I'll be a bit less verbose.[0m
[1;92m[+] [0mYou have 4 CPU cores and 2 runnable tasks (utilization: 50%).[0m
[1;92m[+] [0mTry parallel jobs - see docs/parallel_fuzzing.txt.[0m
[1;94m[*] [0mChecking CPU core loadout...[0m
[1;92m[+] [0mFound a free CPU core, binding to #0.[0m
[1;94m[*] [0mChecking core_pattern...[0m

[1;91m[-] [0mHmm, your system is configured to send core dump notifications to an
    external utility. This will cause issues: there will be an extended delay
    between stumbling upon a crash and having this information relayed to the
    fuzzer via the standard waitpid() API.

    To avoid having crashes misinterpreted as timeouts, please log in as root
    and temporarily modify /proc/sys/kernel/core_pattern, like so:

    echo core >/proc/sys/kernel/core_pattern
[1;94m[*] [0mSetting up output directories...[0m
[1;94m[*] [0mScanning '/root/Documents/workspace/brbo2-impl/src/main/java/brbo/fuzz/inputs'...[0m
[1;92m[+] [0mNo auto-generated dictionary tokens to reuse.[0m
[1;94m[*] [0mCreating hard links for all input files...[0m
[1;94m[*] [0mValidating target binary...[0m
[1;94m[*] [0mAttempting dry run with 'id:000000,orig:example.txt'...[0m
[1;94m[*] [0mSpinning up the fork server...[0m
[1;92m[+] [0mAll right - fork server is up.[0m
[1;90m    len = 12, map size = 7, exec speed = 119446 us
[0m[1;92m[+] [0mAll test cases processed.[0m

[1;93m[!] [1;97mWARNING: [0m[1;91mThe target binary is pretty slow! See docs/perf_tips.txt.[0m
[1;92m[+] [0mHere are some useful stats:

[1;90m    Test case count : [0m1 favored, 0 variable, 1 total
[1;90m       Bitmap range : [0m7 to 7 bits (average: 7.00 bits)
[1;90m        Exec timing : [0m119k to 119k us (average: 119k us)
[0m
[1;92m[+] [0mAll set and ready to roll![0m
[1;94m[*] [0mEntering queue cycle 1.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 2.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 3.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 4.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 5.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 6.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m
[1;94m[*] [0mEntering queue cycle 7.[0m
[1;94m[*] [0mFuzzing test case #0 (1 total, 0 uniq crashes found)...[0m


INFO  brbo.backend2.qfuzz.Executor$ - QFuzz output:
Time(sec); File; #Partitions; MinDelta; AvgPartitionValues
0; /tmp/qfuzz1329933850831609338/fuzzer-out/afl/queue/id:000000,orig:example.txt; 1; 0.00; [0.00]

INFO  brbo.backend2.qfuzz.Executor$ - Ranked input files:

INFO  brbo.backend2.qfuzz.Executor$ - Step 5: Parse the QFuzz-generated inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 6: No interesting inputs
INFO  brbo.backend2.qfuzz.Executor$ - Step 7: Clean up the generated files when running QFuzz

real	0m25.533s
user	0m10.416s
sys	0m0.753s

2023-01-10 20:54:34,589 INFO     Under `root@/root/Documents/workspace/brbo2-impl`: Execute `./scripts/run_deps.sh decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
2023-01-10 20:54:36,414 INFO     Done. Execution time: 1.8256850242614746 seconds
2023-01-10 20:54:36,415 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:lib/deps/*:./target/scala-2.12/brbo2-impl_2.12-0.1.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar' brbo.BrboMain decompose --threads 4 --debug --algorithm optics --parameter 0.1 --samples 0 --directory /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - brbo2 has started.
WARN  brbo.BrboMain$ - We assume each class contains exactly one method named `execute`
INFO  brbo.BrboMain$ - Read from source file `/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java`
INFO  brbo.BrboMain$ - Group programs based on the inner most package names
INFO  brbo.BrboMain$ - Run brbo2 on files in package `guava`
INFO  brbo.BrboMain$ - Run brbo2 on programs in batches. Batch size: 100
INFO  brbo.BrboMain$ - Run batch 0: 000-099
INFO  brbo.BrboMain$ - 


Process input file 0. Progress: 0.00%
INFO  brbo.BrboMain$ - Process file /root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java
INFO  brbo.BrboMain$ - Class name: `brbo.benchmarks.sas22.string.guava.PadStart`
INFO  brbo.BrboMain$ - Parsing...
INFO  brbo.backend2.DecompositionDriver - Step 0: Insert reset place holders
INFO  brbo.backend2.DecompositionDriver - Step 0: Find classifier features {i, minLength}
INFO  brbo.backend2.DecompositionDriver - Step 1: Generate traces
INFO  brbo.backend2.DecompositionDriver - Step 1.1: User-provided inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.2: Fuzzer generated inputs
INFO  brbo.backend2.Fuzzer$ - [Fuzzing PadStart] Generated `0` inputs
INFO  brbo.backend2.DecompositionDriver - Step 1.3: QFuzz generated inputs
INFO  brbo.backend2.DecompositionDriver - Step 2: Select representative traces
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Assume all traces are similar
INFO  brbo.backend2.learning.TracePartition$ - Step 2: Select representatives from fuzzer generated traces
INFO  brbo.backend2.learning.TracePartition$ - There is no fuzzer generated traces. Exiting

real	0m1.820s
user	0m3.229s
sys	0m0.136s

2023-01-10 20:54:36,415 INFO     Generated the expected decomposition
2023-01-10 20:54:36,415 INFO     Under `root@/root/Documents/workspace/brbo-impl`: Execute `./scripts/run_deps.sh --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60`
2023-01-10 20:54:52,321 INFO     Done. Execution time: 15.906051635742188 seconds
2023-01-10 20:54:52,321 INFO     Output: + java -Dlog4j.configurationFile=src/resources/log4j2.properties -cp '.:./target/scala-2.12/brbo-impl_2.12-0.1.jar:/usr/lib/jvm/jdk1.8.0_291/lib/tools.jar:/root/.sdkman/candidates/java/current/lib/tools.jar:lib/deps/*' brbo.BrboMain --directory /root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java --amortize transparent --icra-path /root/Documents/workspace/icra/icra --icra-timeout 60
INFO  brbo.BrboMain - Brbo has started.
INFO  brbo.BrboMain - Command line argument - Infer resource usage upper bounds for each method in each file `*.java` under directory `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Command line argument - Amortization mode: `TRANSPARENT_AMORTIZE`
INFO  brbo.BrboMain - Command line argument - Debug mode? `false`
INFO  brbo.BrboMain - Command line argument - Skip sanity check? `false`
INFO  brbo.BrboMain - Command line argument - Print counter examples if cannot verify the bound? `false`
INFO  brbo.BrboMain - Command line argument - Print inputs to ICRA? `false`
INFO  brbo.BrboMain - Command line argument - ICRA's time out: `60` seconds
INFO  brbo.BrboMain - Command line argument - Print CFG? `false`
INFO  brbo.BrboMain - Command line argument - No bound check? `false`
INFO  brbo.BrboMain - Command line argument - Check less precise bounds? `false`
INFO  brbo.BrboMain - Command line argument - Generate `0` synthetic programs
INFO  brbo.BrboMain - Command line argument - Icra path is `/root/Documents/workspace/icra/icra`
WARN  brbo.BrboMain - We assume each class contains exactly one method
INFO  brbo.BrboMain - Read from source file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Group programs based on the inner most package names
INFO  brbo.BrboMain - Run Brbo on files in package `guava`
INFO  brbo.BrboMain - Run Brbo on programs in batches. Batch size: `100`
INFO  brbo.BrboMain - Run `0`-th batch`: 000-099
INFO  brbo.BrboMain - Verify `0`-th input file. Progress: 0.00%
INFO  brbo.BrboMain - Phase 1: Decompose
INFO  brbo.BrboMain - Decompose file `/root/Documents/workspace/brbo2-impl/output/decomposed/guava/PadStart.java`
INFO  brbo.BrboMain - Class name: `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.BrboMain - Parsing...
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.verification.decomposition.Decomposition - Inserting resets and updates to ghost variables... Mode: `TRANSPARENT_AMORTIZE`
ERROR brbo.verification.decomposition.Decomposition - Map(Group(Some(int D0 = 0),List()) -> DeltaCounterPair(D0,C0), Group(Some(int D1 = 0),List()) -> DeltaCounterPair(D1,C1))
New body:
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((8 * minLength) + (8 * string)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < minLength) || (((0 + (D0p * C0)) + (D1p * C1)) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + string;
    D1 = D1 + string;
  }
INFO  brbo.verification.decomposition.DecompositionResult - Decomposition result (Mode: `TRANSPARENT_AMORTIZE`):

abstract class PadStart  {
  void execute(int string, int minLength)
  {

    int BOOLEAN_SEPARATOR = 102;
    int C0 = -1;
    int C1 = -1;
    int D0 = 0;
    int D0p = 0;
    int D1 = 0;
    int D1p = 0;
    lessPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < (((8 * minLength) + (8 * string)) + 8)) || (((0 + (D0p * C0)) + (D1p * C1)) == (((8 * minLength) + (8 * string)) + 8)));
    mostPreciseBound((((0 + (D0p * C0)) + (D1p * C1)) < minLength) || (((0 + (D0p * C0)) + (D1p * C1)) == minLength));
    if (((string < 0) || (string == 0)) || ((minLength < 0) || (minLength == 0)))
    {
      return;
    }
    else
    {
      ;
    }
    if (!((string < minLength)))
    {
      return;
    }
    else
    {
      ;
    }
    int sb = 0;
    int R = 0;
    int i = string;
    while (i < minLength)
    {
      sb = sb + 1;
      D0 = D0 + 1;
      i = i + 1;
      D0p = D0;
      D0 = 0;
      C0 = C0 + 1;
    }
    sb = sb + string;
    D1 = D1 + string;
  }
  // Declare these methods such that these generated code can be parsed
  // Keep in sync with brbo2
  public abstract int ndInt();
  public abstract int ndInt2(int lower, int upper);
  public abstract boolean ndBool();
  public abstract void assume(boolean expression);
  public abstract void mostPreciseBound(boolean assertion);
  public abstract void lessPreciseBound(boolean assertion);
}
INFO  brbo.BrboMain - Phase 2: Bound check
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - 
INFO  brbo.BrboMain - Check bound for `0`-th decomposition result
INFO  brbo.verification.BoundChecking - Extract the most precise bound
INFO  brbo.BrboMain - Extracted bound expression is `(or (< (+ 0 (* D0p C0) (* D1p C1)) minLength)
    (= (+ 0 (* D0p C0) (* D1p C1)) minLength))`
INFO  brbo.verification.BoundChecking - Check bound (Mode: `TRANSPARENT_AMORTIZE`)
INFO  brbo.verification.BoundChecking - Verify bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) minLength)
    (= (+ 0 (* D0p C0) (* D1p C1)) minLength))` in method `execute` of class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`
INFO  brbo.verification.BoundChecking - Resource variables: Map(R -> INT)
INFO  brbo.boundinference.CounterAxiomGenerator - Attach unique counters to AST nodes
INFO  brbo.common.BoundInference - Max coefficient: `8`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D0` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D0`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C0` with ICRA. Max degree: `3`
INFO  brbo.verification.BoundChecking - Infer invariant for the peak value of delta variable `D1`. Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariant for the accumulation of delta variable `D1` (per visit to its subprogram). Max degree: `1`
INFO  brbo.verification.BoundChecking - Infer invariants for AST counter `C1` with ICRA. Max degree: `3`
ERROR brbo.common.BoundInference - Infer bound `(<= D1p 0)` for variable `D1p`
ERROR brbo.common.BoundInference - Infer bound `(<= D1 (+ 0 (* 1 1 string)))` for variable `D1`
ERROR brbo.common.BoundInference - Infer bound `(<= D0 (+ 0 (* 1 1)))` for variable `D0`
ERROR brbo.common.BoundInference - Infer bound `(<= D0p (+ 0 (* 1 1)))` for variable `D0p`
ERROR brbo.common.BoundInference - Infer bound `(<= C1 0)` for variable `C1`
ERROR brbo.common.BoundInference - Infer bound `(<= C0 (+ 0 (* 1 1 minLength)))` for variable `C0`
INFO  brbo.verification.BoundChecking - Inductive invariant:
(let ((a!1 (* (ite (>= (- C0 1) 0) (- C0 1) 0) D0p))
      (a!2 (* (ite (>= (- C1 1) 0) (- C1 1) 0) D1p)))
  (<= (+ R) (+ D0 a!1 D1 a!2)))
INFO  brbo.verification.BoundChecking - Not provide counter axioms
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and delta variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about delta and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - Invariants about resource, delta, and counter variables should SAT
INFO  brbo.verification.BoundChecking - Sanity check - The bound expression should SAT
INFO  brbo.verification.BoundChecking - Sanity check finished
INFO  brbo.verification.BoundChecking - Assert all int-typed input variables are positive
INFO  brbo.verification.BoundChecking - Discharge bound check query to Z3
INFO  brbo.verification.BoundChecking - Is bound `(or (< (+ 0 (* D0p C0) (* D1p C1)) minLength)
    (= (+ 0 (* D0p C0) (* D1p C1)) minLength))` verified? Yes! (Mode: `TRANSPARENT_AMORTIZE`; Class `.root.Documents.workspace.brbo2-impl.output.decomposed.guava.PadStart`)
INFO  brbo.BrboMain - Time consumption: `14.1` seconds
INFO  brbo.BrboMain - Write results to files. Aggregate results only under mode `ALL_AMORTIZE`
INFO  brbo.BrboMain - Write results to file `/root/Documents/workspace/brbo-impl/output/0110-2054-transparentAmortize-60s-mostPrecise/guava-raw-0110-2054-transparentAmortize-60s-mostPrecise-000-099.csv`

real	0m15.901s
user	0m40.734s
sys	0m6.553s

2023-01-10 20:54:52,322 INFO     Time measurements:
{
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine.java": [
    25.727961778640747,
    4.281379222869873,
    7.835596799850464
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine2.java": [
    25.796918153762817,
    7.641784191131592,
    71.49555325508118
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngine3.java": [
    25.884433031082153,
    9.629446744918823,
    262.2996392250061
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/stac/TemplateEngineSimplified.java": [
    25.87287974357605,
    5.7996509075164795,
    8.781934261322021
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendAllTo.java": [
    25.777411937713623,
    4.951755046844482,
    14.161364316940308
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDetail.java": [
    25.630040407180786,
    4.9642698764801025,
    7.597411394119263
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendDisplayNames.java": [
    25.8362717628479,
    10.662603616714478,
    10.021360874176025
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendFullDigits.java": [
    1.6960010528564453,
    1.6666994094848633,
    1.0253398418426514
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendQuotedString.java": [
    25.578038692474365,
    1.756464958190918,
    22.14010763168335
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/AppendRecursiveTypes.java": [
    25.64991593360901,
    1.8114051818847656,
    36.90240216255188
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DbgPrint.java": [
    25.67766523361206,
    4.965764045715332,
    7.080440521240234
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DiffResultToString.java": [
    25.99438786506653,
    2.9335029125213623,
    1.870213270187378
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/DurationFormat.java": [
    25.76089835166931,
    6.5335822105407715,
    219.11895751953125
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetCanonicalName.java": [
    25.628872632980347,
    5.48642635345459,
    6.855935096740723
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetFormattedExceptionMessage.java": [
    25.67549777030945,
    9.641518592834473,
    13.11273717880249
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/GetShortClassName.java": [
    25.700390100479126,
    5.468500852584839,
    6.438377141952515
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Lexx.java": [
    25.865535974502563,
    3.9271140098571777,
    7.125572919845581
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Literal.java": [
    25.476823806762695,
    1.7336115837097168,
    12.11350131034851
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/LongToHex.java": [
    25.69665217399597,
    4.783462047576904,
    6.9775683879852295
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Modify.java": [
    25.777374744415283,
    5.276820421218872,
    7.119746446609497
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/ParseToken.java": [
    25.925215482711792,
    2.4924702644348145,
    1.8803653717041016
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/SimpleQuote.java": [
    25.586299896240234,
    6.505124568939209,
    10.047196388244629
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Spacer.java": [
    25.465890407562256,
    1.8062012195587158,
    8.038766622543335
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/lang3/Squeeze.java": [
    25.773702383041382,
    3.845590591430664,
    6.26334285736084
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/GetDigits.java": [
    25.74688220024109,
    5.324629783630371,
    20.580838203430176
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join.java": [
    25.751383066177368,
    2.6427266597747803,
    1.9961578845977783
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Join2.java": [
    25.756048679351807,
    6.943260669708252,
    12.490099430084229
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/JoinWith.java": [
    25.708842039108276,
    6.920409679412842,
    7.137645959854126
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/Replace.java": [
    25.80667543411255,
    6.147175073623657,
    77.15387749671936
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/ReplaceChars.java": [
    25.58191156387329,
    5.005159378051758,
    378.20327258110046
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitByWholeSeparatorWorker.java": [
    25.66071319580078,
    4.8436479568481445,
    379.9224729537964
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker.java": [
    25.64212656021118,
    1.8787751197814941,
    57.23593831062317
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SplitWorker2.java": [
    25.717801570892334,
    2.64011549949646,
    1.864866018295288
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/apache/stringutils/SubstringsBetween.java": [
    25.740745782852173,
    1.8238084316253662,
    26.212695360183716
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/LenientFormat.java": [
    25.583887338638306,
    4.0467610359191895,
    15.149006128311157
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadEnd.java": [
    25.84511661529541,
    3.9416072368621826,
    11.069623947143555
  ],
  "/root/Documents/workspace/brbo2-impl/src/main/java/brbo/benchmarks/sas22/string/guava/PadStart.java": [
    25.539425134658813,
    1.8256850242614746,
    15.906051635742188
  ]
}
